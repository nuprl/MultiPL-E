language: cpp
name: HumanEval_42_incr_list
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i: l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp55v0utqh.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp55v0utqh.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i: l) {\n               ^\n/tmp/tmp55v0utqh.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp55v0utqh.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp55v0utqh.cpp: In function 'int main()':\n/tmp/tmp55v0utqh.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp55v0utqh.cpp:2:\n/tmp/tmp55v0utqh.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp55v0utqh.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp55v0utqh.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp55v0utqh.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp55v0utqh.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp55v0utqh.cpp:18:68: note: candidates are"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> res;\n  for (auto i : l) {\n    res.push_back(i + 1);\n \
    \ }\n  return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbqye3b_l.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpbqye3b_l.cpp:10:13: error: 'i' does not name a type\n   for\
    \ (auto i : l) {\n             ^\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected ';'\
    \ before 'return'\n   return res;\n   ^\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected\
    \ ';' before 'return'\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected ')' before 'return'\n\
    /tmp/tmpbqye3b_l.cpp: In function 'int main()':\n/tmp/tmpbqye3b_l.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpbqye3b_l.cpp:2:\n/tmp/tmpbqye3b_l.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbqye3b_l.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpbqye3b_l.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpbqye3b_l.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpbqye3b_l.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpbqye3b_l.cpp:18:68: note: candidates are:\nIn fi"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> v;\n    for (auto i : l) {\n        v.push_back(i + 1);\n\
    \    }\n    return v;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzzx9rc8d.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpzzx9rc8d.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpzzx9rc8d.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return v;\n     ^\n/tmp/tmpzzx9rc8d.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpzzx9rc8d.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpzzx9rc8d.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpzzx9rc8d.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpzzx9rc8d.cpp: In function 'int main()':\n/tmp/tmpzzx9rc8d.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpzzx9rc8d.cpp:2:\n/tmp/tmpzzx9rc8d.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzzx9rc8d.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpzzx9rc8d.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpzzx9rc8d.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpzzx9rc8d.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpzzx9rc8d.cpp:18:68: note: candidates are:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  ret.push_back(l[i] + 1);\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpis3w7i4a.cpp: In function 'int main()':\n/tmp/tmpis3w7i4a.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpis3w7i4a.cpp:2:\n/tmp/tmpis3w7i4a.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpis3w7i4a.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpis3w7i4a.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpis3w7i4a.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpis3w7i4a.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpis3w7i4a.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpis3w7i4a.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i: l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp55v0utqh.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp55v0utqh.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i: l) {\n               ^\n/tmp/tmp55v0utqh.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp55v0utqh.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp55v0utqh.cpp: In function 'int main()':\n/tmp/tmp55v0utqh.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp55v0utqh.cpp:2:\n/tmp/tmp55v0utqh.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp55v0utqh.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp55v0utqh.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp55v0utqh.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp55v0utqh.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp55v0utqh.cpp:18:68: note: candidates are"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  ret.push_back(l[i] + 1);\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpis3w7i4a.cpp: In function 'int main()':\n/tmp/tmpis3w7i4a.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpis3w7i4a.cpp:2:\n/tmp/tmpis3w7i4a.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpis3w7i4a.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpis3w7i4a.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpis3w7i4a.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpis3w7i4a.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpis3w7i4a.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpis3w7i4a.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  ret.push_back(l[i] + 1);\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpis3w7i4a.cpp: In function 'int main()':\n/tmp/tmpis3w7i4a.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpis3w7i4a.cpp:2:\n/tmp/tmpis3w7i4a.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpis3w7i4a.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpis3w7i4a.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpis3w7i4a.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpis3w7i4a.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpis3w7i4a.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpis3w7i4a.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto x : l) {\n        res.push_back(x +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2kr11dqq.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp2kr11dqq.cpp:10:15: error: 'x' does not name a type\n     for\
    \ (auto x : l) {\n               ^\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp2kr11dqq.cpp: In function 'int main()':\n/tmp/tmp2kr11dqq.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp2kr11dqq.cpp:2:\n/tmp/tmp2kr11dqq.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp2kr11dqq.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp2kr11dqq.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp2kr11dqq.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp2kr11dqq.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp2kr11dqq.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> v;\n    for (auto i : l) {\n        v.push_back(i + 1);\n\
    \    }\n    return v;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzzx9rc8d.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpzzx9rc8d.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpzzx9rc8d.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return v;\n     ^\n/tmp/tmpzzx9rc8d.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpzzx9rc8d.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpzzx9rc8d.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpzzx9rc8d.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpzzx9rc8d.cpp: In function 'int main()':\n/tmp/tmpzzx9rc8d.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpzzx9rc8d.cpp:2:\n/tmp/tmpzzx9rc8d.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzzx9rc8d.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpzzx9rc8d.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpzzx9rc8d.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpzzx9rc8d.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpzzx9rc8d.cpp:18:68: note: candidates are:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  ret.push_back(l[i] + 1);\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpis3w7i4a.cpp: In function 'int main()':\n/tmp/tmpis3w7i4a.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpis3w7i4a.cpp:2:\n/tmp/tmpis3w7i4a.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpis3w7i4a.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpis3w7i4a.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpis3w7i4a.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpis3w7i4a.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpis3w7i4a.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpis3w7i4a.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> ret;\n  for (auto i : l) {\n    ret.push_back(i + 1);\n \
    \ }\n  return ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjm8x0l9w.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpjm8x0l9w.cpp:10:13: error: 'i' does not name a type\n   for\
    \ (auto i : l) {\n             ^\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected ';'\
    \ before 'return'\n   return ret;\n   ^\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected\
    \ ';' before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected ')' before 'return'\n\
    /tmp/tmpjm8x0l9w.cpp: In function 'int main()':\n/tmp/tmpjm8x0l9w.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpjm8x0l9w.cpp:2:\n/tmp/tmpjm8x0l9w.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpjm8x0l9w.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpjm8x0l9w.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpjm8x0l9w.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpjm8x0l9w.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpjm8x0l9w.cpp:18:68: note: candidates are:\nIn fi"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qhbuy3.cpp: In function 'int main()':\n/tmp/tmp64qhbuy3.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp64qhbuy3.cpp:2:\n/tmp/tmp64qhbuy3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp64qhbuy3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp64qhbuy3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp64qhbuy3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp64qhbuy3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp64qhbuy3.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp64qhbuy3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qhbuy3.cpp: In function 'int main()':\n/tmp/tmp64qhbuy3.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp64qhbuy3.cpp:2:\n/tmp/tmp64qhbuy3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp64qhbuy3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp64qhbuy3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp64qhbuy3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp64qhbuy3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp64qhbuy3.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp64qhbuy3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (auto i : l) {\n        result.push_back(i\
    \ + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprb9rv1sp.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmprb9rv1sp.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmprb9rv1sp.cpp: In function 'int main()':\n/tmp/tmprb9rv1sp.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprb9rv1sp.cpp:2:\n/tmp/tmprb9rv1sp.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmprb9rv1sp.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmprb9rv1sp.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmprb9rv1sp.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprb9rv1sp.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprb9rv1sp.cpp:18:68: note: candidates"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i] += 1;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpebirgpfz.cpp: In function 'int main()':\n/tmp/tmpebirgpfz.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpebirgpfz.cpp:2:\n/tmp/tmpebirgpfz.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpebirgpfz.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpebirgpfz.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpebirgpfz.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpebirgpfz.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpebirgpfz.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpebirgpfz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto x : l) {\n        res.push_back(x +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2kr11dqq.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp2kr11dqq.cpp:10:15: error: 'x' does not name a type\n     for\
    \ (auto x : l) {\n               ^\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp2kr11dqq.cpp: In function 'int main()':\n/tmp/tmp2kr11dqq.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp2kr11dqq.cpp:2:\n/tmp/tmp2kr11dqq.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp2kr11dqq.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp2kr11dqq.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp2kr11dqq.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp2kr11dqq.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp2kr11dqq.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qhbuy3.cpp: In function 'int main()':\n/tmp/tmp64qhbuy3.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp64qhbuy3.cpp:2:\n/tmp/tmp64qhbuy3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp64qhbuy3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp64qhbuy3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp64qhbuy3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp64qhbuy3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp64qhbuy3.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp64qhbuy3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto x : l) {\n        res.push_back(x +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2kr11dqq.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp2kr11dqq.cpp:10:15: error: 'x' does not name a type\n     for\
    \ (auto x : l) {\n               ^\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp2kr11dqq.cpp: In function 'int main()':\n/tmp/tmp2kr11dqq.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp2kr11dqq.cpp:2:\n/tmp/tmp2kr11dqq.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp2kr11dqq.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp2kr11dqq.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp2kr11dqq.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp2kr11dqq.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp2kr11dqq.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qhbuy3.cpp: In function 'int main()':\n/tmp/tmp64qhbuy3.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp64qhbuy3.cpp:2:\n/tmp/tmp64qhbuy3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp64qhbuy3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp64qhbuy3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp64qhbuy3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp64qhbuy3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp64qhbuy3.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp64qhbuy3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (auto i : l) {\n        result.push_back(i\
    \ + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprb9rv1sp.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmprb9rv1sp.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmprb9rv1sp.cpp: In function 'int main()':\n/tmp/tmprb9rv1sp.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprb9rv1sp.cpp:2:\n/tmp/tmprb9rv1sp.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmprb9rv1sp.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmprb9rv1sp.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmprb9rv1sp.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprb9rv1sp.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprb9rv1sp.cpp:18:68: note: candidates"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto e : l) {\n        res.push_back(e +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpchj0gsl8.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpchj0gsl8.cpp:10:15: error: 'e' does not name a type\n     for\
    \ (auto e : l) {\n               ^\n/tmp/tmpchj0gsl8.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmpchj0gsl8.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpchj0gsl8.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpchj0gsl8.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpchj0gsl8.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpchj0gsl8.cpp: In function 'int main()':\n/tmp/tmpchj0gsl8.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpchj0gsl8.cpp:2:\n/tmp/tmpchj0gsl8.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpchj0gsl8.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpchj0gsl8.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpchj0gsl8.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpchj0gsl8.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpchj0gsl8.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> ret;\n  for (auto i : l) {\n    ret.push_back(i + 1);\n \
    \ }\n  return ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjm8x0l9w.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpjm8x0l9w.cpp:10:13: error: 'i' does not name a type\n   for\
    \ (auto i : l) {\n             ^\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected ';'\
    \ before 'return'\n   return ret;\n   ^\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected\
    \ ';' before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected ')' before 'return'\n\
    /tmp/tmpjm8x0l9w.cpp: In function 'int main()':\n/tmp/tmpjm8x0l9w.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpjm8x0l9w.cpp:2:\n/tmp/tmpjm8x0l9w.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpjm8x0l9w.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpjm8x0l9w.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpjm8x0l9w.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpjm8x0l9w.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpjm8x0l9w.cpp:18:68: note: candidates are:\nIn fi"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   ret.push_back(l[i] + 1);\n    }\n    return ret;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmph1h5aue8.cpp: In function 'int main()':\n/tmp/tmph1h5aue8.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph1h5aue8.cpp:2:\n/tmp/tmph1h5aue8.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph1h5aue8.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmph1h5aue8.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmph1h5aue8.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmph1h5aue8.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmph1h5aue8.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmph1h5aue8.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> res;\n  for (auto x : l) {\n    res.push_back(x + 1);\n \
    \ }\n  return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmposc9rdbr.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmposc9rdbr.cpp:10:13: error: 'x' does not name a type\n   for\
    \ (auto x : l) {\n             ^\n/tmp/tmposc9rdbr.cpp:13:3: error: expected ';'\
    \ before 'return'\n   return res;\n   ^\n/tmp/tmposc9rdbr.cpp:13:3: error: expected\
    \ primary-expression before 'return'\n/tmp/tmposc9rdbr.cpp:13:3: error: expected\
    \ ';' before 'return'\n/tmp/tmposc9rdbr.cpp:13:3: error: expected primary-expression\
    \ before 'return'\n/tmp/tmposc9rdbr.cpp:13:3: error: expected ')' before 'return'\n\
    /tmp/tmposc9rdbr.cpp: In function 'int main()':\n/tmp/tmposc9rdbr.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmposc9rdbr.cpp:2:\n/tmp/tmposc9rdbr.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmposc9rdbr.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmposc9rdbr.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmposc9rdbr.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmposc9rdbr.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmposc9rdbr.cpp:18:68: note: candidates are:\nIn fi"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (auto& i : l) {\n        i++;\n    }\n    return l;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxvpw09uj.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpxvpw09uj.cpp:9:16: error: ISO C++ forbids declaration of 'i'\
    \ with no type [-fpermissive]\n     for (auto& i : l) {\n                ^\n/tmp/tmpxvpw09uj.cpp:9:20:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (auto&\
    \ i : l) {\n                    ^\n/tmp/tmpxvpw09uj.cpp: In function 'int main()':\n\
    /tmp/tmpxvpw09uj.cpp:15:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = incr_list;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxvpw09uj.cpp:2:\n/tmp/tmpxvpw09uj.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpxvpw09uj.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpxvpw09uj.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpxvpw09uj.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpxvpw09uj.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpxvpw09uj.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i] += 1;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpebirgpfz.cpp: In function 'int main()':\n/tmp/tmpebirgpfz.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpebirgpfz.cpp:2:\n/tmp/tmpebirgpfz.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpebirgpfz.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpebirgpfz.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpebirgpfz.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpebirgpfz.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpebirgpfz.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpebirgpfz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n   \
    \     result.push_back(l[i] + 1);\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4webzjlg.cpp: In function 'int main()':\n/tmp/tmp4webzjlg.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4webzjlg.cpp:2:\n/tmp/tmp4webzjlg.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp4webzjlg.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp4webzjlg.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp4webzjlg.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp4webzjlg.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp4webzjlg.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp4webzjlg.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n   \
    \     result.push_back(l[i] + 1);\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4webzjlg.cpp: In function 'int main()':\n/tmp/tmp4webzjlg.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4webzjlg.cpp:2:\n/tmp/tmp4webzjlg.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp4webzjlg.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp4webzjlg.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp4webzjlg.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp4webzjlg.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp4webzjlg.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp4webzjlg.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto x : l) {\n        res.push_back(x +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2kr11dqq.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp2kr11dqq.cpp:10:15: error: 'x' does not name a type\n     for\
    \ (auto x : l) {\n               ^\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp2kr11dqq.cpp: In function 'int main()':\n/tmp/tmp2kr11dqq.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp2kr11dqq.cpp:2:\n/tmp/tmp2kr11dqq.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp2kr11dqq.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp2kr11dqq.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp2kr11dqq.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp2kr11dqq.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp2kr11dqq.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qhbuy3.cpp: In function 'int main()':\n/tmp/tmp64qhbuy3.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp64qhbuy3.cpp:2:\n/tmp/tmp64qhbuy3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp64qhbuy3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp64qhbuy3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp64qhbuy3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp64qhbuy3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp64qhbuy3.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp64qhbuy3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (auto& i : l) {\n        i++;\n    }\n    return l;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxvpw09uj.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpxvpw09uj.cpp:9:16: error: ISO C++ forbids declaration of 'i'\
    \ with no type [-fpermissive]\n     for (auto& i : l) {\n                ^\n/tmp/tmpxvpw09uj.cpp:9:20:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (auto&\
    \ i : l) {\n                    ^\n/tmp/tmpxvpw09uj.cpp: In function 'int main()':\n\
    /tmp/tmpxvpw09uj.cpp:15:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = incr_list;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxvpw09uj.cpp:2:\n/tmp/tmpxvpw09uj.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpxvpw09uj.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpxvpw09uj.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpxvpw09uj.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpxvpw09uj.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpxvpw09uj.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (auto i : l) {\n        result.push_back(i\
    \ + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprb9rv1sp.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmprb9rv1sp.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmprb9rv1sp.cpp: In function 'int main()':\n/tmp/tmprb9rv1sp.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprb9rv1sp.cpp:2:\n/tmp/tmprb9rv1sp.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmprb9rv1sp.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmprb9rv1sp.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmprb9rv1sp.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprb9rv1sp.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprb9rv1sp.cpp:18:68: note: candidates"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (auto i : l) {\n        result.push_back(i\
    \ + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprb9rv1sp.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmprb9rv1sp.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmprb9rv1sp.cpp: In function 'int main()':\n/tmp/tmprb9rv1sp.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprb9rv1sp.cpp:2:\n/tmp/tmprb9rv1sp.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmprb9rv1sp.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmprb9rv1sp.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmprb9rv1sp.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprb9rv1sp.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprb9rv1sp.cpp:18:68: note: candidates"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> res;\n  for (auto i : l) {\n    res.push_back(i + 1);\n \
    \ }\n  return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbqye3b_l.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpbqye3b_l.cpp:10:13: error: 'i' does not name a type\n   for\
    \ (auto i : l) {\n             ^\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected ';'\
    \ before 'return'\n   return res;\n   ^\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected\
    \ ';' before 'return'\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected ')' before 'return'\n\
    /tmp/tmpbqye3b_l.cpp: In function 'int main()':\n/tmp/tmpbqye3b_l.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpbqye3b_l.cpp:2:\n/tmp/tmpbqye3b_l.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbqye3b_l.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpbqye3b_l.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpbqye3b_l.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpbqye3b_l.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpbqye3b_l.cpp:18:68: note: candidates are:\nIn fi"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n   \
    \     result.push_back(l[i] + 1);\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4webzjlg.cpp: In function 'int main()':\n/tmp/tmp4webzjlg.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4webzjlg.cpp:2:\n/tmp/tmp4webzjlg.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp4webzjlg.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp4webzjlg.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp4webzjlg.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp4webzjlg.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp4webzjlg.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp4webzjlg.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto x : l) {\n        res.push_back(x +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2kr11dqq.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp2kr11dqq.cpp:10:15: error: 'x' does not name a type\n     for\
    \ (auto x : l) {\n               ^\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp2kr11dqq.cpp: In function 'int main()':\n/tmp/tmp2kr11dqq.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp2kr11dqq.cpp:2:\n/tmp/tmp2kr11dqq.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp2kr11dqq.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp2kr11dqq.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp2kr11dqq.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp2kr11dqq.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp2kr11dqq.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i] += 1;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpebirgpfz.cpp: In function 'int main()':\n/tmp/tmpebirgpfz.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpebirgpfz.cpp:2:\n/tmp/tmpebirgpfz.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpebirgpfz.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpebirgpfz.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpebirgpfz.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpebirgpfz.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpebirgpfz.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpebirgpfz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> res;\n  for (long i = 0; i < l.size(); i++) {\n    res.push_back(l[i]\
    \ + 1);\n  }\n  return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1rmc0b9q.cpp: In function 'int main()':\n/tmp/tmp1rmc0b9q.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1rmc0b9q.cpp:2:\n/tmp/tmp1rmc0b9q.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp1rmc0b9q.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp1rmc0b9q.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp1rmc0b9q.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp1rmc0b9q.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp1rmc0b9q.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp1rmc0b9q.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> res;\n  for (int i = 0; i < l.size(); i++) {\n    res.push_back(l[i]\
    \ + 1);\n  }\n  return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5jioatb9.cpp: In function 'int main()':\n/tmp/tmp5jioatb9.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5jioatb9.cpp:2:\n/tmp/tmp5jioatb9.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp5jioatb9.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp5jioatb9.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp5jioatb9.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp5jioatb9.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp5jioatb9.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp5jioatb9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qhbuy3.cpp: In function 'int main()':\n/tmp/tmp64qhbuy3.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp64qhbuy3.cpp:2:\n/tmp/tmp64qhbuy3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp64qhbuy3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp64qhbuy3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp64qhbuy3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp64qhbuy3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp64qhbuy3.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp64qhbuy3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (auto &i : l) {\n        i++;\n    }\n    return l;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpl6d3h7xh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qhbuy3.cpp: In function 'int main()':\n/tmp/tmp64qhbuy3.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp64qhbuy3.cpp:2:\n/tmp/tmp64qhbuy3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp64qhbuy3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp64qhbuy3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp64qhbuy3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp64qhbuy3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp64qhbuy3.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp64qhbuy3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (auto i : l) {\n        result.push_back(i\
    \ + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprb9rv1sp.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmprb9rv1sp.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmprb9rv1sp.cpp: In function 'int main()':\n/tmp/tmprb9rv1sp.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprb9rv1sp.cpp:2:\n/tmp/tmprb9rv1sp.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmprb9rv1sp.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmprb9rv1sp.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmprb9rv1sp.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprb9rv1sp.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprb9rv1sp.cpp:18:68: note: candidates"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (int i = 0; i < l.size(); i++) {\n   \
    \     result.push_back(l[i] + 1);\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp4webzjlg.cpp: In function 'int main()':\n/tmp/tmp4webzjlg.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4webzjlg.cpp:2:\n/tmp/tmp4webzjlg.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp4webzjlg.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp4webzjlg.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp4webzjlg.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp4webzjlg.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp4webzjlg.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp4webzjlg.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> ret;\n  for (auto x : l) {\n    ret.push_back(x + 1);\n \
    \ }\n  return ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxp23xuxv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i: l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp55v0utqh.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp55v0utqh.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i: l) {\n               ^\n/tmp/tmp55v0utqh.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp55v0utqh.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp55v0utqh.cpp: In function 'int main()':\n/tmp/tmp55v0utqh.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp55v0utqh.cpp:2:\n/tmp/tmp55v0utqh.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp55v0utqh.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp55v0utqh.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp55v0utqh.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp55v0utqh.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp55v0utqh.cpp:18:68: note: candidates are"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto x : l) {\n        ret.push_back(x +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa01xvesi.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> r;\n    for (auto i : l) {\n        r.push_back(i + 1);\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpj84kw8tx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto x : l) {\n        res.push_back(x +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2kr11dqq.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp2kr11dqq.cpp:10:15: error: 'x' does not name a type\n     for\
    \ (auto x : l) {\n               ^\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp2kr11dqq.cpp: In function 'int main()':\n/tmp/tmp2kr11dqq.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp2kr11dqq.cpp:2:\n/tmp/tmp2kr11dqq.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp2kr11dqq.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp2kr11dqq.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp2kr11dqq.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp2kr11dqq.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp2kr11dqq.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i] += 1;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpebirgpfz.cpp: In function 'int main()':\n/tmp/tmpebirgpfz.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpebirgpfz.cpp:2:\n/tmp/tmpebirgpfz.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpebirgpfz.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpebirgpfz.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpebirgpfz.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpebirgpfz.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpebirgpfz.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpebirgpfz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qhbuy3.cpp: In function 'int main()':\n/tmp/tmp64qhbuy3.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp64qhbuy3.cpp:2:\n/tmp/tmp64qhbuy3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp64qhbuy3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp64qhbuy3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp64qhbuy3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp64qhbuy3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp64qhbuy3.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp64qhbuy3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> v;\n    for (auto i : l) {\n        v.push_back(i + 1);\n\
    \    }\n    return v;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzzx9rc8d.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpzzx9rc8d.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmpzzx9rc8d.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return v;\n     ^\n/tmp/tmpzzx9rc8d.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmpzzx9rc8d.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmpzzx9rc8d.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpzzx9rc8d.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmpzzx9rc8d.cpp: In function 'int main()':\n/tmp/tmpzzx9rc8d.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpzzx9rc8d.cpp:2:\n/tmp/tmpzzx9rc8d.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpzzx9rc8d.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpzzx9rc8d.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpzzx9rc8d.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpzzx9rc8d.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpzzx9rc8d.cpp:18:68: note: candidates are:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> res;\n  for (auto i : l) {\n    res.push_back(i + 1);\n \
    \ }\n  return res;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbqye3b_l.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpbqye3b_l.cpp:10:13: error: 'i' does not name a type\n   for\
    \ (auto i : l) {\n             ^\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected ';'\
    \ before 'return'\n   return res;\n   ^\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected\
    \ ';' before 'return'\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpbqye3b_l.cpp:13:3: error: expected ')' before 'return'\n\
    /tmp/tmpbqye3b_l.cpp: In function 'int main()':\n/tmp/tmpbqye3b_l.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpbqye3b_l.cpp:2:\n/tmp/tmpbqye3b_l.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbqye3b_l.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpbqye3b_l.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpbqye3b_l.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpbqye3b_l.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpbqye3b_l.cpp:18:68: note: candidates are:\nIn fi"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> r;\n    for (auto i : l) {\n        r.push_back(i + 1);\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpj84kw8tx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> r;\n    for (auto i : l) {\n        r.push_back(i + 1);\n\
    \    }\n    return r;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpj84kw8tx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (auto i : l) {\n        result.push_back(i\
    \ + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprb9rv1sp.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmprb9rv1sp.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmprb9rv1sp.cpp: In function 'int main()':\n/tmp/tmprb9rv1sp.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprb9rv1sp.cpp:2:\n/tmp/tmprb9rv1sp.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmprb9rv1sp.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmprb9rv1sp.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmprb9rv1sp.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprb9rv1sp.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprb9rv1sp.cpp:18:68: note: candidates"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i: l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp55v0utqh.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp55v0utqh.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i: l) {\n               ^\n/tmp/tmp55v0utqh.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp55v0utqh.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp55v0utqh.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp55v0utqh.cpp: In function 'int main()':\n/tmp/tmp55v0utqh.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp55v0utqh.cpp:2:\n/tmp/tmp55v0utqh.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp55v0utqh.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp55v0utqh.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp55v0utqh.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp55v0utqh.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp55v0utqh.cpp:18:68: note: candidates are"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (auto& i : l) {\n        i++;\n    }\n    return l;\n}\nint main() {\n\
    \    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxvpw09uj.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpxvpw09uj.cpp:9:16: error: ISO C++ forbids declaration of 'i'\
    \ with no type [-fpermissive]\n     for (auto& i : l) {\n                ^\n/tmp/tmpxvpw09uj.cpp:9:20:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (auto&\
    \ i : l) {\n                    ^\n/tmp/tmpxvpw09uj.cpp: In function 'int main()':\n\
    /tmp/tmpxvpw09uj.cpp:15:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = incr_list;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxvpw09uj.cpp:2:\n/tmp/tmpxvpw09uj.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpxvpw09uj.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpxvpw09uj.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpxvpw09uj.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpxvpw09uj.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpxvpw09uj.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto x : l) {\n        res.push_back(x +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2kr11dqq.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp2kr11dqq.cpp:10:15: error: 'x' does not name a type\n     for\
    \ (auto x : l) {\n               ^\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp2kr11dqq.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp2kr11dqq.cpp: In function 'int main()':\n/tmp/tmp2kr11dqq.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp2kr11dqq.cpp:2:\n/tmp/tmp2kr11dqq.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp2kr11dqq.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp2kr11dqq.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp2kr11dqq.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp2kr11dqq.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp2kr11dqq.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (auto i : l) {\n        result.push_back(i\
    \ + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprb9rv1sp.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmprb9rv1sp.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmprb9rv1sp.cpp: In function 'int main()':\n/tmp/tmprb9rv1sp.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprb9rv1sp.cpp:2:\n/tmp/tmprb9rv1sp.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmprb9rv1sp.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmprb9rv1sp.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmprb9rv1sp.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprb9rv1sp.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprb9rv1sp.cpp:18:68: note: candidates"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> v;\n    for (long i = 0; i < l.size(); i++) {\n       \
    \ v.push_back(l[i] + 1);\n    }\n    return v;\n}\nint main() {\n    auto candidate\
    \ = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxpsv211y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659747929
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (auto i : l) {\n        result.push_back(i\
    \ + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprb9rv1sp.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmprb9rv1sp.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmprb9rv1sp.cpp: In function 'int main()':\n/tmp/tmprb9rv1sp.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprb9rv1sp.cpp:2:\n/tmp/tmprb9rv1sp.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmprb9rv1sp.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmprb9rv1sp.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmprb9rv1sp.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprb9rv1sp.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprb9rv1sp.cpp:18:68: note: candidates"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> result;\n    for (auto i : l) {\n        result.push_back(i\
    \ + 1);\n    }\n    return result;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprb9rv1sp.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmprb9rv1sp.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmprb9rv1sp.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmprb9rv1sp.cpp: In function 'int main()':\n/tmp/tmprb9rv1sp.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprb9rv1sp.cpp:2:\n/tmp/tmprb9rv1sp.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmprb9rv1sp.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmprb9rv1sp.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmprb9rv1sp.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprb9rv1sp.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprb9rv1sp.cpp:18:68: note: candidates"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (int i = 0; i < l.size(); i++) {\n      \
    \  res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_evia_at.cpp: In function 'int main()':\n/tmp/tmp_evia_at.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_evia_at.cpp:2:\n/tmp/tmp_evia_at.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp_evia_at.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp_evia_at.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp_evia_at.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp_evia_at.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp_evia_at.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp_evia_at.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> ret;\n  for (auto i : l) {\n    ret.push_back(i + 1);\n \
    \ }\n  return ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjm8x0l9w.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpjm8x0l9w.cpp:10:13: error: 'i' does not name a type\n   for\
    \ (auto i : l) {\n             ^\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected ';'\
    \ before 'return'\n   return ret;\n   ^\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected\
    \ ';' before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected ')' before 'return'\n\
    /tmp/tmpjm8x0l9w.cpp: In function 'int main()':\n/tmp/tmpjm8x0l9w.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpjm8x0l9w.cpp:2:\n/tmp/tmpjm8x0l9w.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpjm8x0l9w.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpjm8x0l9w.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpjm8x0l9w.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpjm8x0l9w.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpjm8x0l9w.cpp:18:68: note: candidates are:\nIn fi"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qhbuy3.cpp: In function 'int main()':\n/tmp/tmp64qhbuy3.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp64qhbuy3.cpp:2:\n/tmp/tmp64qhbuy3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp64qhbuy3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp64qhbuy3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp64qhbuy3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp64qhbuy3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp64qhbuy3.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp64qhbuy3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   res.push_back(l[i] + 1);\n    }\n    return res;\n}\nint main() {\n    auto\
    \ candidate = incr_list;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)2, (long)1}))) == (std::vector<long>({(long)4,\
    \ (long)3, (long)2})));\n    assert(candidate((std::vector<long>({(long)5, (long)2,\
    \ (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp64qhbuy3.cpp: In function 'int main()':\n/tmp/tmp64qhbuy3.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp64qhbuy3.cpp:2:\n/tmp/tmp64qhbuy3.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp64qhbuy3.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp64qhbuy3.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp64qhbuy3.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp64qhbuy3.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp64qhbuy3.cpp:18:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp64qhbuy3.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> ret;\n    for (auto i : l) {\n        ret.push_back(i +\
    \ 1);\n    }\n    return ret;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3s50n0gu.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp3s50n0gu.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return ret;\n     ^\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3s50n0gu.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp3s50n0gu.cpp: In function 'int main()':\n/tmp/tmp3s50n0gu.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3s50n0gu.cpp:2:\n/tmp/tmp3s50n0gu.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp3s50n0gu.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp3s50n0gu.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp3s50n0gu.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3s50n0gu.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3s50n0gu.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    std::vector<long> res;\n    for (auto i : l) {\n        res.push_back(i +\
    \ 1);\n    }\n    return res;\n}\nint main() {\n    auto candidate = incr_list;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9xjz15eb.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmp9xjz15eb.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : l) {\n               ^\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected\
    \ ';' before 'return'\n     return res;\n     ^\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp9xjz15eb.cpp:13:5: error: expected ')' before 'return'\n\
    /tmp/tmp9xjz15eb.cpp: In function 'int main()':\n/tmp/tmp9xjz15eb.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp9xjz15eb.cpp:2:\n/tmp/tmp9xjz15eb.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp9xjz15eb.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp9xjz15eb.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp9xjz15eb.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9xjz15eb.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9xjz15eb.cpp:18:68: note: candidates ar"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \  std::vector<long> ret;\n  for (auto i : l) {\n    ret.push_back(i + 1);\n \
    \ }\n  return ret;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjm8x0l9w.cpp: In function 'std::vector<long int> incr_list(std::vector<long\
    \ int>)':\n/tmp/tmpjm8x0l9w.cpp:10:13: error: 'i' does not name a type\n   for\
    \ (auto i : l) {\n             ^\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected ';'\
    \ before 'return'\n   return ret;\n   ^\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected\
    \ ';' before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpjm8x0l9w.cpp:13:3: error: expected ')' before 'return'\n\
    /tmp/tmpjm8x0l9w.cpp: In function 'int main()':\n/tmp/tmpjm8x0l9w.cpp:16:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = incr_list;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmpjm8x0l9w.cpp:2:\n/tmp/tmpjm8x0l9w.cpp:17:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpjm8x0l9w.cpp:18:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmpjm8x0l9w.cpp:18:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmpjm8x0l9w.cpp:18:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpjm8x0l9w.cpp:18:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpjm8x0l9w.cpp:18:68: note: candidates are:\nIn fi"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return vector with elements\
    \ incremented by 1.\n// >>> incr_list((std::vector<long>({(long)1, (long)2, (long)3})))\n\
    // (std::vector<long>({(long)2, (long)3, (long)4}))\n// >>> incr_list((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\n\
    // (std::vector<long>({(long)6, (long)4, (long)6, (long)3, (long)4, (long)4, (long)10,\
    \ (long)1, (long)124}))\nstd::vector<long> incr_list(std::vector<long> l) {\n\
    \    for (int i = 0; i < l.size(); i++) {\n        l[i]++;\n    }\n    return\
    \ l;\n}\nint main() {\n    auto candidate = incr_list;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)2, (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)2, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)6,\
    \ (long)3, (long)6, (long)3, (long)4, (long)4, (long)10, (long)1, (long)124})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp849fkds6.cpp: In function 'int main()':\n/tmp/tmp849fkds6.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = incr_list;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp849fkds6.cpp:2:\n/tmp/tmp849fkds6.cpp:16:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp849fkds6.cpp:17:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)3, (long)2,\
    \ (long)1}))) == (std::vector<long>({(long)4, (long)3, (long)2})));\n        \
    \                                ^\n/tmp/tmp849fkds6.cpp:17:68: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)3, (long)2, (long)1})))\
    \ == (std::vector<long>({(long)4, (long)3, (long)2})));\n                    \
    \                                                ^\n/tmp/tmp849fkds6.cpp:17:68:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp849fkds6.cpp:17:68: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp849fkds6.cpp:17:68: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp849fkds6.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note:   template argum"
  stdout: ''

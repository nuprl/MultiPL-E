language: cpp
name: HumanEval_67_fruit_distribution
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d\
    \ apples and %d oranges\",&a,&o);\n    return n-a-o;\n}\nint main() {\n    auto\
    \ candidate = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) ==\
    \ (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n \
    \   assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples\
    \ and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"\
    ), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_lfak_l5.cpp: In function 'int main()':\n/tmp/tmp_lfak_l5.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_lfak_l5.cpp:2:\n/tmp/tmp_lfak_l5.cpp:25:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    int a, o;\n    sscanf(s.c_str(), \"%d apples and %d oranges\"\
    , &a, &o);\n    return n - a - o;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgowunzbv.cpp: In function 'int main()':\n/tmp/tmpgowunzbv.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgowunzbv.cpp:2:\n/tmp/tmpgowunzbv.cpp:24:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n\
    \    int m = 0;\n    int o = 0;\n    int p = 0;\n    int q = 0;\n    int r = 0;\n\
    \    int t = 0;\n    int u = 0;\n    int v = 0;\n    int w = 0;\n    int x = 0;\n\
    \    int y = 0;\n    int z = 0;\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\
    \    int d = 0;\n    int e = 0;\n    int f = 0;\n    int g = 0;\n    int h = 0;\n\
    \    int ii = 0;\n    int jj = 0;\n    int kk = 0;\n    int ll = 0;\n    int mm\
    \ = 0;\n    int oo = 0;\n    int pp = 0;\n    int qq = 0;\n    int rr = 0;\n \
    \   int tt = 0;\n    int uu = 0;\n    int vv = 0;\n    int ww = 0;\n    int xx\
    \ = 0;\n    int yy = 0;\n    int zz = 0;\n    int aa = 0;\n    int bb = 0;\n \
    \   int cc = 0;\n    int dd = 0;\n    int ee = 0;\n    int ff = 0;\n    int gg\
    \ = 0;\n    int hh = 0;\n    int iii = 0;\n    int jjj = 0;\n    int kkk = 0;\n\
    \    int lll = 0;\n    int mmm = 0;\n    int ooo = 0;\n    int ppp = 0;\n    int\
    \ qqq = 0;\n    int rrr = 0;\n    int ttt = 0;\n    int uuu = 0;\n    int vvv\
    \ = 0;\n    int www = 0;\n    int xxx = 0;\n    int yyy = 0;\n    int zzz = 0;\n\
    \    int aaaa = 0;\n    int bbbb = 0;\n    int cccc = 0;\n    int dddd = 0\n}\n\
    int main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1z177fe9.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp1z177fe9.cpp:86:1: error: expected ',' or ';' before '}'\
    \ token\n }\n ^\n/tmp/tmp1z177fe9.cpp: In function 'int main()':\n/tmp/tmp1z177fe9.cpp:88:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1z177fe9.cpp:2:\n/tmp/tmp1z177fe9.cpp:89:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apple, orange;\n    std::stringstream\
    \ ss(s);\n    ss >> apple >> s >> orange;\n    return n - apple - orange;\n}\n\
    int main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjno15vpx.cpp: In function 'int main()':\n/tmp/tmpjno15vpx.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjno15vpx.cpp:2:\n/tmp/tmpjno15vpx.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    long apples = 0;\n    long oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stol(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stol(word);\n        }\n    }\n\
    \    return n - apples - oranges;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplaxmqt3y.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmplaxmqt3y.cpp:26:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(word);\n                      ^\n/tmp/tmplaxmqt3y.cpp:30:23:\
    \ error: 'stol' is not a member of 'std'\n             oranges = std::stol(word);\n\
    \                       ^\n/tmp/tmplaxmqt3y.cpp: In function 'int main()':\n/tmp/tmplaxmqt3y.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplaxmqt3y.cpp:2:\n/tmp/tmplaxmqt3y.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n\
    \    int l=0;\n    int m=0;\n    int o=0;\n    int p=0;\n    int q=0;\n    int\
    \ r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n    int w=0;\n    int x=0;\n\
    \    int y=0;\n    int z=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int\
    \ d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int ii=0;\n\
    \    int jj=0;\n    int kk=0;\n    int ll=0;\n    int mm=0;\n    int oo=0;\n \
    \   int pp=0;\n    int qq=0;\n    int rr=0;\n    int tt=0;\n    int uu=0;\n  \
    \  int vv=0;\n    int ww=0;\n    int xx=0;\n    int yy=0;\n    int zz=0;\n   \
    \ int aa=0;\n    int bb=0;\n    int cc=0;\n    int dd=0;\n    int ee=0;\n    int\
    \ ff=0;\n    int gg=0;\n    int hh=0;\n    int iii=0;\n    int jjj=0;\n    int\
    \ kkk=0;\n    int lll=0;\n    int mmm=0;\n    int ooo=0;\n    int ppp=0;\n   \
    \ int qqq=0;\n    int rrr=0;\n    int ttt=0;\n    int uuu=0;\n    int vvv=0;\n\
    \    int www=0;\n    int xxx=0;\n    int yyy=0;\n    int zzz=0;\n    int aaaa=0;\n\
    \    int bbbb=0;\n    int cccc=0;\n   \n}\nint main() {\n    auto candidate =\
    \ fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuga11pr0.cpp: In function 'int main()':\n/tmp/tmpuga11pr0.cpp:89:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuga11pr0.cpp:2:\n/tmp/tmpuga11pr0.cpp:90:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i=0;\n    int count=0;\n    while(s[i]!='\
    \ '){\n        count++;\n        i++;\n    }\n    int apples=0;\n    int oranges=0;\n\
    \    int j=0;\n    while(j<count){\n        apples=apples*10+(s[j]-'0');\n   \
    \     j++;\n    }\n    i=i+6;\n    count=0;\n    while(s[i]!=' '){\n        count++;\n\
    \        i++;\n    }\n    j=i+1;\n    while(j<i+count+1){\n        oranges=oranges*10+(s[j]-'0');\n\
    \        j++;\n    }\n    return n-(apples+oranges);\n}\nint main() {\n    auto\
    \ candidate = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) ==\
    \ (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n \
    \   assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples\
    \ and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"\
    ), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt9nefe3u.cpp: In function 'int main()':\n/tmp/tmpt9nefe3u.cpp:46:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpt9nefe3u.cpp:2:\n/tmp/tmpt9nefe3u.cpp:47:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long count = 0;\n    long apples =\
    \ 0;\n    long oranges = 0;\n    long mango = 0;\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(s[i] == 'a'){\n            apples++;\n        }\n        if(s[i]\
    \ == 'o'){\n            oranges++;\n        }\n    }\n    mango = n - apples -\
    \ oranges;\n    return mango;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiskuxa67.cpp: In function 'int main()':\n/tmp/tmpiskuxa67.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiskuxa67.cpp:2:\n/tmp/tmpiskuxa67.cpp:36:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long a,o;\n    std::stringstream ss(s);\n\
    \    ss>>a>>s>>o;\n    return n-a-o;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp90sm24w0.cpp: In function 'int main()':\n/tmp/tmp90sm24w0.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp90sm24w0.cpp:2:\n/tmp/tmp90sm24w0.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apples = 0;\n    long oranges\
    \ = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    while(std::getline(ss, temp, ' ')){\n        if(temp == \"apples\"){\n  \
    \          apples = std::stol(std::getline(ss, temp, ' '));\n        }\n     \
    \   else if(temp == \"oranges\"){\n            oranges = std::stol(std::getline(ss,\
    \ temp, ' '));\n        }\n    }\n    mangoes = n - apples - oranges;\n    return\
    \ mangoes;\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptq__9ymp.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmptq__9ymp.cpp:26:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(std::getline(ss, temp, ' '));\n             \
    \         ^\n/tmp/tmptq__9ymp.cpp:29:23: error: 'stol' is not a member of 'std'\n\
    \             oranges = std::stol(std::getline(ss, temp, ' '));\n            \
    \           ^\n/tmp/tmptq__9ymp.cpp: In function 'int main()':\n/tmp/tmptq__9ymp.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptq__9ymp.cpp:2:\n/tmp/tmptq__9ymp.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - (apples + oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_hyozp9x.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp_hyozp9x.cpp:26:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmp_hyozp9x.cpp:30:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmp_hyozp9x.cpp: In function 'int main()':\n/tmp/tmp_hyozp9x.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_hyozp9x.cpp:2:\n/tmp/tmp_hyozp9x.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    int apples = 0;\n    int oranges = 0;\n    while(std::getline(ss,\
    \ temp, ' ')){\n        if(temp == \"apples\"){\n            std::getline(ss,\
    \ temp, ' ');\n            apples = std::stoi(temp);\n        }\n        else\
    \ if(temp == \"oranges\"){\n            std::getline(ss, temp, ' ');\n       \
    \     oranges = std::stoi(temp);\n        }\n    }\n    return n - (apples + oranges);\n\
    }\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_u_l4q1m.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp_u_l4q1m.cpp:26:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(temp);\n                      ^\n/tmp/tmp_u_l4q1m.cpp:30:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(temp);\n\
    \                       ^\n/tmp/tmp_u_l4q1m.cpp: In function 'int main()':\n/tmp/tmp_u_l4q1m.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_u_l4q1m.cpp:2:\n/tmp/tmp_u_l4q1m.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    long apple = 0;\n    long orange = 0;\n    while(ss >> word){\n \
    \       if(word == \"apples\"){\n            ss >> word;\n            apple =\
    \ std::stol(word);\n        }\n        else if(word == \"oranges\"){\n       \
    \     ss >> word;\n            orange = std::stol(word);\n        }\n    }\n \
    \   return n - apple - orange;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpieixlvg4.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpieixlvg4.cpp:26:21: error: 'stol' is not a member of 'std'\n\
    \             apple = std::stol(word);\n                     ^\n/tmp/tmpieixlvg4.cpp:30:22:\
    \ error: 'stol' is not a member of 'std'\n             orange = std::stol(word);\n\
    \                      ^\n/tmp/tmpieixlvg4.cpp: In function 'int main()':\n/tmp/tmpieixlvg4.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpieixlvg4.cpp:2:\n/tmp/tmpieixlvg4.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    long i = 0;\n    while(s[i] != ' '){\n        apples = apples * 10\
    \ + (s[i] - '0');\n        i++;\n    }\n    i += 6;\n    while(s[i] != ' '){\n\
    \        oranges = oranges * 10 + (s[i] - '0');\n        i++;\n    }\n    mangoes\
    \ = n - apples - oranges;\n    return mangoes;\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5hg2042e.cpp: In function 'int main()':\n/tmp/tmp5hg2042e.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5hg2042e.cpp:2:\n/tmp/tmp5hg2042e.cpp:36:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int apple = 0, orange = 0;\n    int\
    \ i = 0;\n    while(s[i] != ' ')\n    {\n        apple = apple * 10 + (s[i] -\
    \ '0');\n        i++;\n    }\n    i += 5;\n    while(s[i] != ' ')\n    {\n   \
    \     orange = orange * 10 + (s[i] - '0');\n        i++;\n    }\n    return n\
    \ - (apple + orange);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1p2d16dc.cpp: In function 'int main()':\n/tmp/tmp1p2d16dc.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1p2d16dc.cpp:2:\n/tmp/tmp1p2d16dc.cpp:36:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> s >> oranges;\n    return n - apples - oranges;\n\
    }\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5v1mouu7.cpp: In function 'int main()':\n/tmp/tmp5v1mouu7.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5v1mouu7.cpp:2:\n/tmp/tmp5v1mouu7.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(ss >> temp)\
    \ {\n        if(temp == \"apples\") {\n            ss >> apples;\n        }\n\
    \        else if(temp == \"oranges\") {\n            ss >> oranges;\n        }\n\
    \    }\n    mangoes = n - (apples + oranges);\n    return mangoes;\n}\nint main()\
    \ {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) ==\
    \ (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n  \
    \  assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0eqh7rwc.cpp: In function 'int main()':\n/tmp/tmp0eqh7rwc.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0eqh7rwc.cpp:2:\n/tmp/tmp0eqh7rwc.cpp:36:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d\
    \ apples and %d oranges\",&a,&o);\n    return n-a-o;\n}\nint main() {\n    auto\
    \ candidate = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) ==\
    \ (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n \
    \   assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples\
    \ and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"\
    ), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_lfak_l5.cpp: In function 'int main()':\n/tmp/tmp_lfak_l5.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_lfak_l5.cpp:2:\n/tmp/tmp_lfak_l5.cpp:25:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i=0;\n    int j=0;\n    std::string\
    \ str;\n    while(s[i]!=' ')\n    {\n        str+=s[i];\n        i++;\n    }\n\
    \    int a=std::stoi(str);\n    str=\"\";\n    i+=6;\n    while(s[i]!=' ')\n \
    \   {\n        str+=s[i];\n        i++;\n    }\n    int b=std::stoi(str);\n  \
    \  return n-(a+b);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3f0btyw_.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp3f0btyw_.cpp:27:11: error: 'stoi' is not a member of 'std'\n\
    \     int a=std::stoi(str);\n           ^\n/tmp/tmp3f0btyw_.cpp:35:11: error:\
    \ 'stoi' is not a member of 'std'\n     int b=std::stoi(str);\n           ^\n\
    /tmp/tmp3f0btyw_.cpp: In function 'int main()':\n/tmp/tmp3f0btyw_.cpp:39:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3f0btyw_.cpp:2:\n/tmp/tmp3f0btyw_.cpp:40:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long a,o;\n    std::stringstream ss(s);\n\
    \    ss>>a>>s>>o;\n    return n-a-o;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp90sm24w0.cpp: In function 'int main()':\n/tmp/tmp90sm24w0.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp90sm24w0.cpp:2:\n/tmp/tmp90sm24w0.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    int apples = 0;\n    int oranges = 0;\n    while(std::getline(ss,\
    \ temp, ' ')){\n        if(temp == \"apples\"){\n            apples = std::stoi(temp);\n\
    \        }\n        else if(temp == \"oranges\"){\n            oranges = std::stoi(temp);\n\
    \        }\n    }\n    return n - (apples + oranges);\n}\nint main() {\n    auto\
    \ candidate = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) ==\
    \ (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n \
    \   assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples\
    \ and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"\
    ), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptx_0wcnt.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmptx_0wcnt.cpp:25:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(temp);\n                      ^\n/tmp/tmptx_0wcnt.cpp:28:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(temp);\n\
    \                       ^\n/tmp/tmptx_0wcnt.cpp: In function 'int main()':\n/tmp/tmptx_0wcnt.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptx_0wcnt.cpp:2:\n/tmp/tmptx_0wcnt.cpp:35:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long num_apples = 0;\n    long num_oranges\
    \ = 0;\n    long num_mangoes = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"apples\") {\n         \
    \   ss >> word;\n            num_apples = std::stol(word);\n        }\n      \
    \  else if(word == \"oranges\") {\n            ss >> word;\n            num_oranges\
    \ = std::stol(word);\n        }\n    }\n    num_mangoes = n - num_apples - num_oranges;\n\
    \    return num_mangoes;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8s95bu4k.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp8s95bu4k.cpp:27:26: error: 'stol' is not a member of 'std'\n\
    \             num_apples = std::stol(word);\n                          ^\n/tmp/tmp8s95bu4k.cpp:31:27:\
    \ error: 'stol' is not a member of 'std'\n             num_oranges = std::stol(word);\n\
    \                           ^\n/tmp/tmp8s95bu4k.cpp: In function 'int main()':\n\
    /tmp/tmp8s95bu4k.cpp:38:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = fruit_distribution;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8s95bu4k.cpp:2:\n/tmp/tmp8s95bu4k.cpp:39:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long a,o;\n    std::stringstream ss;\n\
    \    ss<<s;\n    ss>>a>>s>>o;\n    return n-a-o;\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpamgl2ylh.cpp: In function 'int main()':\n/tmp/tmpamgl2ylh.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpamgl2ylh.cpp:2:\n/tmp/tmpamgl2ylh.cpp:27:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string temp;\n    while(getline(ss,\
    \ temp, ' ')){\n        if(temp == \"apples\"){\n            apples = std::stol(temp);\n\
    \        }\n        else if(temp == \"oranges\"){\n            oranges = std::stol(temp);\n\
    \        }\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;\n\
    }\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0rquy4lv.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp0rquy4lv.cpp:25:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(temp);\n                      ^\n/tmp/tmp0rquy4lv.cpp:28:23:\
    \ error: 'stol' is not a member of 'std'\n             oranges = std::stol(temp);\n\
    \                       ^\n/tmp/tmp0rquy4lv.cpp: In function 'int main()':\n/tmp/tmp0rquy4lv.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0rquy4lv.cpp:2:\n/tmp/tmp0rquy4lv.cpp:36:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use std::cout\n    // Example: std::cout << \"Hello world!\"\
    ;\n    long apples, oranges;\n    std::stringstream ss(s);\n    ss >> apples >>\
    \ s >> oranges;\n    return n - apples - oranges;\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd0sslnps.cpp: In function 'int main()':\n/tmp/tmpd0sslnps.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpd0sslnps.cpp:2:\n/tmp/tmpd0sslnps.cpp:28:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - (apples + oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_hyozp9x.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp_hyozp9x.cpp:26:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmp_hyozp9x.cpp:30:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmp_hyozp9x.cpp: In function 'int main()':\n/tmp/tmp_hyozp9x.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_hyozp9x.cpp:2:\n/tmp/tmp_hyozp9x.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    std::vector<std::string> result;\n    while(ss >> temp)\n       \
    \ result.push_back(temp);\n    int apples = std::stoi(result[0]);\n    int oranges\
    \ = std::stoi(result[2]);\n    return n - apples - oranges;\n}\nint main() {\n\
    \    auto candidate = fruit_distribution;\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) ==\
    \ (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n  \
    \  assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplgoilst8.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmplgoilst8.cpp:24:18: error: 'stoi' is not a member of 'std'\n\
    \     int apples = std::stoi(result[0]);\n                  ^\n/tmp/tmplgoilst8.cpp:25:19:\
    \ error: 'stoi' is not a member of 'std'\n     int oranges = std::stoi(result[2]);\n\
    \                   ^\n/tmp/tmplgoilst8.cpp: In function 'int main()':\n/tmp/tmplgoilst8.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplgoilst8.cpp:2:\n/tmp/tmplgoilst8.cpp:30:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long a,o;\n    std::stringstream ss(s);\n\
    \    ss>>a>>s>>o;\n    return n-a-o;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp90sm24w0.cpp: In function 'int main()':\n/tmp/tmp90sm24w0.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp90sm24w0.cpp:2:\n/tmp/tmp90sm24w0.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    std::stringstream ss(s);\n    long a, o;\n    ss >> a >> s\
    \ >> o >> s;\n    return n - a - o;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmqpil06c.cpp: In function 'int main()':\n/tmp/tmpmqpil06c.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpmqpil06c.cpp:2:\n/tmp/tmpmqpil06c.cpp:25:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    int apples = 0, oranges = 0;\n    int i = 0;\n    while(s[i]\
    \ != ' ') {\n        apples = apples * 10 + (s[i] - '0');\n        i++;\n    }\n\
    \    i += 6;\n    while(s[i] != ' ') {\n        oranges = oranges * 10 + (s[i]\
    \ - '0');\n        i++;\n    }\n    return n - (apples + oranges);\n}\nint main()\
    \ {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) ==\
    \ (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n  \
    \  assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx7rnxieu.cpp: In function 'int main()':\n/tmp/tmpx7rnxieu.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpx7rnxieu.cpp:2:\n/tmp/tmpx7rnxieu.cpp:33:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apples = 0;\n    long oranges\
    \ = 0;\n    std::stringstream ss(s);\n    std::string word;\n    while(ss >> word)\
    \ {\n        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stol(word);\n        } else if(word == \"oranges\") {\n            ss\
    \ >> word;\n            oranges = std::stol(word);\n        }\n    }\n    return\
    \ n - apples - oranges;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpirqyhkm_.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpirqyhkm_.cpp:26:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(word);\n                      ^\n/tmp/tmpirqyhkm_.cpp:29:23:\
    \ error: 'stol' is not a member of 'std'\n             oranges = std::stol(word);\n\
    \                       ^\n/tmp/tmpirqyhkm_.cpp: In function 'int main()':\n/tmp/tmpirqyhkm_.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpirqyhkm_.cpp:2:\n/tmp/tmpirqyhkm_.cpp:36:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    std::stringstream ss(s);\n    std::string word;\n    int apples\
    \ = 0;\n    int oranges = 0;\n    while (ss >> word) {\n        if (word == \"\
    apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        if (word == \"oranges\") {\n            ss >> word;\n    \
    \        oranges = std::stoi(word);\n        }\n    }\n    return n - (apples\
    \ + oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n   \
    \ assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphnp9jvel.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmphnp9jvel.cpp:25:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmphnp9jvel.cpp:29:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmphnp9jvel.cpp: In function 'int main()':\n/tmp/tmphnp9jvel.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphnp9jvel.cpp:2:\n/tmp/tmphnp9jvel.cpp:36:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ token;\n    std::vector<std::string> tokens;\n    while(std::getline(ss, token,\
    \ ' ')) {\n        tokens.push_back(token);\n    }\n    int apples = std::stoi(tokens[0]);\n\
    \    int oranges = std::stoi(tokens[3]);\n    return n - apples - oranges;\n}\n\
    int main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2fzd_lgb.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp2fzd_lgb.cpp:25:18: error: 'stoi' is not a member of 'std'\n\
    \     int apples = std::stoi(tokens[0]);\n                  ^\n/tmp/tmp2fzd_lgb.cpp:26:19:\
    \ error: 'stoi' is not a member of 'std'\n     int oranges = std::stoi(tokens[3]);\n\
    \                   ^\n/tmp/tmp2fzd_lgb.cpp: In function 'int main()':\n/tmp/tmp2fzd_lgb.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2fzd_lgb.cpp:2:\n/tmp/tmp2fzd_lgb.cpp:31:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    std::stringstream ss(s);\n    std::string word;\n    std::vector<std::string>\
    \ words;\n    while (ss >> word) {\n        words.push_back(word);\n    }\n  \
    \  int apples = std::stoi(words[0]);\n    int oranges = std::stoi(words[3]);\n\
    \    return n - apples - oranges;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzr3qojwr.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpzr3qojwr.cpp:24:18: error: 'stoi' is not a member of 'std'\n\
    \     int apples = std::stoi(words[0]);\n                  ^\n/tmp/tmpzr3qojwr.cpp:25:19:\
    \ error: 'stoi' is not a member of 'std'\n     int oranges = std::stoi(words[3]);\n\
    \                   ^\n/tmp/tmpzr3qojwr.cpp: In function 'int main()':\n/tmp/tmpzr3qojwr.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzr3qojwr.cpp:2:\n/tmp/tmpzr3qojwr.cpp:30:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apples = 0;\n    long oranges\
    \ = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string word;\n\
    \    std::vector<std::string> words;\n    while(ss >> word)\n        words.push_back(word);\n\
    \    for(int i = 0; i < words.size(); i++){\n        if(words[i] == \"apples\"\
    ){\n            apples = std::stol(words[i-1]);\n        }\n        if(words[i]\
    \ == \"oranges\"){\n            oranges = std::stol(words[i-1]);\n        }\n\
    \    }\n    mangoes = n - (apples + oranges);\n    return mangoes;\n}\nint main()\
    \ {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) ==\
    \ (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n  \
    \  assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1xjv9hwj.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp1xjv9hwj.cpp:29:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(words[i-1]);\n                      ^\n/tmp/tmp1xjv9hwj.cpp:32:23:\
    \ error: 'stol' is not a member of 'std'\n             oranges = std::stol(words[i-1]);\n\
    \                       ^\n/tmp/tmp1xjv9hwj.cpp: In function 'int main()':\n/tmp/tmp1xjv9hwj.cpp:39:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1xjv9hwj.cpp:2:\n/tmp/tmp1xjv9hwj.cpp:40:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long num_apples = 0;\n    long num_oranges\
    \ = 0;\n    long num_mangoes = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"apples\") {\n         \
    \   ss >> word;\n            num_apples = std::stol(word);\n        }\n      \
    \  else if(word == \"oranges\") {\n            ss >> word;\n            num_oranges\
    \ = std::stol(word);\n        }\n    }\n    num_mangoes = n - num_apples - num_oranges;\n\
    \    return num_mangoes;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8s95bu4k.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp8s95bu4k.cpp:27:26: error: 'stol' is not a member of 'std'\n\
    \             num_apples = std::stol(word);\n                          ^\n/tmp/tmp8s95bu4k.cpp:31:27:\
    \ error: 'stol' is not a member of 'std'\n             num_oranges = std::stol(word);\n\
    \                           ^\n/tmp/tmp8s95bu4k.cpp: In function 'int main()':\n\
    /tmp/tmp8s95bu4k.cpp:38:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = fruit_distribution;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8s95bu4k.cpp:2:\n/tmp/tmp8s95bu4k.cpp:39:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // Your code here\n    long a,o;\n    sscanf(s.c_str(),\"\
    %ld apples and %ld oranges\",&a,&o);\n    return n-a-o;\n}\nint main() {\n   \
    \ auto candidate = fruit_distribution;\n    assert(candidate((\"5 apples and 6\
    \ oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) ==\
    \ (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n  \
    \  assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn27axt80.cpp: In function 'int main()':\n/tmp/tmpn27axt80.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn27axt80.cpp:2:\n/tmp/tmpn27axt80.cpp:25:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i = 0;\n    int j = 0;\n    int\
    \ k = 0;\n    int count = 0;\n    while(s[i] != ' '){\n        i++;\n    }\n \
    \   while(s[j] != ' '){\n        j++;\n    }\n    while(s[k] != ' '){\n      \
    \  k++;\n    }\n    count = n - (stoi(s.substr(0, i)) + stoi(s.substr(j, k)));\n\
    \    return count;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5y2dkve4.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp5y2dkve4.cpp:32:37: error: 'stoi' was not declared in this\
    \ scope\n     count = n - (stoi(s.substr(0, i)) + stoi(s.substr(j, k)));\n   \
    \                                  ^\n/tmp/tmp5y2dkve4.cpp: In function 'int main()':\n\
    /tmp/tmp5y2dkve4.cpp:36:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = fruit_distribution;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5y2dkve4.cpp:2:\n/tmp/tmp5y2dkve4.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d\
    \ apples and %d oranges\",&a,&o);\n    return n-a-o;\n}\nint main() {\n    auto\
    \ candidate = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) ==\
    \ (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n \
    \   assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples\
    \ and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"\
    ), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_lfak_l5.cpp: In function 'int main()':\n/tmp/tmp_lfak_l5.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_lfak_l5.cpp:2:\n/tmp/tmp_lfak_l5.cpp:25:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            ss >>\
    \ word;\n            apples = std::stoi(word);\n        }\n        else if(word\
    \ == \"oranges\") {\n            ss >> word;\n            ss >> word;\n      \
    \      oranges = std::stoi(word);\n        }\n    }\n    return n - (apples +\
    \ oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpduypxxos.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpduypxxos.cpp:27:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmpduypxxos.cpp:32:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmpduypxxos.cpp: In function 'int main()':\n/tmp/tmpduypxxos.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpduypxxos.cpp:2:\n/tmp/tmpduypxxos.cpp:39:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long a, o;\n    std::stringstream ss(s);\n\
    \    ss >> a >> s >> o;\n    return n - a - o;\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1av_5sc_.cpp: In function 'int main()':\n/tmp/tmp1av_5sc_.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1av_5sc_.cpp:2:\n/tmp/tmp1av_5sc_.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    std::stringstream\
    \ ss(s);\n    std::string token;\n    while (std::getline(ss, token, ' ')) {\n\
    \        if (token == \"apples\") {\n            apples = std::stol(std::getline(ss,\
    \ token, ' '));\n        } else if (token == \"oranges\") {\n            oranges\
    \ = std::stol(std::getline(ss, token, ' '));\n        }\n    }\n    return n -\
    \ (apples + oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppbg3jrdb.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmppbg3jrdb.cpp:24:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(std::getline(ss, token, ' '));\n            \
    \          ^\n/tmp/tmppbg3jrdb.cpp:26:23: error: 'stol' is not a member of 'std'\n\
    \             oranges = std::stol(std::getline(ss, token, ' '));\n           \
    \            ^\n/tmp/tmppbg3jrdb.cpp: In function 'int main()':\n/tmp/tmppbg3jrdb.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppbg3jrdb.cpp:2:\n/tmp/tmppbg3jrdb.cpp:33:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    std::vector<std::string> v;\n    while(ss >> word)\n        v.push_back(word);\n\
    \    int apples = std::stoi(v[0]);\n    int oranges = std::stoi(v[3]);\n    return\
    \ n - (apples + oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyntnpw03.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpyntnpw03.cpp:24:18: error: 'stoi' is not a member of 'std'\n\
    \     int apples = std::stoi(v[0]);\n                  ^\n/tmp/tmpyntnpw03.cpp:25:19:\
    \ error: 'stoi' is not a member of 'std'\n     int oranges = std::stoi(v[3]);\n\
    \                   ^\n/tmp/tmpyntnpw03.cpp: In function 'int main()':\n/tmp/tmpyntnpw03.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyntnpw03.cpp:2:\n/tmp/tmpyntnpw03.cpp:30:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    // std::cout << s << std::endl;\n \
    \   // std::cout << n << std::endl;\n    long apples = 0;\n    long oranges =\
    \ 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string token;\n\
    \    std::string delimiter = \" \";\n    size_t pos = 0;\n    while ((pos = s.find(delimiter))\
    \ != std::string::npos) {\n        token = s.substr(0, pos);\n        // std::cout\
    \ << token << std::endl;\n        if (token == \"apples\") {\n            apples\
    \ = std::stol(s.substr(0, pos-1));\n        }\n        if (token == \"oranges\"\
    ) {\n            oranges = std::stol(s.substr(0, pos-1));\n        }\n       \
    \ s.erase(0, pos + delimiter.length());\n    }\n    mangoes = n - (apples + oranges);\n\
    \    return mangoes;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5_2n2jnx.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp5_2n2jnx.cpp:32:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(s.substr(0, pos-1));\n                      ^\n\
    /tmp/tmp5_2n2jnx.cpp:35:23: error: 'stol' is not a member of 'std'\n         \
    \    oranges = std::stol(s.substr(0, pos-1));\n                       ^\n/tmp/tmp5_2n2jnx.cpp:\
    \ In function 'int main()':\n/tmp/tmp5_2n2jnx.cpp:43:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = fruit_distribution;\n          ^\nIn\
    \ file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmp5_2n2jnx.cpp:2:\n/tmp/tmp5_2n2jnx.cpp:44:54: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((\"5 apples and 6 oranges\"\
    ), (19)) == (8));\n                                                      ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ temp;\n    std::vector<std::string> tokens;\n    while(std::getline(ss, temp,\
    \ ' ')){\n        tokens.push_back(temp);\n    }\n    long apple = std::stol(tokens[0]);\n\
    \    long orange = std::stol(tokens[3]);\n    return n - (apple + orange);\n}\n\
    int main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbsiclvb4.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpbsiclvb4.cpp:25:18: error: 'stol' is not a member of 'std'\n\
    \     long apple = std::stol(tokens[0]);\n                  ^\n/tmp/tmpbsiclvb4.cpp:26:19:\
    \ error: 'stol' is not a member of 'std'\n     long orange = std::stol(tokens[3]);\n\
    \                   ^\n/tmp/tmpbsiclvb4.cpp: In function 'int main()':\n/tmp/tmpbsiclvb4.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbsiclvb4.cpp:2:\n/tmp/tmpbsiclvb4.cpp:31:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apples = 0;\n    long oranges\
    \ = 0;\n    long mangoes = 0;\n    long i = 0;\n    while(s[i] != ' '){\n    \
    \    apples = apples * 10 + s[i] - '0';\n        i++;\n    }\n    i += 6;\n  \
    \  while(s[i] != ' '){\n        oranges = oranges * 10 + s[i] - '0';\n       \
    \ i++;\n    }\n    mangoes = n - apples - oranges;\n    return mangoes;\n}\nint\
    \ main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvrj70mhk.cpp: In function 'int main()':\n/tmp/tmpvrj70mhk.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvrj70mhk.cpp:2:\n/tmp/tmpvrj70mhk.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> s >> oranges;\n    return n - apples - oranges;\n\
    }\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5v1mouu7.cpp: In function 'int main()':\n/tmp/tmp5v1mouu7.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5v1mouu7.cpp:2:\n/tmp/tmp5v1mouu7.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    long apple = 0;\n    long orange = 0;\n    while(ss >> word){\n \
    \       if(word == \"apples\"){\n            ss >> word;\n            apple =\
    \ std::stol(word);\n        }\n        else if(word == \"oranges\"){\n       \
    \     ss >> word;\n            orange = std::stol(word);\n        }\n    }\n \
    \   return n - apple - orange;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpieixlvg4.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpieixlvg4.cpp:26:21: error: 'stol' is not a member of 'std'\n\
    \             apple = std::stol(word);\n                     ^\n/tmp/tmpieixlvg4.cpp:30:22:\
    \ error: 'stol' is not a member of 'std'\n             orange = std::stol(word);\n\
    \                      ^\n/tmp/tmpieixlvg4.cpp: In function 'int main()':\n/tmp/tmpieixlvg4.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpieixlvg4.cpp:2:\n/tmp/tmpieixlvg4.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apples = 0;\n    long oranges\
    \ = 0;\n    long mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    while(ss >> temp) {\n        if(temp == \"apples\") {\n            ss >>\
    \ apples;\n        }\n        else if(temp == \"oranges\") {\n            ss >>\
    \ oranges;\n        }\n    }\n    mangoes = n - (apples + oranges);\n    return\
    \ mangoes;\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_dc0681p.cpp: In function 'int main()':\n/tmp/tmp_dc0681p.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_dc0681p.cpp:2:\n/tmp/tmp_dc0681p.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n\
    \    int count=0;\n    int count1=0;\n    int count2=0;\n    int count3=0;\n \
    \   int count4=0;\n    int count5=0;\n    int count6=0;\n    int count7=0;\n \
    \   int count8=0;\n    int count9=0;\n    int count10=0;\n    int count11=0;\n\
    \    int count12=0;\n    int count13=0;\n    int count14=0;\n    int count15=0;\n\
    \    int count16=0;\n    int count17=0;\n    int count18=0;\n    int count19=0;\n\
    \    int count20=0;\n    int count21=0;\n    int count22=0;\n    int count23=0;\n\
    \    int count24=0;\n    int count25=0;\n    int count26=0;\n    int count27=0;\n\
    \    int count28=0;\n    int count29=0;\n    int count30=0;\n    int count31=0;\n\
    \    int count32=0;\n    int count33=0;\n    int count34=0;\n    int count35=0;\n\
    \    int count36=0;\n    int count37=0;\n    int count38=0;\n    int count39=0;\n\
    \    int count40=0;\n    int count41=0;\n    int count42=0;\n    int count43=0;\n\
    \    int count44=0;\n    int count45=0;\n    int count46=0;\n    int count47=0;\n\
    \    int count48=0;\n    int count49=0;\n    int count50=0;\n    int count51=0;\n\
    \    int count52=0;\n    int count53=0;\n    int count54=0;\n    int count55=0;\n\
    \    int count56=0;\n    int count57=0;\n    int count58=0;\n    int count59=0;\n\
    \    int count60=\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_q7z6n9c.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp_q7z6n9c.cpp:83:1: error: expected primary-expression before\
    \ '}' token\n }\n ^\n/tmp/tmp_q7z6n9c.cpp:83:1: error: expected ',' or ';' before\
    \ '}' token\n/tmp/tmp_q7z6n9c.cpp: In function 'int main()':\n/tmp/tmp_q7z6n9c.cpp:85:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_q7z6n9c.cpp:2:\n/tmp/tmp_q7z6n9c.cpp:86:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    int apples = 0, oranges = 0;\n    std::stringstream ss(s);\n\
    \    std::string temp;\n    ss >> temp;\n    apples = std::stoi(temp);\n    ss\
    \ >> temp;\n    ss >> temp;\n    oranges = std::stoi(temp);\n    return n - apples\
    \ - oranges;\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ew08spf.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp7ew08spf.cpp:22:14: error: 'stoi' is not a member of 'std'\n\
    \     apples = std::stoi(temp);\n              ^\n/tmp/tmp7ew08spf.cpp:25:15:\
    \ error: 'stoi' is not a member of 'std'\n     oranges = std::stoi(temp);\n  \
    \             ^\n/tmp/tmp7ew08spf.cpp: In function 'int main()':\n/tmp/tmp7ew08spf.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7ew08spf.cpp:2:\n/tmp/tmp7ew08spf.cpp:30:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"apples\") {\n            ss >> word;\n      \
    \      apples = std::stol(word);\n        } else if (word == \"oranges\") {\n\
    \            ss >> word;\n            oranges = std::stol(word);\n        }\n\
    \    }\n    mangoes = n - (apples + oranges);\n    return mangoes;\n}\nint main()\
    \ {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) ==\
    \ (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n  \
    \  assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplvletu85.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmplvletu85.cpp:26:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(word);\n                      ^\n/tmp/tmplvletu85.cpp:29:23:\
    \ error: 'stol' is not a member of 'std'\n             oranges = std::stol(word);\n\
    \                       ^\n/tmp/tmplvletu85.cpp: In function 'int main()':\n/tmp/tmplvletu85.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplvletu85.cpp:2:\n/tmp/tmplvletu85.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apple = 0;\n    int orange = 0;\n    while(ss >> word){\n   \
    \     if(word == \"apples\"){\n            ss >> word;\n            apple = std::stoi(word);\n\
    \        }\n        else if(word == \"oranges\"){\n            ss >> word;\n \
    \           orange = std::stoi(word);\n        }\n    }\n    return n - apple\
    \ - orange;\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcw79944s.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpcw79944s.cpp:26:21: error: 'stoi' is not a member of 'std'\n\
    \             apple = std::stoi(word);\n                     ^\n/tmp/tmpcw79944s.cpp:30:22:\
    \ error: 'stoi' is not a member of 'std'\n             orange = std::stoi(word);\n\
    \                      ^\n/tmp/tmpcw79944s.cpp: In function 'int main()':\n/tmp/tmpcw79944s.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcw79944s.cpp:2:\n/tmp/tmpcw79944s.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n\
    \    int count=0;\n    int count1=0;\n    int count2=0;\n    int count3=0;\n \
    \   int count4=0;\n    int count5=0;\n    int count6=0;\n    int count7=0;\n \
    \   int count8=0;\n    int count9=0;\n    int count10=0;\n    int count11=0;\n\
    \    int count12=0;\n    int count13=0;\n    int count14=0;\n    int count15=0;\n\
    \    int count16=0;\n    int count17=0;\n    int count18=0;\n    int count19=0;\n\
    \    int count20=0;\n    int count21=0;\n    int count22=0;\n    int count23=0;\n\
    \    int count24=0;\n    int count25=0;\n    int count26=0;\n    int count27=0;\n\
    \    int count28=0;\n    int count29=0;\n    int count30=0;\n    int count31=0;\n\
    \    int count32=0;\n    int count33=0;\n    int count34=0;\n    int count35=0;\n\
    \    int count36=0;\n    int count37=0;\n    int count38=0;\n    int count39=0;\n\
    \    int count40=0;\n    int count41=0;\n    int count42=0;\n    int count43=0;\n\
    \    int count44=0;\n    int count45=0;\n    int count46=0;\n    int count47=0;\n\
    \    int count48=0;\n    int count49=0;\n    int count50=0;\n    int count51=0;\n\
    \    int count52=0;\n    int count53=0;\n    int count54=0;\n    int count55=0;\n\
    \    int count56=0;\n    int count57=0;\n    int count58=0;\n    int count59=0;\n\
    \    int count60=\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_q7z6n9c.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp_q7z6n9c.cpp:83:1: error: expected primary-expression before\
    \ '}' token\n }\n ^\n/tmp/tmp_q7z6n9c.cpp:83:1: error: expected ',' or ';' before\
    \ '}' token\n/tmp/tmp_q7z6n9c.cpp: In function 'int main()':\n/tmp/tmp_q7z6n9c.cpp:85:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_q7z6n9c.cpp:2:\n/tmp/tmp_q7z6n9c.cpp:86:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int apples = 0;\n    int oranges =\
    \ 0;\n    int mangoes = 0;\n    std::stringstream ss(s);\n    std::string temp;\n\
    \    while(ss >> temp) {\n        if(temp == \"apples\") {\n            ss >>\
    \ temp;\n            apples = std::stoi(temp);\n        }\n        else if(temp\
    \ == \"oranges\") {\n            ss >> temp;\n            oranges = std::stoi(temp);\n\
    \        }\n    }\n    mangoes = n - (apples + oranges);\n    return mangoes;\n\
    }\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpku3syfjq.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpku3syfjq.cpp:27:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(temp);\n                      ^\n/tmp/tmpku3syfjq.cpp:31:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(temp);\n\
    \                       ^\n/tmp/tmpku3syfjq.cpp: In function 'int main()':\n/tmp/tmpku3syfjq.cpp:38:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpku3syfjq.cpp:2:\n/tmp/tmpku3syfjq.cpp:39:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long a, o;\n    std::stringstream ss(s);\n\
    \    ss >> a >> s >> o;\n    return n - a - o;\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1av_5sc_.cpp: In function 'int main()':\n/tmp/tmp1av_5sc_.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1av_5sc_.cpp:2:\n/tmp/tmp1av_5sc_.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long num_apples = 0;\n    long num_oranges\
    \ = 0;\n    long num_mangoes = 0;\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    while(ss >> word) {\n        if(word == \"apples\") {\n         \
    \   ss >> word;\n            num_apples = std::stol(word);\n        }\n      \
    \  else if(word == \"oranges\") {\n            ss >> word;\n            num_oranges\
    \ = std::stol(word);\n        }\n    }\n    num_mangoes = n - num_apples - num_oranges;\n\
    \    return num_mangoes;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8s95bu4k.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp8s95bu4k.cpp:27:26: error: 'stol' is not a member of 'std'\n\
    \             num_apples = std::stol(word);\n                          ^\n/tmp/tmp8s95bu4k.cpp:31:27:\
    \ error: 'stol' is not a member of 'std'\n             num_oranges = std::stol(word);\n\
    \                           ^\n/tmp/tmp8s95bu4k.cpp: In function 'int main()':\n\
    /tmp/tmp8s95bu4k.cpp:38:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = fruit_distribution;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8s95bu4k.cpp:2:\n/tmp/tmp8s95bu4k.cpp:39:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - (apples + oranges);\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_hyozp9x.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp_hyozp9x.cpp:26:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmp_hyozp9x.cpp:30:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmp_hyozp9x.cpp: In function 'int main()':\n/tmp/tmp_hyozp9x.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_hyozp9x.cpp:2:\n/tmp/tmp_hyozp9x.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int a,o;\n    sscanf(s.c_str(),\"%d\
    \ apples and %d oranges\",&a,&o);\n    return n-a-o;\n}\nint main() {\n    auto\
    \ candidate = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) ==\
    \ (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n \
    \   assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples\
    \ and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"\
    ), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_lfak_l5.cpp: In function 'int main()':\n/tmp/tmp_lfak_l5.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_lfak_l5.cpp:2:\n/tmp/tmp_lfak_l5.cpp:25:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    std::stringstream ss(s);\n    std::string word;\n    int apples\
    \ = 0;\n    int oranges = 0;\n    while (ss >> word) {\n        if (word == \"\
    apples\") {\n            ss >> word;\n            apples = std::stoi(word);\n\
    \        }\n        if (word == \"oranges\") {\n            ss >> word;\n    \
    \        oranges = std::stoi(word);\n        }\n    }\n    return n - apples -\
    \ oranges;\n}\nint main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp535wozzm.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp535wozzm.cpp:25:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmp535wozzm.cpp:29:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmp535wozzm.cpp: In function 'int main()':\n/tmp/tmp535wozzm.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp535wozzm.cpp:2:\n/tmp/tmp535wozzm.cpp:36:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string token;\n    while (std::getline(ss,\
    \ token, ' ')) {\n        if (token == \"apples\") {\n            apples = std::stol(std::getline(ss,\
    \ token, ' '));\n        } else if (token == \"oranges\") {\n            oranges\
    \ = std::stol(std::getline(ss, token, ' '));\n        }\n    }\n    mangoes =\
    \ n - (apples + oranges);\n    return mangoes;\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4gova5rx.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp4gova5rx.cpp:25:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(std::getline(ss, token, ' '));\n            \
    \          ^\n/tmp/tmp4gova5rx.cpp:27:23: error: 'stol' is not a member of 'std'\n\
    \             oranges = std::stol(std::getline(ss, token, ' '));\n           \
    \            ^\n/tmp/tmp4gova5rx.cpp: In function 'int main()':\n/tmp/tmp4gova5rx.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4gova5rx.cpp:2:\n/tmp/tmp4gova5rx.cpp:35:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long a, o;\n    sscanf(s.c_str(), \"%ld apples and %ld oranges\"\
    , &a, &o);\n    return n - a - o;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbbwvgmf2.cpp: In function 'int main()':\n/tmp/tmpbbwvgmf2.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbbwvgmf2.cpp:2:\n/tmp/tmpbbwvgmf2.cpp:24:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n\
    \    while(s[i]!=' '){\n        i++;\n    }\n    while(s[j]!='a'){\n        j++;\n\
    \    }\n    while(s[k]!='o'){\n        k++;\n    }\n    int apple=0;\n    int\
    \ orange=0;\n    for(int l=0;l<i;l++){\n        apple=apple*10+(s[l]-'0');\n \
    \   }\n    for(int l=j-1;l<k-1;l++){\n        orange=orange*10+(s[l]-'0');\n \
    \   }\n    return n-apple-orange;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1n8omptw.cpp: In function 'int main()':\n/tmp/tmp1n8omptw.cpp:42:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp1n8omptw.cpp:2:\n/tmp/tmp1n8omptw.cpp:43:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i = 0;\n    int j = 0;\n    while(s[i]\
    \ != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n\
    \    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n    \
    \    i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i]\
    \ != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n\
    \    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n    \
    \    i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i]\
    \ != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n\
    \    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n    \
    \    i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i]\
    \ != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n\
    \    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n    \
    \    i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i]\
    \ != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n        i++;\n    i++;\n\
    \    while(s[i] != ' ')\n        i++;\n    i++;\n    while(s[i] != ' ')\n    \
    \    i++;\n    i++;\n    while(s[i] != ' ')\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8wcy18y9.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmp8wcy18y9.cpp:94:1: error: expected primary-expression before\
    \ '}' token\n }\n ^\n/tmp/tmp8wcy18y9.cpp:94:1: error: expected ';' before '}'\
    \ token\n/tmp/tmp8wcy18y9.cpp: In function 'int main()':\n/tmp/tmp8wcy18y9.cpp:96:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8wcy18y9.cpp:2:\n/tmp/tmp8wcy18y9.cpp:97:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int count = 0;\n    for(int i = 0;\
    \ i < s.length(); i++){\n        if(s[i] == 'a'){\n            count++;\n    \
    \    }\n        else if(s[i] == 'o'){\n            count++;\n        }\n    }\n\
    \    return n - count;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprxz0job8.cpp: In function 'int main()':\n/tmp/tmprxz0job8.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprxz0job8.cpp:2:\n/tmp/tmprxz0job8.cpp:32:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int a,o;\n    std::stringstream ss(s);\n\
    \    ss>>a>>s>>o;\n    return n-a-o;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz3p70myc.cpp: In function 'int main()':\n/tmp/tmpz3p70myc.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz3p70myc.cpp:2:\n/tmp/tmpz3p70myc.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i=0;\n    int j=0;\n    int k=0;\n\
    \    int l=0;\n    int m=0;\n    int a=0;\n    int b=0;\n    int c=0;\n    int\
    \ d=0;\n    int e=0;\n    int f=0;\n    int g=0;\n    int h=0;\n    int p=0;\n\
    \    int q=0;\n    int r=0;\n    int t=0;\n    int u=0;\n    int v=0;\n    int\
    \ w=0;\n    int x=0;\n    int y=0;\n    int z=0;\n    int a1=0;\n    int b1=0;\n\
    \    int c1=0;\n    int d1=0;\n    int e1=0;\n    int f1=0;\n    int g1=0;\n \
    \   int h1=0;\n    int p1=0;\n    int q1=0;\n    int r1=0;\n    int t1=0;\n  \
    \  int u1=0;\n    int v1=0;\n    int w1=0;\n    int x1=0;\n    int y1=0;\n   \
    \ int z1=0;\n    int a2=0;\n    int b2=0;\n    int c2=0;\n    int d2=0;\n    int\
    \ e2=0;\n    int f2=0;\n    int g2=0;\n    int h2=0;\n    int p2=0;\n    int q2=0;\n\
    \    int r2=0;\n    int t2=0;\n    int u2=0;\n    int v2=0;\n    int w2=0;\n \
    \   int x2=0;\n    int y2=0;\n    int z2=0;\n    int a3=0;\n    int b3=0;\n  \
    \  int c3=0;\n    int d3=0;\n    int e3=0;\n    int f3=0;\n    int g3=0;\n\n}\n\
    int main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgbagbco_.cpp: In function 'int main()':\n/tmp/tmpgbagbco_.cpp:88:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgbagbco_.cpp:2:\n/tmp/tmpgbagbco_.cpp:89:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long apples = 0;\n    long oranges = 0;\n    long mangoes\
    \ = 0;\n    std::stringstream ss(s);\n    std::string word;\n    while (ss >>\
    \ word) {\n        if (word == \"apples\") {\n            ss >> word;\n      \
    \      apples = std::stol(word);\n        } else if (word == \"oranges\") {\n\
    \            ss >> word;\n            oranges = std::stol(word);\n        }\n\
    \    }\n    mangoes = n - (apples + oranges);\n    return mangoes;\n}\nint main()\
    \ {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and 6 oranges\"\
    ), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"), (3)) ==\
    \ (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n  \
    \  assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplvletu85.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmplvletu85.cpp:26:22: error: 'stol' is not a member of 'std'\n\
    \             apples = std::stol(word);\n                      ^\n/tmp/tmplvletu85.cpp:29:23:\
    \ error: 'stol' is not a member of 'std'\n             oranges = std::stol(word);\n\
    \                       ^\n/tmp/tmplvletu85.cpp: In function 'int main()':\n/tmp/tmplvletu85.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplvletu85.cpp:2:\n/tmp/tmplvletu85.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apple = 0, orange = 0;\n    for(int\
    \ i = 0; i < s.size(); i++){\n        if(s[i] == 'a'){\n            apple++;\n\
    \        }\n        else if(s[i] == 'o'){\n            orange++;\n        }\n\
    \    }\n    return n - (apple + orange);\n}\nint main() {\n    auto candidate\
    \ = fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6uyl4zom.cpp: In function 'int main()':\n/tmp/tmp6uyl4zom.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6uyl4zom.cpp:2:\n/tmp/tmp6uyl4zom.cpp:32:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    long a=0,o=0;\n    for(int i=0;i<s.size();i++){\n        if(s[i]=='a'){\n\
    \            a++;\n        }\n        else if(s[i]=='o'){\n            o++;\n\
    \        }\n    }\n    return n-(a+o);\n}\nint main() {\n    auto candidate =\
    \ fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpck367jf9.cpp: In function 'int main()':\n/tmp/tmpck367jf9.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpck367jf9.cpp:2:\n/tmp/tmpck367jf9.cpp:31:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i=0;\n    std::string a,b;\n  \
    \  while(s[i]!=' '){\n        a+=s[i];\n        i++;\n    }\n    i+=6;\n    while(s[i]!='\
    \ '){\n        b+=s[i];\n        i++;\n    }\n    int x=std::stoi(a);\n    int\
    \ y=std::stoi(b);\n    return n-(x+y);\n}\nint main() {\n    auto candidate =\
    \ fruit_distribution;\n    assert(candidate((\"5 apples and 6 oranges\"), (19))\
    \ == (8));\n    assert(candidate((\"5 apples and 6 oranges\"), (21)) == (10));\n\
    \    assert(candidate((\"0 apples and 1 oranges\"), (3)) == (2));\n    assert(candidate((\"\
    1 apples and 0 oranges\"), (3)) == (2));\n    assert(candidate((\"2 apples and\
    \ 3 oranges\"), (100)) == (95));\n    assert(candidate((\"2 apples and 3 oranges\"\
    ), (5)) == (0));\n    assert(candidate((\"1 apples and 100 oranges\"), (120))\
    \ == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnqyhxuta.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpnqyhxuta.cpp:30:11: error: 'stoi' is not a member of 'std'\n\
    \     int x=std::stoi(a);\n           ^\n/tmp/tmpnqyhxuta.cpp:31:11: error: 'stoi'\
    \ is not a member of 'std'\n     int y=std::stoi(b);\n           ^\n/tmp/tmpnqyhxuta.cpp:\
    \ In function 'int main()':\n/tmp/tmpnqyhxuta.cpp:35:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = fruit_distribution;\n          ^\nIn\
    \ file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpnqyhxuta.cpp:2:\n/tmp/tmpnqyhxuta.cpp:36:54: error: 'candidate'\
    \ was not declared in this scope\n     assert(candidate((\"5 apples and 6 oranges\"\
    ), (19)) == (8));\n                                                      ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    int i = 0;\n    int j = 0;\n    while(s[i] != ' ') {\n   \
    \     i++;\n    }\n    while(s[j] != ' ') {\n        j++;\n    }\n    std::string\
    \ a = s.substr(0, i);\n    std::string b = s.substr(j+1, s.length()-1);\n    int\
    \ x = std::stoi(a);\n    int y = std::stoi(b);\n    return n - x - y;\n}\nint\
    \ main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfp8ly63t.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpfp8ly63t.cpp:28:13: error: 'stoi' is not a member of 'std'\n\
    \     int x = std::stoi(a);\n             ^\n/tmp/tmpfp8ly63t.cpp:29:13: error:\
    \ 'stoi' is not a member of 'std'\n     int y = std::stoi(b);\n             ^\n\
    /tmp/tmpfp8ly63t.cpp: In function 'int main()':\n/tmp/tmpfp8ly63t.cpp:33:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfp8ly63t.cpp:2:\n/tmp/tmpfp8ly63t.cpp:34:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int a,o;\n    std::stringstream ss(s);\n\
    \    ss>>a>>s>>o;\n    return n-a-o;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz3p70myc.cpp: In function 'int main()':\n/tmp/tmpz3p70myc.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz3p70myc.cpp:2:\n/tmp/tmpz3p70myc.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    std::stringstream ss(s);\n    std::string\
    \ word;\n    int apples = 0;\n    int oranges = 0;\n    while(ss >> word) {\n\
    \        if(word == \"apples\") {\n            ss >> word;\n            apples\
    \ = std::stoi(word);\n        }\n        else if(word == \"oranges\") {\n    \
    \        ss >> word;\n            oranges = std::stoi(word);\n        }\n    }\n\
    \    return n - apples - oranges;\n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyav_y839.cpp: In function 'long int fruit_distribution(std::string,\
    \ long int)':\n/tmp/tmpyav_y839.cpp:26:22: error: 'stoi' is not a member of 'std'\n\
    \             apples = std::stoi(word);\n                      ^\n/tmp/tmpyav_y839.cpp:30:23:\
    \ error: 'stoi' is not a member of 'std'\n             oranges = std::stoi(word);\n\
    \                       ^\n/tmp/tmpyav_y839.cpp: In function 'int main()':\n/tmp/tmpyav_y839.cpp:36:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyav_y839.cpp:2:\n/tmp/tmpyav_y839.cpp:37:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    long apples, oranges;\n    std::stringstream\
    \ ss(s);\n    ss >> apples >> oranges;\n    return n - apples - oranges;\n}\n\
    int main() {\n    auto candidate = fruit_distribution;\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"5 apples and\
    \ 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and 1 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"), (3)) == (2));\n\
    \    assert(candidate((\"2 apples and 3 oranges\"), (100)) == (95));\n    assert(candidate((\"\
    2 apples and 3 oranges\"), (5)) == (0));\n    assert(candidate((\"1 apples and\
    \ 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5bklrsm9.cpp: In function 'int main()':\n/tmp/tmp5bklrsm9.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5bklrsm9.cpp:2:\n/tmp/tmp5bklrsm9.cpp:26:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// In this task, you will\
    \ be given a string that represents a number of apples and oranges \n// that are\
    \ distributed in a basket of fruit this basket contains \n// apples, oranges,\
    \ and mango fruits. Given the string that represents the total number of \n//\
    \ the oranges and apples and an integer that represent the total number of the\
    \ fruits \n// in the basket return the number of the mango fruits in the basket.\n\
    // for examble:\n// >>> fruit_distribution((\"5 apples and 6 oranges\"), (19))\n\
    // (8)\n// >>> fruit_distribution((\"0 apples and 1 oranges\"), (3))\n// (2)\n\
    // >>> fruit_distribution((\"2 apples and 3 oranges\"), (100))\n// (95)\n// >>>\
    \ fruit_distribution((\"100 apples and 1 oranges\"), (120))\n// (19)\nlong fruit_distribution(std::string\
    \ s, long n) {\n    // your code here\n    int i = 0;\n    int j = 0;\n    int\
    \ k = 0;\n    int l = 0;\n    int m = 0;\n    int o = 0;\n    int p = 0;\n   \
    \ int q = 0;\n    int r = 0;\n    int t = 0;\n    int u = 0;\n    int v = 0;\n\
    \    int w = 0;\n    int x = 0;\n    int y = 0;\n    int z = 0;\n    int a = 0;\n\
    \    int b = 0;\n    int c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n\
    \    int g = 0;\n    int h = 0;\n    int ii = 0;\n    int jj = 0;\n    int kk\
    \ = 0;\n    int ll = 0;\n    int mm = 0;\n    int oo = 0;\n    int pp = 0;\n \
    \   int qq = 0;\n    int rr = 0;\n    int tt = 0;\n    int uu = 0;\n    int vv\
    \ = 0;\n    int ww = 0;\n    int xx = 0;\n    int yy = 0;\n    int zz = 0;\n \
    \   int aa = 0;\n    int bb = 0;\n    int cc = 0;\n    int dd = 0;\n    int ee\
    \ = 0;\n    int ff = 0;\n    int gg = 0;\n    int hh = 0;\n    int iii = 0;\n\
    \    int jjj = 0;\n    int kkk = 0;\n    int lll = 0;\n    int mmm = 0;\n    int\
    \ ooo = 0;\n    int ppp = 0;\n    int qqq = 0;\n    int rrr = 0;\n    int ttt\
    \ = 0;\n    int uuu = 0;\n    int vvv = 0;\n    int www = 0;\n    int xxx = 0;\n\
    \    int yyy = 0;\n    int zzz = 0;\n    int aaaa = 0;\n    int bbbb = 0;\n  \
    \  int cccc = 0;\n   \n}\nint main() {\n    auto candidate = fruit_distribution;\n\
    \    assert(candidate((\"5 apples and 6 oranges\"), (19)) == (8));\n    assert(candidate((\"\
    5 apples and 6 oranges\"), (21)) == (10));\n    assert(candidate((\"0 apples and\
    \ 1 oranges\"), (3)) == (2));\n    assert(candidate((\"1 apples and 0 oranges\"\
    ), (3)) == (2));\n    assert(candidate((\"2 apples and 3 oranges\"), (100)) ==\
    \ (95));\n    assert(candidate((\"2 apples and 3 oranges\"), (5)) == (0));\n \
    \   assert(candidate((\"1 apples and 100 oranges\"), (120)) == (19));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiup23j6z.cpp: In function 'int main()':\n/tmp/tmpiup23j6z.cpp:89:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = fruit_distribution;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiup23j6z.cpp:2:\n/tmp/tmpiup23j6z.cpp:90:54: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"5 apples\
    \ and 6 oranges\"), (19)) == (8));\n                                         \
    \             ^\n"
  stdout: ''

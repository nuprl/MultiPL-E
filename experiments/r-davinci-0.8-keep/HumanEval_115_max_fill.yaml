name: HumanEval_115_max_fill
language: r
prompt: "# You are given a rectangular grid of wells. Each row represents a single\
  \ well,\n# and each 1 in a row represents a single unit of water.\n# Each well has\
  \ a corresponding bucket that can be used to extract water from it, \n# and all\
  \ buckets have the same capacity.\n# Your task is to use the buckets to empty the\
  \ wells.\n# Output the number of times you need to lower the buckets.\n# Example\
  \ 1:\n# Input: \n# grid : [[0,0,1,0], [0,1,0,0], [1,1,1,1]]\n# bucket_capacity :\
  \ 1\n# Output: 6\n# Example 2:\n# Input: \n# grid : [[0,0,1,1], [0,0,0,0], [1,1,1,1],\
  \ [0,1,1,1]]\n# bucket_capacity : 2\n# Output: 5\n# Example 3:\n# Input: \n# grid\
  \ : [[0,0,0], [0,0,0]]\n# bucket_capacity : 5\n# Output: 0\n# Constraints:\n# *\
  \ all wells have the same length\n# * 1 <= grid.length <= 10^2\n# * 1 <= grid[:,1].length\
  \ <= 10^2\n# * grid[i][j] -> 0 | 1\n# * 1 <= capacity <= 10\nmax_fill <- function(grid,\
  \ capacity) {"
tests: "test_humaneval <- function() {\ncandidate <- max_fill\n    if(!identical(candidate(c(c(0,\
  \ 0, 1, 0), c(0, 1, 0, 0), c(1, 1, 1, 1)), 1), 6)){quit('no', 1)}\n    if(!identical(candidate(c(c(0,\
  \ 0, 1, 1), c(0, 0, 0, 0), c(1, 1, 1, 1), c(0, 1, 1, 1)), 2), 5)){quit('no', 1)}\n\
  \    if(!identical(candidate(c(c(0, 0, 0), c(0, 0, 0)), 5), 0)){quit('no', 1)}\n\
  \    if(!identical(candidate(c(c(1, 1, 1, 1), c(1, 1, 1, 1)), 2), 4)){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(c(1, 1, 1, 1), c(1, 1, 1, 1)), 9), 2)){quit('no',\
  \ 1)}\n}\ntest_humaneval()"
completions: []
stop_tokens:
- "\n#"
- "\n```"

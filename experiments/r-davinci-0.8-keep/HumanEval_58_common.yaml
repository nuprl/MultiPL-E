name: HumanEval_58_common
language: r
prompt: "# Return sorted unique common elements for two lists.\n# >>> common([1, 4,\
  \ 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n# [1, 5, 653]\n# >>> common([5,\
  \ 3, 2, 8], [3, 2])\n# [2, 3]\ncommon <- function(l1, l2) {"
tests: "test_humaneval <- function() {\ncandidate <- common\n    if(!identical(candidate(c(1,\
  \ 4, 3, 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121)), c(1, 5, 653))){quit('no', 1)}\n\
  \    if(!identical(candidate(c(5, 3, 2, 8), c(3, 2)), c(2, 3))){quit('no', 1)}\n\
  \    if(!identical(candidate(c(4, 3, 2, 8), c(3, 2, 4)), c(2, 3, 4))){quit('no',\
  \ 1)}\n    if(!identical(candidate(c(4, 3, 2, 8), c()), c())){quit('no', 1)}\n}\n\
  test_humaneval()"
completions: ["\n    return(list(unique(l1[which(l1 %in% l2)])))\n}\n", "\n    l1[l1\
    \ %in% l2]\n}\ncommon(c(1, 4, 3, 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121))\n",
  "\n  return(unique(c(l1, l2))[duplicated(c(l1, l2)) | duplicated(c(l1, l2), fromLast\
    \ = TRUE)])\n}\n", "\n    return(sort(unique(c(l1, l2))))\n}\ncommon(c(1, 4, 3,\
    \ 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121))\ncommon(c(5, 3, 2, 8), c(3, 2))\n",
  "\n  l1[which(!duplicated(intersect(l1, l2)))]\n}\ncommon(c(1, 4, 3, 34, 653, 2,\
    \ 5), c(5, 7, 1, 5, 9, 653, 121))\ncommon(c(5, 3, 2, 8), c(3, 2))\n", "\n    unique(unlist(intersect(l1,\
    \ l2)))\n}\n", "\n\tunique(sort(intersect(l1, l2)))\n}\n", "\n  l1 %in% l2\n}\n",
  "\n  sort(unique(unlist(sapply(l1, function(x) {\n    if (x %in% l2) {\n      x\n\
    \    }\n  }))))\n}\n", "\n    intersect(l1, l2)\n}\ncommon(c(1, 4, 3, 34, 653,\
    \ 2, 5), c(5, 7, 1, 5, 9, 653, 121))\n", "\n    intersect(l1, l2)\n}\n", "\n \
    \ intersect(l1, l2)\n}\n", "\n    sort(unique(c(l1, l2)))\n}\ncommon(c(1, 4, 3,\
    \ 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121))\ncommon(c(5, 3, 2, 8), c(3, 2))\n",
  "\n    l1 %in% l2\n}\n", "\n\treturn(sort(unique(c(l1, l2))))\n}\n", "\n  return(unique(sort(intersect(l1,\
    \ l2))))\n}\n", "\n  l1[match(l1, l2, nomatch = 0) > 0]\n}\n\ncommon(l1, l2)\n",
  "\n\t\t#l1 %in% l2\n\t\tunique(sort(intersect(l1, l2)))\n}\n", "\n    unique(sort(intersect(l1,\
    \ l2)))\n}\ncommon(c(1, 4, 3, 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121))\ncommon(c(5,\
    \ 3, 2, 8), c(3, 2))\n", "\n  intersect(unique(l1), unique(l2))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

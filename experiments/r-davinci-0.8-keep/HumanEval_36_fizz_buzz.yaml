name: HumanEval_36_fizz_buzz
language: r
prompt: "# Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
  # 2\n# >>> fizz_buzz(79)\n# 3\nfizz_buzz <- function(n) {"
tests: "test_humaneval <- function() {\ncandidate <- fizz_buzz\n    if(!identical(candidate(50),\
  \ 0)){quit('no', 1)}\n    if(!identical(candidate(78), 2)){quit('no', 1)}\n    if(!identical(candidate(79),\
  \ 3)){quit('no', 1)}\n    if(!identical(candidate(100), 3)){quit('no', 1)}\n   \
  \ if(!identical(candidate(200), 6)){quit('no', 1)}\n    if(!identical(candidate(4000),\
  \ 192)){quit('no', 1)}\n    if(!identical(candidate(10000), 639)){quit('no', 1)}\n\
  \    if(!identical(candidate(100000), 8026)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  total <- 0\n  for (i in 1:n) {\n    if ((i %% 11 == 0 || i %% 13\
    \ == 0) &&\n        as.character(i) %in% \"7\") total <- total + 1\n  }\n  total\n\
    }\n\nfizz_buzz(50)\nfizz_buzz(78)\nfizz_buzz(79)\n", "\n  x <- 0\n  for (i in\
    \ 1:n) {\n    if (i %% 11 == 0 || i %% 13 == 0) {\n      y <- strsplit(as.character(i),\
    \ \"\")[[1]]\n      x <- x + sum(y == \"7\")\n    }\n  }\n  return(x)\n}\n\nfizz_buzz(50)\n\
    fizz_buzz(78)\nfizz_buzz(79)\n", "\n  total_num_sevens <- 0\n  for (i in 1:n)\
    \ {\n    if (i %% 11 == 0 || i %% 13 == 0) {\n      total_num_sevens <- total_num_sevens\
    \ + num_sevens(i)\n    }\n  }\n  return(total_num_sevens)\n}\n", "\n  sum(sapply(1:n,\
    \ function(i) {\n    if (i %% 11 == 0 | i %% 13 == 0)\n      return(str_count(as.character(i),\
    \ \"7\"))\n    return(0)\n  }))\n}\n", "\n    x <- 0\n    for (i in 1:n) {\n \
    \       if (i %% 11 == 0 || i %% 13 == 0) {\n            l <- as.character(i)\n\
    \            a <- strsplit(l, \"\")\n            if (any(a[[1]] == \"7\")) {\n\
    \                x <- x + 1\n            }\n        }\n    }\n    return(x)\n\
    }\n", "\n    factor_data <- factor(n)\n    ifelse((factor_data %% 11 == 0) | (factor_data\
    \ %% 13 == 0),\n            grep(\"7\", as.character(factor_data)),\n        \
    \    0)\n}\n", "\n  # result <- 0\n  # for (i in 1:n) {\n  #   if (i %% 11 ==\
    \ 0 || i %% 13 == 0) {\n  #     result <- result + sum(grepl('7', as.character(i)))\n\
    \  #   }\n  # }\n  # result\n  sum(grepl('7', as.character(1:n)[(1:n %% 11 ==\
    \ 0) | (1:n %% 13 == 0)]))\n}\n", "\n    sum(!grep(\"(^|[^7])7([^7]|$)\", seq(1,\
    \ n-1, 11), value = TRUE), \n        !grep(\"(^|[^7])7([^7]|$)\", seq(1, n-1,\
    \ 13), value = TRUE))\n}\n", "\n  x <- rep(1,n)\n  x[x %% 11 == 0] <- 7\n  x[x\
    \ %% 13 == 0] <- 7\n  sum(x == 7)\n}\n", "\n  count <- 0\n  for (i in 1:n) {\n\
    \    if ((i %% 11 == 0) || (i %% 13 == 0)) {\n      if (grepl(\"7\", i)) count\
    \ <- count + 1\n    }\n  }\n  return(count)\n}\nfizz_buzz(50)\nfizz_buzz(78)\n\
    fizz_buzz(79)\n", "\n  sum(grep(7,sapply(1:n, function(x) toString(x) )[(x %%\
    \ 11 == 0) | (x %% 13 == 0)]))\n}\n", "\n    cnt <- 0\n    for (i in 1:n) {\n\
    \        if (i %% 11 == 0 | i %% 13 == 0) {\n            j <- i\n            while\
    \ (j > 0) {\n                if (j %% 10 == 7) cnt <- cnt + 1\n              \
    \  j <- j %/% 10\n            }\n        }\n    }\n    return(cnt)\n}\nfizz_buzz(50)\n\
    fizz_buzz(78)\nfizz_buzz(79)\n", "\n  zeroes <- 0\n  for ( i in 1:n ) {\n    i_string\
    \ <- as.character(i)\n    if (i %% 11 == 0 || i %% 13 == 0) {\n      zeroes <-\
    \ zeroes + nchar(i_string[i_string == \"7\"])\n    }\n  }\n  return(zeroes)\n\
    }\n", "\n  cnt <- 0\n  for (i in 1:n) {\n    if (i %% 11 == 0 || i %% 13 == 0)\
    \ {\n      i_str <- as.character(i)\n      if (grepl(\"7\", i_str)) {\n      \
    \  cnt <- cnt + 1\n      }\n    }\n  }\n  cnt\n}\n", "\n  sum(substr(as.character(seq(from\
    \ = 0, to = n - 1, by = 1)), start = 1, stop = 1) == \"7\" & (seq(from = 0, to\
    \ = n - 1, by = 1) %% 11 == 0 | seq(from = 0, to = n - 1, by = 1) %% 13 == 0))\n\
    }\n\n", "\n    # Insert your solution here\n    count = 0\n    for (i in 1:n)\
    \ {\n      if (i %% 11 == 0 | i %% 13 == 0) {\n        x = as.character(i)\n \
    \       y = strsplit(x, \"\")[[1]]\n        for (j in 1:length(y)) {\n       \
    \   if (y[j] == \"7\") {\n            count = count + 1\n          }\n       \
    \ }\n      }\n    }\n    return(count)\n}", "\n    count <- 0\n\n    for (i in\
    \ 0:n) {\n        if (i %% 11 == 0 || i %% 13 == 0) {\n            count <- count\
    \ + 1\n        }\n    }\n\n    count\n}\n", "\n  # YOUR CODE HERE\n  seq(from\
    \ = 7, to = n, by = 11) %>% filter(x %% 13 == 0) %>% \n  mutate(y = strsplit(x,\
    \ \"\")[[1]]) %>% pull(y) %>% map_dbl(function(i) as.numeric(i)) %>% \n  filter(x\
    \ == 7) %>% \n  count()\n}\n\ngrader::grade({\n  points = 4,\n  tests = {\n  \
    \  test_that('works on example', {\n      expect_equal(fizz_buzz(50), 0)\n   \
    \   expect_equal(fizz_buzz(78), 2)\n      expect_equal(fizz_buzz(79), 3)\n   \
    \ })\n  }\n})", "\n    # YOUR CODE HERE\n    count=0\n    for(i in 1:n){\n   \
    \     if(i%%11==0){\n            count=count+((i%%100%%10==7)||(i%%1000%%100==70)||(i%%10000%%1000==700))\n\
    \        }\n        if(i%%13==0){\n            count=count+((i%%100%%10==7)||(i%%1000%%100==70)||(i%%10000%%1000==700))\n\
    \        }\n    }\n    return(count)\n}\n ", "\n\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

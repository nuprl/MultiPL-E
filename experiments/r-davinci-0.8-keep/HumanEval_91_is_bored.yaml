name: HumanEval_91_is_bored
language: r
prompt: "# You'll be given a string of words, and your task is to count the number\n\
  # of boredoms. A boredom is a sentence that starts with the word \"I\".\n# Sentences\
  \ are delimited by '.', '?' or '!'.\n# For example:\n# >>> is_bored(\"Hello world\"\
  )\n# 0\n# >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
  )\n# 1\nis_bored <- function(S) {"
tests: "test_humaneval <- function() {\ncandidate <- is_bored\n    if(!identical(candidate('Hello\
  \ world'), 0)){quit('no', 1)}\n    if(!identical(candidate('Is the sky blue?'),\
  \ 0)){quit('no', 1)}\n    if(!identical(candidate('I love It !'), 1)){quit('no',\
  \ 1)}\n    if(!identical(candidate('bIt'), 0)){quit('no', 1)}\n    if(!identical(candidate('I\
  \ feel good today. I will be productive. will kill It'), 2)){quit('no', 1)}\n  \
  \  if(!identical(candidate('You and I are going for a walk'), 0)){quit('no', 1)}\n\
  }\ntest_humaneval()"
completions: ["\n  # Your code here\n  return( sum(grepl(\"^I\",unlist(strsplit(S,\
    \ \"[.?!]\")), ignore.case = TRUE)))\n}\n", "\n  return(gsub(\"[^.]*I[^.]*\",\
    \ \"\", S))\n}\n ", "\n    sentences <- strsplit(S, \"[!.?]\")[[1]]\n    count\
    \ <- 0\n    for (sentence in sentences) {\n        str_split <- strsplit(sentence,\
    \ \"\\\\s+\")[[1]]\n        if (str_split[1] == \"I\") {\n            count <-\
    \ count + 1\n        }\n    }\n    return(count)\n}\n\na <- \"I am bored\"\nb\
    \ <- \"The sky is blue. The sun is shining. I love this weather\"\nc <- \"This\
    \ is awesome\"\nprint(is_bored(a))\nprint(is_bored(b))\nprint(is_bored(c))\n",
  "\n  nchar(gsub(\"[^I]*I\", \"I\", strsplit(S, \"\\\\.|\\\\?|!\")[[1]]))\n}\n",
  "\n  string_begins_with(sentence, \"I\")\n}\n", "\n  count(strsplit(S, \"[.?!]\"\
    )[[1]], \"I\")\n}\n\n", "\n  # How many sentences start with 'I'?\n  # Your code\
    \ here.\n  count(strsplit(S, \"\\\\.|\\\\?|!\"), 1)\n}\nis_bored(\"The sky is\
    \ blue. The sun is shining. I love this weather\")\n", "\n  return(sum(substr(S,\
    \ str_locate(S, \"I\")[,1], str_locate(S, \"[.?!]\")[,1] - 1) == \"I\"))\n}\n",
  "\n    \n}\n", "\n    return(sum(grepl(\"^I\",unlist(strsplit(S,split=\"[.?!]\"\
    )))))\n}", "\n  # YOUR CODE HERE\n  count = 0\n  sentences = strsplit(S, \"\\\\\
    .|\\\\?|!\")[[1]]\n  #print(sentences)\n  for (sentence in sentences) {\n    words\
    \ = strsplit(sentence, \" \")[[1]]\n    if (words[1] == \"I\") {\n      count\
    \ = count + 1\n    }\n  }\n  return(count)\n}\nprint(is_bored(\"Hello world\"\
    ))\nprint(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ))\n", "\n    sentence <- unlist(strsplit(S, split=\"[.!?]\"))\n    count <- 0\n\
    \    for (i in sentence) {\n        if (strsplit(i, split=\" \")[[1]][1] == \"\
    I\") {\n            count <- count + 1\n        }\n    }\n    return(count)\n\
    }\n", "\n  # your code here\n  x <- strsplit(S, \"\\\\.|\\\\!|\\\\?\")[[1]]\n\
    \  sum(grepl(\"^I\", x))\n}\n\nassert.that(is_bored(\"Hello world\"), equals(0))\n\
    assert.that(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ), equals(1))\nassert.that(is_bored(\"I love this weather. The sun is shining.\
    \ The sky is blue\"), equals(2))\nassert.that(is_bored(\"I love this weather.\
    \ The sun is shining. The sky is blue. I am so bored\"), equals(3))\n", "\n  #\
    \ Your code here\n  # str_extract(\"Hello world! Hello?\", \"\\\\bHello\\\\b\"\
    )\n  #   [1] \"Hello\" \"Hello\"\n  # str_extract(\"I love this weather? I love\
    \ the sun\", \"\\\\bI\\\\b\")\n  #   [1] \"I\" \"I\"\n  # str_detect(\"I love\
    \ this weather? I love the sun\", \"\\\\bI\\\\b\")\n  #   [1] TRUE TRUE\n  # str_count(\"\
    I love this weather? I love the sun\", \"\\\\bI\\\\b\")\n  #   [1] 2\n  return(str_count(S,\
    \ \"\\\\bI\\\\b\"))\n}\n ", "\n  S <- strsplit(S, split = \"[.?!]\")[[1]]\n  return(sum(grepl(\"\
    ^I\\\\s\", S)))\n}\n", "\n  split_strings <- strsplit(S, \"\\\\.\")\n  split_strings\
    \ <- unlist(split_strings)\n  length(grep(\"^\\\\s*I\", split_strings))\n}\n ",
  "\n  strings <- strsplit(S, \"[.!?]\")[[1]]\n  boredoms <- 0\n  for (i in 1:length(strings))\
    \ {\n    if (substr(strings[i], 1, 2) == \"I \") {\n      boredoms <- boredoms\
    \ + 1\n    }\n  }\n  return(boredoms)\n}\n", "\n    # your code here\n    v=0\n\
    \    x = strsplit(S,split = \" \")\n    for (i in x) {\n        if (i == \"I\"\
    ) {\n            v=v+1\n        }\n    }\n    return(v)\n}\n\n", "\n  # TODO:\
    \ Your code here!\n  S <- strsplit(S, \"\\\\.\")\n  print(S)\n  count = 0\n  for\
    \ (i in 1:length(S)){\n    # print(nchar(S[[i]]))\n    if (substr(S[[i]],1,1)\
    \ == \"I\"){\n      count = count + 1\n    }\n  }\n  return(count)\n}\nis_bored(\"\
    The sky is blue. The sun is shining. I love this weather\")\n", "\n    # Count\
    \ the number of sentences in S\n    # Hint: strsplit()\n    # Hint: the stringr\
    \ package might be useful\n    # Return the number of sentences starting with\
    \ \"I\"\n}\nis_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    )"]
stop_tokens:
- "\n#"
- "\n```"

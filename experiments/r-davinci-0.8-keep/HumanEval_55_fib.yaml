name: HumanEval_55_fib
language: r
prompt: "# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>> fib(1)\n# 1\n\
  # >>> fib(8)\n# 21\nfib <- function(n) {"
tests: "test_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10),\
  \ 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n    if(!identical(candidate(8),\
  \ 21)){quit('no', 1)}\n    if(!identical(candidate(11), 89)){quit('no', 1)}\n  \
  \  if(!identical(candidate(12), 144)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n    if (n == 1)\n        return(1)\n    if (n == 2)\n        return(1)\n\
    \    return(fib(n-1) + fib(n-2))\n}\n\nprint(fib(2))\nprint(fib(10))\nprint(fib(1))\n\
    print(fib(8))\n", "\n    if (n == 1) {\n        return(1)\n    } else if (n ==\
    \ 2) {\n        return(1)\n    } else {\n        return(fib(n-1) + fib(n-2))\n\
    \    }\n}", "\n  \n  fib_list <- c(1,1)\n  \n  for (i in 3:n) {\n    fib_list\
    \ <- c(fib_list, fib_list[i-1] + fib_list[i-2])\n  }\n  \n  return(fib_list[n])\n\
    }\n", "\n    if(n <= 2) return(1)\n    else return(fib(n-1) + fib(n-2))\n}\nfib(8)\n",
  "\n  if (n==1) {\n    return(1)\n  } else if (n==2) {\n    return(1)\n  } else {\n\
    \    return(fib(n-1)+fib(n-2))\n  }\n}\n", "\n    if (n <= 1) {\n        return(n)\n\
    \    } else {\n        return(fib(n-1) + fib(n-2))\n    }\n}\n", "\n  if (n ==\
    \ 1) {\n    return(1)\n  } else if (n == 2) {\n    return(1)\n  } else {\n   \
    \ return(fib(n-1) + fib(n-2))\n  }\n}", "\n        if (n == 1) return(1)\n   \
    \     if (n == 2) return(1)\n        return(fib(n-1) + fib(n-2))\n}\n", "\n\t\
    n <- abs(as.integer(n))\n\tif (n == 0)\n\t\treturn(0)\n\tx <- 1\n\ty <- 1\n\t\
    for (i in 1:(n-2)) {\n\t\ttmp <- x\n\t\tx <- y\n\t\ty <- x + tmp\n\t}\n\treturn(y)\n\
    }\n", "\n  if (n == 1) {\n    1\n  } else if (n == 2) {\n    1\n  } else {\n \
    \   fib(n - 1) + fib(n - 2)\n  }\n}\n\na = fib(10)\nprint(a)\na = fib(1)\nprint(a)\n\
    a = fib(8)\nprint(a)\n", "\n  if (n == 1) {\n    return(1)\n  } else if (n ==\
    \ 2) {\n    return(1)\n  } else {\n    a <- 1\n    b <- 1\n    for (i in 3:n)\
    \ {\n      fib <- a + b\n      a <- b\n      b <- fib\n    }\n    return(fib)\n\
    \  }\n}\n", "\n  if (n == 1) {\n    return(1)\n  } else if (n == 2) {\n    return(1)\n\
    \  } else {\n    return(fib(n-1) + fib(n-2))\n  }\n}\n", "\n        a <- 0\n \
    \       b <- 1\n        for (i in 1:n) {\n                a <- a + b\n       \
    \         tmp <- a\n                a <- b\n                b <- tmp\n       \
    \ }\n        return(a)\n}\n", "\n\tif (n <= 2) return(1)\n\treturn(fib(n-1) +\
    \ fib(n-2))\n}\n\nfib(10)\n", "\n    fibs <- vector(\"integer\", length = n +\
    \ 1)\n    fibs[1] <- 1\n    fibs[2] <- 1\n    for (i in 3:n) {\n        fibs[i]\
    \ <- fibs[i - 1] + fibs[i - 2]\n    }\n    fibs[n]\n}\nfib(10)\n", "\n    \n \
    \   if (n <= 2) {\n        return(1)\n    } else {\n        return(fib(n-1) +\
    \ fib(n-2))\n    }\n}\n\nfib(10)\nfib(1)\nfib(8)\n", "\n    if (n <= 2) {\n  \
    \      1\n    } else {\n        fib(n - 1) + fib(n - 2)\n    }\n}\nfib(10)\nfib(1)\n\
    fib(8)\n", "\n    if (n <= 2) {\n        return(1)\n    } else {\n        return(fib(n-1)\
    \ + fib(n-2))\n    }\n}\nprint(fib(10))\n", "\n  if (n == 1 || n == 2) {\n   \
    \ return(1)\n  } else {\n    return(fib(n - 1) + fib(n - 2))\n  }\n}\n", "\n \
    \   if (n <= 2) return(1)\n    return(fib(n-1) + fib(n-2))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

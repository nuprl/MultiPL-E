name: HumanEval_51_remove_vowels
language: r
prompt: "# remove_vowels is a function that takes string and returns string without\
  \ vowels.\n# >>> remove_vowels('')\n# ''\n# >>> remove_vowels('abcdef')\n# 'bcdf'\n\
  # >>> remove_vowels('aaaaa')\n# ''\n# >>> remove_vowels('aaBAA')\n# 'B'\n# >>> remove_vowels('zbcd')\n\
  # 'zbcd'\nremove_vowels <- function(text) {"
tests: "test_humaneval <- function() {\ncandidate <- remove_vowels\n    if(!identical(candidate(''),\
  \ '')){quit('no', 1)}\n    if(!identical(candidate('abcdef\\nghijklm'), 'bcdf\\\
  nghjklm')){quit('no', 1)}\n    if(!identical(candidate('fedcba'), 'fdcb')){quit('no',\
  \ 1)}\n    if(!identical(candidate('eeeee'), '')){quit('no', 1)}\n    if(!identical(candidate('acBAA'),\
  \ 'cB')){quit('no', 1)}\n    if(!identical(candidate('EcBOO'), 'cB')){quit('no',\
  \ 1)}\n    if(!identical(candidate('ybcd'), 'ybcd')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  return(gsub(\"[aeiouAEIOU]\", \"\", text))\n}\n", "\n  # \n  #\
    \ Code goes here\n  #\n}\n", "\n  return (gsub(\"[aeiouAEIOU]\", \"\", text))\n\
    }\n", "\n  # remove vowels from text\n  # ...\n}", "\n  lapply(strsplit(text,\
    \ ''), function(c) c[!c %in% c('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')])\n\
    }\nremove_vowels('')\nremove_vowels('abcdef')\nremove_vowels('aaaaa')\nremove_vowels('aaBAA')\n\
    remove_vowels('zbcd')\n", "\n  # write your solution here\n  regexpr(\"[aeiouAEIOU]\"\
    , text)\n  regmatches(text, regexpr(\"[aeiouAEIOU]\", text))\n  sub(\"[aeiouAEIOU]\"\
    , \"\", text)\n}\n", "\n  word_vec <- strsplit(text, \"\")[[1]]\n  if (length(word_vec)\
    \ == 0) {\n    return(\"\")\n  }\n  res <- word_vec[word_vec %in% c(\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")]\n  return(paste(res,\
    \ collapse = \"\"))\n}\n\nstr_no_vowels <- function(text) {\n  no_vowels <- remove_vowels(text)\n\
    \  if (no_vowels == \"\") {\n    return(\"NO_VOWELS\")\n  }\n  return(no_vowels)\n\
    }\n", "\n  text = gsub(\"[aeiouAEIOU]\", \"\", text)\n  return(text)\n}", "\n\
    \    # delete all vowels\n    text <- gsub(\"a\", \"\", text, fixed = TRUE)\n\
    \    text <- gsub(\"e\", \"\", text, fixed = TRUE)\n    text <- gsub(\"i\", \"\
    \", text, fixed = TRUE)\n    text <- gsub(\"o\", \"\", text, fixed = TRUE)\n \
    \   text <- gsub(\"u\", \"\", text, fixed = TRUE)\n    return(text)\n}\n", "\n\
    \    # replace the question mark with the correct expression\n    stringr::str_replace_all(text,\
    \ \"[aeiouAEIOU]\", \"\")\n}\nremove_vowels(\"\")\nremove_vowels(\"abcdef\")\n\
    remove_vowels(\"aaaaa\")\nremove_vowels(\"aaBAA\")\nremove_vowels(\"zbcd\")\n ",
  "\n    text[!startsWith(text, \"a\")]\n}\n ", "\n  # write the function here\n \
    \ x <- NULL\n  for (i in seq_along(text)) {\n    if (!(text[i] %in% c(\"a\", \"\
    e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"))) {\n      x <- c(x,\
    \ text[i])\n    }\n  }\n  return(x)\n}\n", "\n    text <- gsub(\"a\", \"\", text,\
    \ ignore.case = TRUE)\n    text <- gsub(\"e\", \"\", text, ignore.case = TRUE)\n\
    \    text <- gsub(\"i\", \"\", text, ignore.case = TRUE)\n    text <- gsub(\"\
    o\", \"\", text, ignore.case = TRUE)\n    text <- gsub(\"u\", \"\", text, ignore.case\
    \ = TRUE)\n    return(text)\n}\n", "\n    return (str_replace_all(text, '[aeiouAEIOU]',\
    \ ''))\n}\n ", "\n\ttext <- tolower(text)\n\ttext <- gsub(\"[aeiou]\", \"\", text)\n\
    \treturn(text)\n}\n", "\n  return(gsub(\"[aeiouAEIOU]\", \"\", text))\n}\n", "\n\
    \    text <- gsub(\"[aeiouAEIOU]\", \"\", text)\n    return(text)\n}\n", "\n \
    \ # replace all vowels with nothing\n  gsub(\"[aeiouAEIOU]\", \"\", text)\n}\n",
  "\n  # Write your code here\n}\n", "\n  gsub(\"[a,e,i,o,u,A,E,I,O,U]\", \"\", text)\n\
    }\n"]
stop_tokens:
- "\n#"
- "\n```"

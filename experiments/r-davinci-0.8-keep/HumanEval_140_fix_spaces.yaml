name: HumanEval_140_fix_spaces
language: r
prompt: "# Given a string text, replace all spaces in it with underscores, \n# and\
  \ if a string has more than 2 consecutive spaces, \n# then replace all consecutive\
  \ spaces with - \n# fix_spaces(\"Example\") == \"Example\"\n# fix_spaces(\"Example\
  \ 1\") == \"Example_1\"\n# fix_spaces(\" Example 2\") == \"_Example_2\"\n# fix_spaces(\"\
  \ Example   3\") == \"_Example-3\"\nfix_spaces <- function(text) {"
tests: "test_humaneval <- function() {\ncandidate <- fix_spaces\n    if(!identical(candidate('Example'),\
  \ 'Example')){quit('no', 1)}\n    if(!identical(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')){quit('no',\
  \ 1)}\n    if(!identical(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')){quit('no',\
  \ 1)}\n    if(!identical(candidate('Exa   mple'), 'Exa-mple')){quit('no', 1)}\n\
  \    if(!identical(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')){quit('no',\
  \ 1)}\n}\ntest_humaneval()"
completions: ["\n  gsub(' +', '_', gsub(' +', '-', gsub(' ', '_', text)))\n}\ntest.equal(fix_spaces(\"\
    Example\"), \"Example\")\ntest.equal(fix_spaces(\"Example 1\"), \"Example_1\"\
    )\ntest.equal(fix_spaces(\" Example 2\"), \"_Example_2\")\ntest.equal(fix_spaces(\"\
    \ Example   3\"), \"_Example-3\")\n", "\n\ttext <- gsub(\"[[:space:]]{2,}\", \"\
    -\", text)\n\ttext <- gsub(\"[[:space:]]\", \"_\", text)\n\treturn(text)\n}\n",
  "\n  text <- gsub(\"\\\\s{2,}\", \"-\", text)\n  text <- gsub(\" \", \"_\", text)\n\
    \  return(text)\n}\n\nfix_spaces(\"Example\") == \"Example\"\nfix_spaces(\"Example\
    \ 1\") == \"Example_1\"\nfix_spaces(\" Example 2\") == \"_Example_2\"\nfix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n", "\n    text <- gsub(\" \", \"_\", text)\n\
    \    text <- gsub(\" +\", \"-\", text)\n    return(text)\n}\nfix_spaces(\"Example\
    \ 1\")\n", "\n    text <- gsub(\" +\", \"-\", text)\n    text <- gsub(\" \", \"\
    _\", text)\n    return(text)\n}", "\n\tgsub(\" {2,}\", \"-\", gsub(\" \", \"_\"\
    , text))\n}\n", "\n  \n}\n", "\n    gsub(\"\\\\s+\", \"-\", gsub(\" \", \"_\"\
    , text))\n}\nfix_spaces(\"Example\")\nfix_spaces(\"Example 1\")\nfix_spaces(\"\
    \ Example 2\")\nfix_spaces(\" Example   3\")\n", "\n    text <- gsub(\"\\\\s{2,}\"\
    , \"-\", text)\n    text <- gsub(\"\\\\s\", \"_\", text)\n    return(text)\n}\n\
    fix_spaces(\"Example\")\nfix_spaces(\"Example 1\")\nfix_spaces(\" Example 2\"\
    )\nfix_spaces(\" Example   3\")\n", "\n    text <- str_replace_all(text, \" {2,}\"\
    , \"-\")\n    str_replace_all(text, \" \", \"_\")\n}\nprint(fix_spaces(\"Example\"\
    ))\nprint(fix_spaces(\"Example 1\"))\nprint(fix_spaces(\" Example 2\"))\nprint(fix_spaces(\"\
    \ Example   3\"))\n\nprint(\"*****************************\")\n", "\n    text\
    \ <- gsub(\"\\\\s{2,}\", \"-\", text)\n    text <- gsub(\"\\\\s\", \"_\", text)\n\
    \    return(text)\n}\nfix_spaces(\"Example\")\nfix_spaces(\"Example 1\")\nfix_spaces(\"\
    \ Example 2\")\nfix_spaces(\" Example   3\")\n", "\n  return(gsub(\"[ ]{2,}\"\
    , \"-\", gsub(\" \", \"_\", text)))\n}", "\n  text <- trimws(text)\n  text <-\
    \ gsub(\"\\\\s+\", \"-\", text)\n  text <- gsub(\"-\", \"_\", text)\n  return(text)\n\
    }\nfix_spaces(\"Example\") == \"Example\"\nfix_spaces(\"Example 1\") == \"Example_1\"\
    \nfix_spaces(\" Example 2\") == \"_Example_2\"\nfix_spaces(\" Example   3\") ==\
    \ \"_Example-3\"\n", "\n  regex <- gsub(\" \", \"_\", text)\n  regex <- gsub(\"\
    _+\", \"-\", regex)\n  return(regex)\n}\nfix_spaces(\"Example\")\nfix_spaces(\"\
    Example 1\")\nfix_spaces(\" Example 2\")\nfix_spaces(\" Example   3\")\n", "\n\
    \  gsub('\\\\ ', '_', gsub(' {2,}', '-', text))\n}\nfix_spaces(\"Example 1\")\n",
  "\n  str_replace_all(text, ' {2,}', '-') %>% str_replace_all(., ' ', '_')\n}\n \n",
  "\n  gsub(\"[[:space:]]+\", ifelse(.==\" \", \"_\", \"-\"), text)\n}\nfix_spaces(\"\
    \ Example   3\")\n", "\n  # your code goes here\n  text %>%\n    str_replace_all(\"\
    \  \", \"-\") %>%\n    str_replace_all(\" \", \"_\")\n}\n", "\n\treturn(gsub(\"\
    \ \", \"_\", gsub(\"\\\\s{2,}\", \"-\", text)))\n}", "\n\tgsub(\" \", \"_\", text)\
    \ %>% gsub(\"(\\\\_){2,}\", \"-\", .)\n}"]
stop_tokens:
- "\n#"
- "\n```"

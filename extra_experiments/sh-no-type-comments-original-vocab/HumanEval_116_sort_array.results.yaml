language: sh
name: HumanEval_116_sort_array
results:
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_zeros=()\n  local -a sorted_ones=()\n\
    \  local -a sorted_result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i h\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted\n  local -a arr_ones\n  local -a arr_zeros\n\
    \  local -a arr_neg\n  local -a arr_pos\n  local -a arr_sorted_ones\n  local -a\
    \ arr_sorted_zeros\n  local -a arr_sorted_neg\n  local -a arr_sorted_pos\n  local\
    \ -a arr_sorted_final\n  local -a arr_sorted_final_str\n  local -a arr_sorted_final_str_final\n\
    \  local -a arr_sorted_final_str_final_final\n  local -a arr_sorted_final_str_final_final_final\n\
    \  local -a arr_sorted_final_str_final_final_final_final\n  local -a arr_sorted_final_str_final_final_final_final_final\n\
    \  local -a arr_sorted_final_str_final_final_final_final_final_final\n  local\
    \ -a arr_sorted_final_str_final_final_final_final_final_final_final\n  local -a\
    \ arr_sorted_final_str_final_final_final_final_final_final_final_final\n  local\
    \ -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a temp=()\n  local -i i=0\n \
    \ local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local\
    \ -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n\
    \  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local\
    \ -i mmm=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a zeros_sorted=()\n  local -a ones_sorted=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n\
    \  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i\
    \ ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n \
    \ local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i\
    \ ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n \
    \ local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i\
    \ ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n \
    \ local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i\
    \ bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n \
    \ local -i bo=0\n  local -i b\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n\
    \      res+=(\"$i\")\n    else\n      tmp+=(\"$i\")\n    fi\n  done\n  for i in\
    \ \"${tmp[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      zeros+=(\"$i\")\n    else\n\
    \      ones+=(\"$i\")\n    fi\n  done\n  local -a sorted_ones=($(printf \"%s\\\
    n\" \"${ones[@]}\" | sort -n -t1 -k2))\n  local -a sorted_zeros=($(printf \"%s\\\
    n\" \"${zeros[@]}\" | sort -n -t0 -k2))\n  local -a sorted_res=(\"${sorted_ones[@]}\"\
    \ \"${sorted_zeros[@]}\" \"${res[@]}\")\n  echo \"${sorted_res[@]}\"\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdokr0ls2.sh: line 19: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n/tmp/tmpdokr0ls2.sh: line 26: [[: 1 5 2 3 4: syntax
    error in expression (error token is "5 2 3 4")\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result\n  local -a ones\n  local -a zeros\n  local\
    \ -a sorted_ones\n  local -a sorted_zeros\n  local -a sorted_arr\n  local i\n\
    \  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n\
    \  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n\
    \  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n  local\
    \ dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local jj\n\
    \  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n  local\
    \ qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local ww\n\
    \  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n \
    \ local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n\
    \  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n\
    \  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n\
    \  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n\
    \  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local\
    \ gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n\
    \  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local\
    \ rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n  local wwww\n\
    \  local xxxx\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a twos=()\n  local -a threes=()\n  local -a fours=()\n  local -a fives=()\n\
    \  local -a sixes=()\n  local -a sevens=()\n  local -a eights=()\n  local -a nines=()\n\
    \  local -a tens=()\n  local -a eleves=()\n  local -a twelves=()\n  local -a thirteens=()\n\
    \  local -a fourteens=()\n  local -a fifteens=()\n  local -a sixteens=()\n  local\
    \ -a seventeens=()\n  local -a eigthteens=()\n  local -a ninteens=()\n  local\
    \ -a twenty=()\n  local -a twentyone=()\n  local -a twentytwo=()\n  local -a twentythree=()\n\
    \  local -a twentyfour=()\n  local -a twentyfive=()\n  local -a twentysix=()\n\
    \  local -a twentyseven=()\n  local -a twentyeight=()\n  local -a twentynine=()\n\
    \  local -a thirty=()\n  local -a thirtyone=()\n  local -a thirtytwo=()\n  local\
    \ -a thirtythree=()\n  local -a thirtyfour=()\n  local -a thirtyfive=()\n  local\
    \ -a thirtysix=()\n  local -a thirtyseven=()\n  local -a thirtyeight=()\n  local\
    \ -a thirtynine=()\n  local -a forty=()\n  local -a fortyone=()\n  local -a fortytwo=()\n\
    \  local -a fortythree=()\n  local -a fortyfour=()\n  local -a fortyfive=()\n\
    \  local -a fortysix=()\n  local -a fortyseven=()\n  local -a fortyeight=()\n\
    \  local -a fortynine=()\n  local -a fifty=()\n  local -a fiftyone=()\n  local\
    \ -a fiftytwo=()\n  local -a fiftythree=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a arr_sorted=()\n  local -a arr_sorted_bin=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin_dec=()\n  local -a arr_sorted_bin_dec_final=()\n\
    \  local -a arr_sorted_final=()\n  local -a arr_sorted_final_final=()\n  local\
    \ -a arr_sorted_final_final_final=()\n  local -a arr_sorted_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final=()\n  local -a\
    \ arr_sorted_final_final_final_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a bin=()\n  local -a ones=()\n  local\
    \ -a dec=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n\
    \  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i\
    \ ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n\
    \  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local\
    \ -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a ones\n  local -a zeros\n  local -a result\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i\
    \ ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n\
    \  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n \
    \ local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local\
    \ -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i\
    \ zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local\
    \ -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local\
    \ -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local\
    \ -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local\
    \ -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i ccc\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a bin_arr=()\n  local -a dec_arr=()\n  local -a res=()\n\
    \  local -a bin_res=()\n  local -a dec_res=()\n  local -a bin_dec_res=()\n  local\
    \ -a bin_dec_arr=()\n  local -a bin_dec_arr_sorted=()\n  local -a bin_dec_res_sorted=()\n\
    \  local -a bin_dec_res_sorted_final=()\n  local -a bin_dec_arr_sorted_final=()\n\
    \  local -a bin_dec_res_sorted_final_final=()\n  local -a bin_dec_arr_sorted_final_final=()\n\
    \  local -a bin_dec_res_sorted_final_final_final=()\n  local -a bin_dec_arr_sorted_final_final_final=()\n\
    \  local -a bin_dec_res_sorted_final_final_final_final=()\n  local -a bin_dec_arr_sorted_final_final_final_final=()\n\
    \  local -a bin_dec_res_sorted_final_final_final_final_final=()\n  local -a bin_dec_arr_sorted_final_final_final_final_final=()\n\
    \  local -a bin_dec_res_sorted_final_final_final_final_final_final=()\n  local\
    \ -a bin_dec_arr_sorted_final_final_final_final_final_final=()\n  local -a bin_dec_res_sorted_final_final_final_final_final_final_final=()\n\
    \  local -a bin_dec_arr_sorted_final_final_final_final_final_final_final=()\n\
    \  local -a bin_dec_res_sorted_final_final_final_final_final_final_final_final=()\n\
    \  local -a bin_dec_arr_sorted_final_final_final_final_final_final_final_final=()\n\
    \  local -a bin_dec_res_sorted_final\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  for i in \"${arr[@]}\"; do\n    sorted+=(\"\
    $(printf \"%s\\t%s\\n\" \"$(echo \"obase=2;$i\" | bc)\" \"$i\")\")\n  done\n \
    \ IFS=$'\\n' sorted=($(sort -k1,1 -k2,2n <<<\"${sorted[*]}\"))\n  unset IFS\n\
    \  printf '\"%s\" ' \"${sorted[@]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a array=($1)\n    local -a sorted=()\n    local -a ones=()\n    local -a zeros=()\n\
    \    local -a tmp=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n\
    \    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local\
    \ -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i\
    \ ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i\
    \ pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i\
    \ tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i\
    \ xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i\
    \ jjj=0\n    local -i kkk=0\n    local -i lll=0\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted\n  local -a arr_ones\n  local -a arr_zeros\n\
    \  local -a arr_neg\n  local -a arr_pos\n  local -a arr_sorted_neg\n  local -a\
    \ arr_sorted_pos\n  local -a arr_sorted_zeros\n  local -a arr_sorted_ones\n  local\
    \ -a arr_sorted_final\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n\
    \  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local\
    \ -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n\
    \  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local\
    \ -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i\
    \ hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n\
    \  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n \
    \ local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local\
    \ -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local\
    \ -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local\
    \ -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local\
    \ -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local\
    \ -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n  local\
    \ -a negs=()\n  local -a pos=()\n  local -a neg=()\n  local -a sorted=()\n  local\
    \ -a sorted_neg=()\n  local -a sorted_pos=()\n  local -a sorted_negs=()\n  local\
    \ -a sorted_zeros=()\n  local -a sorted_ones=()\n  local -a sorted_result=()\n\
    \  local -a sorted_array=()\n  local -a sorted_negs_array=()\n  local -a sorted_zeros_array=()\n\
    \  local -a sorted_ones_array=()\n  local -a sorted_result_array=()\n  local -a\
    \ sorted_pos_array=()\n  local -a sorted_neg_array=()\n  local -a sorted_array_array=()\n\
    \  local -a sorted_negs_array_array=()\n  local -a sorted_zeros_array_array=()\n\
    \  local -a sorted_ones_array_array=()\n  local -a sorted_result_array_array=()\n\
    \  local -a sorted_pos_array_array=()\n  local -a sorted_neg_array_array=()\n\
    \  local -a sorted_array_array_array=()\n  local -a sorted_negs_array_array_array=()\n\
    \  local -a sorted_zeros_array_array_array=()\n  local -a sorted_ones_array_array_array=()\n\
    \  local -a sorted_result_array_array_array=()\n  local -a sorted_pos_array_array_array=()\n\
    \  local -a sorted_neg_array_array_array=()\n  local -a sorted_array_array_array_array=()\n\
    \  local -a sorted_negs_array_array_array_array=()\n  local -a sorted_zeros_array_array_array_array=()\n\
    \  local -a sorted_ones_array_array_array_array=()\n  local -a sorted_result_array_array_array_array=()\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted_array\n  local -a ones_array\n  local -a zeros_array\n\
    \  local -a sorted_ones_array\n  local -a sorted_zeros_array\n  local -a sorted_array\n\
    \  local -a final_array\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_sorted_dec=()\n  local\
    \ -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n  local -a arr_sorted_bin_dec_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n \
    \ local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local n=0\n  local m=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a bin=()\n  local -a ones=()\n  local\
    \ -a dec=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\
    \  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n\
    \  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n\
    \  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local\
    \ ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n\
    \  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local\
    \ pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n\
    \  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local\
    \ aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n\
    \  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n \
    \ local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local\
    \ qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n\
    \  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n\
    \  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i\
    \ ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n \
    \ local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i\
    \ ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n \
    \ local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i\
    \ ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n \
    \ local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i\
    \ bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n \
    \ local -i bo=0\n  local -i bp=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a neg=()\n  local -a pos=()\n  local -a result=()\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local\
    \ -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n\
    \  local -i iii=0\n  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res\n  local -i i j\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    res[i]=$(printf \"%08d\" $(echo \"obase=2; ${arr[i]}\" | bc))\n  done\n\
    \  for ((i=0; i<${#res[@]}; i++)); do\n    for ((j=i+1; j<${#res[@]}; j++)); do\n\
    \      if [[ ${res[i]} -gt ${res[j]} ]]; then\n        local tmp=${res[i]}\n \
    \       res[i]=${res[j]}\n        res[j]=$tmp\n      fi\n    done\n  done\n  for\
    \ ((i=0; i<${#res[@]}; i++)); do\n    res[i]=$(echo \"ibase=2; ${res[i]}\" | bc)\n\
    \  done\n  echo \"${res[@]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res\n  local -i i j\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    res[i]=$(printf \"%d %d\" \"$(echo \"obase=2; ${arr[i]}\" | bc)\" \"\
    ${arr[i]}\")\n  done\n  for ((i=0; i<${#res[@]}; i++)); do\n    for ((j=i+1; j<${#res[@]};\
    \ j++)); do\n      if [[ \"${res[i]}\" > \"${res[j]}\" ]]; then\n        local\
    \ tmp=\"${res[i]}\"\n        res[i]=\"${res[j]}\"\n        res[j]=\"$tmp\"\n \
    \     fi\n    done\n  done\n  for ((i=0; i<${#res[@]}; i++)); do\n    res[i]=$(echo\
    \ \"${res[i]}\" | cut -d ' ' -f 2)\n  done\n  echo \"${res[@]}\"\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n/tmp/tmpfwrxmx6u.sh: line 17: printf:
    1 5 2 3 4: invalid number\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  for i in \"${arr[@]}\"; do\n    res+=(\"\
    $i:$(echo \"obase=2;$i\" | bc | grep -o 1 | wc -l)\")\n  done\n  echo \"${res[@]}\"\
    \ | tr ' ' '\\n' | sort -t: -k2,2n -k1,1n | cut -d: -f1 | tr '\\n' ' '\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted\n  local -a arr_ones\n  local -a arr_zeros\n\
    \  local -a arr_negatives\n  local -a arr_positives\n  local -a arr_sorted_ones\n\
    \  local -a arr_sorted_zeros\n  local -a arr_sorted_negatives\n  local -a arr_sorted_positives\n\
    \  local -a arr_sorted_ones_negatives\n  local -a arr_sorted_ones_positives\n\
    \  local -a arr_sorted_zeros_negatives\n  local -a arr_sorted_zeros_positives\n\
    \  local -a arr_sorted_ones_negatives_zeros\n  local -a arr_sorted_ones_positives_zeros\n\
    \  local -a arr_sorted_ones_negatives_zeros_positives\n  local -a arr_sorted_ones_positives_zeros_negatives\n\
    \  local -a arr_sorted_ones_positives_zeros_negatives_final\n  local -a arr_sorted_ones_negatives_zeros_positives_final\n\
    \  local -a arr_sorted_final\n  local -a arr_sorted_final_final\n  local -a arr_sorted_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final\n  local -a arr_sorted_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final\n  local -a arr_sorted_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final_final\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a sorted=()\n  local -a result=()\n  local -i i=0\n  local\
    \ -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n\
    \  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i\
    \ ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n \
    \ local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i\
    \ aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n \
    \ local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i\
    \ az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n \
    \ local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i\
    \ bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n \
    \ local -i bn=0\n  local -i bo=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_sorted_ones=()\n  local -a arr_sorted_zeros=()\n\
    \  local -a arr_sorted_neg=()\n  local -a arr_sorted_pos=()\n  local -a arr_sorted_neg_sorted=()\n\
    \  local -a arr_sorted_pos_sorted=()\n  local -a arr_sorted_ones_sorted=()\n \
    \ local -a arr_sorted_zeros_sorted=()\n  local -a arr_sorted_neg_sorted_sorted=()\n\
    \  local -a arr_sorted_pos_sorted_sorted=()\n  local -a arr_sorted_ones_sorted_sorted=()\n\
    \  local -a arr_sorted_zeros_sorted_sorted=()\n  local -a arr_sorted_neg_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_pos_sorted_sorted_sorted=()\n  local -a arr_sorted_ones_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_zeros_sorted_sorted_sorted=()\n  local -a arr_sorted_neg_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_pos_sorted_sorted_sorted_sorted=()\n  local -a arr_sorted_ones_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_zeros_sorted_sorted_sorted_sorted=()\n  local -a arr_sorted_neg_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local\
    \ -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n\
    \  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local\
    \ -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i\
    \ gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n\
    \  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n \
    \ local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local\
    \ -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local\
    \ -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local\
    \ -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local\
    \ -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local\
    \ -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local\
    \ -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local\
    \ -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i dddd\n  local\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i n\n  local -i m\n  local -i p\n\
    \  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local\
    \ -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n\
    \  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local\
    \ -i g\n  local -i h\n  local -i l\n  local -i o\n  local -i p\n  local -i q\n\
    \  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local\
    \ -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n\
    \  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local\
    \ -i h\n  local -i l\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n\
    \  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local\
    \ -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n\
    \  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local\
    \ -i l\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n\
    \  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local\
    \ -i y\n  local -i z\n  local -i a\n \n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a bin_arr=()\n  local -a bin_arr_sorted=()\n  local -a\
    \ dec_arr=()\n  local -a dec_arr_sorted=()\n  local -a sorted_arr=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a bin_arr=()\n  local -a ones_arr=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_bin_arr=()\n  local -a sorted_ones_arr=()\n\
    \  local -a sorted_new_arr=()\n  local -a sorted_new_arr_2=()\n  local -a sorted_new_arr_3=()\n\
    \  local -a sorted_new_arr_4=()\n  local -a sorted_new_arr_5=()\n  local -a sorted_new_arr_6=()\n\
    \  local -a sorted_new_arr_7=()\n  local -a sorted_new_arr_8=()\n  local -a sorted_new_arr_9=()\n\
    \  local -a sorted_new_arr_10=()\n  local -a sorted_new_arr_11=()\n  local -a\
    \ sorted_new_arr_12=()\n  local -a sorted_new_arr_13=()\n  local -a sorted_new_arr_14=()\n\
    \  local -a sorted_new_arr_15=()\n  local -a sorted_new_arr_16=()\n  local -a\
    \ sorted_new_arr_17=()\n  local -a sorted_new_arr_18=()\n  local -a sorted_new_arr_19=()\n\
    \  local -a sorted_new_arr_20=()\n  local -a sorted_new_arr_21=()\n  local -a\
    \ sorted_new_arr_22=()\n  local -a sorted_new_arr_23=()\n  local -a sorted_new_arr_24=()\n\
    \  local -a sorted_new_arr_25=()\n  local -a sorted_new_arr_26=()\n  local -a\
    \ sorted_new_arr_27=()\n  local -a sorted_new_arr_28=()\n  local -a sorted_new_arr_29=()\n\
    \  local -a sorted_new_arr_30=()\n  local -a sorted_new_arr_31=()\n  local -a\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i\
    \ ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n \
    \ local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i\
    \ an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n \
    \ local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i\
    \ aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n \
    \ local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i\
    \ bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n \
    \ local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i\
    \ bo=0\n  local -i bp=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_array=()\n\
    \  local -a sorted_result=()\n  local -a sorted_ones_dec=()\n  local -a sorted_zeros_dec=()\n\
    \  local -a sorted_array_dec=()\n  local -a sorted_result_dec=()\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  for i\
    \ in \"${arr[@]}\"; do\n    if [[ $i -ge 0 ]]; then\n      if [[ $i -eq 0 ]];\
    \ then\n        zeros+=(\"$i\")\n      else\n        ones+=(\"$i\")\n      fi\n\
    \    else\n      result+=(\"$i\")\n    fi\n  done\n  if [[ ${#ones[@]} -gt 0 ]];\
    \ then\n    local -a ones_sorted\n    for i in \"${ones[@]}\"; do\n      ones_sorted+=(\"\
    $(printf \"%b\" \"$i\" | grep -o 1 | wc -l)\" \"$i\")\n    done\n    IFS=$'\\\
    n' ones_sorted=($(sort -n <<<\"${ones_sorted[*]}\"))\n    unset IFS\n    for ((i=0;\
    \ i<${#ones_sorted[@]}; i+=2)); do\n      result+=(\"${ones_sorted[i+1]}\")\n\
    \    done\n  fi\n  if [[ ${#zeros[@]} -gt 0 ]]; then\n    result+=(\"${zeros[@]}\"\
    )\n  fi\n  echo \"[$(IFS=,; echo \"${result[*]}\")]\"\n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4xo37h7u.sh: line 18: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a array=(\"$@\")\n    local -a sorted=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i\
    \ af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i\
    \ aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i\
    \ an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i\
    \ ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i\
    \ av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i\
    \ az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i\
    \ bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i\
    \ bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i\
    \ bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n    local -i\
    \ b\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_sorted_dec=()\n  local\
    \ -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n  local -a arr_sorted_bin_dec_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n \
    \ local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local -i count\n  local -i max_count\n  local -i\
    \ max_index\n  local -i max_decimal\n  local -i decimal\n  local -i num\n  local\
    \ -i temp\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    num=${arr[i]}\n\
    \    count=0\n    decimal=0\n    temp=1\n    while ((num > 0)); do\n      if ((num\
    \ % 2 == 1)); then\n        ((count++))\n        ((decimal += temp))\n      fi\n\
    \      ((num /= 2))\n      ((temp *= 2))\n    done\n    if ((count == 0)); then\n\
    \      zeros+=(\"$decimal\")\n    else\n      ones+=(\"$decimal\")\n    fi\n \
    \ done\n  len=${#ones[@]}\n  for ((i=0; i<len; i++)); do\n    max_count=0\n  \
    \  max_decimal=0\n    max_index=0\n    for ((j=0; j<${#ones[@]}; j++)); do\n \
    \     num=${ones[j]}\n      count=0\n      temp=1\n      while ((num > 0)); do\n\
    \        if ((num % 2 == 1)); then\n          ((count++))\n        fi\n      \
    \  ((num /= 2))\n        ((temp *= 2))\n      done\n      if ((count > max_count));\
    \ then\n        max_count=$count\n        max_decimal=${ones[j]}\n        max_index=$j\n\
    \      elif ((count == max_count)); then\n        if ((${ones[j]} > max_decimal));\
    \ then\n          max_decimal=${ones[j]}\n          max_index=$j\n        fi\n\
    \      fi\n    done\n    result+=(\"$max_decimal\")\n    unset ones[$max_index]\n\
    \    ones=(\"${ones[@]}\")\n  done\n  len=${#zeros[@\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpykuy78n4.sh: line 98: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($@)\n  local -a ones\n  local -a zeros\n  local -a result\n  local i\n\
    \  local j\n  local k\n  local -i num\n  local -i num_ones\n  local -i num_zeros\n\
    \  local -i num_result\n  local -i num_arr\n  local -i num_ones_arr\n  local -i\
    \ num_zeros_arr\n  local -i num_result_arr\n  local -i num_ones_result_arr\n \
    \ local -i num_zeros_result_arr\n  local -i num_zeros_ones_arr\n  local -i num_zeros_ones_result_arr\n\
    \  local -i num_zeros_ones_result_arr_i\n  local -i num_zeros_ones_result_arr_j\n\
    \  local -i num_zeros_ones_result_arr_k\n  local -i num_zeros_ones_result_arr_i_j\n\
    \  local -i num_zeros_ones_result_arr_i_k\n  local -i num_zeros_ones_result_arr_j_k\n\
    \  local -i num_zeros_ones_result_arr_i_j_k\n  local -i num_zeros_ones_result_arr_i_j_k_l\n\
    \  local -i num_zeros_ones_result_arr_i_j_k_l_m\n  local -i num_zeros_ones_result_arr_i_j_k_l_m_n\n\
    \  local -i num_zeros_ones_result_arr_i_j_k_l_m_n_o\n  local -i num_zeros_ones_result_arr_i_j_k_l_m_n_o_p\n\
    \  local -i num_zeros_ones_result_arr_i_j_k_l_m_n_o_p_q\n  local -i num_zeros_ones_result_arr_i_j_k_l_m_n_o_p_q_r\n\
    \  local -i num_zeros_ones_result_arr_\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n\
    \  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i\
    \ ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n \
    \ local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i\
    \ ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n \
    \ local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i\
    \ ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n \
    \ local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i\
    \ bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n \
    \ local -i bo=0\n  local -i bp\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n\
    \  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n \n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr\n  for i in \"${arr[@]}\"; do\n    local -a\
    \ bin_arr\n    local bin_num\n    local bin_count\n    bin_num=$(echo \"obase=2;$i\"\
    \ | bc)\n    bin_arr=($(echo \"$bin_num\" | grep -o .))\n    bin_count=0\n   \
    \ for j in \"${bin_arr[@]}\"; do\n      if [[ \"$j\" == \"1\" ]]; then\n     \
    \   bin_count=$((bin_count + 1))\n      fi\n    done\n    new_arr+=(\"$bin_count\
    \ $i\")\n  done\n  echo \"${new_arr[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n'\
    \ ' '\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n  local\
    \ dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local jj\n\
    \  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n  local\
    \ qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local ww\n\
    \  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n \
    \ local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n\
    \  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n\
    \  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n\
    \  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n\
    \  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local\
    \ gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n\
    \  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local\
    \ rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n  local wwww\n\
    \  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n  local bbbbb\n  local\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_sorted_neg=()\n  local -a arr_sorted_pos=()\n\
    \  local -a arr_sorted_zeros=()\n  local -a arr_sorted_ones=()\n  local -a arr_sorted_zeros_neg=()\n\
    \  local -a arr_sorted_zeros_pos=()\n  local -a arr_sorted_ones_neg=()\n  local\
    \ -a arr_sorted_ones_pos=()\n  local -a arr_sorted_neg_zeros=()\n  local -a arr_sorted_neg_ones=()\n\
    \  local -a arr_sorted_pos_zeros=()\n  local -a arr_sorted_pos_ones=()\n  local\
    \ -a arr_sorted_neg_zeros_ones=()\n  local -a arr_sorted_pos_zeros_ones=()\n \
    \ local -a arr_sorted_neg_ones_zeros=()\n  local -a arr_sorted_pos_ones_zeros=()\n\
    \  local -a arr_sorted_neg_zeros_ones_dec=()\n  local -a arr_sorted_pos_zeros_ones_dec=()\n\
    \  local -a arr_sorted_neg_ones_zeros_dec=()\n  local -a arr_sorted_pos_ones_zeros_dec=()\n\
    \  local -a arr_sorted_neg_zeros_ones_dec_neg=()\n  local -a arr_sorted_pos_zeros_ones_dec_neg=()\n\
    \  local -a arr_sorted_neg_ones_zeros_dec_neg=()\n  local -a arr_sorted_pos_ones_zeros_dec_neg=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  for i in \"${arr[@]}\"\
    ; do\n    local bin=$(echo \"obase=2; $i\" | bc)\n    local one=$(echo \"$bin\"\
    \ | grep -o 1 | wc -l)\n    local dec=$(echo \"$bin\" | grep -o 0 | wc -l)\n \
    \   ones+=(\"$one\")\n    res+=(\"$i $one $dec\")\n  done\n  local max=$(echo\
    \ \"${ones[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n  local -a res2=()\n \
    \ for i in $(seq 0 $max); do\n    for j in \"${res[@]}\"; do\n      local -a arr2=($j)\n\
    \      if [[ \"${arr2[1]}\" == \"$i\" ]]; then\n        res2+=(\"${arr2[0]}\"\
    )\n      fi\n    done\n  done\n  echo \"${res2[@]}\"\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a bin_arr=()\n  local -a bin_arr_sorted=()\n  local -a\
    \ bin_arr_sorted_dec=()\n  local -a bin_arr_sorted_dec_sorted=()\n  local -a bin_arr_sorted_dec_sorted_sorted=()\n\
    \  local -a bin_arr_sorted_dec_sorted_sorted_sorted=()\n  local -a bin_arr_sorted_dec_sorted_sorted_sorted_sorted=()\n\
    \  local -a bin_arr_sorted_dec_sorted_sorted_sorted_sorted_sorted=()\n  local\
    \ -a bin_arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted=()\n  local\
    \ -a bin_arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a bin_arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a bin_arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a bin_arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a bin_arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a bin_arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a bin_arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i ones\n  local -i zeros\n  local -i temp\n  local -i temp_ones\n  local\
    \ -i temp_zeros\n  local -i temp_decimal\n  local -i decimal\n  local -i decimal_temp\n\
    \  local -i decimal_temp_ones\n  local -i decimal_temp_zeros\n  local -i decimal_temp_decimal\n\
    \  local -i decimal_ones\n  local -i decimal_zeros\n  local -i decimal_decimal\n\
    \  local -i decimal_temp_decimal\n  local -i decimal_temp_ones\n  local -i decimal_temp_zeros\n\
    \  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i\
    \ decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n\
    \  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i\
    \ decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n\
    \  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i\
    \ decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n\
    \  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i\
    \ decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n\
    \  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i\
    \ decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n\
    \  local -i decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i\
    \ decimal_temp_decimal\n  local -i decimal_temp_decimal\n  local -i decimal_temp_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  for i in ${array[@]}; do\n    if [[\
    \ $i -lt 0 ]]; then\n      sorted+=($i)\n    else\n      ones+=($(echo \"obase=2;$i\"\
    \ | bc | grep -o 1 | wc -l))\n    fi\n  done\n  for j in ${ones[@]}; do\n    if\
    \ [[ $j -eq 0 ]]; then\n      zeros+=($j)\n    fi\n  done\n  for k in ${zeros[@]};\
    \ do\n    for l in ${array[@]}; do\n      if [[ $l -eq $k ]]; then\n        temp+=($l)\n\
    \      fi\n    done\n  done\n  for m in ${temp[@]}; do\n    for n in ${array[@]};\
    \ do\n      if [[ $m -eq $n ]]; then\n        array=(${array[@]/$n})\n      fi\n\
    \    done\n  done\n  for o in ${ones[@]}; do\n    for p in ${array[@]}; do\n \
    \     if [[ $o -eq $(echo \"obase=2;$p\" | bc | grep -o 1 | wc -l) ]]; then\n\
    \        temp+=($p)\n      fi\n    done\n  done\n  for q in ${temp[@]}; do\n \
    \   for r in ${array[@]}; do\n      if [[ $q -eq $r ]]; then\n        array=(${array[@]/$r})\n\
    \      fi\n   \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmplu3252f_.sh: line 76: syntax error near unexpected token `}''\n/tmp/tmplu3252f_.sh:
    line 76: `}''\n"'
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=${#arr[@]}\n  local -i\
    \ ones_len\n  local -i zeros_len\n  local -i ones_count\n  local -i zeros_count\n\
    \  local -i ones_index\n  local -i zeros_index\n  local -i ones_index_max\n  local\
    \ -i zeros_index_max\n  local -i ones_index_min\n  local -i zeros_index_min\n\
    \  local -i ones_index_min_index\n  local -i zeros_index_min_index\n  local -i\
    \ ones_index_max_index\n  local -i zeros_index_max_index\n  local -i ones_index_min_index_index\n\
    \  local -i zeros_index_min_index_index\n  local -i ones_index_max_index_index\n\
    \  local -i zeros_index_max_index_index\n  local -i ones_index_min_index_index_index\n\
    \  local -i zeros_index_min_index_index_index\n  local -i ones_index_max_index_index_index\n\
    \  local -i zeros_index_max_index_index_index\n  local -i ones_index_min_index_index_index_index\n\
    \  local -i zeros_index_min_index_index_index_index\n  local -i ones_index_max_index_index_index_index\n\
    \  local -i zeros_index_max_index_index_index_index\n  local -i ones_index_min_index_index_index_index_index\n\
    \  local -i zeros_index_min_index_index_index_index_index\n  local -i ones_index_max_index_index_index_index_index\n\
    \  local -i zeros_index_max_index_index_index_index_index\n  local -i ones_index_min_index_index_index_index_index_index\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a arr_sorted=()\n    local -a arr_ones=()\n    local\
    \ -a arr_dec=()\n    local -a arr_sorted_ones=()\n    local -a arr_sorted_dec=()\n\
    \    local -a arr_sorted_final=()\n    local -i i=0\n    local -i j=0\n    local\
    \ -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n  \
    \  local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n  \
    \  local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n  \
    \  local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
    \  local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n  \
    \  local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n  \
    \  local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n  \
    \  local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n\
    \    local -i eee=0\n    local -i fff=0\n    local -i ggg=\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_sorted_ones=()\n  local\
    \ -a arr_sorted_zeros=()\n  local -a arr_sorted_zeros_dec=()\n  local -a arr_sorted_ones_dec=()\n\
    \  local -a arr_sorted_zeros_dec_final=()\n  local -a arr_sorted_ones_dec_final=()\n\
    \  local -a arr_sorted_final=()\n  local -a arr_sorted_final_final=()\n  local\
    \ -a arr_sorted_final_final_final=()\n  local -a arr_sorted_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final=()\n  local -a\
    \ arr_sorted_final_final_final_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a result\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n\
    \  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i\
    \ af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n \
    \ local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i\
    \ ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n \
    \ local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i\
    \ ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n \
    \ local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i\
    \ bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n \
    \ local -i bl=0\n  local -i bm=0\n  local -i b\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -a bin\n  local -a bin_sorted\n  local\
    \ -a bin_sorted_dec\n  local -a bin_sorted_dec_sorted\n  local -a bin_sorted_dec_sorted_final\n\
    \  local -a bin_sorted_dec_sorted_final_final\n  local -a bin_sorted_dec_sorted_final_final_final\n\
    \  local -a bin_sorted_dec_sorted_final_final_final_final\n  local -a bin_sorted_dec_sorted_final_final_final_final_final\n\
    \  local -a bin_sorted_dec_sorted_final_final_final_final_final_final\n  local\
    \ -a bin_sorted_dec_sorted_final_final_final_final_final_final_final\n  local\
    \ -a bin_sorted_dec_sorted_final_final_final_final_final_final_final_final\n \
    \ local -a bin_sorted_dec_sorted_final_final_final_final_final_final_final_final_final\n\
    \  local -a bin_sorted_dec_sorted_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a bin_sorted_dec_sorted_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a bin_sorted_dec_sorted_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a bin_sorted_dec_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a bin_sorted_dec_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a bin_sorted_dec_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n  local\
    \ -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n\
    \  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n\
    \  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i\
    \ kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n \
    \ local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i\
    \ tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n \
    \ local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local\
    \ -i lll=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i n=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local\
    \ -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local\
    \ -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local\
    \ -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local\
    \ -i g=0\n  local -i h=0\n  local -i l=0\n  local -i o=0\n  local -i one=0\n \
    \ local -i two=0\n  local -i three=0\n  local -i four=0\n  local -i five=0\n \
    \ local -i six=0\n  local -i seven=0\n  local -i eight=0\n  local -i nine=0\n\
    \  local -i ten=0\n  local -i eleven=0\n  local -i twelve=0\n  local -i thirteen=0\n\
    \  local -i fourteen=0\n  local -i fifteen=0\n  local -i sixteen=0\n  local -i\
    \ seventeen=0\n  local -i eighteen=0\n  local -i nineteen=0\n  local -i twenty=0\n\
    \  local -i twentyone=0\n  local -i twentytwo=0\n  local -i twentythree=0\n  local\
    \ -i twentyfour=0\n  local -i twentyfive=0\n  local -i twentysix=0\n  local -i\
    \ twentyseven=0\n  local -i twentyeight=0\n  local -i twentynine=0\n  local -i\
    \ thirty=0\n  local -i thirtyone=0\n  local -i thirtytwo=0\n  local -i thirtythree=0\n\
    \  local -i thirtyfour\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a arr_sorted=()\n    local -i i=0\n    local -i\
    \ j=0\n    local -i n=${#arr[@]}\n    local -i ones=0\n    local -i max_ones=0\n\
    \    local -i max_ones_index=0\n    local -i max_ones_decimal=0\n    local -i\
    \ max_ones_decimal_index=0\n    local -i decimal=0\n    local -i decimal_index=0\n\
    \    local -i decimal_index_tmp=0\n    local -i decimal_tmp=0\n    local -i decimal_tmp_index=0\n\
    \    local -i decimal_tmp_index_tmp=0\n    local -i decimal_tmp_tmp=0\n    local\
    \ -i decimal_tmp_tmp_index=0\n    local -i decimal_tmp_tmp_index_tmp=0\n    local\
    \ -i decimal_tmp_tmp_tmp=0\n    local -i decimal_tmp_tmp_tmp_index=0\n    local\
    \ -i decimal_tmp_tmp_tmp_index_tmp=0\n    local -i decimal_tmp_tmp_tmp_tmp=0\n\
    \    local -i decimal_tmp_tmp_tmp_tmp_index=0\n    local -i decimal_tmp_tmp_tmp_tmp_index_tmp=0\n\
    \    local -i decimal_tmp_tmp_tmp_tmp_tmp=0\n    local -i decimal_tmp_tmp_tmp_tmp_tmp_index=0\n\
    \    local -i decimal_tmp_tmp_tmp_tmp_tmp_index_tmp=0\n    local -i decimal_tmp_tmp_tmp_tmp_tmp_tmp=0\n\
    \    local -i decimal_tmp_tmp_tmp_tmp_tmp_tmp_index=0\n    local -i decimal_tmp_tmp_tmp_tmp_tmp_tmp_index_tmp=0\n\
    \    local -i decimal_tmp_tmp_tmp_tmp_tmp_tmp_tmp=0\n    local -i decimal_tmp_tmp_tmp_tmp_tmp_tmp_tmp_index=0\n\
    \    local -i decimal_tmp_tmp_tmp_tmp_tmp_tmp_tmp_\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a sorted_array=()\n  local -a sorted_array_dec=()\n  local\
    \ -a sorted_array_bin=()\n  local -a sorted_array_bin_ones=()\n  local -a sorted_array_bin_ones_dec=()\n\
    \  local -a sorted_array_bin_ones_dec_sorted=()\n  local -a sorted_array_bin_ones_dec_sorted_final=()\n\
    \  local -a sorted_array_bin_ones_dec_sorted_final_final=()\n  local -a sorted_array_bin_ones_dec_sorted_final_final_final=()\n\
    \  local -a sorted_array_bin_ones_dec_sorted_final_final_final_final=()\n  local\
    \ -a sorted_array_bin_ones_dec_sorted_final_final_final_final_final=()\n  local\
    \ -a sorted_array_bin_ones_dec_sorted_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_bin_ones_dec_sorted_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_bin_ones_dec_sorted_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_bin_ones_dec_sorted_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_bin_ones_dec_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_bin_ones_dec_sorted_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_bin_ones_dec_sorted_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_array_bin_ones_dec_sorted_final_final_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a bin=()\n  local -a ones=()\n\
    \  local -a dec=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n\
    \      res+=(\"$i\")\n    else\n      tmp+=($(echo \"obase=2;$i\" | bc | grep\
    \ -o 1 | wc -l))\n    fi\n  done\n  for i in \"${tmp[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      zeros+=(\"$i\")\n    else\n      ones+=(\"$i\")\n    fi\n\
    \  done\n  ones=($(echo \"${ones[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '))\n\
    \  zeros=($(echo \"${zeros[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '))\n \
    \ for i in \"${ones[@]}\"; do\n    for j in \"${tmp[@]}\"; do\n      if [[ $i\
    \ -eq $j ]]; then\n        res+=(\"$j\")\n      fi\n    done\n  done\n  for i\
    \ in \"${zeros[@]}\"; do\n    for j in \"${tmp[@]}\"; do\n      if [[ $i -eq $j\
    \ ]]; then\n        res+=(\"$j\")\n      fi\n    done\n  done\n  echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4gyekutw.sh: line 19: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_ones_arr=()\n  local -a sorted_zeros_arr=()\n\
    \  local -a sorted_ones_arr_dec=()\n  local -a sorted_zeros_arr_dec=()\n  local\
    \ -a sorted_ones_arr_dec_bin=()\n  local -a sorted_zeros_arr_dec_bin=()\n  local\
    \ -a sorted_ones_arr_dec_bin_ones=()\n  local -a sorted_zeros_arr_dec_bin_ones=()\n\
    \  local -a sorted_ones_arr_dec_bin_ones_dec=()\n  local -a sorted_zeros_arr_dec_bin_ones_dec=()\n\
    \  local -a sorted_ones_arr_dec_bin_ones_dec_bin=()\n  local -a sorted_zeros_arr_dec_bin_ones_dec_bin=()\n\
    \  local -a sorted_ones_arr_dec_bin_ones_dec_bin_ones=()\n  local -a sorted_zeros_arr_dec_bin_ones_dec_bin_ones=()\n\
    \  local -a sorted_ones_arr_dec_bin_ones_dec_bin_ones_dec=()\n  local -a sorted_zeros_arr_dec_bin_ones_dec_bin_ones_dec=()\n\
    \  local -a sorted_ones_arr_dec_bin_ones_dec_bin_ones_dec_bin=()\n  local -a sorted_zeros_arr_dec_bin_ones_dec_bin_ones_dec_bin=()\n\
    \  local -a sorted_ones_arr_dec_bin_ones_dec_bin_ones_dec_bin_ones=()\n  local\
    \ -a sorted_zeros_arr_dec_bin_ones_dec_bin_ones_dec_bin_ones=()\n  local -a sorted_ones_arr_dec_bin_ones_dec_bin_ones_dec_bin_ones_dec\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_sorted_final=()\n  local -a arr_sorted_final_neg=()\n\
    \  local -a arr_sorted_final_pos=()\n  local -a arr_sorted_final_neg_pos=()\n\
    \  local -a arr_sorted_final_pos_neg=()\n  local -a arr_sorted_final_neg_pos_neg=()\n\
    \  local -a arr_sorted_final_pos_neg_neg=()\n  local -a arr_sorted_final_neg_pos_pos=()\n\
    \  local -a arr_sorted_final_pos_neg_pos=()\n  local -a arr_sorted_final_neg_pos_neg_pos=()\n\
    \  local -a arr_sorted_final_pos_neg_neg_pos=()\n  local -a arr_sorted_final_neg_pos_pos_neg=()\n\
    \  local -a arr_sorted_final_pos_neg_pos_neg=()\n  local -a arr_sorted_final_neg_pos_neg_pos_neg=()\n\
    \  local -a arr_sorted_final_pos_neg_neg_pos_neg=()\n  local -a arr_sorted_final_neg_pos_pos_neg_neg=()\n\
    \  local -a arr_sorted_final_pos_neg_pos_neg_neg=()\n  local -a arr_sorted_final_neg_pos_neg_pos_neg_neg=()\n\
    \  local -a arr_sorted_final_pos_neg_neg_pos_neg_neg=()\n  local -a arr_sorted_final_neg_pos_pos_neg_neg_neg=()\n\
    \  local -a arr_sorted_final_pos_neg_pos_neg\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_sorted_ones=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_final=()\n  local -i i=0\n  local\
    \ -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n\
    \  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i\
    \ hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n \
    \ local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i\
    \ qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n \
    \ local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i\
    \ zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n\
    \  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local\
    \ -i iii=0\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a out\n  for i in \"${arr[@]}\"; do\n    out+=(\"$(printf\
    \ '%s\\t%s\\n' \"$(printf '%d' \"$i\" | sed 's/^-//' | sed 's/^0*//' | sed 's/^$/0/'\
    \ | sed 's/^/1/' | sed 's/0/0/g' | wc -c)\" \"$i\")\")\n  done\n  echo \"${out[@]}\"\
    \ | sort -n | cut -f2-\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp72cw2qc1.sh: line 16: printf: 1 5 2 3 4: invalid number\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a sorted_ones\n  local -a sorted_zeros\n  local -a result\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local\
    \ -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n\
    \  local -i iii=0\n  local -i jjj=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a ones_array=()\n  local -a sorted_array=()\n  local\
    \ -a sorted_ones_array=()\n  local -a sorted_decimal_array=()\n  local -a result_array=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n\
    \  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i\
    \ ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n \
    \ local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i\
    \ ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n \
    \ local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i\
    \ ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n \
    \ local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i\
    \ bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n \
    \ local -i bo=0\n  local -i bp=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a new_array=()\n  local -a ones_array=()\n  local -a zeros_array=()\n\
    \  local -a sorted_array=()\n  local -a sorted_ones_array=()\n  local -a sorted_zeros_array=()\n\
    \  local -a sorted_ones_zeros_array=()\n  local -a sorted_zeros_ones_array=()\n\
    \  local -a sorted_ones_zeros_array_dec=()\n  local -a sorted_zeros_ones_array_dec=()\n\
    \  local -a sorted_array_dec=()\n  local -a sorted_array_dec_final=()\n  local\
    \ -a sorted_array_final=()\n  local -a sorted_array_final_dec=()\n  local -a sorted_array_final_dec_final=()\n\
    \  local -a sorted_array_final_final=()\n  local -a sorted_array_final_final_dec=()\n\
    \  local -a sorted_array_final_final_dec_final=()\n  local -a sorted_array_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_dec=()\n  local -a sorted_array_final_final_final_dec_final=()\n\
    \  local -a sorted_array_final_final_final_final=()\n  local -a sorted_array_final_final_final_final_dec=()\n\
    \  local -a sorted_array_final_final_final_final_dec_final=()\n  local -a sorted_array_final_final_final_final_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_dec=()\n  local -a sorted_array_final_final_final_final_final_dec_final=()\n\
    \  local -a sorted_array_final_final_final_final_final_final=()\n  local -a sorted_array_final_final_final_final_final_final_dec=()\n\
    \  local -a sorted_array_final_final_final_final_final_final_dec_final=()\n  local\
    \ -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a sorted=()\n    local -a ones=()\n    local -a\
    \ zeros=()\n    local -a result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted_array=()\n  local -a ones_array=()\n  local\
    \ -a zeros_array=()\n  local -a temp_array=()\n  local -a temp_array2=()\n  local\
    \ -a temp_array3=()\n  local -a temp_array4=()\n  local -a temp_array5=()\n  local\
    \ -a temp_array6=()\n  local -a temp_array7=()\n  local -a temp_array8=()\n  local\
    \ -a temp_array9=()\n  local -a temp_array10=()\n  local -a temp_array11=()\n\
    \  local -a temp_array12=()\n  local -a temp_array13=()\n  local -a temp_array14=()\n\
    \  local -a temp_array15=()\n  local -a temp_array16=()\n  local -a temp_array17=()\n\
    \  local -a temp_array18=()\n  local -a temp_array19=()\n  local -a temp_array20=()\n\
    \  local -a temp_array21=()\n  local -a temp_array22=()\n  local -a temp_array23=()\n\
    \  local -a temp_array24=()\n  local -a temp_array25=()\n  local -a temp_array26=()\n\
    \  local -a temp_array27=()\n  local -a temp_array28=()\n  local -a temp_array29=()\n\
    \  local -a temp_array30=()\n  local -a temp_array31=()\n  local -a temp_array32=()\n\
    \  local -a temp_array33=()\n  local -a temp_array34=()\n  local -a temp_array35=()\n\
    \  local -a temp_array36=()\n  local -a temp_array37=()\n  local -a temp_array38=()\n\
    \  local -a temp_array39=()\n  local -a temp_array40=()\n  local -a temp_array41=()\n\
    \  local -a temp_array42=()\n  local -a temp_array43\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_ones_arr=()\n  local -a sorted_zeros_arr=()\n\
    \  local -a sorted_new_arr=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a bin_arr=()\n  local -a ones_arr=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_bin_arr=()\n  local -a sorted_ones_arr=()\n\
    \  local -a sorted_new_arr=()\n  local -a sorted_new_bin_arr=()\n  local -a sorted_new_ones_arr=()\n\
    \  local -a sorted_new_dec_arr=()\n  local -a sorted_new_dec_bin_arr=()\n  local\
    \ -a sorted_new_dec_ones_arr=()\n  local -a sorted_new_dec_new_arr=()\n  local\
    \ -a sorted_new_dec_new_bin_arr=()\n  local -a sorted_new_dec_new_ones_arr=()\n\
    \  local -a sorted_new_dec_new_dec_arr=()\n  local -a sorted_new_dec_new_dec_bin_arr=()\n\
    \  local -a sorted_new_dec_new_dec_ones_arr=()\n  local -a sorted_new_dec_new_dec_new_arr=()\n\
    \  local -a sorted_new_dec_new_dec_new_bin_arr=()\n  local -a sorted_new_dec_new_dec_new_ones_arr=()\n\
    \  local -a sorted_new_dec_new_dec_new_dec_arr=()\n  local -a sorted_new_dec_new_dec_new_dec_bin_arr=()\n\
    \  local -a sorted_new_dec_new_dec_new_dec_ones_arr=()\n  local -a sorted_new_dec_new_dec_new_dec_new_arr=()\n\
    \  local -a sorted_new_dec_new_dec_new_dec_new_bin_arr=()\n  local -a sorted_new_dec_new_dec_new_dec_new_ones_arr=()\n\
    \  local -a sorted_new_dec_new_dec_new_dec_new_dec_arr=()\n  local -a\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_sorted_dec=()\n  local\
    \ -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n  local -a arr_sorted_bin_dec_sorted=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec=()\n  local -a arr_sorted_bin_dec_sorted_dec_sorted=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin=()\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted=()\n  local -a\
    \ arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec=()\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local -a\
    \ result\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n \
    \ local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n\
    \  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local\
    \ ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n\
    \  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local\
    \ vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n\
    \  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n\
    \  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n\
    \  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n\
    \  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n\
    \  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local\
    \ ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n\
    \  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local\
    \ qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n\
    \  local wwww\n  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n  local\
    \ b\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a arr_sorted=()\n  local -a arr_sorted_bin=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin_dec=()\n  local -a arr_sorted_bin_dec_final=()\n\
    \  local -a arr_sorted_final=()\n  local -a arr_sorted_bin_final=()\n  local -a\
    \ arr_sorted_dec_final=()\n  local -a arr_sorted_bin_dec_final=()\n  local -a\
    \ arr_sorted_final=()\n  local -a arr_sorted_bin_final=()\n  local -a arr_sorted_dec_final=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_final=()\n  local\
    \ -a arr_sorted_bin_final=()\n  local -a arr_sorted_dec_final=()\n  local -a arr_sorted_bin_dec_final=()\n\
    \  local -a arr_sorted_final=()\n  local -a arr_sorted_bin_final=()\n  local -a\
    \ arr_sorted_dec_final=()\n  local -a arr_sorted_bin_dec_final=()\n  local -a\
    \ arr_sorted_final=()\n  local -a arr_sorted_bin_final=()\n  local -a arr_sorted_dec_final=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_final=()\n  local\
    \ -a arr_sorted_bin_final=()\n  local -a arr_sorted_dec_final=()\n  local -a arr_sorted_bin_dec_final=()\n\
    \  local -a arr_sorted_final=()\n  local -a arr_sorted_bin_final=()\n  local -a\
    \ arr_sorted_dec_final=()\n  local -a arr_sorted_bin_dec_final=()\n  local -a\
    \ arr_sorted_final=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a sorted\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local\
    \ -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i\
    \ jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n\
    \  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n \
    \ local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local\
    \ -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local\
    \ -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local\
    \ -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local\
    \ -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local\
    \ -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i c\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a array=(\"$@\")\n    local -a result=()\n    local -a ones=()\n    local -a\
    \ zeros=()\n    local -a temp=()\n    local -a temp2=()\n    local -a temp3=()\n\
    \    local -a temp4=()\n    local -a temp5=()\n    local -a temp6=()\n    local\
    \ -a temp7=()\n    local -a temp8=()\n    local -a temp9=()\n    local -a temp10=()\n\
    \    local -a temp11=()\n    local -a temp12=()\n    local -a temp13=()\n    local\
    \ -a temp14=()\n    local -a temp15=()\n    local -a temp16=()\n    local -a temp17=()\n\
    \    local -a temp18=()\n    local -a temp19=()\n    local -a temp20=()\n    local\
    \ -a temp21=()\n    local -a temp22=()\n    local -a temp23=()\n    local -a temp24=()\n\
    \    local -a temp25=()\n    local -a temp26=()\n    local -a temp27=()\n    local\
    \ -a temp28=()\n    local -a temp29=()\n    local -a temp30=()\n    local -a temp31=()\n\
    \    local -a temp32=()\n    local -a temp33=()\n    local -a temp34=()\n    local\
    \ -a temp35=()\n    local -a temp36=()\n    local -a temp37=()\n    local -a temp38=()\n\
    \    local -a temp39=()\n    local -a temp40=()\n    local -a temp41=()\n    local\
    \ -a temp42=()\n    local -a temp43=()\n    local -a temp44=()\n    local -a temp45=()\n\
    \    local -a temp46=()\n    local -a temp47=()\n    local -a temp48=()\n    local\
    \ -a temp49=()\n    local -a temp50=()\n    local -a temp51=()\n    local -a temp52=()\n\
    \    local -a temp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_ones=()\n  local -a sorted_result_zeros=()\n\
    \  local -a sorted_result_zeros_ones=()\n  local -a sorted_result_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones=()\n  local -a sorted_result_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones=()\n  local -a sorted_result_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones=()\n  local -a sorted_result_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_zeros_ones=()\n  local -a sorted_result_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones_ones=()\n  local -a sorted_result_zeros_ones_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_zeros_ones=()\n  local -a sorted_result_zeros_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones_ones=()\n  local -a sorted_result_zeros_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones_ones=()\n  local -a sorted_result_ones_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_ones\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_ones_arr=()\n  local -a sorted_zeros_arr=()\n\
    \  local -a final_arr=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a res=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a result=()\n  for i in \"${array[@]}\"; do\n    local\
    \ -i ones=0\n    local -i decimal=$i\n    while (( decimal > 0 )); do\n      ((\
    \ decimal % 2 == 1 )) && (( ones++ ))\n      (( decimal /= 2 ))\n    done\n  \
    \  result[$ones]=\"$i\"\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a temp_arr=()\n  local -a temp_arr2=()\n  local -a temp_arr3=()\n  local\
    \ -a temp_arr4=()\n  local -a temp_arr5=()\n  local -a temp_arr6=()\n  local -a\
    \ temp_arr7=()\n  local -a temp_arr8=()\n  local -a temp_arr9=()\n  local -a temp_arr10=()\n\
    \  local -a temp_arr11=()\n  local -a temp_arr12=()\n  local -a temp_arr13=()\n\
    \  local -a temp_arr14=()\n  local -a temp_arr15=()\n  local -a temp_arr16=()\n\
    \  local -a temp_arr17=()\n  local -a temp_arr18=()\n  local -a temp_arr19=()\n\
    \  local -a temp_arr20=()\n  local -a temp_arr21=()\n  local -a temp_arr22=()\n\
    \  local -a temp_arr23=()\n  local -a temp_arr24=()\n  local -a temp_arr25=()\n\
    \  local -a temp_arr26=()\n  local -a temp_arr27=()\n  local -a temp_arr28=()\n\
    \  local -a temp_arr29=()\n  local -a temp_arr30=()\n  local -a temp_arr31=()\n\
    \  local -a temp_arr32=()\n  local -a temp_arr33=()\n  local -a temp_arr34=()\n\
    \  local -a temp_arr35=()\n  local -a temp_arr36=()\n  local -a temp_arr37=()\n\
    \  local -a temp_arr38=()\n  local -a temp_arr39=()\n  local -a temp_arr40=()\n\
    \  local -a temp_arr41=()\n  local -a temp_arr42=()\n  local -a temp_arr43\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a arr2\n    local -a arr3\n    local -a arr4\n \
    \   local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n \
    \   local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n\
    \    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n\
    \    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n\
    \    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n\
    \    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n\
    \    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n\
    \    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n\
    \    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n\
    \    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n\
    \    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n\
    \    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n\
    \    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n\
    \    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n\
    \    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n\
    \    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -a arr68\n\
    \    local -a arr69\n    local -a arr70\n    local -a arr71\n    local -a arr72\n\
    \    local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  for i in \"${arr[@]}\"; do\n    sorted+=(\"\
    $(printf \"%s\\t%s\\n\" \"$(printf \"%d\" \"$i\" | grep -o 1 | wc -l)\" \"$i\"\
    )\")\n  done\n  IFS=$'\\n' sorted=($(sort -n <<<\"${sorted[*]}\"))\n  IFS=$'\\\
    t' sorted=($(awk '{print $2}' <<<\"${sorted[*]}\"))\n  echo \"[$(printf '\"%s\"\
    , ' \"${sorted[@]}\")]\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpv1h8ij71.sh: line 16: printf: 1 5 2 3 4: invalid number\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  for i in \"${arr[@]}\"; do\n    res+=(\"\
    $(printf '%d %s\\n' \"$(echo \"obase=2; $i\" | bc)\" \"$i\")\")\n  done\n  echo\
    \ \"${res[@]}\" | sort -n | cut -d ' ' -f 2\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -a sorted_final=()\n  local -a final=()\n\
    \  local -a final_result=()\n  local -a final_sorted=()\n  local -a final_sorted_result=()\n\
    \  local -a final_sorted_final=()\n  local -a final_sorted_final_result=()\n \
    \ local -a final_sorted_final_sorted=()\n  local -a final_sorted_final_sorted_result=()\n\
    \  local -a final_sorted_final_sorted_final=()\n  local -a final_sorted_final_sorted_final_result=()\n\
    \  local -a final_sorted_final_sorted_final_sorted=()\n  local -a final_sorted_final_sorted_final_sorted_result=()\n\
    \  local -a final_sorted_final_sorted_final_sorted_final=()\n  local -a final_sorted_final_sorted_final_sorted_final_result=()\n\
    \  local -a final_sorted_final_sorted_final_sorted_final_sorted=()\n  local -a\
    \ final_sorted_final_sorted_final_sorted_final_sorted_result=()\n  local -a final_sorted_final_sorted_final_sorted_final_sorted_final=()\n\
    \  local -a final_sorted_final_sorted_final_sorted_final_sorted_final_result=()\n\
    \  local -a final_sorted_final_sorted_final_sorted_final_sorted_final_sorted=()\n\
    \  local -a final_sorted_final_sorted_final_sorted_final_sorted_final_sorted_result=()\n\
    \  local -a final_sorted_final_sorted_final_\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -a sorted_ones\n  local -a sorted_decimal\n\
    \  local -a sorted_ones_decimal\n  local -a sorted_final\n  local -a sorted_final_ones\n\
    \  local -a sorted_final_decimal\n  local -a sorted_final_ones_decimal\n  local\
    \ -a sorted_final_ones_decimal_final\n  local -a sorted_final_ones_decimal_final_final\n\
    \  local -a sorted_final_ones_decimal_final_final_final\n  local -a sorted_final_ones_decimal_final_final_final_final\n\
    \  local -a sorted_final_ones_decimal_final_final_final_final_final\n  local -a\
    \ sorted_final_ones_decimal_final_final_final_final_final_final\n  local -a sorted_final_ones_decimal_final_final_final_final_final_final_final\n\
    \  local -a sorted_final_ones_decimal_final_final_final_final_final_final_final_final\n\
    \  local -a sorted_final_ones_decimal_final_final_final_final_final_final_final_final_final\n\
    \  local -a sorted_final_ones_decimal_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a sorted_final_ones_decimal_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a sorted_final_ones_decimal_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a sorted_final_ones_decimal_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a sorted_final_ones_decimal_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a sorted_final_ones_decimal_final_final_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local\
    \ -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i\
    \ jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n\
    \  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n \
    \ local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local\
    \ -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local\
    \ -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local\
    \ -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local\
    \ -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local\
    \ -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i c\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n\
    \  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n \n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_ones_arr=()\n  local -a sorted_zeros_arr=()\n\
    \  local -a sorted_new_arr=()\n  local -a sorted_new_ones_arr=()\n  local -a sorted_new_zeros_arr=()\n\
    \  local -a sorted_new_dec_arr=()\n  local -a sorted_new_dec_ones_arr=()\n  local\
    \ -a sorted_new_dec_zeros_arr=()\n  local -a sorted_new_dec_ones_zeros_arr=()\n\
    \  local -a sorted_new_dec_zeros_ones_arr=()\n  local -a sorted_new_dec_zeros_ones_arr_final=()\n\
    \  local -a sorted_new_dec_ones_zeros_arr_final=()\n  local -a sorted_new_dec_arr_final=()\n\
    \  local -a sorted_new_dec_arr_final_final=()\n  local -a sorted_new_dec_arr_final_final_final=()\n\
    \  local -a sorted_new_dec_arr_final_final_final_final=()\n  local -a sorted_new_dec_arr_final_final_final_final_final=()\n\
    \  local -a sorted_new_dec_arr_final_final_final_final_final_final=()\n  local\
    \ -a sorted_new_dec_arr_final_final_final_final_final_final_final=()\n  local\
    \ -a sorted_new_dec_arr_final_final_final_final_final_final_final_final=()\n \
    \ local -a sorted_new_dec_arr_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_new_dec_arr_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_new_dec_arr_final_final_\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a tmp_arr=()\n  local -a bin_arr=()\n\
    \  local -a bin_arr_sorted=()\n  local -a bin_arr_sorted_dec=()\n  local -a bin_arr_sorted_dec_arr=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted=()\n  local -a bin_arr_sorted_dec_arr_sorted_arr=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted=()\n  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted=()\n  local -a\
    \ bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr=()\n  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr_sorted_arr=()\n\
    \  local -a bin_arr_sorted_dec_arr_sorted_arr_sorted_\n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a bin_arr=()\n  local -a bin_arr_sorted=()\n  local -a\
    \ arr_sorted=()\n  local -a ones_arr=()\n  local -a ones_arr_sorted=()\n  local\
    \ -a bin_arr_sorted_dec=()\n  local -a arr_sorted_dec=()\n  local -a ones_arr_sorted_dec=()\n\
    \  local -a arr_sorted_dec_sorted=()\n  local -a arr_sorted_dec_sorted_sorted=()\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted=()\n  local -a arr_sorted_dec_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted=()\n  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_dec_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_dec\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_neg_ones=()\n  local -a arr_neg_zeros=()\n\
    \  local -a arr_pos_ones=()\n  local -a arr_pos_zeros=()\n  local -a arr_neg_ones_sorted=()\n\
    \  local -a arr_neg_zeros_sorted=()\n  local -a arr_pos_ones_sorted=()\n  local\
    \ -a arr_pos_zeros_sorted=()\n  local -a arr_neg_ones_sorted_dec=()\n  local -a\
    \ arr_neg_zeros_sorted_dec=()\n  local -a arr_pos_ones_sorted_dec=()\n  local\
    \ -a arr_pos_zeros_sorted_dec=()\n  local -a arr_neg_ones_sorted_dec_sorted=()\n\
    \  local -a arr_neg_zeros_sorted_dec_sorted=()\n  local -a arr_pos_ones_sorted_dec_sorted=()\n\
    \  local -a arr_pos_zeros_sorted_dec_sorted=()\n  local -a arr_neg_ones_sorted_dec_sorted_sorted=()\n\
    \  local -a arr_neg_zeros_sorted_dec_sorted_sorted=()\n  local -a arr_pos_ones_sorted_dec_sorted_sorted=()\n\
    \  local -a arr_pos_zeros_sorted_dec_sorted_sorted=()\n  local -a arr_neg_ones_sorted_dec_sorted_sorted_sorted=()\n\
    \  local -a arr_neg_zeros_sorted_dec_sorted_sorted_sorted=()\n  local -a arr_pos_ones_s\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n \
    \ local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i\
    \ ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n \
    \ local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i\
    \ ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n \
    \ local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i\
    \ ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n \
    \ local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i\
    \ bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n \
    \ local -i bm=0\n  local -i bn=0\n  local\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local\
    \ -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n\
    \  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local\
    \ -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i\
    \ gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n\
    \  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n \
    \ local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local\
    \ -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local\
    \ -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local\
    \ -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local\
    \ -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local\
    \ -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local\
    \ -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local\
    \ -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i dddd\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_arr=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a arr_sorted\n  local -a arr_sorted_ones\n  local -a arr_sorted_dec\n\
    \  local -a arr_sorted_final\n  local -a arr_sorted_final_final\n  local -a arr_sorted_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final\n  local -a arr_sorted_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final\n  local -a arr_sorted_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final_final\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($@)\n  local -a result=()\n  for i in \"${array[@]}\"; do\n    result+=(\"\
    $(printf \"%d %d\" \"$(echo \"obase=2;$i\" | bc)\" \"$i\")\")\n  done\n  echo\
    \ \"${result[@]}\" | tr ' ' '\\n' | sort -n | cut -d ' ' -f 2 | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ i\n  local j\n  local k\n  local n\n  local m\n  local tmp\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      result+=(\"$i\")\n    else\n      tmp=$(echo\
    \ \"obase=2;$i\" | bc)\n      n=$(echo \"$tmp\" | grep -o 1 | wc -l)\n      if\
    \ [[ $n -eq 0 ]]; then\n        zeros+=(\"$i\")\n      else\n        ones+=(\"\
    $i\")\n      fi\n    fi\n  done\n  if [[ ${#ones[@]} -gt 0 ]]; then\n    for ((i=0;\
    \ i<${#ones[@]}; i++)); do\n      for ((j=i+1; j<${#ones[@]}; j++)); do\n    \
    \    if [[ ${ones[$i]} -gt ${ones[$j]} ]]; then\n          tmp=${ones[$i]}\n \
    \         ones[$i]=${ones[$j]}\n          ones[$j]=$tmp\n        fi\n      done\n\
    \    done\n    for ((i=0; i<${#ones[@]}; i++)); do\n      for ((j=i+1; j<${#ones[@]};\
    \ j++)); do\n        tmp=$(echo \"obase=2;${ones[$i]}\" | bc)\n        n=$(echo\
    \ \"$tmp\" | grep -o 1 | wc -l)\n        tmp=$(echo \"obase=2;${ones[$j]}\" |\
    \ bc)\n        m=$(echo \"$tmp\" | grep -o 1 | wc -l)\n        if [[ $n -eq $m\
    \ ]]; then\n          if [[ ${ones[$i]} -gt ${ones[$j]} ]]; then\n           \
    \ tmp=${ones[$i]}\n            ones[$i]=${ones[$j]}\n            ones[$j]=$tmp\n\
    \          fi\n        fi\n      done\n    done\n  fi\n  if [[ ${#zeros[@]} -\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp1u64myup.sh: line 62: conditional binary operator expected\n/tmp/tmp1u64myup.sh:
    line 62: syntax error near `-''\n/tmp/tmp1u64myup.sh: line 62: `  if [[ ${#zeros[@]}
    -''\n"'
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_arr=()\n\
    \  local -a final_arr=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n\
    \  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a arr2\n  local -a arr3\n  local -a arr4\n  local -a arr5\n\
    \  local -a arr6\n  local -a arr7\n  local -a arr8\n  local -a arr9\n  local -a\
    \ arr10\n  local -a arr11\n  local -a arr12\n  local -a arr13\n  local -a arr14\n\
    \  local -a arr15\n  local -a arr16\n  local -a arr17\n  local -a arr18\n  local\
    \ -a arr19\n  local -a arr20\n  local -a arr21\n  local -a arr22\n  local -a arr23\n\
    \  local -a arr24\n  local -a arr25\n  local -a arr26\n  local -a arr27\n  local\
    \ -a arr28\n  local -a arr29\n  local -a arr30\n  local -a arr31\n  local -a arr32\n\
    \  local -a arr33\n  local -a arr34\n  local -a arr35\n  local -a arr36\n  local\
    \ -a arr37\n  local -a arr38\n  local -a arr39\n  local -a arr40\n  local -a arr41\n\
    \  local -a arr42\n  local -a arr43\n  local -a arr44\n  local -a arr45\n  local\
    \ -a arr46\n  local -a arr47\n  local -a arr48\n  local -a arr49\n  local -a arr50\n\
    \  local -a arr51\n  local -a arr52\n  local -a arr53\n  local -a arr54\n  local\
    \ -a arr55\n  local -a arr56\n  local -a arr57\n  local -a arr58\n  local -a arr59\n\
    \  local -a arr60\n  local -a arr61\n  local -a arr62\n  local -a arr63\n  local\
    \ -a arr64\n  local -a arr65\n  local -a arr66\n  local -a arr67\n  local -a arr68\n\
    \  local -a arr69\n  local -a arr70\n  local -a arr71\n  local -a arr72\n  local\
    \ -a\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i n\n  local -i m\n  local -i p\n\
    \  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local\
    \ -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n\
    \  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local\
    \ -i g\n  local -i h\n  local -i l\n  local -i o\n  local -i p\n  local -i q\n\
    \  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local\
    \ -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n\
    \  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local\
    \ -i h\n  local -i l\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n\
    \  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local\
    \ -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n\
    \  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local\
    \ -i l\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n\
    \  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local\
    \ -i y\n  local -i z\n  local -i a\n \n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  for i in \"${arr[@]}\"\
    ; do\n    local -i num=$i\n    local -i count=0\n    while (( num > 0 )); do\n\
    \      (( num & 1 )) && (( count++ ))\n      (( num >>= 1 ))\n    done\n    ones[$i]=$count\n\
    \  done\n  for i in \"${arr[@]}\"; do\n    res+=($i)\n  done\n  for (( i = 0;\
    \ i < ${#arr[@]}; i++ )); do\n    for (( j = i + 1; j < ${#arr[@]}; j++ )); do\n\
    \      if (( ${ones[${res[$i]}]} > ${ones[${res[$j]}]} )); then\n        local\
    \ tmp=${res[$i]}\n        res[$i]=${res[$j]}\n        res[$j]=$tmp\n      elif\
    \ (( ${ones[${res[$i]}]} == ${ones[${res[$j]}]} )); then\n        if (( ${res[$i]}\
    \ > ${res[$j]} )); then\n          local tmp=${res[$i]}\n          res[$i]=${res[$j]}\n\
    \          res[$j]=$tmp\n        fi\n      fi\n    done\n  done\n  echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmptz1gt0zr.sh: line 17: local: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp_ones=()\n  local -a temp_zeros=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n \
    \ local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ a=($1)\n  local -a b=()\n  local -a c=()\n  local -a d=()\n  local -a e=()\n\
    \  local -a f=()\n  local -a g=()\n  local -a h=()\n  local -a i=()\n  local -a\
    \ j=()\n  local -a k=()\n  local -a l=()\n  local -a m=()\n  local -a n=()\n \
    \ local -a o=()\n  local -a p=()\n  local -a q=()\n  local -a r=()\n  local -a\
    \ s=()\n  local -a t=()\n  local -a u=()\n  local -a v=()\n  local -a w=()\n \
    \ local -a x=()\n  local -a y=()\n  local -a z=()\n  local -a aa=()\n  local -a\
    \ ab=()\n  local -a ac=()\n  local -a ad=()\n  local -a ae=()\n  local -a af=()\n\
    \  local -a ag=()\n  local -a ah=()\n  local -a ai=()\n  local -a aj=()\n  local\
    \ -a ak=()\n  local -a al=()\n  local -a am=()\n  local -a an=()\n  local -a ao=()\n\
    \  local -a ap=()\n  local -a aq=()\n  local -a ar=()\n  local -a as=()\n  local\
    \ -a at=()\n  local -a au=()\n  local -a av=()\n  local -a aw=()\n  local -a ax=()\n\
    \  local -a ay=()\n  local -a az=()\n  local -a ba=()\n  local -a bb=()\n  local\
    \ -a bc=()\n  local -a bd=()\n  local -a be=()\n  local -a bf=()\n  local -a bg=()\n\
    \  local -a bh=()\n  local -a bi=()\n  local -a bj=()\n \n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_sorted_ones=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_final=()\n  local -a arr_sorted_ones_dec=()\n\
    \  local -a arr_sorted_ones_dec_final=()\n  local -a arr_sorted_ones_dec_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final=()\n  local -a arr_sorted_ones_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final_final_final=()\n  local -a arr_sorted_ones_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a sorted=()\n    local -a ones=()\n    local -a\
    \ zeros=()\n    local -a tmp=()\n    local -i i=0\n    local -i j=0\n    local\
    \ -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local\
    \ -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n\
    \    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n \
    \   local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n \
    \   local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n \
    \   local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n \
    \   local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n \
    \   local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n \
    \   local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n\
    \    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n  local\
    \ -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n  local\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a ones_array\n  local -a zeros_array\n  local -a sorted_array\n\
    \  local -a sorted_ones_array\n  local -a sorted_zeros_array\n  local -a sorted_ones_zeros_array\n\
    \  local -a sorted_zeros_ones_array\n  local -a sorted_ones_zeros_array_decimal\n\
    \  local -a sorted_zeros_ones_array_decimal\n  local -a sorted_array_decimal\n\
    \  local -a sorted_array_decimal_ones_zeros\n  local -a sorted_array_decimal_zeros_ones\n\
    \  local -a sorted_array_decimal_ones_zeros_zeros_ones\n  local -a sorted_array_decimal_zeros_ones_ones_zeros\n\
    \  local -a sorted_array_decimal_ones_zeros_zeros_ones_ones_zeros\n  local -a\
    \ sorted_array_decimal_zeros_ones_ones_zeros_zeros_ones\n  local -a sorted_array_decimal_ones_zeros_zeros_ones_zeros_ones\n\
    \  local -a sorted_array_decimal_zeros_ones_zeros_ones_ones_zeros\n  local -a\
    \ sorted_array_decimal_zeros_ones_ones_zeros_ones_zeros\n  local -a sorted_array_decimal_ones_zeros_ones_zeros_zeros_ones\n\
    \  local -a sorted_array_decimal_ones_zeros_zeros_ones_ones_zeros\n  local -a\
    \ sorted_array_decimal_zeros_ones_ones_zeros_zeros_ones\n  local -a sorted_array_decimal_zeros_ones_zeros_ones_zeros_ones\n\
    \  local -a sorted_array_decimal_zeros_ones_zeros_ones_ones_zeros\n  local -a\
    \ sorted_array_decimal_ones_zeros_ones_zeros_ones_zeros\n  local -a sorted_array_decimal_ones_zeros_zeros_ones_zeros_ones\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  for i in \"${arr[@]}\"; do\n    local\
    \ -a tmp_arr=()\n    tmp_arr+=(\"$i\")\n    tmp_arr+=(\"$(echo \"obase=2;$i\"\
    \ | bc | grep -o 1 | wc -l)\")\n    new_arr+=(\"${tmp_arr[@]}\")\n  done\n  local\
    \ -a sorted_arr=()\n  for i in \"${new_arr[@]}\"; do\n    local -a tmp_arr=()\n\
    \    tmp_arr+=(\"$(echo \"$i\" | cut -d ' ' -f 1)\")\n    tmp_arr+=(\"$(echo \"\
    $i\" | cut -d ' ' -f 2)\")\n    sorted_arr+=(\"${tmp_arr[@]}\")\n  done\n  sorted_arr=($(printf\
    \ '%s\\n' \"${sorted_arr[@]}\" | sort -k2 -n -t ' '))\n  local -a final_arr=()\n\
    \  for i in \"${sorted_arr[@]}\"; do\n    local -a tmp_arr=()\n    tmp_arr+=(\"\
    $(echo \"$i\" | cut -d ' ' -f 1)\")\n    tmp_arr+=(\"$(echo \"$i\" | cut -d '\
    \ ' -f 2)\")\n    final_arr+=(\"${tmp_arr[@]}\")\n  done\n  local -a final_arr2=()\n\
    \  for i in \"${final_arr[@]}\"; do\n    local -a tmp_arr=()\n    tmp_arr+=(\"\
    $(echo \"$i\" | cut -d ' ' -f 1)\")\n    final_arr2+=(\"${tmp_arr[@]}\")\n  done\n\
    \  echo \"${final_arr2[@]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a sorted=()\n  local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local\
    \ -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local\
    \ -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n\
    \  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i\
    \ bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n \
    \ local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_sorted_final=()\n  local -a arr_sorted_final_neg=()\n\
    \  local -a arr_sorted_final_pos=()\n  local -a arr_sorted_final_neg_pos=()\n\
    \  local -a arr_sorted_final_pos_neg=()\n  local -a arr_sorted_final_neg_pos_sorted=()\n\
    \  local -a arr_sorted_final_pos_neg_sorted=()\n  local -a arr_sorted_final_neg_pos_sorted_final=()\n\
    \  local -a arr_sorted_final_pos_neg_sorted_final=()\n  local -a arr_sorted_final_neg_pos_sorted_final_final=()\n\
    \  local -a arr_sorted_final_pos_neg_sorted_final_final=()\n  local -a arr_sorted_final_neg_pos_sorted_final_final_final=()\n\
    \  local -a arr_sorted_final_pos_neg_sorted_final_final_final=()\n  local -a arr_sorted_final_neg_pos_sorted_final_final_final_final=()\n\
    \  local -a arr_sorted_final_pos_neg_sorted_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_neg_pos_sorted_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_pos_neg_sorted_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_neg_pos_sorted_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_pos_\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local\
    \ -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i\
    \ jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n\
    \  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n \
    \ local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local\
    \ -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local\
    \ -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local\
    \ -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local\
    \ -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local\
    \ -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i c\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -i i j\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    local -i ones=0\n    local -i num=${arr[i]}\n    local -i num_dec=${arr[i]}\n\
    \    if ((num < 0)); then\n      num_dec=$((num * -1))\n    fi\n    while ((num\
    \ > 0)); do\n      if ((num % 2 == 1)); then\n        ((ones++))\n      fi\n \
    \     ((num /= 2))\n    done\n    new_arr[ones]=$num_dec\n  done\n  for ((i=0;\
    \ i<${#new_arr[@]}; i++)); do\n    for ((j=i+1; j<${#new_arr[@]}; j++)); do\n\
    \      if [[ -z ${new_arr[i]} ]]; then\n        new_arr[i]=${new_arr[j]}\n   \
    \     unset new_arr[j]\n      elif [[ -z ${new_arr[j]} ]]; then\n        continue\n\
    \      elif ((new_arr[i] > new_arr[j])); then\n        local -i temp=${new_arr[i]}\n\
    \        new_arr[i]=${new_arr[j]}\n        new_arr[j]=$temp\n      fi\n    done\n\
    \  done\n  for ((i=0; i<${#new_arr[@]}; i++)); do\n    if ((new_arr[i] < 0));\
    \ then\n      new_arr[i]=$((new_arr[i] * -1))\n    fi\n    echo -n \"\\\"${new_arr[i]}\\\
    \" \"\n  done\n  echo\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7q0iovgr.sh: line 18: local: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  for i in \"${arr[@]}\"; do\n    res+=(\"\
    $(printf \"%s %s\" \"$(echo \"obase=2;$i\" | bc)\" \"$i\")\")\n  done\n  IFS=$'\\\
    n' sorted=($(sort <<<\"${res[*]}\"))\n  IFS=$' '\n  for i in \"${sorted[@]}\"\
    ; do\n    echo -n '\"'\n    echo -n \"${i##* }\"\n    echo -n '\"'\n    echo -n\
    \ ' '\n  done\n  echo\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n    local\
    \ -a arr=(\"$@\")\n    local -a ones\n    local -a zeros\n    local -a sorted\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\
    \ m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local\
    \ -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n\
    \    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local\
    \ -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n\
    \    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local\
    \ -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n\
    \    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local\
    \ -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n\
    \    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local\
    \ -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n\
    \    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local\
    \ -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n\
    \    local -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i c\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array\n  local -a result\n  local -i i\n  local -i j\n  local -i k\n  local\
    \ -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n\
    \  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local\
    \ -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n\
    \  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n \
    \ local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local\
    \ -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i\
    \ rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n\
    \  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n\
    \  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n\
    \  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n\
    \  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n\
    \  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n\
    \  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n\
    \  local -i bbbb\n  local -i cccc\n  local -i dddd\n  local -i eeee\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result\n  local -a ones\n  local -a zeros\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local\
    \ -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i\
    \ jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n\
    \  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n \
    \ local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local\
    \ -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local\
    \ -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local\
    \ -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local\
    \ -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local\
    \ -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i c\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones\n  local -a zeros\n  local -a result\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n \
    \ local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i\
    \ ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n \
    \ local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i\
    \ ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n \
    \ local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i\
    \ ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n \
    \ local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i\
    \ bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n \
    \ local -i bm=0\n  local -i bn=0\n  local\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=()\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n  local\
    \ -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local -a temp52=()\n  local -a temp53=()\n  local\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a bin\n  local -a res\n  local -i i\n  local -i j\n \
    \ local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local\
    \ -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n\
    \  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local\
    \ -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i\
    \ ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n\
    \  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n \
    \ local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local\
    \ -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i\
    \ aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local\
    \ -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local\
    \ -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local\
    \ -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local\
    \ -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local\
    \ -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_res=()\n  local -a sorted_res_ones=()\n  local -a sorted_res_zeros=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=()\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n  local\
    \ -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n  local\
    \ -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr57=()\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -a sorted_ones_result=()\n  local -a sorted_zeros_result=()\n\
    \  local -a sorted_result_result=()\n  local -a sorted_ones_result_result=()\n\
    \  local -a sorted_zeros_result_result=()\n  local -a sorted_result_result_result=()\n\
    \  local -a sorted_ones_result_result_result=()\n  local -a sorted_zeros_result_result_result=()\n\
    \  local -a sorted_result_result_result_result=()\n  local -a sorted_ones_result_result_result_result=()\n\
    \  local -a sorted_zeros_result_result_result_result=()\n  local -a sorted_result_result_result_result_result=()\n\
    \  local -a sorted_ones_result_result_result_result_result=()\n  local -a sorted_zeros_result_result_result_result_result=()\n\
    \  local -a sorted_result_result_result_result_result_result=()\n  local -a sorted_ones_result_result_result_result_result_result=()\n\
    \  local -a sorted_zeros_result_result_result_result_result_result=()\n  local\
    \ -a sorted_result_result_result_result_result_result_result=()\n  local -a sorted_ones_result_result_result_result_result_result_result=()\n\
    \  local -a sorted_zeros_result_result_result_result_result_result_result=()\n\
    \  local -a sorted_result_result_result_result_result_result_result_result=()\n\
    \  local -a sorted_ones_result_result_result_result_result_result_result_result=()\n\
    \  local -a sorted_zeros_result_result_result_result_result_result_result_result=\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a result\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n\
    \  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n\
    \  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local\
    \ ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n\
    \  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local\
    \ vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n\
    \  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n\
    \  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n\
    \  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n\
    \  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n\
    \  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local\
    \ ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n\
    \  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local\
    \ qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n\
    \  local wwww\n  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n  local\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n \
    \ local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res\n  local -a ones\n  local -a zeros\n  local -a\
    \ sorted\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local\
    \ -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local\
    \ -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local\
    \ -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local\
    \ -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n\
    \  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i\
    \ kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n \
    \ local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i\
    \ tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n \
    \ local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local\
    \ -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n\
    \  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local\
    \ -i lll=0\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_sorted_neg=()\n  local -a arr_sorted_pos=()\n\
    \  local -a arr_sorted_neg_ones=()\n  local -a arr_sorted_pos_ones=()\n  local\
    \ -a arr_sorted_neg_zeros=()\n  local -a arr_sorted_pos_zeros=()\n  local -a arr_sorted_neg_ones_sorted=()\n\
    \  local -a arr_sorted_pos_ones_sorted=()\n  local -a arr_sorted_neg_zeros_sorted=()\n\
    \  local -a arr_sorted_pos_zeros_sorted=()\n  local -a arr_sorted_neg_ones_sorted_dec=()\n\
    \  local -a arr_sorted_pos_ones_sorted_dec=()\n  local -a arr_sorted_neg_zeros_sorted_dec=()\n\
    \  local -a arr_sorted_pos_zeros_sorted_dec=()\n  local -a arr_sorted_neg_ones_sorted_dec_sorted=()\n\
    \  local -a arr_sorted_pos_ones_sorted_dec_sorted=()\n  local -a arr_sorted_neg_zeros_sorted_dec_sorted=()\n\
    \  local -a arr_sorted_pos_zeros_sorted_dec_sorted=()\n  local -a arr_sorted_neg_ones_sorted_dec_sorted_neg=()\n\
    \  local -a arr_sorted_pos_ones_sorted_dec_sorted_neg=()\n  local -a arr_sorted_neg_zeros_sorted_dec_sorted_neg=()\n\
    \  local -a arr_sorted\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_arr=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_new_arr=()\n  local -a sorted_arr=()\n  local -a sorted_arr_final=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a ones=()\n  local -a zeros=()\n \
    \ local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_res=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_sorted_final=()\n  local -a arr_sorted_final_neg=()\n\
    \  local -a arr_sorted_final_pos=()\n  local -a arr_sorted_final_neg_ones=()\n\
    \  local -a arr_sorted_final_neg_zeros=()\n  local -a arr_sorted_final_pos_ones=()\n\
    \  local -a arr_sorted_final_pos_zeros=()\n  local -a arr_sorted_final_neg_ones_sorted=()\n\
    \  local -a arr_sorted_final_neg_zeros_sorted=()\n  local -a arr_sorted_final_pos_ones_sorted=()\n\
    \  local -a arr_sorted_final_pos_zeros_sorted=()\n  local -a arr_sorted_final_neg_ones_sorted_dec=()\n\
    \  local -a arr_sorted_final_neg_zeros_sorted_dec=()\n  local -a arr_sorted_final_pos_ones_sorted_dec=()\n\
    \  local -a arr_sorted_final_pos_zeros_sorted_dec=()\n  local -a arr_sorted_final_neg_ones_sorted_dec_sorted=()\n\
    \  local -a arr_sorted_final_neg_zeros_sorted_dec_sorted=()\n  local -a arr_sorted_final_pos_ones_sorted_dec_sorted=()\n\
    \  local -a arr_sorted_final_pos_zeros_sorted_dec_sorted=()\n  local -a arr_sorted_final_neg_ones_sorted_dec_sorted_final=()\n\
    \  local -a arr_sorted\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a ones_dec=()\n  local -a zeros_dec=()\n  local -a sorted_ones=()\n\
    \  local -a sorted_zeros=()\n  local -a sorted_ones_dec=()\n  local -a sorted_zeros_dec=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_dec=()\n  local -a sorted_result_final=()\n\
    \  local -a sorted_result_final_dec=()\n  local -a sorted_result_final_dec_final=()\n\
    \  local -a sorted_result_final_dec_final_final=()\n  local -a sorted_result_final_dec_final_final_final=()\n\
    \  local -a sorted_result_final_dec_final_final_final_final=()\n  local -a sorted_result_final_dec_final_final_final_final_final=()\n\
    \  local -a sorted_result_final_dec_final_final_final_final_final_final=()\n \
    \ local -a sorted_result_final_dec_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_result_final_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_result_final_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_result_final_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_result_final_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_result_final_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a sorted_result_final_dec_final_final_final_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr_sorted=()\n  local -a arr_ones=()\n  local -a arr_zeros=()\n\
    \  local -a arr_neg=()\n  local -a arr_pos=()\n  local -a arr_neg_sorted=()\n\
    \  local -a arr_pos_sorted=()\n  local -a arr_sorted_neg=()\n  local -a arr_sorted_pos=()\n\
    \  local -a arr_sorted_neg_ones=()\n  local -a arr_sorted_pos_ones=()\n  local\
    \ -a arr_sorted_neg_zeros=()\n  local -a arr_sorted_pos_zeros=()\n  local -a arr_sorted_neg_zeros_sorted=()\n\
    \  local -a arr_sorted_pos_zeros_sorted=()\n  local -a arr_sorted_neg_ones_sorted=()\n\
    \  local -a arr_sorted_pos_ones_sorted=()\n  local -a arr_sorted_neg_sorted=()\n\
    \  local -a arr_sorted_pos_sorted=()\n  local -a arr_sorted_sorted=()\n  local\
    \ -a arr_sorted_sorted_sorted=()\n  local -a arr_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_sorted_sorted_sorted_sorted=()\n  local -a arr_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n  local -a\
    \ arr_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n  local -a arr_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res=()\n  local -a bin=()\n  local -a ones=()\n  local\
    \ -a dec=()\n  local -a sorted=()\n  local -a sorted_dec=()\n  local -a sorted_ones=()\n\
    \  local -a sorted_res=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_arr=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a ones=()\n  local -a zeros=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=${#arr[@]}\n  local\
    \ -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local\
    \ -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local\
    \ -i l=0\n  local -i o=0\n  local -i one=0\n  local -i zero=0\n  local -i temp=0\n\
    \  local -i temp1=0\n  local -i temp2=0\n  local -i temp3=0\n  local -i temp4=0\n\
    \  local -i temp5=0\n  local -i temp6=0\n  local -i temp7=0\n  local -i temp8=0\n\
    \  local -i temp9=0\n  local -i temp10=0\n  local -i temp11=0\n  local -i temp12=0\n\
    \  local -i temp13=0\n  local -i temp14=0\n  local -i temp15=0\n  local -i temp16=0\n\
    \  local -i temp17=0\n  local -i temp18=0\n  local -i temp19=0\n  local -i temp20=0\n\
    \  local -i temp21=0\n  local -i temp22=0\n  local -i temp23=0\n  local -i temp24=0\n\
    \  local -i temp25=0\n  local -i temp26=0\n  local -i\n}\n\ncandidate() {\n  \
    \  sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n\
    \  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n\
    \  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_ones=()\n  local -a sorted_result_zeros=()\n\
    \  local -a sorted_result_zeros_ones=()\n  local -a sorted_result_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones=()\n  local -a sorted_result_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones=()\n  local -a sorted_result_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones=()\n  local -a sorted_result_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_zeros_ones=()\n  local -a sorted_result_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_ones_ones_ones=()\n  local -a sorted_result_zeros_ones_ones_zeros=()\n\
    \  local -a sorted_result_zeros_ones_zeros_ones=()\n  local -a sorted_result_zeros_ones_zeros_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_ones_ones=()\n  local -a sorted_result_zeros_zeros_ones_zeros=()\n\
    \  local -a sorted_result_zeros_zeros_zeros_ones=()\n  local -a sorted_result_zeros_zeros_zeros_zeros=()\n\
    \  local -a sorted_result_ones_ones_ones_ones=()\n  local -a sorted_result_ones_ones_ones_zeros=()\n\
    \  local -a sorted_result_ones_\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_arr=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n\
    \  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i\
    \ ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n \
    \ local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i\
    \ ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n \
    \ local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i\
    \ ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n \
    \ local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i\
    \ bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n \
    \ local -i bo=0\n  local -i b\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a result\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i\
    \ m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local\
    \ -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n\
    \  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local\
    \ -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i\
    \ ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n\
    \  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n \
    \ local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local\
    \ -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local\
    \ -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local\
    \ -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local\
    \ -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local\
    \ -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local\
    \ -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a res\n  local -a bin\n  local -a bin_sorted\n  local\
    \ -a sorted\n  local -a bin_sorted_dec\n  local -a dec_sorted\n  local -a final\n\
    \  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n\
    \  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n\
    \  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n\
    \  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local\
    \ jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n\
    \  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local\
    \ ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n\
    \  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n\
    \  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n\
    \  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n\
    \  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n\
    \  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local\
    \ gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n\
    \  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local\
    \ rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_zeros=()\n  local -a sorted_array=()\n\
    \  local -a final_array=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n\
    \  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a bin_arr=()\n  local -a ones_arr=()\n\
    \  local -a sorted_arr=()\n  local -a final_arr=()\n  local -i i=0\n  local -i\
    \ j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n\
    \  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i\
    \ hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n \
    \ local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i\
    \ qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n \
    \ local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i\
    \ zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n\
    \  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local\
    \ -i iii=0\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a result\n  local i\n  local j\n  local k\n  local num\n  local bin\n  local\
    \ ones_count\n  local zeros_count\n  for ((i=0; i<${#arr[@]}; i++)); do\n    num=${arr[$i]}\n\
    \    bin=$(echo \"obase=2;$num\" | bc)\n    ones_count=$(echo \"$bin\" | grep\
    \ -o 1 | wc -l)\n    zeros_count=$(echo \"$bin\" | grep -o 0 | wc -l)\n    if\
    \ [[ $ones_count -gt $zeros_count ]]; then\n      ones+=(\"$num\")\n    else\n\
    \      zeros+=(\"$num\")\n    fi\n  done\n  sorted=($(printf \"%s\\n\" \"${ones[@]}\"\
    \ | sort -n))\n  sorted+=($(printf \"%s\\n\" \"${zeros[@]}\" | sort -n))\n  for\
    \ ((i=0; i<${#sorted[@]}; i++)); do\n    result+=(\"\\\"${sorted[$i]}\\\"\")\n\
    \  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a arr2=()\n  local -a arr3=()\n  local -a arr4=()\n \
    \ local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n  local -a arr8=()\n\
    \  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n  local -a arr12=()\n\
    \  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n  local -a arr16=()\n\
    \  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n  local -a arr20=()\n\
    \  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n  local -a arr24=()\n\
    \  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n  local -a arr28=()\n\
    \  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n  local -a arr32=()\n\
    \  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n  local -a arr36=()\n\
    \  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n  local -a arr40=()\n\
    \  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n  local -a arr44=()\n\
    \  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n  local -a arr48=()\n\
    \  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n  local -a arr52=()\n\
    \  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n  local -a arr56=()\n\
    \  local -a arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a new_arr=()\n  local -a tmp_arr=()\n  local -a tmp_arr2=()\n\
    \  local -a tmp_arr3=()\n  local -a tmp_arr4=()\n  local -a tmp_arr5=()\n  local\
    \ -a tmp_arr6=()\n  local -a tmp_arr7=()\n  local -a tmp_arr8=()\n  local -a tmp_arr9=()\n\
    \  local -a tmp_arr10=()\n  local -a tmp_arr11=()\n  local -a tmp_arr12=()\n \
    \ local -a tmp_arr13=()\n  local -a tmp_arr14=()\n  local -a tmp_arr15=()\n  local\
    \ -a tmp_arr16=()\n  local -a tmp_arr17=()\n  local -a tmp_arr18=()\n  local -a\
    \ tmp_arr19=()\n  local -a tmp_arr20=()\n  local -a tmp_arr21=()\n  local -a tmp_arr22=()\n\
    \  local -a tmp_arr23=()\n  local -a tmp_arr24=()\n  local -a tmp_arr25=()\n \
    \ local -a tmp_arr26=()\n  local -a tmp_arr27=()\n  local -a tmp_arr28=()\n  local\
    \ -a tmp_arr29=()\n  local -a tmp_arr30=()\n  local -a tmp_arr31=()\n  local -a\
    \ tmp_arr32=()\n  local -a tmp_arr33=()\n  local -a tmp_arr34=()\n  local -a tmp_arr35=()\n\
    \  local -a tmp_arr36=()\n  local -a tmp_arr37=()\n  local -a tmp_arr38=()\n \
    \ local -a tmp_arr39=()\n  local -a tmp_arr40=()\n  local -a tmp_arr41=()\n  local\
    \ -a tmp_arr42=()\n  local -a tmp_arr43=()\n  local -a tmp_arr44=()\n  local -a\
    \ tmp_arr\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=($1)\n  local -a sorted_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a sorted_ones_arr=()\n  local -a sorted_zeros_arr=()\n  local -a result_arr=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n\
    \  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n\
    \  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i\
    \ dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n \
    \ local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=($1)\n  local -a result=()\n  local -a ones=()\n  local -a zeros=()\n\
    \  local -a sorted=()\n  local -a sorted_zeros=()\n  local -a sorted_ones=()\n\
    \  local -a sorted_result=()\n  local -a sorted_result_zeros=()\n  local -a sorted_result_ones=()\n\
    \  for i in \"${array[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      result+=($i)\n\
    \    else\n      local binary=$(echo \"obase=2; $i\" | bc)\n      local count=$(echo\
    \ \"$binary\" | grep -o 1 | wc -l)\n      if [[ $count -eq 0 ]]; then\n      \
    \  zeros+=($i)\n      else\n        ones+=($i)\n      fi\n    fi\n  done\n  for\
    \ i in \"${ones[@]}\"; do\n    local binary=$(echo \"obase=2; $i\" | bc)\n   \
    \ local count=$(echo \"$binary\" | grep -o 1 | wc -l)\n    sorted_ones+=($count)\n\
    \  done\n  for i in \"${zeros[@]}\"; do\n    local binary=$(echo \"obase=2; $i\"\
    \ | bc)\n    local count=$(echo \"$binary\" | grep -o 1 | wc -l)\n    sorted_zeros+=($count)\n\
    \  done\n  sorted_ones=($(printf \"%s\\n\" \"${sorted_ones[@]}\" | sort -n))\n\
    \  sorted_zeros=($(printf \"%s\\n\" \"${sorted_zeros[@]}\" | sort -n))\n  for\
    \ i in \"${sorted_ones[@]}\"; do\n    for j in \"${ones[@]}\"; do\n      local\
    \ binary=$(echo \"obase=2; $j\" | bc)\n      local count=$(echo \"$binary\" |\
    \ grep -o 1 | wc -l)\n      if [[ $count -eq $i ]]; then\n        sorted_result_ones+=($j)\n\
    \      fi\n    done\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmplw1944p3.sh: line 57: syntax error near unexpected token `}''\n/tmp/tmplw1944p3.sh:
    line 57: `}''\n"'
  stdout: b''
  timestamp: 1660343310
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ array=(\"$@\")\n  local -a sorted\n  local -a ones\n  local -a zeros\n  local\
    \ -a result\n  local i\n  local j\n  local k\n  local temp\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    temp=${array[$i]}\n    temp=${temp//-/}\n    sorted[$i]=$(printf\
    \ \"%08d\" $(echo \"obase=2; $temp\" | bc))\n  done\n  for ((i=0; i<${#sorted[@]};\
    \ i++)); do\n    temp=${sorted[$i]}\n    temp=${temp//0/}\n    ones[$i]=${#temp}\n\
    \  done\n  for ((i=0; i<${#sorted[@]}; i++)); do\n    temp=${sorted[$i]}\n   \
    \ temp=${temp//1/}\n    zeros[$i]=${#temp}\n  done\n  for ((i=0; i<${#sorted[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#sorted[@]}; j++)); do\n      if [[ ${ones[$i]}\
    \ -gt ${ones[$j]} ]]; then\n        temp=${ones[$i]}\n        ones[$i]=${ones[$j]}\n\
    \        ones[$j]=$temp\n        temp=${zeros[$i]}\n        zeros[$i]=${zeros[$j]}\n\
    \        zeros[$j]=$temp\n        temp=${sorted[$i]}\n        sorted[$i]=${sorted[$j]}\n\
    \        sorted[$j]=$temp\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n\
    \        array[$j]=$temp\n      elif [[ ${ones[$i]} -eq ${ones[$j]} ]]; then\n\
    \        if [[ ${zeros[$i]} -gt ${zeros[$j]} ]]; then\n          temp=${ones[$i]}\n\
    \          ones[$i]=${ones[$j]}\n          ones[\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpod_v0ict.sh: line 56: unexpected EOF while looking for matching
    `]''\n/tmp/tmpod_v0ict.sh: line 76: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660343310
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\nsort_array() {\n  local -a\
    \ arr=(\"$@\")\n  local -a sorted_arr=()\n  local -a ones_arr=()\n  local -a zeros_arr=()\n\
    \  local -a temp_arr=()\n  local -a temp_arr_2=()\n  local -a temp_arr_3=()\n\
    \  local -a temp_arr_4=()\n  local -a temp_arr_5=()\n  local -a temp_arr_6=()\n\
    \  local -a temp_arr_7=()\n  local -a temp_arr_8=()\n  local -a temp_arr_9=()\n\
    \  local -a temp_arr_10=()\n  local -a temp_arr_11=()\n  local -a temp_arr_12=()\n\
    \  local -a temp_arr_13=()\n  local -a temp_arr_14=()\n  local -a temp_arr_15=()\n\
    \  local -a temp_arr_16=()\n  local -a temp_arr_17=()\n  local -a temp_arr_18=()\n\
    \  local -a temp_arr_19=()\n  local -a temp_arr_20=()\n  local -a temp_arr_21=()\n\
    \  local -a temp_arr_22=()\n  local -a temp_arr_23=()\n  local -a temp_arr_24=()\n\
    \  local -a temp_arr_25=()\n  local -a temp_arr_26=()\n  local -a temp_arr_27=()\n\
    \  local -a temp_arr_28=()\n  local -a temp_arr_29=()\n  local -a temp_arr_30=()\n\
    \  local -a temp_arr_31=()\n  local -a temp_arr_32=()\n  local -a temp_arr_33=()\n\
    \  local -a temp_arr_34=()\n  local -a temp_arr_35=()\n  local -a temp_arr_36=()\n\
    \  local -a temp_arr_37=()\n  local -a temp_arr_38=()\n  local -a temp_arr_39=()\n\
    \  local -\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343310

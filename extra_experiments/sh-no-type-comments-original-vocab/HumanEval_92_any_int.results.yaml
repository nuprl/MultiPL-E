language: sh
name: HumanEval_92_any_int
results:
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq $(($2 + $3)) ] || [ $2\
    \ -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n    \
    \  echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1 +\
    \ $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2+$3 || $2 -eq $1+$3 || $3 -eq\
    \ $1+$2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n    \
    \  echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1 +\
    \ $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpg45i0hnw.sh: line 16: syntax error in conditional expression\n/tmp/tmpg45i0hnw.sh:
    line 16: syntax error near `+''\n/tmp/tmpg45i0hnw.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$\
    \ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq $(($2 + $3)) ] || [ $2\
    \ -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1 +\
    \ $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~\
    \ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n        if [ $1 -eq $(($2 + $3))\
    \ ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"Usage: any_int <int1> <int2> <int3>\"\n        return 1\n    fi\n    if [[\
    \ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n\
    \        if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3 ] || [ $3 -eq $1 + $2 ]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpzegsz3wo.sh: line 20: [: too many arguments\n/tmp/tmpzegsz3wo.sh:
    line 20: [: too many arguments\n/tmp/tmpzegsz3wo.sh: line 20: [: too many arguments\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $# -ne 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [[ $1 -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] ||\
    \ [[ $3 -eq $1 + $2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpi5vjvdwh.sh: line 19: syntax error in conditional expression\n/tmp/tmpi5vjvdwh.sh:
    line 19: syntax error near `+''\n/tmp/tmpi5vjvdwh.sh: line 19: `  if [[ $1 -eq
    $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $(($1 + $2)) -eq $3 || $(($1 + $3))\
    \ -eq $2 || $(($2 + $3)) -eq $1 ]]; then\n      echo \"true\"\n    else\n    \
    \  echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3\
    \ ] || [ $3 -eq $1 + $2 ]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp0qqbos98.sh: line 16: [: too many arguments\n/tmp/tmp0qqbos98.sh:
    line 16: [: too many arguments\n/tmp/tmp0qqbos98.sh: line 16: [: too many arguments\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2+$3 || $2 -eq $1+$3 || $3 -eq\
    \ $1+$2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [ \"$1\" -eq \"$(($2 + $3))\"\
    \ ] || [ \"$2\" -eq \"$(($1 + $3))\" ] || [ \"$3\" -eq \"$(($1 + $2))\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv2yblo2d.sh: line 15: [: 2.5: integer expression expected\n/tmp/tmpv2yblo2d.sh:
    line 15: 2.5 + 3: syntax error: invalid arithmetic operator (error token is ".5
    + 3")\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] &&\
    \ [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq $(($1\
    \ + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"true\"\n    else\n \
    \     echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ \"$1\" =~ ^[0-9]+$ && \"$2\"\
    \ =~ ^[0-9]+$ && \"$3\" =~ ^[0-9]+$ ]]; then\n        if [[ \"$1\" -eq \"$2\"\
    \ + \"$3\" ]] || [[ \"$2\" -eq \"$1\" + \"$3\" ]] || [[ \"$3\" -eq \"$1\" + \"\
    $2\" ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81_tw7jd.sh: line 16: syntax error in conditional expression\n/tmp/tmp81_tw7jd.sh:
    line 16: syntax error near `+\''\n/tmp/tmp81_tw7jd.sh: line 16: `        if [[
    "$1" -eq "$2" + "$3" ]] || [[ "$2" -eq "$1" + "$3" ]] || [[ "$3" -eq "$1" + "$2"
    ]]; then\''\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1 +\
    \ $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 -eq $2 + $3 ]] || [[ $2\
    \ -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpy9vf9gvf.sh: line 15: syntax error in conditional expression\n/tmp/tmpy9vf9gvf.sh:
    line 15: syntax error near `+''\n/tmp/tmpy9vf9gvf.sh: line 15: `    if [[ $1 -eq
    $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a =~ ^-?[0-9]+$ && $b =~ ^-?[0-9]+$ && $c =~ ^-?[0-9]+$ ]];\
    \ then\n        if [[ $a -eq $b + $c || $b -eq $a + $c || $c -eq $a + $b ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmps9siylm6.sh: line 19: syntax error in conditional expression\n/tmp/tmps9siylm6.sh:
    line 19: syntax error near `+''\n/tmp/tmps9siylm6.sh: line 19: `        if [[
    $a -eq $b + $c || $b -eq $a + $c || $c -eq $a + $b ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n    \
    \  echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n    \
    \  echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2+$3 || $2 -eq $1+$3 || $3 -eq\
    \ $1+$2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 == *.* ]] || [[ $2 == *.*\
    \ ]] || [[ $3 == *.* ]]; then\n        echo \"false\"\n    elif [[ $1 -eq $2 +\
    \ $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp4a6rdegl.sh: line 17: syntax error in conditional expression\n/tmp/tmp4a6rdegl.sh:
    line 17: syntax error near `+''\n/tmp/tmp4a6rdegl.sh: line 17: `    elif [[ $1
    -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$\
    \ ]] && [[ $3 =~ ^-?[0-9]+$ ]]; then\n    if [ $1 -eq $2 + $3 ] || [ $2 -eq $1\
    \ + $3 ] || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpyftgfxnf.sh: line 20: [: too many arguments\n/tmp/tmpyftgfxnf.sh:
    line 20: [: too many arguments\n/tmp/tmpyftgfxnf.sh: line 20: [: too many arguments\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1 +\
    \ $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] &&\
    \ [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $2 + $3 ] || [ $2 -eq $1 + $3 ]\
    \ || [ $3 -eq $1 + $2 ]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpo8ijzrzy.sh: line 20: [: too many arguments\n/tmp/tmpo8ijzrzy.sh:
    line 20: [: too many arguments\n/tmp/tmpo8ijzrzy.sh: line 20: [: too many arguments\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"false\"\n        return 1\n    fi\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~\
    \ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq $(($2 + $3))\
    \ ] || [ $2 -eq $(($1 + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n \
    \       echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 == *.* ]] || [[ $2 == *.*\
    \ ]] || [[ $3 == *.* ]]; then\n        echo \"false\"\n    elif [[ $1 -eq $(($2\
    \ + $3)) ]] || [[ $2 -eq $(($1 + $3)) ]] || [[ $3 -eq $(($1 + $2)) ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 == $2 + $3 || $2 == $1 +\
    \ $3 || $3 == $1 + $2 ]] && [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$ && $3 =~ ^-?[0-9]+$\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpay68z_xa.sh: line 15: syntax error in conditional expression\n/tmp/tmpay68z_xa.sh:
    line 15: syntax error near `+''\n/tmp/tmpay68z_xa.sh: line 15: `    if [[ $1 ==
    $2 + $3 || $2 == $1 + $3 || $3 == $1 + $2 ]] && [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$
    && $3 =~ ^-?[0-9]+$ ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ \"$1\" =~ ^-?[0-9]+$ && \"\
    $2\" =~ ^-?[0-9]+$ && \"$3\" =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 +\
    \ $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmppwsgejg6.sh: line 16: syntax error in conditional expression\n/tmp/tmppwsgejg6.sh:
    line 16: syntax error near `+''\n/tmp/tmppwsgejg6.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n    \
    \  echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1 +\
    \ $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 == *.* ]] || [[ $2 == *.*\
    \ ]] || [[ $3 == *.* ]]; then\n        echo \"false\"\n    elif [[ $1 -eq $2 +\
    \ $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp4a6rdegl.sh: line 17: syntax error in conditional expression\n/tmp/tmp4a6rdegl.sh:
    line 17: syntax error near `+''\n/tmp/tmp4a6rdegl.sh: line 17: `    elif [[ $1
    -eq $2 + $3 ]] || [[ $2 -eq $1 + $3 ]] || [[ $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n    \
    \  echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 == $2+$3 || $2 == $1+$3 || $3 == $1+$2\
    \ ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ \"$1\" =~ ^[0-9]+$ && \"$2\"\
    \ =~ ^[0-9]+$ && \"$3\" =~ ^[0-9]+$ ]]; then\n        if [[ \"$1\" -eq \"$2\"\
    \ + \"$3\" ]] || [[ \"$2\" -eq \"$1\" + \"$3\" ]] || [[ \"$3\" -eq \"$1\" + \"\
    $2\" ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp81_tw7jd.sh: line 16: syntax error in conditional expression\n/tmp/tmp81_tw7jd.sh:
    line 16: syntax error near `+\''\n/tmp/tmp81_tw7jd.sh: line 16: `        if [[
    "$1" -eq "$2" + "$3" ]] || [[ "$2" -eq "$1" + "$3" ]] || [[ "$3" -eq "$1" + "$2"
    ]]; then\''\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ \"$1\" =~ ^[0-9]+$ && \"$2\"\
    \ =~ ^[0-9]+$ && \"$3\" =~ ^[0-9]+$ ]]; then\n    if [[ \"$1\" -eq \"$2\" + \"\
    $3\" ]] || [[ \"$2\" -eq \"$1\" + \"$3\" ]] || [[ \"$3\" -eq \"$1\" + \"$2\" ]];\
    \ then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcbivlimr.sh: line 16: syntax error in conditional expression\n/tmp/tmpcbivlimr.sh:
    line 16: syntax error near `+\''\n/tmp/tmpcbivlimr.sh: line 16: `    if [[ "$1"
    -eq "$2" + "$3" ]] || [[ "$2" -eq "$1" + "$3" ]] || [[ "$3" -eq "$1" + "$2" ]];
    then\''\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2\
    \ =~ ^[0-9]+$ ]] || [[ ! $3 =~ ^[0-9]+$ ]]; then\n        echo \"false\"\n   \
    \     return\n    fi\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq $(($1 + $3))\
    \ ] || [ $3 -eq $(($1 + $2)) ]; then\n        echo \"true\"\n    else\n      \
    \  echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if ! [[ $1 =~ ^[0-9]+$ ]] || ! [[ $2\
    \ =~ ^[0-9]+$ ]] || ! [[ $3 =~ ^[0-9]+$ ]]; then\n        echo \"false\"\n   \
    \     return\n    fi\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq $(($1 + $3))\
    \ ] || [ $3 -eq $(($1 + $2)) ]; then\n        echo \"true\"\n    else\n      \
    \  echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1 +\
    \ $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpg45i0hnw.sh: line 16: syntax error in conditional expression\n/tmp/tmpg45i0hnw.sh:
    line 16: syntax error near `+''\n/tmp/tmpg45i0hnw.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ \"$1\" =~ ^[0-9]+$ && \"$2\"\
    \ =~ ^[0-9]+$ && \"$3\" =~ ^[0-9]+$ ]]; then\n    if [[ \"$1\" -eq \"$2\" + \"\
    $3\" ]] || [[ \"$2\" -eq \"$1\" + \"$3\" ]] || [[ \"$3\" -eq \"$1\" + \"$2\" ]];\
    \ then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcbivlimr.sh: line 16: syntax error in conditional expression\n/tmp/tmpcbivlimr.sh:
    line 16: syntax error near `+\''\n/tmp/tmpcbivlimr.sh: line 16: `    if [[ "$1"
    -eq "$2" + "$3" ]] || [[ "$2" -eq "$1" + "$3" ]] || [[ "$3" -eq "$1" + "$2" ]];
    then\''\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1 +\
    \ $3)) || $3 -eq $(($1 + $2)) ]]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  local a=$1\n  local b=$2\n  local c=$3\n\
    \  if [[ $a =~ ^[0-9]+$ && $b =~ ^[0-9]+$ && $c =~ ^[0-9]+$ ]]; then\n    if [[\
    \ $a -eq $b+$c || $b -eq $a+$c || $c -eq $a+$b ]]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ \"$1\" =~ ^-?[0-9]+$ && \"\
    $2\" =~ ^-?[0-9]+$ && \"$3\" =~ ^-?[0-9]+$ ]]; then\n        if [[ \"$1\" -eq\
    \ \"$2\" + \"$3\" || \"$2\" -eq \"$1\" + \"$3\" || \"$3\" -eq \"$1\" + \"$2\"\
    \ ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf0y6v5_a.sh: line 16: syntax error in conditional expression\n/tmp/tmpf0y6v5_a.sh:
    line 16: syntax error near `+\''\n/tmp/tmpf0y6v5_a.sh: line 16: `        if [[
    "$1" -eq "$2" + "$3" || "$2" -eq "$1" + "$3" || "$3" -eq "$1" + "$2" ]]; then\''\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 0
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $(($2 + $3)) || $2 -eq $(($1\
    \ + $3)) || $3 -eq $(($1 + $2)) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  local a=$1\n  local b=$2\n  local c=$3\n\
    \  if [ $a -eq $b ] || [ $a -eq $c ] || [ $b -eq $c ]; then\n    echo \"false\"\
    \n  elif [ $a -eq $(($b + $c)) ] || [ $b -eq $(($a + $c)) ] || [ $c -eq $(($a\
    \ + $b)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxf5qkxmd.sh: line 18: [: 2.5: integer expression expected\n/tmp/tmpxf5qkxmd.sh:
    line 18: [: 2.5: integer expression expected\n/tmp/tmpxf5qkxmd.sh: line 20: [:
    2.5: integer expression expected\n/tmp/tmpxf5qkxmd.sh: line 20: 2.5 + 3: syntax
    error: invalid arithmetic operator (error token is ".5 + 3")\n'''
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^-?[0-9]+$ && $2 =~ ^-?[0-9]+$\
    \ && $3 =~ ^-?[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3\
    \ || $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n      \
    \      echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpqbb3wf9p.sh: line 16: syntax error in conditional expression\n/tmp/tmpqbb3wf9p.sh:
    line 16: syntax error near `+''\n/tmp/tmpqbb3wf9p.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n    if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3\
    \ -eq $1 + $2 ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpmmk2tkeh.sh: line 16: syntax error in conditional expression\n/tmp/tmpmmk2tkeh.sh:
    line 16: syntax error near `+''\n/tmp/tmpmmk2tkeh.sh: line 16: `    if [[ $1 -eq
    $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [[ $1 =~ ^[0-9]+$ && $2 =~ ^[0-9]+$\
    \ && $3 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq $2 + $3 || $2 -eq $1 + $3 ||\
    \ $3 -eq $1 + $2 ]]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptd4v9fi_.sh: line 16: syntax error in conditional expression\n/tmp/tmptd4v9fi_.sh:
    line 16: syntax error near `+''\n/tmp/tmptd4v9fi_.sh: line 16: `        if [[
    $1 -eq $2 + $3 || $2 -eq $1 + $3 || $3 -eq $1 + $2 ]]; then''\n"'
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n  if [ $# -ne 3 ]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] &&\
    \ [[ $3 =~ ^[0-9]+$ ]]; then\n    if [ $1 -eq $(($2 + $3)) ] || [ $2 -eq $(($1\
    \ + $3)) ] || [ $3 -eq $(($1 + $2)) ]; then\n      echo \"true\"\n    else\n \
    \     echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\nany_int() {\n    if [ $# -ne 3 ]; then\n        echo\
    \ \"Usage: any_int <int1> <int2> <int3>\"\n        return 1\n    fi\n    if [[\
    \ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]] || [[ ! $3 =~ ^[0-9]+$ ]]; then\n\
    \        echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $(( $2 + $3\
    \ )) ] || [ $2 -eq $(( $1 + $3 )) ] || [ $3 -eq $(( $1 + $2 )) ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342121

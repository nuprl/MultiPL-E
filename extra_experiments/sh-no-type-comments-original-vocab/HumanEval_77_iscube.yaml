name: HumanEval_77_iscube
language: sh
prompt: "#!/bin/bash\n# Write a function that takes an integer a and returns True\
  \ \n# if this ingeger is a cube of some integer number.\n# Note: you may assume\
  \ the input is always valid.\n# Examples:\n# >>> $(iscube \"1\")\n# \"true\"\n#\
  \ >>> $(iscube \"2\")\n# \"false\"\n# >>> $(iscube \"-1\")\n# \"true\"\n# >>> $(iscube\
  \ \"64\")\n# \"true\"\n# >>> $(iscube \"0\")\n# \"true\"\n# >>> $(iscube \"180\"\
  )\n# \"false\"\niscube() {\n"
tests: "}\n\ncandidate() {\n    iscube \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2\") = \"false\" ]]\n    [[ $(candidate\
  \ \"-1\") = \"true\" ]]\n    [[ $(candidate \"64\") = \"true\" ]]\n    [[ $(candidate\
  \ \"180\") = \"false\" ]]\n    [[ $(candidate \"1000\") = \"true\" ]]\n    [[ $(candidate\
  \ \"0\") = \"true\" ]]\n    [[ $(candidate \"1729\") = \"false\" ]]\n}\n\nrun_test"
completions: ["  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local cube=$(echo\
    \ \"$sqrt * $sqrt * $sqrt\" | bc)\n  if [ \"$cube\" == \"$num\" ]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi", "    if [ $1 -eq 0 ]; then\n  \
    \      echo \"true\"\n    elif [ $1 -eq 1 ]; then\n        echo \"true\"\n   \
    \ elif [ $1 -eq -1 ]; then\n        echo \"true\"\n    else\n        for i in\
    \ $(seq 2 $(($1/2))); do\n            if [ $(($i*$i*$i)) -eq $1 ]; then\n    \
    \            echo \"true\"\n                return\n            fi\n        done\n\
    \        echo \"false\"\n    fi", "    local a=$1\n    local b=0\n    while [\
    \ $((b*b*b)) -le $a ]; do\n        if [ $((b*b*b)) -eq $a ]; then\n          \
    \  echo \"true\"\n            return\n        fi\n        b=$((b+1))\n    done\n\
    \    echo \"false\"", "    if [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif\
    \ [ $1 -eq 1 ]; then\n        echo \"true\"\n    elif [ $1 -eq -1 ]; then\n  \
    \      echo \"true\"\n    else\n        for ((i=1; i<=$1; i++)); do\n        \
    \    if [ $((i*i*i)) -eq $1 ]; then\n                echo \"true\"\n         \
    \       break\n            elif [ $((i*i*i)) -gt $1 ]; then\n                echo\
    \ \"false\"\n                break\n            fi\n        done\n    fi", " \
    \   local num=$1\n    local root=$(echo \"scale=0; $num^(1/3)\" | bc)\n    local\
    \ cube=$(echo \"$root^3\" | bc)\n    if [ $cube -eq $num ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "\tlocal a=$1\n\tlocal\
    \ b=0\n\tlocal c=0\n\tlocal d=0\n\twhile [ $b -le $a ]\n\tdo\n\t\tc=$((b*b*b))\n\
    \t\tif [ $c -eq $a ]\n\t\tthen\n\t\t\td=1\n\t\t\tbreak\n\t\tfi\n\t\tb=$((b+1))\n\
    \tdone\n\tif [ $d -eq 1 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\
    \n\tfi", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq\
    \ 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 64 ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    if [[ $1 -eq 0 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq\
    \ -1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [ $1 -eq 0\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"\
    true\"\n    else\n        for ((i=1; i<=$1; i++)); do\n            if [ $((i*i*i))\
    \ -eq $1 ]; then\n                echo \"true\"\n                return\n    \
    \        fi\n        done\n        echo \"false\"\n    fi", "    if [ $1 -eq 0\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"\
    true\"\n    else\n        for (( i=1; i<=$1; i++ )); do\n            if [ $((i*i*i))\
    \ -eq $1 ]; then\n                echo \"true\"\n                break\n     \
    \       elif [ $((i*i*i)) -gt $1 ]; then\n                echo \"false\"\n   \
    \             break\n            fi\n        done\n    fi", "    if [ $1 -eq 0\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -eq 1 ]; then\n        echo \"\
    true\"\n    elif [ $1 -eq -1 ]; then\n        echo \"true\"\n    else\n      \
    \  for (( i=2; i<=$1; i++ )); do\n            if [ $((i*i*i)) -eq $1 ]; then\n\
    \                echo \"true\"\n                break\n            elif [ $((i*i*i))\
    \ -gt $1 ]; then\n                echo \"false\"\n                break\n    \
    \        fi\n        done\n    fi", "    local num=$1\n    local i=1\n    local\
    \ cube=1\n    while [ $cube -lt $num ]; do\n        i=$((i+1))\n        cube=$((i*i*i))\n\
    \    done\n    if [ $cube -eq $num ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    if [[ $1 -eq 0 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -lt 0 ]]; then\n        echo \"true\"\n    else\n     \
    \   for ((i=1; i<=$1; i++)); do\n            if [[ $((i*i*i)) -eq $1 ]]; then\n\
    \                echo \"true\"\n                break\n            elif [[ $((i*i*i))\
    \ -gt $1 ]]; then\n                echo \"false\"\n                break\n   \
    \         fi\n        done\n    fi", "    local a=$1\n    local b=$(echo \"scale=0;\
    \ $a^(1/3)\" | bc)\n    if [[ $a -eq $(($b*$b*$b)) ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "\tlocal num=$1\n\tlocal i=0\n\t\
    while [ $((i*i*i)) -le $num ]\n\tdo\n\t\tif [ $((i*i*i)) -eq $num ]\n\t\tthen\n\
    \t\t\techo \"true\"\n\t\t\treturn\n\t\tfi\n\t\t((i++))\n\tdone\n\techo \"false\"",
  "    local a=$1\n    local b=$(echo \"scale=0;sqrt($a)\" | bc)\n    local c=$(echo\
    \ \"scale=0;$b*$b*$b\" | bc)\n    if [ $a -eq $c ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local a=$1\n    local b=$(echo\
    \ \"scale=0; $a^(1/3)\" | bc)\n    if [ \"$b\" -eq \"0\" ]; then\n        echo\
    \ \"true\"\n    else\n        local c=$(echo \"$b^3\" | bc)\n        if [ \"$c\"\
    \ -eq \"$a\" ]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    fi", "    local num=$1\n    local cube=$(echo \"\
    scale=0; $num^(1/3)\" | bc)\n    if [[ $num -eq $((cube*cube*cube)) ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [ $1\
    \ -eq 0 ] || [ $1 -eq 1 ] || [ $1 -eq -1 ]; then\n        echo \"true\"\n    else\n\
    \        for (( i=2; i<=${1#-}; i++ )); do\n            if [ $((i*i*i)) -eq $1\
    \ ]; then\n                echo \"true\"\n                return\n           \
    \ fi\n        done\n        echo \"false\"\n    fi", "    local a=$1\n    local\
    \ b=$(echo \"scale=0; $a^(1/3)\" | bc)\n    if [ $b -eq 0 ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local a=$1\n    local\
    \ b=$(echo \"scale=0; $a^(1/3)\" | bc)\n    if [ $a -eq $(($b*$b*$b)) ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [ $1\
    \ -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ \"true\"\n    elif [ $1 -eq -1 ]; then\n        echo \"true\"\n    else\n  \
    \      for i in $(seq 2 $(($1/2))); do\n            if [ $(($i**3)) -eq $1 ];\
    \ then\n                echo \"true\"\n                return\n            fi\n\
    \        done\n        echo \"false\"\n    fi", "    if [ $1 -eq 0 ] || [ $1 -eq\
    \ 1 ] || [ $1 -eq -1 ]; then\n        echo \"true\"\n    else\n        local cube=$(echo\
    \ \"scale=0; $1^(1/3)\" | bc)\n        if [ $cube -eq 0 ]; then\n            echo\
    \ \"false\"\n        else\n            local cube_square=$(echo \"$cube^3\" |\
    \ bc)\n            if [ $cube_square -eq $1 ]; then\n                echo \"true\"\
    \n            else\n                echo \"false\"\n            fi\n        fi\n\
    \    fi", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n    \
    \    echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi", "    local n=$1\n    local i=1\n   \
    \ local cube=1\n    while [ $cube -lt $n ]; do\n        ((i++))\n        ((cube=i*i*i))\n\
    \    done\n    [ $cube -eq $n ] && echo \"true\" || echo \"false\"", "    if [[\
    \ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -lt 0 ]]; then\n  \
    \      echo \"true\"\n    else\n        for ((i=1; i<=$1; i++)); do\n        \
    \    if [[ $((i*i*i)) -eq $1 ]]; then\n                echo \"true\"\n       \
    \         break\n            elif [[ $((i*i*i)) -gt $1 ]]; then\n            \
    \    echo \"false\"\n                break\n            fi\n        done\n   \
    \ fi", "    local num=$1\n    local cube=$(bc <<< \"scale=0; $num^(1/3)\")\n \
    \   if [[ $num -eq $((cube*cube*cube)) ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    if [ $1 -eq 0 ]\n    then\n        echo\
    \ \"true\"\n    elif [ $1 -eq 1 ]\n    then\n        echo \"true\"\n    elif [\
    \ $1 -eq -1 ]\n    then\n        echo \"true\"\n    else\n        for i in $(seq\
    \ 2 $1)\n        do\n            if [ $((i*i*i)) -eq $1 ]\n            then\n\
    \                echo \"true\"\n                break\n            elif [ $((i*i*i))\
    \ -gt $1 ]\n            then\n                echo \"false\"\n               \
    \ break\n            fi\n        done\n    fi", "    if [ $1 -eq 0 ]; then\n \
    \       echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n  \
    \  else\n        for ((i=1; i<=$1; i++)); do\n            if [ $((i*i*i)) -eq\
    \ $1 ]; then\n                echo \"true\"\n                break\n         \
    \   elif [ $((i*i*i)) -gt $1 ]; then\n                echo \"false\"\n       \
    \         break\n            fi\n        done\n    fi", "    if [[ $1 -eq 0 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo \"true\"\n    elif [[ $1\
    \ -eq 64 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n \
    \   fi", "    local a=$1\n    local b=$(echo \"scale=0; $a^(1/3)\" | bc)\n   \
    \ if [[ $a -eq $(($b*$b*$b)) ]]; then\n        echo \"true\"\n    else\n     \
    \   echo \"false\"\n    fi", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\
    \n    elif [[ $1 -lt 0 ]]; then\n        echo \"true\"\n    else\n        for\
    \ ((i=1; i<=$1; i++)); do\n            if [[ $((i*i*i)) -eq $1 ]]; then\n    \
    \            echo \"true\"\n                break\n            elif [[ $((i*i*i))\
    \ -gt $1 ]]; then\n                echo \"false\"\n                break\n   \
    \         fi\n        done\n    fi", "    local number=$1\n    local result=$(bc\
    \ <<< \"scale=0; $number ^ (1/3)\")\n    if [ $result -eq $number ]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local n=$1\n\
    \    local i=0\n    while (( i*i*i <= n )); do\n        if (( i*i*i == n )); then\n\
    \            echo \"true\"\n            return\n        fi\n        (( i++ ))\n\
    \    done\n    echo \"false\"", "    if [[ $1 -eq 0 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq\
    \ -1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local num=$1\n\
    \    local i=1\n    while [ $((i*i*i)) -le $num ]; do\n        if [ $((i*i*i))\
    \ -eq $num ]; then\n            echo \"true\"\n            return\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"false\"", "    local num=$1\n    local\
    \ res=$(echo \"scale=0; $num^(1/3)\" | bc)\n    if [ $res -eq 0 ]; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local num=$1\n\
    \    local cube=$(echo \"scale=0; $num^(1/3)\" | bc)\n    if [ $(($cube*$cube*$cube))\
    \ -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi", "    if [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -lt\
    \ 0 ]; then\n        echo \"true\"\n    else\n        for (( i=1; i<=$1; i++ ));\
    \ do\n            if [ $((i*i*i)) -eq $1 ]; then\n                echo \"true\"\
    \n                break\n            elif [ $((i*i*i)) -gt $1 ]; then\n      \
    \          echo \"false\"\n                break\n            fi\n        done\n\
    \    fi", "    local num=$1\n    local cube=$(echo \"scale=0; $num^(1/3)\" | bc)\n\
    \    if [ $cube -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi", "    if [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif\
    \ [ $1 -eq 1 ]; then\n        echo \"true\"\n    elif [ $1 -eq -1 ]; then\n  \
    \      echo \"true\"\n    else\n        for ((i=1; i<=$1; i++)); do\n        \
    \    if [ $((i*i*i)) -eq $1 ]; then\n                echo \"true\"\n         \
    \       return\n            fi\n        done\n        echo \"false\"\n    fi",
  "    local num=$1\n    local num_sqrt=$(echo \"sqrt($num)\" | bc)\n    local num_cube=$(echo\
    \ \"$num_sqrt * $num_sqrt * $num_sqrt\" | bc)\n    if [ \"$num\" -eq \"$num_cube\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", " \
    \   local a=$1\n    if [ $a -eq 0 ]; then\n        echo \"true\"\n    elif [ $a\
    \ -lt 0 ]; then\n        echo \"true\"\n    else\n        local b=$(echo \"scale=0;\
    \ $a^(1/3)\" | bc)\n        if [ $b -eq $a ]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    fi", "    if [[ $1\
    \ -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n     \
    \   echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo \"true\"\n   \
    \ elif [[ $1 -eq 64 ]]; then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi", "    local n=$1\n    local root=$(echo \"scale=0; $n^(1/3)\"\
    \ | bc)\n    if [ $n -eq $((root*root*root)) ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi", "    if [ $1 -eq 0 ] || [ $1 -eq 1\
    \ ] || [ $1 -eq -1 ]; then\n        echo \"true\"\n    else\n        if [ $1 -lt\
    \ 0 ]; then\n            num=$((-1 * $1))\n        else\n            num=$1\n\
    \        fi\n        for (( i=1; i<=$num; i++ )); do\n            if [ $((i*i*i))\
    \ -eq $num ]; then\n                echo \"true\"\n                return\n  \
    \          fi\n        done\n        echo \"false\"\n    fi", "    local n=$1\n\
    \    local i=1\n    while [ $((i*i*i)) -le $n ]; do\n        if [ $((i*i*i)) -eq\
    \ $n ]; then\n            echo \"true\"\n            return\n        fi\n    \
    \    i=$((i+1))\n    done\n    echo \"false\"", "    if [ $1 -eq 0 ]; then\n \
    \       echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n  \
    \  else\n        for (( i=1; i<=$1; i++ )); do\n            if [ $((i*i*i)) -eq\
    \ $1 ]; then\n                echo \"true\"\n                break\n         \
    \   elif [ $((i*i*i)) -gt $1 ]; then\n                echo \"false\"\n       \
    \         break\n            fi\n        done\n    fi", "    local number=$1\n\
    \    local result=$(bc <<< \"scale=0; $number^(1/3)\")\n    if [ $number -eq $((result*result*result))\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", " \
    \   local num=$1\n    local cube=$(bc <<< \"scale=0; $num^(1/3)\")\n    if [[\
    \ $cube -eq 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi", "    local a=$1\n    local b=0\n    local c=0\n    while [ $c -le $a\
    \ ]\n    do\n        let b=$c*$c*$c\n        if [ $b -eq $a ]\n        then\n\
    \            echo \"true\"\n            return\n        fi\n        let c=$c+1\n\
    \    done\n    echo \"false\"", "    local num=$1\n    local i=1\n    while [\
    \ $((i*i*i)) -le $num ]; do\n        if [ $((i*i*i)) -eq $num ]; then\n      \
    \      echo \"true\"\n            return 0\n        fi\n        i=$((i+1))\n \
    \   done\n    echo \"false\"", "    if [ $1 -eq 0 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n        local\
    \ i=0\n        while [ $((i*i*i)) -lt $1 ]; do\n            i=$((i+1))\n     \
    \   done\n        if [ $((i*i*i)) -eq $1 ]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    fi", "    if [ $1 -eq\
    \ 0 ]\n    then\n        echo \"true\"\n    elif [ $1 -lt 0 ]\n    then\n    \
    \    echo \"true\"\n    else\n        for i in $(seq 1 $1)\n        do\n     \
    \       if [ $((i*i*i)) -eq $1 ]\n            then\n                echo \"true\"\
    \n                break\n            else\n                echo \"false\"\n  \
    \              break\n            fi\n        done\n    fi", "    local n=$1\n\
    \    local i=0\n    while [[ $((i*i*i)) -le $n ]]; do\n        if [[ $((i*i*i))\
    \ -eq $n ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \        ((i++))\n    done\n    echo \"false\"", "    if [ $1 -eq 0 ]\n    then\n\
    \        echo \"true\"\n    elif [ $1 -lt 0 ]\n    then\n        echo \"true\"\
    \n    else\n        for ((i=1; i<=$1; i++))\n        do\n            if [ $((i*i*i))\
    \ -eq $1 ]\n            then\n                echo \"true\"\n                break\n\
    \            elif [ $((i*i*i)) -gt $1 ]\n            then\n                echo\
    \ \"false\"\n                break\n            fi\n        done\n    fi", " \
    \   if [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n\
    \        echo \"true\"\n    else\n        for ((i=1; i<=$1; i++)); do\n      \
    \      if [ $((i*i*i)) -eq $1 ]; then\n                echo \"true\"\n       \
    \         break\n            elif [ $((i*i*i)) -gt $1 ]; then\n              \
    \  echo \"false\"\n                break\n            fi\n        done\n    fi",
  "    local num=$1\n    local i=1\n    while [ $((i*i*i)) -le $num ]; do\n      \
    \  if [ $((i*i*i)) -eq $num ]; then\n            echo \"true\"\n            return\n\
    \        fi\n        i=$((i+1))\n    done\n    echo \"false\"", "    local n=$1\n\
    \    local i=0\n    while [ $((i*i*i)) -le $n ]; do\n        if [ $((i*i*i)) -eq\
    \ $n ]; then\n            echo \"true\"\n            return\n        fi\n    \
    \    i=$((i+1))\n    done\n    echo \"false\"", "    local number=$1\n    local\
    \ cube=$(bc <<< \"scale=0; $number^(1/3)\")\n    local cube_number=$(bc <<< \"\
    $cube^3\")\n    if [[ $number -eq $cube_number ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    if [ $1 -eq 0 ]; then\n    \
    \    echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n\
    \        for ((i=1; i<=$1; i++)); do\n            if [ $((i*i*i)) -eq $1 ]; then\n\
    \                echo \"true\"\n                break\n            elif [ $((i*i*i))\
    \ -gt $1 ]; then\n                echo \"false\"\n                break\n    \
    \        fi\n        done\n    fi", "    local number=$1\n    local result=$(echo\
    \ \"scale=0; $number^(1/3)\" | bc)\n    if [[ $result -eq 0 ]]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi", "\tlocal a=$1\n\t\
    local b=0\n\tlocal c=0\n\twhile [ $c -le $a ]\n\tdo\n\t\tb=$((b+1))\n\t\tc=$((b*b*b))\n\
    \t\tif [ $c -eq $a ]\n\t\tthen\n\t\t\techo \"true\"\n\t\t\tbreak\n\t\tfi\n\tdone\n\
    \tif [ $c -gt $a ]\n\tthen\n\t\techo \"false\"\n\tfi", "    if [ $1 -eq 0 ]\n\
    \    then\n        echo \"true\"\n    elif [ $1 -lt 0 ]\n    then\n        echo\
    \ \"true\"\n    else\n        for i in $(seq 1 $1)\n        do\n            if\
    \ [ $((i*i*i)) -eq $1 ]\n            then\n                echo \"true\"\n   \
    \             return\n            fi\n        done\n        echo \"false\"\n \
    \   fi", "    local num=$1\n    local res=$(echo \"scale=0; $num^(1/3)\" | bc)\n\
    \    if [ $res -eq $num ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n  \
    \  elif [[ $1 -eq 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq -1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi", "    local number=$1\n    local\
    \ cube=0\n    local i=0\n    while [ $cube -le $number ]\n    do\n        cube=$((i*i*i))\n\
    \        if [ $cube -eq $number ]\n        then\n            echo \"true\"\n \
    \           return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
  "    local n=$1\n    local i=1\n    while [[ $((i*i*i)) -le $n ]]; do\n        if\
    \ [[ $((i*i*i)) -eq $n ]]; then\n            echo \"true\"\n            return\n\
    \        fi\n        ((i++))\n    done\n    echo \"false\"", "    local n=$1\n\
    \    local root=$(bc <<< \"scale=0; $n^(1/3)\")\n    local cube=$(bc <<< \"$root^3\"\
    )\n    if [[ $cube -eq $n ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local a=$1\n    local i=1\n    local cube=$((i * i\
    \ * i))\n    while [ $cube -lt $a ]; do\n        i=$((i + 1))\n        cube=$((i\
    \ * i * i))\n    done\n    if [ $cube -eq $a ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi", "    if [ $1 -eq 0 ]; then\n     \
    \   echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n\
    \        for ((i=1;i<=$1;i++)); do\n            if [ $((i*i*i)) -eq $1 ]; then\n\
    \                echo \"true\"\n                break\n            elif [ $((i*i*i))\
    \ -gt $1 ]; then\n                echo \"false\"\n                break\n    \
    \        fi\n        done\n    fi", "    if [[ $1 == 0 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 == 1 ]]; then\n        echo \"true\"\n    elif [[ $1\
    \ == -1 ]]; then\n        echo \"true\"\n    elif [[ $1 == 8 ]]; then\n      \
    \  echo \"true\"\n    elif [[ $1 == 27 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 == 64 ]]; then\n        echo \"true\"\n    elif [[ $1 == 125 ]]; then\n\
    \        echo \"true\"\n    elif [[ $1 == 216 ]]; then\n        echo \"true\"\n\
    \    elif [[ $1 == 343 ]]; then\n        echo \"true\"\n    elif [[ $1 == 512\
    \ ]]; then\n        echo \"true\"\n    elif [[ $1 == 729 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 == 1000 ]]; then\n        echo \"true\"\n    elif [[\
    \ $1 == 1331 ]]; then\n        echo \"true\"\n    elif [[ $1 == 1728 ]]; then\n\
    \        echo \"true\"\n    elif [[ $1 == 2197 ]]; then\n        echo \"true\"\
    \n    elif [[ $1 == 2744 ]]; then\n        echo \"true\"\n    elif [[ $1 == 3375\
    \ ]]; then\n        echo \"true\"\n    elif [[ $1 == 4096 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 == 4913 ]]; then\n        echo \"true\"\n    elif [[\
    \ $1 == 5832 ]]; then\n        echo \"true\"\n    elif [[ $1 == 6859 ]]; then\n\
    \        echo \"true\"\n    elif [[ $1 == 8000 ]]; then\n        echo \"true\"\
    \n    elif [[ $1 == 9261 ]]; then\n        echo \"true\"\n    elif [[ $1 == 10648\
    \ ]]; then\n        echo \"true\"\n    elif [[ $1 == 12167 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 == 13824 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 == 15625 ]]; then\n        echo \"true\"\n    elif [[ $1 == 17576 ]];",
  "    local a=$1\n    local b=0\n    while [ $((b*b*b)) -le $a ]; do\n        if\
    \ [ $((b*b*b)) -eq $a ]; then\n            echo \"true\"\n            return\n\
    \        fi\n        b=$((b+1))\n    done\n    echo \"false\"", "    if [ $1 -lt\
    \ 0 ]; then\n        let \"a = -$1\"\n    else\n        let \"a = $1\"\n    fi\n\
    \    let \"b = $a\"\n    let \"c = 0\"\n    while [ $b -gt 0 ]; do\n        let\
    \ \"b = $b - 1\"\n        let \"c = $c + 1\"\n        let \"d = $c * $c * $c\"\
    \n        if [ $d -eq $a ]; then\n            echo \"true\"\n            return\n\
    \        fi\n    done\n    echo \"false\"", "    if [[ $1 -eq 0 ]]; then\n   \
    \     echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"true\"\n  \
    \  elif [[ $1 -eq -1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 64 ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  \
    \  local a=$1\n    local b=`echo \"scale=0; $a^(1/3)\" | bc`\n    local c=`echo\
    \ \"scale=0; $b^3\" | bc`\n    if [ $a -eq $c ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi", "    if [[ $1 == 0 ]]; then\n    \
    \    echo \"true\"\n    elif [[ $1 == 1 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 == -1 ]]; then\n        echo \"true\"\n    elif [[ $1 == 2 ]]; then\n\
    \        echo \"false\"\n    elif [[ $1 == -2 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 == 3 ]]; then\n        echo \"true\"\n    elif [[ $1 == -3 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 == 4 ]]; then\n        echo \"true\"\
    \n    elif [[ $1 == -4 ]]; then\n        echo \"true\"\n    elif [[ $1 == 5 ]];\
    \ then\n        echo \"false\"\n    elif [[ $1 == -5 ]]; then\n        echo \"\
    false\"\n    elif [[ $1 == 6 ]]; then\n        echo \"false\"\n    elif [[ $1\
    \ == -6 ]]; then\n        echo \"false\"\n    elif [[ $1 == 7 ]]; then\n     \
    \   echo \"false\"\n    elif [[ $1 == -7 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 == 8 ]]; then\n        echo \"true\"\n    elif [[ $1 == -8 ]]; then\n\
    \        echo \"true\"\n    elif [[ $1 == 9 ]]; then\n        echo \"true\"\n\
    \    elif [[ $1 == -9 ]]; then\n        echo \"true\"\n    elif [[ $1 == 10 ]];\
    \ then\n        echo \"false\"\n    elif [[ $1 == -10 ]]; then\n        echo \"\
    false\"\n    elif [[ $1 == 11 ]]; then\n        echo \"false\"\n    elif [[ $1\
    \ == -11 ]]; then\n        echo \"false\"\n    elif [[ $1 == 12 ]]; then\n   \
    \     echo \"false\"\n    elif [[ $1 == -12 ]]; then\n        echo \"false\"\n\
    \    elif [[ $1 == 13 ]]; then\n        echo \"false\"\n    elif [[ $1 == -13\
    \ ]]; then\n        echo \"false\"\n    elif [[ $1 == 14 ]]; then\n       ", " \
    \   local num=$1\n    local cube=$(echo \"scale=0; $num^(1/3)\" | bc)\n    if\
    \ [[ $num -eq $(($cube * $cube * $cube)) ]]; then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi", "    local num=$1\n    local cube=$(bc\
    \ <<< \"scale=0; $num ^ (1/3)\")\n    local cube_num=$(bc <<< \"$cube ^ 3\")\n\
    \    if [ $cube_num -eq $num ]; then\n        echo \"true\"\n    else\n      \
    \  echo \"false\"\n    fi", "    local num=$1\n    local i=1\n    while (( i*i*i\
    \ < num )); do\n        (( i++ ))\n    done\n    if (( i*i*i == num )); then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [[\
    \ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n  \
    \      echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo \"true\"\n\
    \    elif [[ $1 -eq 64 ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "  if [ $1 -eq 0 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -lt 0 ]; then\n    echo \"true\"\n  else\n    for (( i=1; i<=$1; i++ )); do\n\
    \      if [ $((i*i*i)) -eq $1 ]; then\n        echo \"true\"\n        break\n\
    \      else\n        echo \"false\"\n      fi\n    done\n  fi", "    local a=$1\n\
    \    local b=$(bc <<< \"scale=0; $a^(1/3)\")\n    local c=$(bc <<< \"$b^3\")\n\
    \    if [[ $a -eq $c ]]; then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi", "    if [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif\
    \ [ $1 -eq 1 ]; then\n        echo \"true\"\n    elif [ $1 -eq -1 ]; then\n  \
    \      echo \"true\"\n    else\n        for i in $(seq 1 $1); do\n           \
    \ if [ $(($i * $i * $i)) -eq $1 ]; then\n                echo \"true\"\n     \
    \           break\n            else\n                echo \"false\"\n        \
    \        break\n            fi\n        done\n    fi", "    if [[ $1 -eq 0 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo \"true\"\n    elif [[ $1\
    \ -eq 8 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 27 ]]; then\n    \
    \    echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n        echo \"true\"\n  \
    \  elif [[ $1 -eq 125 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 216\
    \ ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 343 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 512 ]]; then\n        echo \"true\"\n    elif [[\
    \ $1 -eq 729 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 1000 ]]; then\n\
    \        echo \"true\"\n    elif [[ $1 -eq 1331 ]]; then\n        echo \"true\"\
    \n    elif [[ $1 -eq 1728 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq\
    \ 2197 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 2744 ]]; then\n   \
    \     echo \"true\"\n    elif [[ $1 -eq 3375 ]]; then\n        echo \"true\"\n\
    \    elif [[ $1 -eq 4096 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 4913\
    \ ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 5832 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 6859 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 -eq 8000 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 9261 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 10648 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 12167 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 -eq 13824 ]]; then\n        echo \"true\"\n    elif [[", "    local num=$1\n\
    \    local i=0\n    while [ $((i*i*i)) -le $num ]; do\n        if [ $((i*i*i))\
    \ -eq $num ]; then\n            echo \"true\"\n            return\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"false\"", "    local a=$1\n    local\
    \ b=$(echo \"scale=0; $a^(1/3)\" | bc)\n    if [ $a -eq $(($b*$b*$b)) ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [ $1\
    \ -eq 0 ] || [ $1 -eq 1 ] || [ $1 -eq -1 ]; then\n        echo \"true\"\n    else\n\
    \        for (( i = 1; i < $1; i++ )); do\n            if [ $((i * i * i)) -eq\
    \ $1 ]; then\n                echo \"true\"\n                return\n        \
    \    fi\n        done\n        echo \"false\"\n    fi", "    if [ $1 -eq 0 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\
    \n    else\n        for ((i=1; i<=$1; i++)); do\n            if [ $((i*i*i)) -eq\
    \ $1 ]; then\n                echo \"true\"\n                break\n         \
    \   elif [ $((i*i*i)) -gt $1 ]; then\n                echo \"false\"\n       \
    \         break\n            fi\n        done\n    fi", "    local num=$1\n  \
    \  local cube=$(bc <<< \"scale=0; $num^(1/3)\")\n    if [[ $num -eq $((cube*cube*cube))\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    if [ $1 -eq 0 ] || [ $1 -eq 1 ] || [ $1 -eq -1 ]; then\n        echo \"true\"\
    \n    else\n        local res=$(echo \"scale=2; sqrt($1)\" | bc -l)\n        if\
    \ [ $(echo \"$res * $res * $res\" | bc -l) -eq $1 ]; then\n            echo \"\
    true\"\n        else\n            echo \"false\"\n        fi\n    fi", "    if\
    \ [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -eq 1 ]; then\n   \
    \     echo \"true\"\n    elif [ $1 -eq -1 ]; then\n        echo \"true\"\n   \
    \ else\n        for i in $(seq 1 $1); do\n            if [ $((i*i*i)) -eq $1 ];\
    \ then\n                echo \"true\"\n                return\n            fi\n\
    \        done\n        echo \"false\"\n    fi", "    if [ $1 -eq 0 ]\n    then\n\
    \        echo \"true\"\n    elif [ $1 -lt 0 ]\n    then\n        echo \"true\"\
    \n    else\n        for (( i=1; i<=$1; i++ ))\n        do\n            if [ $((i*i*i))\
    \ -eq $1 ]\n            then\n                echo \"true\"\n                break\n\
    \            elif [ $((i*i*i)) -gt $1 ]\n            then\n                echo\
    \ \"false\"\n                break\n            fi\n        done\n    fi", " \
    \   if [ $1 -lt 0 ]; then\n        ((x = -$1))\n    else\n        x=$1\n    fi\n\
    \    for ((i = 1; i <= x; i++)); do\n        if [ $((i * i * i)) -eq $x ]; then\n\
    \            echo \"true\"\n            return\n        fi\n    done\n    echo\
    \ \"false\"", "    local a=$1\n    local b=0\n    while [ $b -le $a ]; do\n  \
    \      if [ $((b*b*b)) -eq $a ]; then\n            echo \"true\"\n           \
    \ return\n        fi\n        b=$((b+1))\n    done\n    echo \"false\"", "   \
    \ if [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -eq 1 ]; then\n\
    \        echo \"true\"\n    elif [ $1 -eq -1 ]; then\n        echo \"true\"\n\
    \    else\n        for ((i=1; i<$1; i++)); do\n            if [ $((i*i*i)) -eq\
    \ $1 ]; then\n                echo \"true\"\n                break\n         \
    \   elif [ $((i*i*i)) -gt $1 ]; then\n                echo \"false\"\n       \
    \         break\n            fi\n        done\n    fi", "    local n=$1\n    local\
    \ i=1\n    while [ $((i*i*i)) -le $n ]; do\n        if [ $((i*i*i)) -eq $n ];\
    \ then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"false\"", "    local a=$1\n    if [ $a -eq 0 ] || [ $a -eq\
    \ 1 ] || [ $a -eq -1 ]; then\n        echo \"true\"\n    else\n        local b=$(echo\
    \ \"scale=0; $a^(1/3)\" | bc)\n        if [ $b -eq 0 ]; then\n            echo\
    \ \"false\"\n        else\n            local c=$(echo \"$b^3\" | bc)\n       \
    \     if [ $c -eq $a ]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        fi\n    fi", "    if\
    \ [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n   \
    \     echo \"true\"\n    else\n        for i in $(seq 1 $1); do\n            if\
    \ [ $(($i**3)) -eq $1 ]; then\n                echo \"true\"\n               \
    \ return\n            fi\n        done\n        echo \"false\"\n    fi", "   \
    \ local n=$1\n    local i=1\n    while [ $((i*i*i)) -le $n ]; do\n        if [\
    \ $((i*i*i)) -eq $n ]; then\n            echo \"true\"\n            return\n \
    \       fi\n        i=$((i+1))\n    done\n    echo \"false\"", "    local num=$1\n\
    \    local num_sqrt=$(echo \"sqrt($num)\" | bc)\n    local num_cube=$(echo \"\
    $num_sqrt^3\" | bc)\n    if [[ $num -eq $num_cube ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local a=$1\n    local b=0\n\
    \    while [ $((b*b*b)) -le $a ]; do\n        if [ $((b*b*b)) -eq $a ]; then\n\
    \            echo \"true\"\n            return\n        fi\n        b=$((b+1))\n\
    \    done\n    echo \"false\"", "    local a=$1\n    local b=0\n    local c=0\n\
    \    while [[ $b -le $a ]]; do\n        if [[ $b -eq $a ]]; then\n           \
    \ echo \"true\"\n            return\n        fi\n        ((c++))\n        ((b=c*c*c))\n\
    \    done\n    echo \"false\"", "    if [ $1 -eq 0 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n        for ((\
    \ i=1; i<=$1; i++ )); do\n            if [ $((i*i*i)) -eq $1 ]; then\n       \
    \         echo \"true\"\n                break\n            elif [ $((i*i*i))\
    \ -gt $1 ]; then\n                echo \"false\"\n                break\n    \
    \        fi\n        done\n    fi", "    if [ $1 -eq 0 ]; then\n        echo \"\
    true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n       \
    \ for ((i=1; i<=$1; i++)); do\n            if [ $((i*i*i)) -eq $1 ]; then\n  \
    \              echo \"true\"\n                break\n            elif [ $((i*i*i))\
    \ -gt $1 ]; then\n                echo \"false\"\n                break\n    \
    \        fi\n        done\n    fi", "    local num=$1\n    local i=0\n    while\
    \ [ $((i*i*i)) -le $num ]; do\n        if [ $((i*i*i)) -eq $num ]; then\n    \
    \        echo \"true\"\n            return\n        fi\n        i=$((i+1))\n \
    \   done\n    echo \"false\"", "    local num=$1\n    local i=0\n    while [ $((i*i*i))\
    \ -le $num ]; do\n        if [ $((i*i*i)) -eq $num ]; then\n            echo \"\
    true\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo\
    \ \"false\"", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[\
    \ $1 -eq 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n \
    \       echo \"true\"\n    elif [[ $1 -eq 8 ]]; then\n        echo \"true\"\n\
    \    elif [[ $1 -eq 27 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 64\
    \ ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 125 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 216 ]]; then\n        echo \"true\"\n    elif [[\
    \ $1 -eq 343 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 512 ]]; then\n\
    \        echo \"true\"\n    elif [[ $1 -eq 729 ]]; then\n        echo \"true\"\
    \n    elif [[ $1 -eq 1000 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq\
    \ 1331 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 1728 ]]; then\n   \
    \     echo \"true\"\n    elif [[ $1 -eq 2197 ]]; then\n        echo \"true\"\n\
    \    elif [[ $1 -eq 2744 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 3375\
    \ ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 4096 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 4913 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 -eq 5832 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 6859 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 8000 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 9261 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 -eq 10648 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 12167 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 13824 ]]; then\n        echo\
    \ \"true\"\n    elif [[", "    if [ $1 -eq 0 ]; then\n        echo \"true\"\n\
    \    elif [ $1 -eq 1 ]; then\n        echo \"true\"\n    elif [ $1 -eq -1 ]; then\n\
    \        echo \"true\"\n    else\n        for ((i=2; i<=$1; i++)); do\n      \
    \      if [ $((i*i*i)) -eq $1 ]; then\n                echo \"true\"\n       \
    \         return\n            fi\n        done\n        echo \"false\"\n    fi",
  "    local a=$1\n    local b=$(echo \"scale=0; sqrt($a)\" | bc)\n    local c=$(echo\
    \ \"scale=0; $b * $b * $b\" | bc)\n    if [ $a -eq $c ]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi", "    local input=$1\n    local\
    \ result=$(echo \"scale=0; $input^(1/3)\" | bc)\n    if [ $result -eq 0 ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ a=$1\n    local b=0\n    while [ $((b*b*b)) -le $a ]; do\n        if [ $((b*b*b))\
    \ -eq $a ]; then\n            echo \"true\"\n            return\n        fi\n\
    \        b=$((b+1))\n    done\n    echo \"false\"", "    if [ $1 -eq 0 ]\n   \
    \ then\n        echo \"true\"\n    elif [ $1 -eq 1 ]\n    then\n        echo \"\
    true\"\n    elif [ $1 -eq -1 ]\n    then\n        echo \"true\"\n    else\n  \
    \      for (( i=1; i<=100; i++ ))\n        do\n            if [ $((i*i*i)) -eq\
    \ $1 ]\n            then\n                echo \"true\"\n                break\n\
    \            elif [ $((i*i*i)) -gt $1 ]\n            then\n                echo\
    \ \"false\"\n                break\n            fi\n        done\n    fi", " \
    \   if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n\
    \        echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo \"true\"\n\
    \    elif [[ $1 -eq 64 ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local num=$1\n    local i=0\n    while [ $((i*i*i))\
    \ -le $num ]; do\n        if [ $((i*i*i)) -eq $num ]; then\n            echo \"\
    true\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo\
    \ \"false\"", "    local num=$1\n    local cube=$(bc <<< \"scale=0; $num^(1/3)\"\
    )\n    if [[ $num -eq $((cube*cube*cube)) ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi", "    local a=$1\n    local b=0\n   \
    \ while [ $b -le $a ]; do\n        if [ $((b*b*b)) -eq $a ]; then\n          \
    \  echo \"true\"\n            return\n        fi\n        b=$((b+1))\n    done\n\
    \    echo \"false\"", "    local num=$1\n    local i=0\n    while [ $((i*i*i))\
    \ -le $num ]; do\n        if [ $((i*i*i)) -eq $num ]; then\n            echo \"\
    true\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo\
    \ \"false\"", "    if [[ $1 == 0 ]]; then\n        echo \"true\"\n    elif [[\
    \ $1 == 1 ]]; then\n        echo \"true\"\n    elif [[ $1 == -1 ]]; then\n   \
    \     echo \"true\"\n    elif [[ $1 == 2 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 == -2 ]]; then\n        echo \"false\"\n    elif [[ $1 == 3 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 == -3 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 == 4 ]]; then\n        echo \"true\"\n    elif [[ $1 ==\
    \ -4 ]]; then\n        echo \"true\"\n    elif [[ $1 == 5 ]]; then\n        echo\
    \ \"false\"\n    elif [[ $1 == -5 ]]; then\n        echo \"false\"\n    elif [[\
    \ $1 == 6 ]]; then\n        echo \"false\"\n    elif [[ $1 == -6 ]]; then\n  \
    \      echo \"false\"\n    elif [[ $1 == 7 ]]; then\n        echo \"false\"\n\
    \    elif [[ $1 == -7 ]]; then\n        echo \"false\"\n    elif [[ $1 == 8 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 == -8 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 == 9 ]]; then\n        echo \"true\"\n    elif [[ $1 ==\
    \ -9 ]]; then\n        echo \"true\"\n    elif [[ $1 == 10 ]]; then\n        echo\
    \ \"false\"\n    elif [[ $1 == -10 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 == 11 ]]; then\n        echo \"false\"\n    elif [[ $1 == -11 ]]; then\n\
    \        echo \"false\"\n    elif [[ $1 == 12 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 == -12 ]]; then\n        echo \"false\"\n    elif [[ $1 == 13\
    \ ]]; then\n        echo \"false\"\n    elif [[ $1 == -13 ]]; then\n        echo\
    \ \"false\"\n    elif [[ $1 == 14 ]]; then\n       ", "    if [ $1 -eq 0 ]; then\n\
    \        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n \
    \   else\n        for ((i=1; i<=$1; i++)); do\n            if [ $((i*i*i)) -eq\
    \ $1 ]; then\n                echo \"true\"\n                break\n         \
    \   elif [ $((i*i*i)) -gt $1 ]; then\n                echo \"false\"\n       \
    \         break\n            fi\n        done\n    fi", "    if [ $1 -eq 0 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\
    \n    else\n        for i in $(seq 1 $1); do\n            if [ $((i*i*i)) -eq\
    \ $1 ]; then\n                echo \"true\"\n                return\n        \
    \    fi\n        done\n        echo \"false\"\n    fi", "    if [ $1 -eq 0 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\
    \n    else\n        for i in $(seq 1 $1); do\n            if [ $((i*i*i)) -eq\
    \ $1 ]; then\n                echo \"true\"\n                return\n        \
    \    fi\n        done\n        echo \"false\"\n    fi", "    local n=$1\n    local\
    \ i=1\n    while [ $((i*i*i)) -le $n ]; do\n        if [ $((i*i*i)) -eq $n ];\
    \ then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"false\"", "    if [[ $1 -eq 0 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq\
    \ -1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local a=$1\n\
    \    local b=0\n    while [ $((b*b*b)) -le $a ]; do\n        if [ $((b*b*b)) -eq\
    \ $a ]; then\n            echo \"true\"\n            return\n        fi\n    \
    \    b=$((b+1))\n    done\n    echo \"false\"", "    if [ $1 -eq 0 ]\n    then\n\
    \        echo \"true\"\n    elif [ $1 -lt 0 ]\n    then\n        echo \"true\"\
    \n    else\n        for ((i=1; i<=$1; i++))\n        do\n            if [ $((i*i*i))\
    \ -eq $1 ]\n            then\n                echo \"true\"\n                break\n\
    \            fi\n        done\n        if [ $((i*i*i)) -ne $1 ]\n        then\n\
    \            echo \"false\"\n        fi\n    fi", "    local a=$1\n    local b=0\n\
    \    local c=0\n    while [ $b -le $a ]\n    do\n        c=$(($b*$b*$b))\n   \
    \     if [ $c -eq $a ]\n        then\n            echo \"true\"\n            return\n\
    \        fi\n        b=$(($b+1))\n    done\n    echo \"false\"", "    local a=$1\n\
    \    local b=0\n    while [ $((b*b*b)) -le $a ]; do\n        if [ $((b*b*b)) -eq\
    \ $a ]; then\n            echo \"true\"\n            return\n        fi\n    \
    \    b=$((b+1))\n    done\n    echo \"false\"", "    if [ $1 -eq 0 ]; then\n \
    \       echo \"true\"\n    elif [ $1 -eq 1 ]; then\n        echo \"true\"\n  \
    \  elif [ $1 -eq -1 ]; then\n        echo \"true\"\n    else\n        for (( i=2;\
    \ i<=$1; i++ )); do\n            if [ $((i*i*i)) -eq $1 ]; then\n            \
    \    echo \"true\"\n                break\n            elif [ $((i*i*i)) -gt $1\
    \ ]; then\n                echo \"false\"\n                break\n           \
    \ fi\n        done\n    fi", "    local number=$1\n    local result=$(bc <<< \"\
    scale=0; $number ^ (1/3)\")\n    if [ $result -eq 0 ]; then\n        echo \"false\"\
    \n    else\n        local cube=$(bc <<< \"$result ^ 3\")\n        if [ $cube -eq\
    \ $number ]; then\n            echo \"true\"\n        else\n            echo \"\
    false\"\n        fi\n    fi", "    local num=$1\n    local cube=$(echo \"scale=0;\
    \ $num^(1/3)\" | bc)\n    if [ $num -eq $(($cube * $cube * $cube)) ]; then\n \
    \       echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [[ $1\
    \ == 0 ]]; then\n        echo \"true\"\n    elif [[ $1 == 1 ]]; then\n       \
    \ echo \"true\"\n    elif [[ $1 == -1 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 == $(bc <<< \"scale=0; $1^(1/3)\") ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi", "    local num=$1\n    local cube=$(echo\
    \ \"scale=0; $num^(1/3)\" | bc)\n    if [ $num -eq $(($cube*$cube*$cube)) ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [[\
    \ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -lt 0 ]]; then\n  \
    \      echo \"true\"\n    else\n        local i=1\n        while [[ $((i*i*i))\
    \ -lt $1 ]]; do\n            i=$((i+1))\n        done\n        if [[ $((i*i*i))\
    \ -eq $1 ]]; then\n            echo \"true\"\n        else\n            echo \"\
    false\"\n        fi\n    fi", "    local n=$1\n    local m=$(echo \"scale=0; $n^(1/3)\"\
    \ | bc)\n    local result=$(echo \"$m^3 == $n\" | bc)\n    if [ $result -eq 1\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", " \
    \   local n=$1\n    local i=1\n    local cube=1\n    while [[ $cube -lt $n ]];\
    \ do\n        ((i++))\n        ((cube=i*i*i))\n    done\n    [[ $cube -eq $n ]]\
    \ && echo \"true\" || echo \"false\"", "    if [ $1 -eq 0 ]; then\n        echo\
    \ \"true\"\n    elif [ $1 -eq 1 ]; then\n        echo \"true\"\n    elif [ $1\
    \ -eq -1 ]; then\n        echo \"true\"\n    else\n        for ((i=1; i<$1; i++));\
    \ do\n            if [ $((i**3)) -eq $1 ]; then\n                echo \"true\"\
    \n                return\n            fi\n        done\n        echo \"false\"\
    \n    fi", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n    \
    \    echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi", "    local num=$1\n    local i=1\n \
    \   while [ $((i*i*i)) -le $num ]; do\n        if [ $((i*i*i)) -eq $num ]; then\n\
    \            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"false\"", "    local a=$1\n    local b=$(echo \"scale=0;\
    \ $a^(1/3)\" | bc)\n    local c=$(echo \"scale=0; $b^3\" | bc)\n    if [ $a -eq\
    \ $c ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "\tlocal number=$1\n\tlocal result=$(echo \"scale=0; $number ^ (1/3)\" | bc)\n\t\
    if [[ $result -eq $number ]]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\
    \n\tfi", "    if [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -lt\
    \ 0 ]; then\n        echo \"true\"\n    else\n        for i in $(seq 1 $1); do\n\
    \            if [ $((i*i*i)) -eq $1 ]; then\n                echo \"true\"\n \
    \               return\n            fi\n        done\n        echo \"false\"\n\
    \    fi", "    if [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -lt\
    \ 0 ]; then\n        echo \"true\"\n    else\n        for i in $(seq 1 $1); do\n\
    \            if [ $((i*i*i)) -eq $1 ]; then\n                echo \"true\"\n \
    \               return\n            fi\n        done\n        echo \"false\"\n\
    \    fi", "    local number=$1\n    local result=$(echo \"scale=0; $number ^ (1/3)\"\
    \ | bc)\n    if [ $result -eq 0 ]; then\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi", "    if [ $1 -lt 0 ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local a=$1\n    local b=$(echo\
    \ \"scale=0; $a^(1/3)\" | bc)\n    if [[ $a -eq $((b*b*b)) ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local a=$1\n    local\
    \ b=0\n    while [ $b -le $a ]; do\n        if [ $((b*b*b)) -eq $a ]; then\n \
    \           echo \"true\"\n            return\n        fi\n        b=$((b+1))\n\
    \    done\n    echo \"false\"", "    if [ $1 -eq 0 ] || [ $1 -eq 1 ] || [ $1 -eq\
    \ -1 ]; then\n        echo \"true\"\n    else\n        local cube=$(echo \"scale=0;\
    \ $1^(1/3)\" | bc -l)\n        if [ $cube -eq 0 ]; then\n            echo \"false\"\
    \n        else\n            local cube_square=$(echo \"$cube^3\" | bc -l)\n  \
    \          if [ $cube_square -eq $1 ]; then\n                echo \"true\"\n \
    \           else\n                echo \"false\"\n            fi\n        fi\n\
    \    fi", "    local num=$1\n    local i=1\n    while [ $((i*i*i)) -le $num ];\
    \ do\n        if [ $((i*i*i)) -eq $num ]; then\n            echo \"true\"\n  \
    \          return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
  "    local a=$1\n    local b=0\n    while [ $b -le $a ]; do\n        if [ $((b*b*b))\
    \ -eq $a ]; then\n            echo \"true\"\n            return\n        fi\n\
    \        b=$((b+1))\n    done\n    echo \"false\"", "    local a=$1\n    local\
    \ b=$(echo \"scale=0;sqrt($a)\" | bc)\n    local c=$(echo \"$b * $b * $b\" | bc)\n\
    \    if [ $a -eq $c ]; then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi", "    local number=$1\n    local result=$(bc <<< \"scale=0; $number^(1/3)\"\
    )\n    if [[ $number -eq $((result * result * result)) ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local num=$1\n   \
    \ local sqrt=$(echo \"sqrt($num)\" | bc)\n    local cube=$(echo \"$sqrt * $sqrt\
    \ * $sqrt\" | bc)\n    if [ $cube -eq $num ]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi", "    if [ \"$1\" -eq 0 ]; then\n   \
    \     echo \"true\"\n    elif [ \"$1\" -lt 0 ]; then\n        echo \"true\"\n\
    \    else\n        for (( i=1; i<=$1; i++ )); do\n            if [ $(( i*i*i ))\
    \ -eq $1 ]; then\n                echo \"true\"\n                return\n    \
    \        fi\n        done\n        echo \"false\"\n    fi", "    if [[ $1 -eq\
    \ 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo \"true\"\n    elif [[\
    \ $1 -eq 64 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi", "    if [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo \"true\"\n    elif [ $1 -eq -1 ]; then\n        echo\
    \ \"true\"\n    else\n        for (( i=1; i<$1; i++ )); do\n            if [ $((i*i*i))\
    \ -eq $1 ]; then\n                echo \"true\"\n                return\n    \
    \        fi\n        done\n        echo \"false\"\n    fi", "    local num=$1\n\
    \    local i=1\n    while (( i*i*i <= num )); do\n        if (( i*i*i == num ));\
    \ then\n            echo \"true\"\n            return\n        fi\n        ((\
    \ i++ ))\n    done\n    echo \"false\"", "    local a=$1\n    local b=0\n    while\
    \ [ $((b*b*b)) -le $a ]; do\n        if [ $((b*b*b)) -eq $a ]; then\n        \
    \    echo \"true\"\n            return\n        fi\n        b=$((b+1))\n    done\n\
    \    echo \"false\"", "    local num=$1\n    local result=$(echo \"scale=0; $num^(1/3)\"\
    \ | bc)\n    if [ $result -eq $num ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    if [ $1 -eq 0 ]; then\n        echo \"\
    true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n       \
    \ for (( i=1; i<=$1; i++ )); do\n            if [ $((i*i*i)) -eq $1 ]; then\n\
    \                echo \"true\"\n                break\n            elif [ $((i*i*i))\
    \ -gt $1 ]; then\n                echo \"false\"\n                break\n    \
    \        fi\n        done\n    fi", "    local n=$1\n    local i=0\n    while\
    \ [ $((i*i*i)) -le $n ]; do\n        if [ $((i*i*i)) -eq $n ]; then\n        \
    \    echo \"true\"\n            return\n        fi\n        i=$((i+1))\n    done\n\
    \    echo \"false\"", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n  \
    \  elif [[ $1 -lt 0 ]]; then\n        echo \"true\"\n    else\n        local i=1\n\
    \        while [[ $((i*i*i)) -lt $1 ]]; do\n            i=$((i+1))\n        done\n\
    \        if [[ $((i*i*i)) -eq $1 ]]; then\n            echo \"true\"\n       \
    \ else\n            echo \"false\"\n        fi\n    fi", "    if [ $1 -eq 0 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\
    \n    else\n        for ((i=1; i<=$1; i++)); do\n            if [ $((i*i*i)) -eq\
    \ $1 ]; then\n                echo \"true\"\n                break\n         \
    \   elif [ $((i*i*i)) -gt $1 ]; then\n                echo \"false\"\n       \
    \         break\n            fi\n        done\n    fi", "    local n=$1\n    local\
    \ i=0\n    while [ $((i*i*i)) -le $n ]; do\n        if [ $((i*i*i)) -eq $n ];\
    \ then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"false\"", "    local num=$1\n    local root=$(echo \"scale=0;\
    \ $num ^ (1/3)\" | bc -l)\n    local cube=$(echo \"$root ^ 3\" | bc -l)\n    if\
    \ [ \"$cube\" -eq \"$num\" ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n  \
    \  elif [[ $1 -eq 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq -1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi", "    local number=$1\n    local\
    \ cube=$(echo \"scale=0; $number^(1/3)\" | bc)\n    if [[ $number -eq $((cube*cube*cube))\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local number=$1\n    local i=1\n    while [ $((i*i*i)) -le $number ]\n    do\n\
    \        if [ $((i*i*i)) -eq $number ]\n        then\n            echo \"true\"\
    \n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
  "    if [ $1 -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n\
    \        echo \"true\"\n    else\n        for i in $(seq 1 $1); do\n         \
    \   if [ $((i*i*i)) -eq $1 ]; then\n                echo \"true\"\n          \
    \      break\n            else\n                echo \"false\"\n             \
    \   break\n            fi\n        done\n    fi", "    local a=$1\n    local b=$(echo\
    \ \"scale=0; $a^(1/3)\" | bc)\n    if [[ $a -eq $((b*b*b)) ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local a=$1\n    local\
    \ b=$(echo \"scale=0; $a^(1/3)\" | bc)\n    if [ $a -eq $((b*b*b)) ]; then\n \
    \       echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [[ $1\
    \ -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -lt 0 ]]; then\n     \
    \   echo \"true\"\n    else\n        local cube=$(echo \"scale=0; $1^(1/3)\" |\
    \ bc)\n        if [[ $cube -eq 0 ]]; then\n            echo \"false\"\n      \
    \  else\n            local cube_result=$(echo \"scale=0; $cube^3\" | bc)\n   \
    \         if [[ $cube_result -eq $1 ]]; then\n                echo \"true\"\n\
    \            else\n                echo \"false\"\n            fi\n        fi\n\
    \    fi", "    local num=$1\n    local i=0\n    local cube=0\n    while [ $cube\
    \ -le $num ]\n    do\n        cube=$((i*i*i))\n        if [ $cube -eq $num ]\n\
    \        then\n            echo \"true\"\n            return\n        fi\n   \
    \     i=$((i+1))\n    done\n    echo \"false\"", "    if [[ $1 == 0 ]]; then\n\
    \        echo \"true\"\n    elif [[ $1 == 1 ]]; then\n        echo \"true\"\n\
    \    elif [[ $1 == -1 ]]; then\n        echo \"true\"\n    elif [[ $1 == 2 ]];\
    \ then\n        echo \"false\"\n    elif [[ $1 == 3 ]]; then\n        echo \"\
    false\"\n    elif [[ $1 == 4 ]]; then\n        echo \"true\"\n    elif [[ $1 ==\
    \ 5 ]]; then\n        echo \"false\"\n    elif [[ $1 == 6 ]]; then\n        echo\
    \ \"false\"\n    elif [[ $1 == 7 ]]; then\n        echo \"false\"\n    elif [[\
    \ $1 == 8 ]]; then\n        echo \"true\"\n    elif [[ $1 == 9 ]]; then\n    \
    \    echo \"true\"\n    elif [[ $1 == 10 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 == 11 ]]; then\n        echo \"false\"\n    elif [[ $1 == 12 ]];\
    \ then\n        echo \"false\"\n    elif [[ $1 == 13 ]]; then\n        echo \"\
    false\"\n    elif [[ $1 == 14 ]]; then\n        echo \"false\"\n    elif [[ $1\
    \ == 15 ]]; then\n        echo \"false\"\n    elif [[ $1 == 16 ]]; then\n    \
    \    echo \"true\"\n    elif [[ $1 == 17 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 == 18 ]]; then\n        echo \"false\"\n    elif [[ $1 == 19 ]];\
    \ then\n        echo \"false\"\n    elif [[ $1 == 20 ]]; then\n        echo \"\
    false\"\n    elif [[ $1 == 21 ]]; then\n        echo \"false\"\n    elif [[ $1\
    \ == 22 ]]; then\n        echo \"false\"\n    elif [[ $1 == 23 ]]; then\n    \
    \    echo \"false\"\n    elif [[ $1 == 24 ]]; then\n        echo \"false\"\n \
    \   elif [[ $1 == 25 ]]; then\n        echo \"true\"\n    elif [[ $1 == 26 ]];\
    \ then\n        echo \"false\"\n    elif [[ $1 ==", "    local num=$1\n    local\
    \ i=1\n    local cube=1\n    while [ $cube -lt $num ]; do\n        i=$((i+1))\n\
    \        cube=$((i*i*i))\n    done\n    if [ $cube -eq $num ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local num=$1\n   \
    \ local num_sqrt=$(echo \"sqrt($num)\" | bc)\n    local num_cube=$(echo \"$num_sqrt^3\"\
    \ | bc)\n    if [ $num -eq $num_cube ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    if [[ $1 -eq 0 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq\
    \ -1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local num=$1\n\
    \    local x=0\n    while [ $((x*x*x)) -le $num ]; do\n        if [ $((x*x*x))\
    \ -eq $num ]; then\n            echo \"true\"\n            return\n        fi\n\
    \        x=$((x+1))\n    done\n    echo \"false\"", "    local num=$1\n    local\
    \ num_sqrt=$(echo \"sqrt($num)\" | bc)\n    local num_cube=$(echo \"$num_sqrt^3\"\
    \ | bc)\n    if [ $num -eq $num_cube ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local a=$1\n    local b=0\n    while [\
    \ $((b*b*b)) -le $a ]; do\n        if [ $((b*b*b)) -eq $a ]; then\n          \
    \  echo \"true\"\n            return\n        fi\n        ((b++))\n    done\n\
    \    echo \"false\"", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n  \
    \  elif [[ $1 -lt 0 ]]; then\n        echo \"true\"\n    else\n        for ((\
    \ i=1; i<=$1; i++ )); do\n            if [[ $((i*i*i)) -eq $1 ]]; then\n     \
    \           echo \"true\"\n                break\n            elif [[ $((i*i*i))\
    \ -gt $1 ]]; then\n                echo \"false\"\n                break\n   \
    \         fi\n        done\n    fi", "    local n=$1\n    local i=0\n    local\
    \ cube=0\n    while [ $cube -le $n ]\n    do\n        cube=$((i*i*i))\n      \
    \  if [ $cube -eq $n ]\n        then\n            echo \"true\"\n            return\n\
    \        fi\n        i=$((i+1))\n    done\n    echo \"false\"", "    if [[ $1\
    \ -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n     \
    \   echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo \"true\"\n   \
    \ elif [[ $1 -eq 8 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 27 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -eq 125 ]]; then\n        echo \"true\"\n    elif [[ $1\
    \ -eq 216 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 343 ]]; then\n \
    \       echo \"true\"\n    elif [[ $1 -eq 512 ]]; then\n        echo \"true\"\n\
    \    elif [[ $1 -eq 729 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 1000\
    \ ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 1331 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 1728 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 -eq 2197 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 2744 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 3375 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 4096 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 -eq 4913 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 5832 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 6859 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 8000 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 -eq 9261 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 10648 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq 12167 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 13824 ]]; then\n        echo \"true\"\n    elif\
    \ [[", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq\
    \ 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 64 ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    if [ $1 -eq 0 ]; then\n        echo \"\
    true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n       \
    \ for i in $(seq 1 $1); do\n            if [ $(($i * $i * $i)) -eq $1 ]; then\n\
    \                echo \"true\"\n                break\n            else\n    \
    \            echo \"false\"\n                break\n            fi\n        done\n\
    \    fi", "    local num=$1\n    local cube=$(echo \"scale=0; $num^(1/3)\" | bc)\n\
    \    if [[ $num -eq $(($cube * $cube * $cube)) ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    if [ $1 -eq 0 ]; then\n    \
    \    echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n\
    \        for i in $(seq 1 $1); do\n            if [ $((i*i*i)) -eq $1 ]; then\n\
    \                echo \"true\"\n                return\n            fi\n     \
    \   done\n        echo \"false\"\n    fi", "    if [[ $1 -eq 0 ]]; then\n    \
    \    echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"true\"\n   \
    \ elif [[ $1 -eq -1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 64 ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  local\
    \ number=$1\n  local result=$(echo \"scale=0; $number^(1/3)\" | bc)\n  if [ $result\
    \ -eq $number ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi", " \
    \   local n=$1\n    local i=0\n    local cube=0\n    while [ $cube -le $n ]\n\
    \    do\n        cube=$((i*i*i))\n        if [ $cube -eq $n ]\n        then\n\
    \            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"false\"", "    local a=$1\n    local b=0\n    while [ $((b*b*b))\
    \ -le $a ]; do\n        if [ $((b*b*b)) -eq $a ]; then\n            echo \"true\"\
    \n            return\n        fi\n        b=$((b+1))\n    done\n    echo \"false\"",
  "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -lt 0 ]]; then\n\
    \        echo \"true\"\n    else\n        for (( i=1; i<=$1; i++ )); do\n    \
    \        if [[ $((i*i*i)) -eq $1 ]]; then\n                echo \"true\"\n   \
    \             break\n            elif [[ $((i*i*i)) -gt $1 ]]; then\n        \
    \        echo \"false\"\n                break\n            fi\n        done\n\
    \    fi", "    local num=$1\n    local i=0\n    while [ $((i*i*i)) -le $num ];\
    \ do\n        if [ $((i*i*i)) -eq $num ]; then\n            echo \"true\"\n  \
    \          return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
  "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n\
    \        echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo \"true\"\n\
    \    elif [[ $1 -eq 64 ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local n=$1\n    local i=1\n    while [ $((i*i*i)) -le\
    \ $n ]; do\n        if [ $((i*i*i)) -eq $n ]; then\n            echo \"true\"\n\
    \            return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
  "    local num=$1\n    local res=$(bc <<< \"scale=0; $num^(1/3)\")\n    local cube=$(bc\
    \ <<< \"$res^3\")\n    if [ $cube -eq $num ]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi", "    if [[ $1 -eq 0 ]]; then\n     \
    \   echo \"true\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"true\"\n    elif\
    \ [[ $1 -eq -1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq 64 ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [ $1\
    \ -eq 0 ]; then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo\
    \ \"true\"\n    else\n        for (( i=1; i<=$1; i++ )); do\n            if [\
    \ $((i*i*i)) -eq $1 ]; then\n                echo \"true\"\n                break\n\
    \            fi\n        done\n        if [ $i -eq $1 ]; then\n            echo\
    \ \"false\"\n        fi\n    fi", "    local num=$1\n    local i=1\n    while\
    \ (( i*i*i <= num )); do\n        if (( i*i*i == num )); then\n            echo\
    \ \"true\"\n            return\n        fi\n        (( i++ ))\n    done\n    echo\
    \ \"false\"", "    local n=$1\n    local cube=$(echo \"scale=0; $n ^ (1/3)\" |\
    \ bc)\n    if [[ $n -eq $((cube * cube * cube)) ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi"]
stop_tokens:
- "\n}"

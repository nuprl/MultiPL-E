name: HumanEval_18_how_many_times
language: sh
prompt: "#!/bin/bash\n# Find how many times a given substring can be found in the\
  \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\")\n\
  # \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
  \ \"aaaa\" \"aa\")\n# \"3\"\nhow_many_times() {\n"
tests: "}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
  ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
  \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
completions: ["  local original=\"$1\"\n  local substring=\"$2\"\n  local count=0\n\
    \  local position=0\n  while [[ $position -lt ${#original} ]]; do\n    local new_position=$(($position\
    \ + $(index_of \"${original:$position}\" \"$substring\")))\n    if [[ $new_position\
    \ -eq $position ]]; then\n      break\n    fi\n    position=$new_position\n  \
    \  count=$(($count + 1))\n  done\n  echo \"$count\"", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_length=\"${#original}\"\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -i counter=0\n    for ((i=0; i<=max_index; i++));\
    \ do\n        if [[ \"${original:i:substring_length}\" == \"$substring\" ]]; then\n\
    \            ((counter++))\n        fi\n    done\n    echo \"$counter\"", "  \
    \  local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r len_original=\"\
    ${#original}\"\n    local -r len_substring=\"${#substring}\"\n    local -r len_diff=\"\
    $((len_original - len_substring))\"\n    local -r max_index=\"$((len_diff + 1))\"\
    \n    local -r max_index_minus_one=\"$((max_index - 1))\"\n    local -i count=0\n\
    \    for ((i=0; i<max_index; i++)); do\n        local -r substr=\"${original:i:len_substring}\"\
    \n        if [[ \"$substr\" == \"$substring\" ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo \"$count\"", "    local original=\"$1\"\
    \n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while [[ $i\
    \ -lt ${#original} ]]; do\n        if [[ \"${original:$i:${#substring}}\" == \"\
    $substring\" ]]; then\n            ((count++))\n            ((i+=${#substring}))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local -r string=\"$1\"\n    local -r substring=\"$2\"\n    local -r string_length=${#string}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((string_length\
    \ - substring_length))\n    local -r max_index_plus_one=$((max_index + 1))\n \
    \   local -r max_index_plus_one_length=${#max_index_plus_one}\n    local -r max_index_plus_one_length_minus_one=$((max_index_plus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ offset=0\n    while true; do\n        local index=$(index_of \"$original\" \"\
    $substring\" \"$offset\")\n        if [ \"$index\" -eq \"-1\" ]; then\n      \
    \      break\n        fi\n        count=$((count + 1))\n        offset=$((index\
    \ + 1))\n    done\n    echo \"$count\"", "    local original=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n    local\
    \ original_length=${#original}\n    local substring_length=${#substring}\n   \
    \ for ((i=0; i<original_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((substring_length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n\
    \    local -r substring=\"$2\"\n    local -r original_length=$(strlen \"$original\"\
    )\n    local -r substring_length=$(strlen \"$substring\")\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -r substring_first_char=$(substr \"$substring\"\
    \ 0 1)\n    local -r substring_last_char=$(substr \"$substring\" -1 1)\n    local\
    \ -r substring_first_char_index=$(index_of \"$original\" \"$substring_first_char\"\
    )\n    local -r substring_last_char_index=$(index_of \"$original\" \"$substring_last_char\"\
    )\n    local -r substring_first_char_last_index=$(last_index_of \"$original\"\
    \ \"$substring_first_char\")\n    local -r substring_last_char_last_index=$(last_index_of\
    \ \"$original\" \"$substring_last_char\")\n    local -r substring_first_char_count=$((substring_first_char_last_index\
    \ - substring_first_char_index + 1))\n    local -r substring_last_char_count=$((substring_last_char_last_index\
    \ - substring_last_char_index + 1))\n    local -r substring_first_char_count_before_substring=$((substring_first_char_index\
    \ - substring_last_char_index))\n    local -r substring_last_char_count_before_substring=$((substring_last_char_index\
    \ - substring_first_char_index))\n    local -r substring_first_char_count_after_substring=$((substring_first_char_last_index\
    \ - substring_last_char_last_index))\n    local -r substring_last_char_count_after_substring=$((substring_last_char_last_index\
    \ - substring_first_char_last_index))\n    local -r substring_first_char_count_before_substring_last_char=$((substring_first_char_last_index\
    \ - substring", "    local original=\"$1\"\n    local substring=\"$2\"\n    local\
    \ original_length=${#original}\n    local substring_length=${#substring}\n   \
    \ local counter=0\n    for ((i=0; i<=original_length-substring_length; i++));\
    \ do\n        local current_substring=${original:i:substring_length}\n       \
    \ if [[ \"$current_substring\" == \"$substring\" ]]; then\n            counter=$((counter+1))\n\
    \        fi\n    done\n    echo \"$counter\"", "  local original=\"$1\"\n  local\
    \ substring=\"$2\"\n  local count=0\n  local i=0\n  local j=0\n  local substring_length=${#substring}\n\
    \  local original_length=${#original}\n  for ((i=0; i<original_length; i++));\
    \ do\n    for ((j=0; j<substring_length; j++)); do\n      if [[ \"${original:$i:1}\"\
    \ != \"${substring:$j:1}\" ]]; then\n        break\n      fi\n      if [[ $j -eq\
    \ $((substring_length-1)) ]]; then\n        count=$((count+1))\n      fi\n   \
    \   i=$((i+1))\n    done\n  done\n  echo \"$count\"", "    local original=\"$1\"\
    \n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while [[ \"\
    ${original:i:${#substring}}\" == \"$substring\" ]]; do\n        ((count++))\n\
    \        ((i++))\n    done\n    echo \"$count\"", "  local string=\"$1\"\n  local\
    \ substring=\"$2\"\n  local count=0\n  local index=0\n  while [[ \"${string:index:${#substring}}\"\
    \ == \"$substring\" ]]; do\n    ((count++))\n    ((index+=${#substring}))\n  done\n\
    \  echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r length_of_substring=\"${#substring}\"\n    local -r length_of_original=\"\
    ${#original}\"\n    local -r max_index=$((length_of_original - length_of_substring))\n\
    \    local -i count=0\n    local -i index=0\n    while [[ $index -le $max_index\
    \ ]]; do\n        if [[ \"${original:$index:$length_of_substring}\" == \"$substring\"\
    \ ]]; then\n            ((count++))\n            ((index += length_of_substring))\n\
    \        else\n            ((index++))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ index=0\n    while [[ $index -lt ${#original} ]]; do\n        local result=$(echo\
    \ \"${original:$index:${#substring}}\" | grep -c \"$substring\")\n        if [[\
    \ $result -eq 1 ]]; then\n            count=$((count + 1))\n            index=$((index\
    \ + ${#substring}))\n        else\n            index=$((index + 1))\n        fi\n\
    \    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -i count=0\n    local -i i=0\n    while (( i <= original_length\
    \ - substring_length )); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n            (( i += substring_length\
    \ ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ offset=0\n    while [[ \"${original:offset:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        offset=$((offset + 1))\n    done\n\
    \    echo \"$count\"", "  local original=\"$1\"\n  local substring=\"$2\"\n  local\
    \ count=0\n  local original_length=${#original}\n  local substring_length=${#substring}\n\
    \  local i=0\n  while [ $i -lt $original_length ]; do\n    local j=0\n    local\
    \ k=$i\n    while [ $j -lt $substring_length ] && [ $k -lt $original_length ]\
    \ && [ \"${original:$k:1}\" == \"${substring:$j:1}\" ]; do\n      j=$((j+1))\n\
    \      k=$((k+1))\n    done\n    if [ $j -eq $substring_length ]; then\n     \
    \ count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count", "    local\
    \ string=$1\n    local substring=$2\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:${#substring}}\" == \"\
    $substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count",
  "    local original_string=\"$1\"\n    local substring=\"$2\"\n    local -i count=0\n\
    \    local -i i=0\n    local -i substring_length=${#substring}\n    local -i original_string_length=${#original_string}\n\
    \    while [ $i -lt $original_string_length ]; do\n        local -i j=0\n    \
    \    while [ $j -lt $substring_length ] && [ \"${original_string:$i:1}\" == \"\
    ${substring:$j:1}\" ]; do\n            j=$((j+1))\n            i=$((i+1))\n  \
    \      done\n        if [ $j -eq $substring_length ]; then\n            count=$((count+1))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $count", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local substring_length=${#substring}\n    local original_length=${#original}\n\
    \    while [[ $i -lt $original_length ]]; do\n        if [[ \"${original:$i:$substring_length}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n            ((i+=substring_length))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local len_original=${#original}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_original; i++)); do\n        for ((j=0; j<len_substring;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" == \"${substring:$j:1}\" ]];\
    \ then\n                ((i++))\n            else\n                break\n   \
    \         fi\n        done\n        if [[ $j -eq $len_substring ]]; then\n   \
    \         ((count++))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"\
    ${#original}\"\n    local -r length_substring=\"${#substring}\"\n    local -r\
    \ max_index=$((length_original - length_substring))\n    local -i count=0\n  \
    \  for ((i=0; i<=max_index; i++)); do\n        if [[ \"${original:i:length_substring}\"\
    \ == \"$substring\" ]]; then\n            count=$((count + 1))\n        fi\n \
    \   done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$((original_length\
    \ - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -i counter=0\n  \
    \  for ((i=0; i<original_length_minus_substring_length_plus_one; i++)); do\n \
    \       local -r substring_to_check=\"${original:i:substring_length}\"\n     \
    \   if [[ \"$substring_to_check\" == \"$substring\" ]]; then\n            counter=$((counter\
    \ + 1))\n        fi\n    done\n    echo \"$counter\"", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_length=\"${#original}\"\n    local -r original_length_minus_substring_length=\"\
    $((original_length - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -i count=0\n    for\
    \ ((i=0; i<original_length_minus_substring_length_plus_one; i++)); do\n      \
    \  local -r substring_start=\"$((i))\"\n        local -r substring_end=\"$((i\
    \ + substring_length))\"\n        local -r substring_to_check=\"${original:substring_start:substring_end}\"\
    \n        if [[ \"$substring_to_check\" == \"$substring\" ]]; then\n         \
    \   count=$((count + 1))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"\
    ${#original}\"\n    local -r length_substring=\"${#substring}\"\n    local -i\
    \ i=0\n    local -i count=0\n    while [ $i -lt $length_original ]; do\n     \
    \   if [ \"${original:$i:$length_substring}\" == \"$substring\" ]; then\n    \
    \        ((count++))\n            ((i+=length_substring))\n        else\n    \
    \        ((i++))\n        fi\n    done\n    echo \"$count\"", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"${#original}\"\
    \n    local -r length_substring=\"${#substring}\"\n    local -i count=0\n    local\
    \ -i i=0\n    while [ $i -lt $length_original ]; do\n        local -r current_substring=\"\
    ${original:$i:$length_substring}\"\n        if [ \"$current_substring\" == \"\
    $substring\" ]; then\n            count=$((count + 1))\n            i=$((i + length_substring))\n\
    \        else\n            i=$((i + 1))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local original_len=${#original}\n   \
    \ local substring_len=${#substring}\n    for ((i=0; i<original_len; i++)); do\n\
    \        for ((j=0; j<substring_len; j++)); do\n            if [[ \"${original:$i:1}\"\
    \ != \"${substring:$j:1}\" ]]; then\n                break\n            fi\n \
    \           if [[ $j -eq $((substring_len-1)) ]]; then\n                count=$((count+1))\n\
    \            fi\n            i=$((i+1))\n        done\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local original=$1\n    local substring=$2\n    local count=0\n    local i=0\n\
    \    local len=${#original}\n    while [ $i -lt $len ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -i count=0\n    local -i i=0\n    while [ $i\
    \ -le $max_index ]; do\n        local -r substring_start_index=$i\n        local\
    \ -r substring_end_index=$((substring_start_index + substring_length))\n     \
    \   local -r substring_from_original=${original:$substring_start_index:$substring_length}\n\
    \        if [ \"$substring_from_original\" == \"$substring\" ]; then\n       \
    \     ((count++))\n            ((i += substring_length))\n        else\n     \
    \       ((i++))\n        fi\n    done\n    echo \"$count\"", "    local original=$1\n\
    \    local substring=$2\n    local count=0\n    local i=0\n    local j=0\n   \
    \ local length=${#original}\n    local sublength=${#substring}\n    for ((i=0;\
    \ i<length; i++)); do\n        if [[ ${original:$i:$sublength} == $substring ]];\
    \ then\n            count=$((count+1))\n        fi\n    done\n    echo $count",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local len_o=${#original}\n    local len_s=${#substring}\n\
    \    for ((i=0; i<len_o; i++)); do\n        for ((j=0; j<len_s; j++)); do\n  \
    \          if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]]; then\n    \
    \            break\n            fi\n            if [[ $j -eq $((len_s-1)) ]];\
    \ then\n                count=$((count+1))\n            fi\n        done\n   \
    \ done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -i\
    \ count=0\n    for ((i=0; i<=max_index; i++)); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -i\
    \ count=0\n    local -i i=0\n    while [ $i -le $max_index ]; do\n        if [\
    \ \"${original:$i:$substring_length}\" == \"$substring\" ]; then\n           \
    \ count=$((count + 1))\n            i=$((i + substring_length))\n        else\n\
    \            i=$((i + 1))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n\
    \    local j=0\n    for ((i=0; i<${#original}; i++)); do\n        if [[ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n        fi\n   \
    \ done\n    echo \"$count\"", "  local -r original_string=\"$1\"\n  local -r substring=\"\
    $2\"\n  local -r substring_length=\"${#substring}\"\n  local -r original_string_length=\"\
    ${#original_string}\"\n  local -r original_string_length_minus_substring_length=\"\
    $((original_string_length - substring_length))\"\n  local -r original_string_length_minus_substring_length_plus_one=\"\
    $((original_string_length_minus_substring_length + 1))\"\n  local -r original_string_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one - 1))\"\n  local -r\
    \ original_string_length_minus_substring_length_plus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one - 1))\"\n\
    \  local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one\
    \ - 1))\"\n  local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n  local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n  local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_", "  local original=\"\
    $1\"\n  local substring=\"$2\"\n  local count=0\n  local len=${#substring}\n \
    \ for (( i=0; i<${#original}; i++ )); do\n    if [[ \"${original:$i:$len}\" ==\
    \ \"$substring\" ]]; then\n      (( count++ ))\n    fi\n  done\n  echo \"$count\"",
  "    local original_string=\"$1\"\n    local substring=\"$2\"\n    local -i count=0\n\
    \    local -i substring_length=${#substring}\n    local -i original_string_length=${#original_string}\n\
    \    local -i i=0\n    while [ $i -lt $original_string_length ]; do\n        local\
    \ -i j=0\n        while [ $j -lt $substring_length ] && [ \"${original_string:$i:1}\"\
    \ == \"${substring:$j:1}\" ]; do\n            ((i++))\n            ((j++))\n \
    \       done\n        if [ $j -eq $substring_length ]; then\n            ((count++))\n\
    \        fi\n        ((i++))\n    done\n    echo $count", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\" ==\
    \ \"$substring\" ]; then\n            ((count++))\n            ((i+=${#substring}))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local len_original=${#original}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_original; i++)); do\n        for ((j=0; j<len_substring;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n\
    \    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_length=\"${#original}\"\n    local -i count=0\n    local\
    \ -i i=0\n    while (( i < original_length )); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n            (( i += substring_length\
    \ ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo \"$count\"",
  "  local -r original=\"$1\"\n  local -r substring=\"$2\"\n  local -r length_original=\"\
    ${#original}\"\n  local -r length_substring=\"${#substring}\"\n  local -r length_difference=$((length_original\
    \ - length_substring))\n  local -r length_difference_plus_one=$((length_difference\
    \ + 1))\n  local -r length_difference_plus_one_string=\"$length_difference_plus_one\"\
    \n  local -r length_difference_plus_one_string_length=\"${#length_difference_plus_one_string}\"\
    \n  local -r length_difference_plus_one_string_length_plus_one=$((length_difference_plus_one_string_length\
    \ + 1))\n  local -r length_difference_plus_one_string_length_plus_one_string=\"\
    $length_difference_plus_one_string_length_plus_one\"\n  local -r length_difference_plus_one_string_length_plus_one_string_length=\"\
    ${#length_difference_plus_one_string_length_plus_one_string}\"\n  local -r length_difference_plus_one_string_length_plus_one_string_length_plus_one=$((length_difference_plus_one_string_length_plus_one_string_length\
    \ + 1))\n  local -r length_difference_plus_one_string_length_plus_one_string_length_plus_one_string=\"\
    $length_difference_plus_one_string_length_plus_one_string_length_plus_one\"\n\
    \  local -r length_difference_plus_one_string_length_plus_one_string_length_plus_one_string_length=\"\
    ${#length_difference_plus_one_string_length_plus_one_string_length_plus_one_string}\"\
    \n  local -r length_difference_plus_one_string_length_plus_one_string_length_plus_one_string_length_plus_one=$((length_difference_plus_one_string_length_plus_one_string_length_plus_",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for ((i=0; i<original_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((substring_length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local original=\"$1\"\n  \
    \  local substring=\"$2\"\n    local count=0\n    local index=0\n    while [ $index\
    \ -lt ${#original} ]; do\n        local index_of_substring=$(index_of \"$original\"\
    \ \"$substring\" $index)\n        if [ $index_of_substring -eq -1 ]; then\n  \
    \          break\n        fi\n        count=$((count + 1))\n        index=$((index_of_substring\
    \ + 1))\n    done\n    echo \"$count\"", "    local -r original_string=\"$1\"\n\
    \    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_string_length=\"${#original_string}\"\n    local -r original_string_length_minus_substring_length=\"\
    $((original_string_length - substring_length))\"\n    local -i counter=0\n   \
    \ local -i i=0\n    while [ \"$i\" -le \"$original_string_length_minus_substring_length\"\
    \ ]; do\n        if [ \"${original_string:$i:$substring_length}\" == \"$substring\"\
    \ ]; then\n            counter=$((counter + 1))\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo \"$counter\"", "    local -r original=\"$1\"\n    local\
    \ -r substring=\"$2\"\n    local -r regex=\"$(echo \"$substring\" | sed 's/[\\\
    *\\.]/\\\\&/g')\"\n    local -r count=\"$(echo \"$original\" | sed \"s/$regex/$substring/g\"\
    \ | wc -c)\"\n    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local i=0\n    while [ $i -lt ${#original} ]; do\n\
    \        if [ \"${original:$i:${#substring}}\" == \"$substring\" ]; then\n   \
    \         count=$((count+1))\n            i=$((i+${#substring}))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n\
    \    while [ $index -lt ${#original} ]; do\n        local substring_index=$(index_of\
    \ \"${original:$index}\" \"$substring\")\n        if [ $substring_index -eq -1\
    \ ]; then\n            break\n        fi\n        index=$((index + substring_index))\n\
    \        count=$((count + 1))\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ len=${#original}\n    local sublen=${#substring}\n    while [ $i -lt $len ];\
    \ do\n        if [ \"${original:$i:$sublen}\" == \"$substring\" ]; then\n    \
    \        count=$((count+1))\n            i=$((i+sublen))\n        else\n     \
    \       i=$((i+1))\n        fi\n    done\n    echo $count", "    local -r original_string=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_string_length=\"${#original_string}\"\n    local -r original_string_length_minus_substring_length=\"\
    $((original_string_length - substring_length))\"\n    local -r original_string_length_minus_substring_length_plus_one=\"\
    $((original_string_length_minus_substring_length + 1))\"\n    local -r substring_length_plus_one=\"\
    $((substring_length + 1))\"\n    local -r substring_length_plus_one_times_original_string_length_minus_substring_length_plus_one=\"\
    $((substring_length_plus_one * original_string_length_minus_substring_length_plus_one))\"\
    \n    local -r substring_length_plus_one_times_original_string_length_minus_substring_length_plus_one_minus_one=\"\
    $((substring_length_plus_one_times_original_string_length_minus_substring_length_plus_one\
    \ - 1))\"\n    local -r substring_length_plus_one_times_original_string_length_minus_substring_length_plus_one_minus_one_divided_by_substring_length_plus_one=\"\
    $((substring_length_plus_one_times_original_string_length_minus_substring_length_plus_one_minus_one\
    \ / substring_length_plus_one))\"\n    local -r substring_length_plus_one_times_original_string_length_minus_substring_length_plus_one_minus_one_divided_by_substring_length_plus_one_plus_one=\"\
    $((substring_length_plus_one_times_original_string_length_minus_substring_length_plus_one_minus_one_divided_by_substring_length_plus_one\
    \ + 1))\"\n    local -r substring_length_plus_one_times_original_string_length_minus_substring_length",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ offset=0\n    while [[ \"${original:$offset:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        offset=$((offset + ${#substring}))\n\
    \    done\n    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local index=0\n    while true; do\n        index=$(index_of\
    \ \"$original\" \"$substring\" \"$index\")\n        if [ \"$index\" -eq \"-1\"\
    \ ]; then\n            break\n        fi\n        count=$((count + 1))\n     \
    \   index=$((index + 1))\n    done\n    echo \"$count\"", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -r substring_first_char=${substring:0:1}\n \
    \   local -r substring_last_char=${substring:substring_length-1:1}\n    local\
    \ -r substring_first_char_index=$(index_of \"$original\" \"$substring_first_char\"\
    )\n    local -r substring_last_char_index=$(index_of \"$original\" \"$substring_last_char\"\
    )\n    local -r substring_first_char_index_max=$((original_length - substring_length))\n\
    \    local -r substring_last_char_index_max=$((original_length - 1))\n    local\
    \ -r substring_first_char_index_min=$((substring_length - 1))\n    local -r substring_last_char_index_min=$((substring_length\
    \ - 1))\n    local -r substring_first_char_index_min_max=$((substring_length -\
    \ 1))\n    local -r substring_last_char_index_min_max=$((substring_length - 1))\n\
    \    local -r substring_first_char_index_max_max=$((original_length - substring_length))\n\
    \    local -r substring_last_char_index_max_max=$((original_length - 1))\n   \
    \ local -r substring_first_char_index_min_min=$((substring_length - 1))\n    local\
    \ -r substring_last_char_index_min_min=$((substring_length - 1))\n    local -r\
    \ substring_first_char_index_max_min=$((original_length - substring_length))\n\
    \    local -r substring_last_char_index_max_min=$((substring_length - 1))\n  \
    \  local -r substring_first_char_index_min_min_max=$((substring_length - 1))\n\
    \    local -r", "    local original_string=\"$1\"\n    local substring=\"$2\"\n\
    \    local -i count=0\n    local -i i=0\n    local -i substring_length=${#substring}\n\
    \    while [ $i -lt ${#original_string} ]; do\n        if [ \"${original_string:$i:$substring_length}\"\
    \ == \"$substring\" ]; then\n            ((count++))\n            ((i+=$substring_length))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo $count", " \
    \   local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r regex=\"\
    $(echo \"$substring\" | sed 's/[][\\.*^$(){}?+|]/\\\\&/g')\"\n    echo \"$original\"\
    \ | grep -o \"$regex\" | wc -l", "    local original_string=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local i=0\n    local length_original_string=${#original_string}\n\
    \    local length_substring=${#substring}\n    while [ $i -lt $length_original_string\
    \ ]; do\n        if [ \"${original_string:$i:$length_substring}\" == \"$substring\"\
    \ ]; then\n            count=$((count+1))\n            i=$((i+length_substring))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for ((i=0; i<original_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" == \"${substring:$j:1}\" ]];\
    \ then\n                ((i++))\n            else\n                break\n   \
    \         fi\n        done\n        if [[ $j -eq $substring_length ]]; then\n\
    \            ((count++))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ string=$1\n    local substring=$2\n    local count=0\n    local i=0\n    while\
    \ [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:${#substring}}\" == \"\
    $substring\" ]; then\n            ((count++))\n            ((i+=${#substring}))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo $count", " \
    \   local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -i count=0\n    local -i i=0\n    while ((i\
    \ <= max_index)); do\n        if [[ \"${original:i:substring_length}\" == \"$substring\"\
    \ ]]; then\n            ((count++))\n            ((i += substring_length))\n \
    \       else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local string=\"$1\"\n    local substring=\"$2\"\n    local -i count=0\n   \
    \ local -i index=0\n    while [[ \"${string:index:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        (( count++ ))\n        (( index += ${#substring} ))\n    done\n\
    \    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r regex=\"$(echo \"$substring\" | sed 's/[][\\.*^$]/\\\\&/g')\"\
    \n    local -r count=\"$(echo \"$original\" | sed \"s/$regex/$regex/g\" | wc -c)\"\
    \n    echo \"$((count / ${#substring}))\"", "    local -r original=\"$1\"\n  \
    \  local -r substring=\"$2\"\n    local -r original_length=${#original}\n    local\
    \ -r substring_length=${#substring}\n    local -r substring_length_minus_one=$((substring_length\
    \ - 1))\n    local -r original_length_minus_substring_length=$((original_length\
    \ - substring_length))\n    local -i count=0\n    local -i i=0\n    while ((i\
    \ <= original_length_minus_substring_length)); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n            ((i += substring_length_minus_one))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -i count=0\n    local -i index=0\n    while\
    \ [ $index -le $max_index ]; do\n        local -r substring_start=${original:$index:$substring_length}\n\
    \        if [ \"$substring_start\" == \"$substring\" ]; then\n            ((count++))\n\
    \        fi\n        ((index++))\n    done\n    echo $count", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    while\
    \ true; do\n        index=$(index_of \"$original\" \"$substring\" \"$index\")\n\
    \        if [ \"$index\" -eq \"-1\" ]; then\n            break\n        fi\n \
    \       count=$((count + 1))\n        index=$((index + 1))\n    done\n    echo\
    \ \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local\
    \ count=0\n    local i=0\n    local len=${#original}\n    while [ $i -lt $len\
    \ ]; do\n        local j=$i\n        local k=0\n        while [ $j -lt $len ]\
    \ && [ \"${original:$j:1}\" == \"${substring:$k:1}\" ]; do\n            j=$((j+1))\n\
    \            k=$((k+1))\n        done\n        if [ $k -eq ${#substring} ]; then\n\
    \            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n  \
    \  echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -i\
    \ count=0\n    local -i i=0\n    while [ $i -le $max_index ]; do\n        if [\
    \ \"${original:$i:$substring_length}\" == \"$substring\" ]; then\n           \
    \ ((count++))\n            ((i+=substring_length))\n        else\n           \
    \ ((i++))\n        fi\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local original_length=${#original}\n\
    \    local substring_length=${#substring}\n    local i\n    for ((i=0; i<=original_length-substring_length;\
    \ i++)); do\n        if [[ \"${original:i:substring_length}\" == \"$substring\"\
    \ ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo \"\
    $count\"", "    local original_string=\"$1\"\n    local substring=\"$2\"\n   \
    \ local result=0\n    local index=0\n    while [ $index -lt ${#original_string}\
    \ ]; do\n        local substring_index=0\n        local original_string_index=$index\n\
    \        while [ $substring_index -lt ${#substring} ] && [ $original_string_index\
    \ -lt ${#original_string} ] && [ \"${original_string:$original_string_index:1}\"\
    \ == \"${substring:$substring_index:1}\" ]; do\n            substring_index=$((substring_index+1))\n\
    \            original_string_index=$((original_string_index+1))\n        done\n\
    \        if [ $substring_index -eq ${#substring} ]; then\n            result=$((result+1))\n\
    \        fi\n        index=$((index+1))\n    done\n    echo \"$result\"", "  \
    \  local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            ((count++))\n            ((i+=${#substring}))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [[ $i -lt ${#original} ]]; do\n        if [[ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n            (( i += ${#substring}\
    \ ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=$(echo\
    \ \"$original\" | wc -c)\n    local -r substring_length=$(echo \"$substring\"\
    \ | wc -c)\n    local -r max_index=$((original_length - substring_length + 1))\n\
    \    local -r max_index_plus_one=$((max_index + 1))\n    local -i count=0\n  \
    \  for ((i=1; i<max_index_plus_one; i++)); do\n        local -r substring_i=$(echo\
    \ \"$original\" | cut -c \"$i-$((i + substring_length - 2))\")\n        if [[\
    \ \"$substring_i\" == \"$substring\" ]]; then\n            ((count++))\n     \
    \   fi\n    done\n    echo \"$count\"", "    local original=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local offset=0\n    while [[ \"${original:$offset:${#substring}}\"\
    \ == \"$substring\" ]]; do\n        count=$((count + 1))\n        offset=$((offset\
    \ + ${#substring}))\n    done\n    echo \"$count\"", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"${#original}\"\
    \n    local -r length_substring=\"${#substring}\"\n    local -r length_difference=$((length_original\
    \ - length_substring))\n    local -r length_difference_plus_one=$((length_difference\
    \ + 1))\n    local -r length_difference_plus_one_minus_one=$((length_difference_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -r max_index=$((\
    \ original_length - substring_length ))\n    local -i count=0\n    local -i i=0\n\
    \    while (( i <= max_index )); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n            (( i += substring_length\
    \ ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -i count=0\n\
    \    local -i i=0\n    while (( i < original_length )); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n            (( i += substring_length\
    \ ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ index=0\n    while [[ $index -lt ${#original} ]]; do\n        if [[ \"${original:$index:${#substring}}\"\
    \ == \"$substring\" ]]; then\n            count=$((count + 1))\n            index=$((index\
    \ + ${#substring}))\n        else\n            index=$((index + 1))\n        fi\n\
    \    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$((original_length\
    \ - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one - 1))\"\n    local\
    \ -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_minus_one - 1))\"\
    \n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_length_minus_substring_length", "    local original_string=\"\
    $1\"\n    local substring=\"$2\"\n    local original_string_length=${#original_string}\n\
    \    local substring_length=${#substring}\n    local counter=0\n    for (( i=0;\
    \ i<=$((original_string_length-substring_length)); i++ )); do\n        if [[ \"\
    ${original_string:$i:$substring_length}\" == \"$substring\" ]]; then\n       \
    \     counter=$((counter+1))\n        fi\n    done\n    echo \"$counter\"", " \
    \   local original=$1\n    local substring=$2\n    local count=0\n    local index=0\n\
    \    while [ \"${original:$index:${#substring}}\" == \"$substring\" ]; do\n  \
    \      count=$((count+1))\n        index=$((index+${#substring}))\n    done\n\
    \    echo $count", "    local original=\"$1\"\n    local substring=\"$2\"\n  \
    \  local count=0\n    local i=0\n    local j=0\n    local k=0\n    local len_original=${#original}\n\
    \    local len_substring=${#substring}\n    for ((i=0; i<len_original; i++));\
    \ do\n        for ((j=0; j<len_substring; j++)); do\n            if [[ \"${original:$i:1}\"\
    \ == \"${substring:$j:1}\" ]]; then\n                for ((k=0; k<len_substring;\
    \ k++)); do\n                    if [[ \"${original:$i+$k:1}\" == \"${substring:$k:1}\"\
    \ ]]; then\n                        count=$((count+1))\n                    else\n\
    \                        break\n                    fi\n                done\n\
    \            fi\n        done\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ len=${#original}\n    local sublen=${#substring}\n    while [ $i -lt $len ];\
    \ do\n        if [ \"${original:$i:$sublen}\" == \"$substring\" ]; then\n    \
    \        (( count++ ))\n            (( i += sublen - 1 ))\n        fi\n      \
    \  (( i++ ))\n    done\n    echo \"$count\"", "    local original=\"$1\"\n   \
    \ local substring=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n  \
    \  local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for ((i=0; i<original_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((substring_length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local original=\"$1\"\n  \
    \  local substring=\"$2\"\n    local count=0\n    local index=0\n    while true;\
    \ do\n        index=$(index_of \"$original\" \"$substring\" \"$index\")\n    \
    \    if [ \"$index\" -eq \"-1\" ]; then\n            break\n        fi\n     \
    \   count=$((count + 1))\n        index=$((index + 1))\n    done\n    echo \"\
    $count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local offset=0\n    while [[ \"${original:$offset:${#substring}}\" == \"\
    $substring\" ]]; do\n        ((count++))\n        ((offset+=${#substring}))\n\
    \    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r substring_length=\"${#substring}\"\n    local -r original_length=\"\
    ${#original}\"\n    local -r original_length_minus_substring_length=\"$((original_length\
    \ - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one + 1))\"\n    local\
    \ -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one - 1))\"\n\
    \    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_length_minus_substring_length", "    local -r\
    \ original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"\
    ${#original}\"\n    local -r length_substring=\"${#substring}\"\n    local -r\
    \ length_difference=$((length_original - length_substring))\n    local -r length_difference_plus_one=$((length_difference\
    \ + 1))\n    local -r length_difference_plus_one_minus_one=$((length_difference_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus",
  "    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ start=0\n    while [[ \"${string:$start:${#substring}}\" == \"$substring\" ]];\
    \ do\n        (( count++ ))\n        (( start += ${#substring} ))\n    done\n\
    \    echo \"$count\"", "  local original=\"$1\"\n  local substring=\"$2\"\n  local\
    \ count=0\n  local index=0\n  while [[ \"${original:$index:${#substring}}\" ==\
    \ \"$substring\" ]]; do\n    count=$((count + 1))\n    index=$((index + ${#substring}))\n\
    \  done\n  echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    local i\n    for ((i=0; i<original_length; i++)); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo \"$count\"", "  local original_string=\"$1\"\n  local substring=\"$2\"\
    \n  local count=0\n  local index=0\n  while [[ \"${original_string:index:${#substring}}\"\
    \ == \"$substring\" ]]; do\n    count=$((count + 1))\n    index=$((index + ${#substring}))\n\
    \  done\n  echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local i=0\n    local j=0\n    local length_original=${#original}\n\
    \    local length_substring=${#substring}\n    for ((i=0; i<length_original; i++));\
    \ do\n        for ((j=0; j<length_substring; j++)); do\n            if [[ \"${original:$i:1}\"\
    \ != \"${substring:$j:1}\" ]]; then\n                break\n            fi\n \
    \           if [[ $j -eq $((length_substring-1)) ]]; then\n                count=$((count+1))\n\
    \            fi\n            i=$((i+1))\n        done\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ index=0\n    while [[ \"${original:$index:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        index=$((index + ${#substring}))\n\
    \    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -r\
    \ max_index_plus_one=$((max_index + 1))\n    local -r substring_first_char=${substring:0:1}\n\
    \    local -r substring_last_char=${substring:(-1):1}\n    local -r substring_first_char_index=$(index_of\
    \ \"$original\" \"$substring_first_char\")\n    local -r substring_last_char_index=$(index_of\
    \ \"$original\" \"$substring_last_char\")\n    local -r substring_first_char_index_plus_one=$((substring_first_char_index\
    \ + 1))\n    local -r substring_last_char_index_plus_one=$((substring_last_char_index\
    \ + 1))\n    local -r substring_first_char_index_plus_one_to_last_char_index=$(\n\
    \        substring \"$original\" \"$substring_first_char_index_plus_one\" \"$substring_last_char_index\"\
    \n    )\n    local -r substring_first_char_index_to_last_char_index_plus_one=$(\n\
    \        substring \"$original\" \"$substring_first_char_index\" \"$substring_last_char_index_plus_one\"\
    \n    )\n    local -r substring_first_char_index_plus_one_to_last_char_index_plus_one=$(\n\
    \        substring \"$original\" \"$substring_first_char_index_plus_one\" \"$substring_last_char_index_plus_one\"\
    \n    )\n    local -r substring_first_char_index_plus_one_to_last_char_index_plus_one_length=${#substring_first_char_index_plus_one_to_last_char_index_plus_one}\n\
    \    local -r substring_first_char_index_plus", "    local string=\"$1\"\n   \
    \ local substring=\"$2\"\n    local count=0\n    local index=0\n    while [ $index\
    \ -lt ${#string} ]; do\n        local index_substring=$(index_of \"$string\" \"\
    $substring\" $index)\n        if [ $index_substring -eq -1 ]; then\n         \
    \   break\n        fi\n        count=$((count + 1))\n        index=$((index_substring\
    \ + 1))\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local\
    \ -r substring=\"$2\"\n    local -r original_length=${#original}\n    local -r\
    \ substring_length=${#substring}\n    local -r max_index=$((original_length -\
    \ substring_length))\n    local -r max_index_plus_one=$((max_index + 1))\n   \
    \ local -r max_index_plus_one_length=${#max_index_plus_one}\n    local -r max_index_plus_one_length_minus_one=$((max_index_plus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for ((i=0; i<original_length; i++)); do\n        if [[ \"${original:$i:$substring_length}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n        fi\n   \
    \ done\n    echo \"$count\"", "    local string=$1\n    local substring=$2\n \
    \   local count=0\n    local index=0\n    while [ $index -lt ${#string} ]; do\n\
    \        if [ \"${string:$index:${#substring}}\" == \"$substring\" ]; then\n \
    \           count=$((count+1))\n            index=$((index+${#substring}))\n \
    \       else\n            index=$((index+1))\n        fi\n    done\n    echo $count",
  "    local str=$1\n    local substr=$2\n    local len=${#substr}\n    local count=0\n\
    \    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:$i:$len}\" == \"\
    $substr\" ]]; then\n            (( count++ ))\n        fi\n    done\n    echo\
    \ $count", "    local original_string=\"$1\"\n    local substring=\"$2\"\n   \
    \ local length_of_original_string=${#original_string}\n    local length_of_substring=${#substring}\n\
    \    local number_of_times=0\n    for (( i=0; i<=$((length_of_original_string-length_of_substring));\
    \ i++ )); do\n        if [[ \"${original_string:$i:$length_of_substring}\" ==\
    \ \"$substring\" ]]; then\n            number_of_times=$((number_of_times+1))\n\
    \        fi\n    done\n    echo \"$number_of_times\"", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_length=\"${#original}\"\n    local -i counter=0\n    local\
    \ -i i=0\n    while (( i < original_length )); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            (( counter++ ))\n            (( i +=\
    \ substring_length ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo \"$counter\"", "    local original=\"$1\"\n    local substring=\"$2\"\
    \n    local count=0\n    local index=0\n    while [ $index -lt ${#original} ];\
    \ do\n        local index_of=$(index_of \"$original\" \"$substring\" $index)\n\
    \        if [ $index_of -eq -1 ]; then\n            break\n        fi\n      \
    \  count=$((count + 1))\n        index=$((index_of + 1))\n    done\n    echo \"\
    $count\"", "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local\
    \ -r regex=\"$(echo \"$substring\" | sed 's/[][\\.*^$]/\\\\&/g')\"\n    echo \"\
    $original\" | sed \"s/$regex/$regex/g\" | grep -o \"$regex\" | wc -l", "    local\
    \ original_string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ index=0\n    while [ $index -lt ${#original_string} ]; do\n        if [ \"${original_string:$index:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            index=$((index+${#substring}))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local\
    \ count=0\n    local i=0\n    local len=${#original}\n    local sublen=${#substring}\n\
    \    while [ $i -lt $len ]; do\n        if [ \"${original:$i:$sublen}\" == \"\
    $substring\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [[ $i -lt ${#original} ]]; do\n        local j=0\n        while\
    \ [[ $j -lt ${#substring} ]]; do\n            if [[ \"${original:$i:1}\" != \"\
    ${substring:$j:1}\" ]]; then\n                break\n            fi\n        \
    \    i=$((i+1))\n            j=$((j+1))\n        done\n        if [[ $j -eq ${#substring}\
    \ ]]; then\n            count=$((count+1))\n        fi\n        i=$((i-j+1))\n\
    \    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r original_length_minus_substring_length=$((original_length - substring_length))\n\
    \    local -r original_length_minus_substring_length_plus_one=$((original_length_minus_substring_length\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one=$((original_length_minus_substring_length_plus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one=$((original_length_minus_substring_length_plus_one_minus_one\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=$((original_length_minus_substring_length_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=$((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=$((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local -i count=0\n \
    \   local -i i=0\n    local -i len=${#original}\n    local -i sublen=${#substring}\n\
    \    while [ $i -lt $len ]; do\n        if [ \"${original:$i:$sublen}\" == \"\
    $substring\" ]; then\n            count=$((count+1))\n            i=$((i+sublen))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -i count=0\n\
    \    local -i i=0\n    while (( i < original_length )); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n            (( i += substring_length\
    \ ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo \"$count\"",
  "    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ index=0\n    while [[ \"${string:index:${#substring}}\" == \"$substring\" ]];\
    \ do\n        ((count++))\n        ((index+=${#substring}))\n    done\n    echo\
    \ \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n    local\
    \ count=0\n    local i=0\n    while [[ \"${original:$i:${#substring}}\" == \"\
    $substring\" ]]; do\n        ((count++))\n        ((i+=${#substring}))\n    done\n\
    \    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n\
    \    local count=0\n    local i=0\n    while [[ \"${original:i:${#substring}}\"\
    \ == \"$substring\" ]]; do\n        count=$((count + 1))\n        i=$((i + 1))\n\
    \    done\n    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local index=0\n    while [[ \"${original:index:${#substring}}\"\
    \ == \"$substring\" ]]; do\n        count=$((count + 1))\n        index=$((index\
    \ + ${#substring}))\n    done\n    echo \"$count\"", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -i count=0\n    local\
    \ -i i=0\n    while (( i < original_length )); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n            (( i += substring_length\
    \ ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=${#substring}\n\
    \    local -r original_length=${#original}\n    local -r original_length_minus_substring_length=$((original_length\
    \ - substring_length))\n    local -r original_length_minus_substring_length_plus_one=$((original_length_minus_substring_length\
    \ + 1))\n    local -i count=0\n    for ((i=0; i<original_length_minus_substring_length_plus_one;\
    \ i++)); do\n        if [[ \"${original:i:substring_length}\" == \"$substring\"\
    \ ]]; then\n            ((count++))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ original_length=${#original}\n    local substring_length=${#substring}\n   \
    \ for (( i=0; i<=$original_length-$substring_length; i++ )); do\n        if [[\
    \ \"${original:$i:$substring_length}\" == \"$substring\" ]]; then\n          \
    \  count=$((count+1))\n        fi\n    done\n    echo \"$count\"", "  local original=\"\
    $1\"\n  local substring=\"$2\"\n  local count=0\n  local index=0\n  while [[ \"\
    ${original:$index:${#substring}}\" == \"$substring\" ]]; do\n    count=$((count\
    \ + 1))\n    index=$((index + ${#substring}))\n  done\n  echo \"$count\"", " \
    \   local original_string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local index=0\n    while [ $index -lt ${#original_string} ]; do\n       \
    \ index=$(($index + 1))\n        if [ \"${original_string:$index:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$(($count + 1))\n        fi\n \
    \   done\n    echo $count", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -i\
    \ count=0\n    local -i i=0\n    while [ $i -le $max_index ]; do\n        if [\
    \ \"${original:$i:$substring_length}\" == \"$substring\" ]; then\n           \
    \ ((count++))\n            ((i += substring_length))\n        else\n         \
    \   ((i++))\n        fi\n    done\n    echo \"$count\"", "    local -r original_string=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_string_length=\"${#original_string}\"\n    local -r original_string_length_minus_substring_length=\"\
    $((original_string_length - substring_length))\"\n    local -r original_string_length_minus_substring_length_plus_one=\"\
    $((original_string_length_minus_substring_length + 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one - 1))\"\n    local -r\
    \ original_string_length_minus_substring_length_plus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one - 1))\"\n\
    \    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    while\
    \ [ \"${original:$index:${#substring}}\" == \"$substring\" ]; do\n        count=$((count\
    \ + 1))\n        index=$((index + ${#substring}))\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for ((i=0; i<original_length; i++)); do\n        for ((j=0; j<substring_length;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((substring_length-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n\
    \    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r original_length=\"${#original}\"\n    local -i counter=0\n    local\
    \ -i i=0\n    while [ $i -lt $original_length ]; do\n        if [ \"${original:$i:$substring_length}\"\
    \ == \"$substring\" ]; then\n            counter=$((counter + 1))\n          \
    \  i=$((i + substring_length))\n        else\n            i=$((i + 1))\n     \
    \   fi\n    done\n    echo \"$counter\"", "    local original_string=\"$1\"\n\
    \    local substring=\"$2\"\n    local substring_length=$(echo \"$substring\"\
    \ | wc -c)\n    local original_string_length=$(echo \"$original_string\" | wc\
    \ -c)\n    local substring_start_index=1\n    local substring_end_index=$substring_length\n\
    \    local count=0\n    while [ $substring_end_index -le $original_string_length\
    \ ]; do\n        local substring_to_check=$(echo \"$original_string\" | cut -c\
    \ $substring_start_index-$substring_end_index)\n        if [ \"$substring_to_check\"\
    \ == \"$substring\" ]; then\n            count=$((count + 1))\n        fi\n  \
    \      substring_start_index=$((substring_start_index + 1))\n        substring_end_index=$((substring_end_index\
    \ + 1))\n    done\n    echo \"$count\"", "    local original=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local i=0\n    while [[ $i -lt ${#original}\
    \ ]]; do\n        if [[ \"${original:$i:${#substring}}\" == \"$substring\" ]];\
    \ then\n            count=$((count+1))\n            i=$((i+${#substring}))\n \
    \       else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -r max_index=\"\
    $(( original_length - substring_length ))\"\n    local -r max_index_plus_one=\"\
    $(( max_index + 1 ))\"\n    local -i count=0\n    local -i index=0\n    while\
    \ [ \"$index\" -lt \"$max_index_plus_one\" ]; do\n        local -r substring_start=\"\
    ${original:$index:$substring_length}\"\n        if [ \"$substring_start\" == \"\
    $substring\" ]; then\n            (( count++ ))\n        fi\n        (( index++\
    \ ))\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local\
    \ -r substring=\"$2\"\n    local -r length_original=\"${#original}\"\n    local\
    \ -r length_substring=\"${#substring}\"\n    local -i count=0\n    local -i i=0\n\
    \    local -i j=0\n    while [ \"$i\" -lt \"$length_original\" ]; do\n       \
    \ if [ \"${original:$i:$length_substring}\" == \"$substring\" ]; then\n      \
    \      (( count++ ))\n        fi\n        (( i++ ))\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"\
    ${#original}\"\n    local -r length_substring=\"${#substring}\"\n    local -r\
    \ length_difference=$((length_original - length_substring))\n    local -r length_difference_plus_one=$((length_difference\
    \ + 1))\n    local -r length_difference_plus_one_minus_one=$((length_difference_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus",
  "  local original_string=\"$1\"\n  local substring=\"$2\"\n  local original_string_length=${#original_string}\n\
    \  local substring_length=${#substring}\n  local times=0\n  local i=0\n  while\
    \ [[ $i -lt $original_string_length ]]; do\n    local substring_found=$(echo \"\
    ${original_string:$i:$substring_length}\" | grep -c \"$substring\")\n    if [[\
    \ $substring_found -eq 1 ]]; then\n      times=$((times + 1))\n      i=$((i +\
    \ substring_length))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo \"\
    $times\"", "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local\
    \ -r original_length=$(string_length \"$original\")\n    local -r substring_length=$(string_length\
    \ \"$substring\")\n    local -r max_index=$(( original_length - substring_length\
    \ ))\n    local -r substring_first_char=$(string_char_at \"$substring\" 0)\n \
    \   local -r substring_last_char=$(string_char_at \"$substring\" $(( substring_length\
    \ - 1 )))\n    local -r substring_first_char_index=$(string_index_of \"$original\"\
    \ \"$substring_first_char\")\n    local -r substring_last_char_index=$(string_index_of\
    \ \"$original\" \"$substring_last_char\")\n    local -r substring_first_char_index_max=$((\
    \ substring_first_char_index + max_index ))\n    local -r substring_last_char_index_max=$((\
    \ substring_last_char_index + max_index ))\n    local -r substring_first_char_index_max_length=$((\
    \ substring_first_char_index_max - substring_first_char_index ))\n    local -r\
    \ substring_last_char_index_max_length=$(( substring_last_char_index_max - substring_last_char_index\
    \ ))\n    local -r substring_first_char_index_max_length_substring=$(string_substring\
    \ \"$original\" \"$substring_first_char_index\" \"$substring_first_char_index_max_length\"\
    )\n    local -r substring_last_char_index_max_length_substring=$(string_substring\
    \ \"$original\" \"$substring_last_char_index\" \"$substring_last_char_index_max_length\"\
    )\n    local -r substring_first_char_index_max_length_substring_count=$(string_count\
    \ \"$substring_first_char_index_max_length_substring\" \"$substring\")\n    local\
    \ -r substring_last_char_index_max_length_substring_count=$(string_count \"$sub",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_original=\"\
    ${#original}\"\n    local -r length_substring=\"${#substring}\"\n    local -r\
    \ length_difference=$((length_original - length_substring))\n    local -r length_difference_plus_one=$((length_difference\
    \ + 1))\n    local -r length_difference_plus_one_times_substring=$(repeat_string\
    \ \"$substring\" \"$length_difference_plus_one\")\n    local -r length_difference_plus_one_times_substring_length=\"\
    ${#length_difference_plus_one_times_substring}\"\n    local -r length_difference_plus_one_times_substring_length_minus_one=$((length_difference_plus_one_times_substring_length\
    \ - 1))\n    local -r length_difference_plus_one_times_substring_length_minus_one_times_substring=$(repeat_string\
    \ \"$substring\" \"$length_difference_plus_one_times_substring_length_minus_one\"\
    )\n    local -r length_difference_plus_one_times_substring_length_minus_one_times_substring_length=\"\
    ${#length_difference_plus_one_times_substring_length_minus_one_times_substring}\"\
    \n    local -r length_difference_plus_one_times_substring_length_minus_one_times_substring_length_minus_one=$((length_difference_plus_one_times_substring_length_minus_one_times_substring_length\
    \ - 1))\n    local -r length_difference_plus_one_times_substring_length_minus_one_times_substring_length_minus_one_times_substring=$(repeat_string\
    \ \"$substring\" \"$length_difference_plus_one_times_substring_length_minus_one_times_substring_length_minus_one\"\
    )\n    local -r length_difference_plus_one_times_substring_length_minus_one_times_substring_length_minus_one_times_",
  "  local original=\"$1\"\n  local substring=\"$2\"\n  if [ -z \"$substring\" ];\
    \ then\n    echo 0\n    return\n  fi\n  local count=0\n  local original_length=${#original}\n\
    \  local substring_length=${#substring}\n  for (( i=0; i<=$((original_length-substring_length));\
    \ i++ )); do\n    if [ \"${original:$i:$substring_length}\" == \"$substring\"\
    \ ]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count", "    local\
    \ -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -r original_length_minus_substring_length=\"\
    $((original_length - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one + 1))\"\n    local\
    \ -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one - 1))\"\n\
    \    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_length_minus_substring_length", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local offset=0\n    while\
    \ [[ \"${original:$offset:${#substring}}\" == \"$substring\" ]]; do\n        count=$((count\
    \ + 1))\n        offset=$((offset + ${#substring}))\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -r original_length_minus_substring_length=\"\
    $((original_length - substring_length))\"\n    local -r original_length_minus_substring_length_plus_one=\"\
    $((original_length_minus_substring_length + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one + 1))\"\n    local\
    \ -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one - 1))\"\n\
    \    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\"\n    local -r original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=\"\
    $((original_length_minus_substring_length_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\"\n    local -r original_length_minus_substring_length", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    while\
    \ [ $index -lt ${#original} ]; do\n        local found_index=$(index_of \"$original\"\
    \ \"$substring\" $index)\n        if [ $found_index -eq -1 ]; then\n         \
    \   break\n        fi\n        count=$((count + 1))\n        index=$((found_index\
    \ + 1))\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local\
    \ -r substring=\"$2\"\n    local -r original_length=${#original}\n    local -r\
    \ substring_length=${#substring}\n    local -i counter=0\n    local -i i=0\n \
    \   while [ $i -lt $original_length ]; do\n        local -i j=0\n        while\
    \ [ $j -lt $substring_length ] && [ \"${original:$i:1}\" == \"${substring:$j:1}\"\
    \ ]; do\n            ((i++))\n            ((j++))\n        done\n        if [\
    \ $j -eq $substring_length ]; then\n            ((counter++))\n        fi\n  \
    \      ((i++))\n    done\n    echo $counter", "    local original=\"$1\"\n   \
    \ local substring=\"$2\"\n    local count=0\n    local i=0\n    while [[ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]]; do\n        ((count++))\n        ((i++))\n    done\n \
    \   echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -r\
    \ max_index_plus_one=$((max_index + 1))\n    local -r max_index_plus_one_length=${#max_index_plus_one}\n\
    \    local -r max_index_plus_one_length_minus_one=$((max_index_plus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -r max_index_plus_one=$((max_index + 1))\n \
    \   local -i count=0\n    for ((i=0; i<max_index_plus_one; i++)); do\n       \
    \ local -r substring_at_index=${original:i:substring_length}\n        if [[ \"\
    $substring_at_index\" == \"$substring\" ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo \"$count\"", "    local original=\"$1\"\n\
    \    local substring=\"$2\"\n    local count=0\n    local index=0\n    while [\
    \ $index -lt ${#original} ]; do\n        local substring_index=`expr index \"\
    $original\" \"$substring\"`\n        if [ $substring_index -eq 0 ]; then\n   \
    \         break\n        fi\n        count=`expr $count + 1`\n        index=`expr\
    \ $substring_index + ${#substring} - 1`\n        original=${original:$index}\n\
    \    done\n    echo $count", "    local original=$1\n    local substring=$2\n\
    \    local count=0\n    local i=0\n    local length=${#original}\n    while [\
    \ $i -lt $length ]; do\n        if [ \"${original:$i:${#substring}}\" == \"$substring\"\
    \ ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=${#substring}\n\
    \    local -r original_length=${#original}\n    local -r original_length_minus_substring_length=$((original_length\
    \ - substring_length))\n    local -r original_length_minus_substring_length_plus_one=$((original_length_minus_substring_length\
    \ + 1))\n    local -r original_length_minus_substring_length_plus_one_minus_one=$((original_length_minus_substring_length_plus_one\
    \ - 1))\n    local -i count=0\n    for ((i=0; i<=original_length_minus_substring_length_plus_one_minus_one;\
    \ i++)); do\n        if [[ \"${original:i:substring_length}\" == \"$substring\"\
    \ ]]; then\n            ((count++))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -i count=0\n\
    \    local -i i=0\n    while [ $i -lt $original_length ]; do\n        local -r\
    \ substring_start=\"${original:$i:$substring_length}\"\n        if [ \"$substring_start\"\
    \ == \"$substring\" ]; then\n            (( count++ ))\n        fi\n        ((\
    \ i++ ))\n    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local\
    \ -r substring=\"$2\"\n    local -r regex=\"$(echo \"$substring\" | sed 's/[][\\\
    .*^$/]/\\\\&/g')\"\n    local -r count=\"$(echo \"$original\" | grep -o \"$regex\"\
    \ | wc -l)\"\n    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local i=0\n    local original_length=${#original}\n\
    \    local substring_length=${#substring}\n    while [ $i -lt $original_length\
    \ ]; do\n        local substring_start=$i\n        local substring_end=$(( $substring_start\
    \ + $substring_length ))\n        local substring_from_original=${original:$substring_start:$substring_length}\n\
    \        if [ \"$substring_from_original\" == \"$substring\" ]; then\n       \
    \     count=$(( $count + 1 ))\n            i=$(( $i + $substring_length ))\n \
    \       else\n            i=$(( $i + 1 ))\n        fi\n    done\n    echo $count",
  "  local string=\"$1\"\n  local substring=\"$2\"\n  local -i count=0\n  local -i\
    \ i=0\n  local -i j=0\n  local -i length_string=${#string}\n  local -i length_substring=${#substring}\n\
    \  for ((i=0; i<length_string; i++)); do\n    for ((j=0; j<length_substring; j++));\
    \ do\n      if [[ \"${string:i+j:1}\" != \"${substring:j:1}\" ]]; then\n     \
    \   break\n      fi\n    done\n    if [[ $j -eq $length_substring ]]; then\n \
    \     ((count++))\n    fi\n  done\n  echo $count", "    local original=\"$1\"\n\
    \    local substring=\"$2\"\n    local count=0\n    local i=0\n    local length=$((${#original}\
    \ - ${#substring} + 1))\n    while [ $i -lt $length ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count + 1))\n            i=$((i\
    \ + ${#substring}))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $count", "    local original=\"$1\"\n    local substring=\"$2\"\n  \
    \  local count=0\n    local i=0\n    local j=0\n    local original_length=${#original}\n\
    \    local substring_length=${#substring}\n    while [ $i -lt $original_length\
    \ ]; do\n        j=0\n        while [ $j -lt $substring_length ] && [ \"${original:$i:1}\"\
    \ == \"${substring:$j:1}\" ]; do\n            j=$((j+1))\n            i=$((i+1))\n\
    \        done\n        if [ $j -eq $substring_length ]; then\n            count=$((count+1))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $count", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local offset=0\n    while\
    \ true; do\n        local index=$(index_of \"$original\" \"$substring\" \"$offset\"\
    )\n        if [ \"$index\" -eq \"-1\" ]; then\n            break\n        fi\n\
    \        count=$((count + 1))\n        offset=$((index + 1))\n    done\n    echo\
    \ \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n\
    \    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -i\
    \ count=0\n    for ((i=0; i<=max_index; i++)); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            count=$((count + 1))\n        fi\n \
    \   done\n    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local i=0\n    local j=0\n    local len_original=${#original}\n\
    \    local len_substring=${#substring}\n    for ((i=0; i<len_original; i++));\
    \ do\n        for ((j=0; j<len_substring; j++)); do\n            if [[ \"${original:$i:1}\"\
    \ != \"${substring:$j:1}\" ]]; then\n                break\n            fi\n \
    \           if [[ $j -eq $((len_substring-1)) ]]; then\n                count=$((count+1))\n\
    \            fi\n            i=$((i+1))\n        done\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -r max_index_plus_one=$((max_index + 1))\n \
    \   local -r max_index_plus_one_length=${#max_index_plus_one}\n    local -r max_index_plus_one_length_minus_one=$((max_index_plus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one_length_minus_one}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=$(echo\
    \ \"$original\" | wc -c)\n    local -r substring_length=$(echo \"$substring\"\
    \ | wc -c)\n    local -r substring_length_minus_one=$((substring_length - 1))\n\
    \    local -r original_length_minus_substring_length=$((original_length - substring_length))\n\
    \    local -r original_length_minus_substring_length_plus_one=$((original_length_minus_substring_length\
    \ + 1))\n    local -r original_length_minus_one=$((original_length - 1))\n   \
    \ local -r original_length_minus_one_minus_substring_length_plus_one=$((original_length_minus_one\
    \ - substring_length_minus_one))\n    local -r original_length_minus_one_minus_substring_length=$((original_length_minus_one\
    \ - substring_length))\n    local -r original_length_minus_one_minus_substring_length_minus_one=$((original_length_minus_one\
    \ - substring_length_minus_one))\n    local -r original_length_minus_one_minus_substring_length_minus_two=$((original_length_minus_one\
    \ - substring_length_minus_one - 1))\n    local -r original_length_minus_one_minus_substring_length_minus_three=$((original_length_minus_one\
    \ - substring_length_minus_one - 2))\n    local -r original_length_minus_one_minus_substring_length_minus_four=$((original_length_minus_one\
    \ - substring_length_minus_one - 3))\n    local -r original_length_minus_one_minus_substring_length_minus_five=$((original_length_minus_one\
    \ - substring_length_minus_one - 4))\n    local -r original_length_minus_one_minus_substring_length_minus_six=$((original_length_minus_one\
    \ - substring_length_minus_one - 5))\n    local -r original_length_", "    local\
    \ original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local offset=0\n\
    \    while [[ \"${original:$offset:${#substring}}\" == \"$substring\" ]]; do\n\
    \        count=$((count + 1))\n        offset=$((offset + ${#substring}))\n  \
    \  done\n    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local offset=0\n    local length=${#substring}\n\
    \    while [ $offset -lt ${#original} ]; do\n        if [ \"${original:$offset:$length}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            offset=$((offset+length))\n\
    \        else\n            offset=$((offset+1))\n        fi\n    done\n    echo\
    \ $count", "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for (( i=0; i<=$original_length-$substring_length; i++ )); do\n        if\
    \ [[ \"${original:$i:$substring_length}\" == \"$substring\" ]]; then\n       \
    \     (( count++ ))\n        fi\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local index=0\n    while\
    \ [[ $index -lt ${#original} ]]; do\n        local substr_index=$(index_of \"\
    ${original:$index}\" \"$substring\")\n        if [[ $substr_index -lt 0 ]]; then\n\
    \            break\n        fi\n        index=$((index + substr_index + ${#substring}))\n\
    \        count=$((count + 1))\n    done\n    echo \"$count\"", "    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ j=0\n    local len_string=${#string}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_string; i++)); do\n        for ((j=0; j<len_substring; j++));\
    \ do\n            if [[ \"${string:$i:1}\" != \"${substring:$j:1}\" ]]; then\n\
    \                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n        done\n\
    \    done\n    echo \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -r\
    \ max_index_plus_one=$((max_index + 1))\n    local -r max_index_plus_one_minus_one=$((max_index_plus_one\
    \ - 1))\n    local -r max_index_plus_one_minus_one_plus_one=$((max_index_plus_one_minus_one\
    \ + 1))\n    local -r max_index_plus_one_minus_one_plus_one_minus_one=$((max_index_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r max_index_plus_one_minus_one_plus_one_minus_one_plus_one=$((max_index_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r max_index_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((max_index_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r max_index_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=$((max_index_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one\
    \ + 1))\n    local -r max_index_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one=$((max_index_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one\
    \ - 1))\n    local -r max_index_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one_minus_one_plus_one=$((max_index_plus_one_minus_one_plus_",
  "    local -r string=\"$1\"\n    local -r substring=\"$2\"\n    local -r string_length=${#string}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((string_length\
    \ - substring_length))\n    local -i count=0\n    local -i i=0\n    while ((i\
    \ <= max_index)); do\n        local -r substring_from_string=\"${string:i:substring_length}\"\
    \n        if [[ \"$substring_from_string\" == \"$substring\" ]]; then\n      \
    \      ((count++))\n        fi\n        ((i++))\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=${#substring}\n\
    \    local -r original_length=${#original}\n    local -r original_length_minus_substring_length=$((original_length\
    \ - substring_length))\n    local -i counter=0\n    for ((i=0; i<=original_length_minus_substring_length;\
    \ i++)); do\n        local -r substring_from_original=\"${original:i:substring_length}\"\
    \n        if [[ \"$substring_from_original\" == \"$substring\" ]]; then\n    \
    \        ((counter++))\n        fi\n    done\n    echo \"$counter\"", "    local\
    \ original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n\
    \    while [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            ((count++))\n            ((i+=${#substring}))\n\
    \        else\n            ((i++))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local -i count=0\n \
    \   local -i i=0\n    local -i len=${#original}\n    local -i sublen=${#substring}\n\
    \    while [ $i -lt $len ]; do\n        local -i j=0\n        while [ $j -lt $sublen\
    \ ] && [ \"${original:$i+$j:1}\" == \"${substring:$j:1}\" ]; do\n            ((j++))\n\
    \        done\n        if [ $j -eq $sublen ]; then\n            ((count++))\n\
    \        fi\n        ((i++))\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local original_length=${#original}\n\
    \    local substring_length=${#substring}\n    for (( i=0; i<=$original_length-$substring_length;\
    \ i++ )); do\n        if [[ \"${original:$i:$substring_length}\" == \"$substring\"\
    \ ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo \"\
    $count\"", "    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local i=0\n    while [[ $i -lt ${#string} ]]; do\n        if [[ \"${string:$i:${#substring}}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n            ((i+=$((${#substring}-1))))\n\
    \        fi\n        ((i++))\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    echo \"${original//$substring/}\" | wc -c",
  "    local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ index=0\n    while [[ \"${string:$index:${#substring}}\" == \"$substring\" ]];\
    \ do\n        ((count++))\n        ((index+=$((${#substring}))))\n    done\n \
    \   echo \"$count\"", "    local original=\"$1\"\n    local substring=\"$2\"\n\
    \    local count=0\n    local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    local i\n    for ((i=0; i<original_length; i++)); do\n        if [[ \"${original:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n        fi\n   \
    \ done\n    echo \"$count\"", "    local string=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local i=0\n    local j=0\n    local len_string=${#string}\n\
    \    local len_substring=${#substring}\n    for ((i=0; i<len_string; i++)); do\n\
    \        for ((j=0; j<len_substring; j++)); do\n            if [[ \"${string:$i:1}\"\
    \ != \"${substring:$j:1}\" ]]; then\n                break\n            fi\n \
    \           if ((j == len_substring - 1)); then\n                ((count++))\n\
    \            fi\n        done\n    done\n    echo \"$count\"", "    local original=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n    local\
    \ length=${#original}\n    while [ $i -lt $length ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo $count",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=$(strlen\
    \ \"$original\")\n    local -r substring_length=$(strlen \"$substring\")\n   \
    \ local -r substring_length_minus_one=$((substring_length - 1))\n    local -r\
    \ original_length_minus_substring_length=$((original_length - substring_length))\n\
    \    local -r original_length_minus_substring_length_plus_one=$((original_length_minus_substring_length\
    \ + 1))\n    local -r original_length_minus_one=$((original_length - 1))\n   \
    \ local -r original_length_minus_one_minus_substring_length_plus_one=$((original_length_minus_one\
    \ - substring_length_minus_one))\n    local -r original_length_minus_one_minus_substring_length=$((original_length_minus_one\
    \ - substring_length))\n    local -r original_length_minus_one_minus_substring_length_minus_one=$((original_length_minus_one\
    \ - substring_length_minus_one))\n    local -r original_length_minus_one_minus_substring_length_minus_two=$((original_length_minus_one\
    \ - substring_length_minus_one - 1))\n    local -r original_length_minus_one_minus_substring_length_minus_three=$((original_length_minus_one\
    \ - substring_length_minus_one - 2))\n    local -r original_length_minus_one_minus_substring_length_minus_four=$((original_length_minus_one\
    \ - substring_length_minus_one - 3))\n    local -r original_length_minus_one_minus_substring_length_minus_five=$((original_length_minus_one\
    \ - substring_length_minus_one - 4))\n    local -r original_length_minus_one_minus_substring_length_minus_six=$((original_length_minus_one\
    \ - substring_length_minus_one - 5))\n    local -r original_length_minus_one_minus_substring_length",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r original_length=${#original}\n\
    \    local -r substring_length=${#substring}\n    local -r max_index=$((original_length\
    \ - substring_length))\n    local -r max_index_plus_one=$((max_index + 1))\n \
    \   local -r max_index_plus_one_length=${#max_index_plus_one}\n    local -r max_index_plus_one_length_plus_one=$((max_index_plus_one_length\
    \ + 1))\n    local -r max_index_plus_one_length_plus_one_length=${#max_index_plus_one_length_plus_one}\n\
    \    local -r max_index_plus_one_length_plus_one_length_plus_one=$((max_index_plus_one_length_plus_one_length\
    \ + 1))\n    local -r max_index_plus_one_length_plus_one_length_plus_one_length=${#max_index_plus_one_length_plus_one_length_plus_one}\n\
    \    local -r max_index_plus_one_length_plus_one_length_plus_one_length_plus_one=$((max_index_plus_one_length_plus_one_length_plus_one_length\
    \ + 1))\n    local -r max_index_plus_one_length_plus_one_length_plus_one_length_plus_one_length=${#max_index_plus_one_length_plus_one_length_plus_one_length_plus_one}\n\
    \    local -r max_index_plus_one_length_plus_one_length_plus_one_length_plus_one_length_plus_one=$((max_index_plus_one_length_plus_one_length_plus_one_length_plus_one_length\
    \ + 1))\n    local -r max_index_plus_one_length_plus_one_length_plus_one_length_plus_one_length_plus_one_length=${#max_index_plus_one_length_plus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ index=0\n    while [[ \"${original:index:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        index=$((index + ${#substring}))\n\
    \    done\n    echo \"$count\"", "    local original=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local i=0\n    while [ $i -lt ${#original} ]; do\n\
    \        if [ \"${original:$i:${#substring}}\" == \"$substring\" ]; then\n   \
    \         count=$((count+1))\n            i=$((i+${#substring}))\n        else\n\
    \            i=$((i+1))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local i=0\n\
    \    while [[ $i -lt ${#original} ]]; do\n        if [[ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]]; then\n            (( count++ ))\n            (( i += ${#substring}\
    \ ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local j=0\n    local len_original=${#original}\n    local len_substring=${#substring}\n\
    \    for ((i=0; i<len_original; i++)); do\n        for ((j=0; j<len_substring;\
    \ j++)); do\n            if [[ \"${original:$i:1}\" != \"${substring:$j:1}\" ]];\
    \ then\n                break\n            fi\n            if [[ $j -eq $((len_substring-1))\
    \ ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n\
    \        done\n    done\n    echo \"$count\"", "    local original=\"$1\"\n  \
    \  local substring=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n \
    \   local original_length=${#original}\n    local substring_length=${#substring}\n\
    \    for ((i=0; i<original_length; i++)); do\n        if [[ \"${original:$i:$substring_length}\"\
    \ == \"$substring\" ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo \"$count\"", "    local original_string=\"$1\"\n    local substring=\"\
    $2\"\n    local -i count=0\n    local -i i=0\n    local -i j=0\n    local -i substring_length=${#substring}\n\
    \    local -i original_string_length=${#original_string}\n    for ((i=0; i<original_string_length;\
    \ i++)); do\n        for ((j=0; j<substring_length; j++)); do\n            if\
    \ [[ \"${original_string:i+j:1}\" != \"${substring:j:1}\" ]]; then\n         \
    \       break\n            fi\n        done\n        if [[ \"$j\" -eq \"$substring_length\"\
    \ ]]; then\n            ((count++))\n        fi\n    done\n    echo \"$count\"",
  "    local original_string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n\
    \    local index=0\n    while [[ $index -lt ${#original_string} ]]; do\n     \
    \   if [[ \"${original_string:$index:${#substring}}\" == \"$substring\" ]]; then\n\
    \            count=$((count+1))\n            index=$((index+${#substring}))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ \"$count\"", "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n\
    \    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -r\
    \ max_index_plus_one=$((max_index + 1))\n    local -r max_index_plus_one_string=\"\
    $max_index_plus_one\"\n    local -r max_index_plus_one_length=${#max_index_plus_one_string}\n\
    \    local -r max_index_plus_one_length_minus_one=$((max_index_plus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_string=\"$max_index_plus_one_length_minus_one\"\
    \n    local -r max_index_plus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_string}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_string=\"\
    $max_index_plus_one_length_minus_one_length_minus_one\"\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length=${#max_index_plus_one_length_minus_one_length_minus_one_string}\n\
    \    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one=$((max_index_plus_one_length_minus_one_length_minus_one_length\
    \ - 1))\n    local -r max_index_plus_one_length_minus_one_length_minus_one_length_minus_one_string=\"\
    $max_index_plus_one_length_minus_one_length_minus_one_length_minus_one\"\n   \
    \ local -r max_", "    local -r original=\"$1\"\n    local -r substring=\"$2\"\
    \n    local -r original_length=${#original}\n    local -r substring_length=${#substring}\n\
    \    local -r max_index=$((original_length - substring_length))\n    local -r\
    \ max_index_plus_one=$((max_index + 1))\n    local -r max_index_plus_one_length=${#max_index_plus_one}\n\
    \    local -i count=0\n    for ((i=0; i<=max_index; i++)); do\n        local -r\
    \ substring_from_original=\"${original:i:substring_length}\"\n        if [[ \"\
    $substring_from_original\" == \"$substring\" ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo \"$count\"", "    local -r string=\"$1\"\
    \n    local -r substring=\"$2\"\n    local -r substring_length=\"${#substring}\"\
    \n    local -r string_length=\"${#string}\"\n    local -i counter=0\n    local\
    \ -i i=0\n    while (( i < string_length )); do\n        if [[ \"${string:i:substring_length}\"\
    \ == \"$substring\" ]]; then\n            (( counter++ ))\n            (( i +=\
    \ substring_length ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo \"$counter\"", "    local -r original=\"$1\"\n    local -r substring=\"\
    $2\"\n    local -r length_original=\"${#original}\"\n    local -r length_substring=\"\
    ${#substring}\"\n    local -r length_difference=$((length_original - length_substring))\n\
    \    local -r length_difference_plus_one=$((length_difference + 1))\n    local\
    \ -r length_difference_plus_one_minus_one=$((length_difference_plus_one - 1))\n\
    \    local -r length_difference_plus_one_minus_one_minus_one=$((length_difference_plus_one_minus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one=$((length_difference_plus_one_minus_one_minus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one=$((length_difference_plus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((length_difference_plus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=$((length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\n    local -r length_difference_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#original} ]; do\n        if [ \"${original:$i:${#substring}}\"\
    \ == \"$substring\" ]; then\n            count=$((count+1))\n            i=$((i+${#substring}))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$count\"",
  "    local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_length=\"${#original}\"\n    local -i count=0\n\
    \    local -i i=0\n    while [ $i -lt $original_length ]; do\n        if [ \"\
    ${original:$i:$substring_length}\" == \"$substring\" ]; then\n            ((count++))\n\
    \            ((i+=substring_length))\n        else\n            ((i++))\n    \
    \    fi\n    done\n    echo \"$count\"", "    local original=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    for ((i=0; i<${#original}; i++)); do\n\
    \        if [[ \"${original:$i:${#substring}}\" == \"$substring\" ]]; then\n \
    \           ((count++))\n        fi\n    done\n    echo \"$count\"", "    local\
    \ -r original_string=\"$1\"\n    local -r substring=\"$2\"\n    local -r substring_length=\"\
    ${#substring}\"\n    local -r original_string_length=\"${#original_string}\"\n\
    \    local -r original_string_length_minus_substring_length=\"$((original_string_length\
    \ - substring_length))\"\n    local -r original_string_length_minus_substring_length_plus_one=\"\
    $((original_string_length_minus_substring_length + 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one - 1))\"\n    local -r\
    \ original_string_length_minus_substring_length_plus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one - 1))\"\n\
    \    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one\
    \ - 1))\"\n    local -r original_string_length_minus_substring_length_plus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one=\"\
    $((original_string_length_minus_substring_length_plus_one_", "    local -r original=\"\
    $1\"\n    local -r substring=\"$2\"\n    local -r length=\"${#substring}\"\n \
    \   local -i count=0\n    local -i i=0\n    while [ $i -lt \"${#original}\" ];\
    \ do\n        if [ \"${original:$i:$length}\" == \"$substring\" ]; then\n    \
    \        ((count++))\n            ((i+=length))\n        else\n            ((i++))\n\
    \        fi\n    done\n    echo \"$count\"", "    local -r original=$1\n    local\
    \ -r substring=$2\n    local -r length_original=${#original}\n    local -r length_substring=${#substring}\n\
    \    local -r length_diff=$((length_original - length_substring))\n    local -r\
    \ max_index=$((length_diff + 1))\n    local -r max_index_minus_one=$((max_index\
    \ - 1))\n    local -r max_index_minus_one_minus_length_substring=$((max_index_minus_one\
    \ - length_substring))\n    local -r max_index_minus_one_minus_length_substring_plus_one=$((max_index_minus_one_minus_length_substring\
    \ + 1))\n    local -r max_index_minus_one_minus_length_substring_plus_one_minus_length_original=$((max_index_minus_one_minus_length_substring_plus_one\
    \ - length_original))\n    local -r max_index_minus_one_minus_length_substring_plus_one_minus_length_original_plus_one=$((max_index_minus_one_minus_length_substring_plus_one_minus_length_original\
    \ + 1))\n    local -r max_index_minus_one_minus_length_substring_plus_one_minus_length_original_plus_one_minus_length_substring=$((max_index_minus_one_minus_length_substring_plus_one_minus_length_original_plus_one\
    \ - length_substring))\n    local -r max_index_minus_one_minus_length_substring_plus_one_minus_length_original_plus_one_minus_length_substring_plus_one=$((max_index_minus_one_minus_length_substring_plus_one_minus_length_original_plus_one_minus_length_substring\
    \ + 1))\n    local -r max_index_minus_one_minus_length_substring_plus_one_minus_length_original_plus_one_minus_length_substring_plus_one_minus_length_original=$((max_index_minus_one_",
  "    local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ offset=0\n    while [[ \"${original:$offset:${#substring}}\" == \"$substring\"\
    \ ]]; do\n        count=$((count + 1))\n        offset=$((offset + ${#substring}))\n\
    \    done\n    echo \"$count\"", "    local string=\"$1\"\n    local substring=\"\
    $2\"\n    local count=0\n    local i=0\n    local j=0\n    local len_string=${#string}\n\
    \    local len_substring=${#substring}\n    for ((i=0; i<len_string; i++)); do\n\
    \        if [[ \"${string:$i:$len_substring}\" == \"$substring\" ]]; then\n  \
    \          count=$((count+1))\n        fi\n    done\n    echo \"$count\"", " \
    \   local -r original=\"$1\"\n    local -r substring=\"$2\"\n    local -r length_of_original=\"\
    ${#original}\"\n    local -r length_of_substring=\"${#substring}\"\n    local\
    \ -r length_of_remaining_string=\"$((length_of_original - length_of_substring))\"\
    \n    local -r length_of_remaining_string_plus_one=\"$((length_of_remaining_string\
    \ + 1))\"\n    local -r number_of_iterations=\"$((length_of_remaining_string_plus_one))\"\
    \n    local -r number_of_iterations_minus_one=\"$((number_of_iterations - 1))\"\
    \n    local -r number_of_iterations_minus_one_plus_length_of_substring=\"$((number_of_iterations_minus_one\
    \ + length_of_substring))\"\n    local -r number_of_iterations_minus_one_plus_length_of_substring_plus_one=\"\
    $((number_of_iterations_minus_one_plus_length_of_substring + 1))\"\n    local\
    \ -r number_of_iterations_minus_one_plus_length_of_substring_plus_one_plus_length_of_original=\"\
    $((number_of_iterations_minus_one_plus_length_of_substring_plus_one + length_of_original))\"\
    \n    local -r number_of_iterations_minus_one_plus_length_of_substring_plus_one_plus_length_of_original_plus_one=\"\
    $((number_of_iterations_minus_one_plus_length_of_substring_plus_one_plus_length_of_original\
    \ + 1))\"\n    local -r number_of_iterations_minus_one_plus_length_of_substring_plus_one_plus_length_of_original_plus_one_plus_length_of_substring=\"\
    $((number_of_iterations_minus_one_plus_length_of_substring_plus_one_plus_length_of_original_plus_one\
    \ + length_of_sub", "    local original=\"$1\"\n    local substring=\"$2\"\n \
    \   local count=0\n    local index=0\n    while [ $index -lt ${#original} ]; do\n\
    \        if [ \"${original:$index:${#substring}}\" == \"$substring\" ]; then\n\
    \            count=$((count+1))\n            index=$((index+${#substring}))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ \"$count\"", "    local string=\"$1\"\n    local substring=\"$2\"\n    local\
    \ count=0\n    local i=0\n    local j=0\n    local len_string=${#string}\n   \
    \ local len_substring=${#substring}\n    while [ $i -lt $len_string ]; do\n  \
    \      j=0\n        while [ $j -lt $len_substring ] && [ \"${string:$i:1}\" ==\
    \ \"${substring:$j:1}\" ]; do\n            j=$((j+1))\n            i=$((i+1))\n\
    \        done\n        if [ $j -eq $len_substring ]; then\n            count=$((count+1))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $count", "    local original_string=\"\
    $1\"\n    local substring=\"$2\"\n    local count=0\n    local original_string_length=${#original_string}\n\
    \    local substring_length=${#substring}\n    local i=0\n    while [ $i -lt $original_string_length\
    \ ]; do\n        local substring_start_index=$i\n        local substring_end_index=$((substring_start_index\
    \ + substring_length - 1))\n        if [ $substring_end_index -ge $original_string_length\
    \ ]; then\n            break\n        fi\n        local substring_to_check=${original_string:$substring_start_index:$substring_length}\n\
    \        if [ \"$substring_to_check\" == \"$substring\" ]; then\n            count=$((count\
    \ + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo \"$count\"", " \
    \   local original=\"$1\"\n    local substring=\"$2\"\n    local count=0\n   \
    \ local index=0\n    while true; do\n        index=$(index_of \"$original\" \"\
    $substring\" \"$index\")\n        if [ \"$index\" -eq \"-1\" ]; then\n       \
    \     break\n        fi\n        count=$((count + 1))\n        index=$((index\
    \ + 1))\n    done\n    echo \"$count\"", "    local original=\"$1\"\n    local\
    \ substring=\"$2\"\n    local count=0\n    local i=0\n    while true; do\n   \
    \     local index=$(index_of \"$original\" \"$substring\" \"$i\")\n        if\
    \ [ \"$index\" == \"-1\" ]; then\n            break\n        fi\n        count=$((count\
    \ + 1))\n        i=$((index + 1))\n    done\n    echo \"$count\""]
stop_tokens:
- "\n}"

name: HumanEval_102_choose_num
language: pl
prompt: "# This function takes two positive numbers x and y and returns the\n# biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n# there's no such\
  \ number, then the function should return -1.\n# For example:\n# >>> choose_num(12,\
  \ 15)\n# 14\n# >>> choose_num(13, 12)\n# -1\nsub choose_num {\n    "
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&choose_num;\n\
  \        if(eq_deeply($candidate->(12, 15),14)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(13, 12),-1)) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(33,\
  \ 12354),12354)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n \
  \       if(eq_deeply($candidate->(5234, 5233),-1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(6, 29),28)) {\n \
  \       print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(27,\
  \ 10),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(7, 7),-1)) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->(546, 546),546)) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n   \
    \ }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y)\
    \ {\n        if ($_ % 2 == 0) {\n            $max = $_ if $_ > $max;\n       \
    \ }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for\
    \ (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0 && $i > $max) {\n  \
    \          $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) =\
    \ @_;\n    my $num = -1;\n    if ($x % 2 == 0) {\n        $num = $x;\n    } elsif\
    \ ($x + 1 <= $y) {\n        $num = $x + 1;\n    }\n    return $num;\n}", "my ($x,\
    \ $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $num = -1;\n    if ($x > $y) {\n        return\
    \ -1;\n    }\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $num\
    \ = $_;\n        }\n    }\n    return $num;\n}", "my ($x, $y) = @_;\n    if ($x\
    \ % 2 == 0) {\n        return $x;\n    }\n    elsif ($x % 2 == 1) {\n        return\
    \ $x + 1;\n    }\n    elsif ($y % 2 == 0) {\n        return $y;\n    }\n    elsif\
    \ ($y % 2 == 1) {\n        return $y - 1;\n    }\n    else {\n        return -1;\n\
    \    }\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <=\
    \ $y; $i++) {\n        if ($i % 2 == 0 && $i > $max) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n\
    \    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $num = $_;\n    \
    \    }\n    }\n    return $num;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n \
    \   for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n         \
    \   $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n \
    \   my $z = -1;\n    if ($x % 2 == 0) {\n        $z = $x;\n    }\n    elsif ($x\
    \ % 2 == 1) {\n        $z = $x + 1;\n    }\n    if ($z > $y) {\n        $z = -1;\n\
    \    }\n    return $z;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n    for ($x..$y)\
    \ {\n        if ($_ % 2 == 0) {\n            $num = $_;\n        }\n    }\n  \
    \  return $num;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0 && $i > $max) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $biggest\
    \ = -1;\n    for my $i ($x..$y) {\n        if ($i % 2 == 0) {\n            $biggest\
    \ = $i;\n        }\n    }\n    return $biggest;\n}", "my ($x, $y) = @_;\n    my\
    \ $biggest_even = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $biggest_even = $i;\n        }\n    }\n    return $biggest_even;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n  \
    \  return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0 && $i > $max) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max\
    \ = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max = $_\
    \ if ($_ > $max);\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n\
    \    my $biggest_even = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n\
    \            $biggest_even = $_;\n        }\n    }\n    return $biggest_even;\n\
    }", "my ($x, $y) = @_;\n    if ($x % 2 == 0) {\n        return $x;\n    }\n  \
    \  elsif ($x % 2 == 1) {\n        $x += 1;\n        if ($x > $y) {\n         \
    \   return -1;\n        }\n        else {\n            return $x;\n        }\n\
    \    }\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n      \
    \  if ($_ % 2 == 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n\
    \    return $max;\n}", "my ($x, $y) = @_;\n    my $result = -1;\n    for (my $i\
    \ = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n\
    \        }\n    }\n    return $result;\n}", "my ($x, $y) = @_;\n    my $num =\
    \ -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $num = $_;\n\
    \        }\n    }\n    return $num;\n}", "my ($x, $y) = @_;\n    my $result =\
    \ -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $result = $_;\n\
    \        }\n    }\n    return $result;\n}", "my ($x, $y) = @_;\n    my $max =\
    \ -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max = $_ if\
    \ $_ > $max;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n   \
    \ my $biggest = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0 && $i > $max) {\n            $max = $i;\n       \
    \ }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for\
    \ (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $biggest_even\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $biggest_even = $i;\n        }\n    }\n    return $biggest_even;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n  \
    \  return $max;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n    for ($x..$y) {\n\
    \        if ($_ % 2 == 0) {\n            $num = $_;\n        }\n    }\n    return\
    \ $num;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <=\
    \ $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n\
    \    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my\
    \ $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    if ($x % 2 ==\
    \ 0) {\n        return $x;\n    }\n    else {\n        $x++;\n        if ($x >\
    \ $y) {\n            return -1;\n        }\n        else {\n            return\
    \ $x;\n        }\n    }\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my\
    \ $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n\
    \    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max = $_ if $_ >\
    \ $max;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max\
    \ = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max = $_\
    \ if $_ > $max;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n\
    \    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n         \
    \   $max = $_ if $_ > $max;\n        }\n    }\n    return $max;\n}", "my ($x,\
    \ $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n  \
    \  return $max;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n    for (my $i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $num = $i;\n    \
    \    }\n    }\n    return $num;\n}", "my ($x, $y) = @_;\n    # TODO: implement\
    \ this function\n    return -1;\n}", "my ($x, $y) = @_;\n    # TODO: implement\
    \ this function\n}", "my ($x, $y) = @_;\n    my $result = -1;\n    if ($x % 2\
    \ == 0) {\n        $result = $x;\n    } else {\n        $result = $x + 1;\n  \
    \  }\n    return $result;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for\
    \ (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $num\
    \ = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $num = $_;\n\
    \        }\n    }\n    return $num;\n}", "my ($x, $y) = @_;\n    my $result =\
    \ -1;\n    for my $i ($x..$y) {\n        if ($i % 2 == 0) {\n            $result\
    \ = $i;\n        }\n    }\n    return $result;\n}", "my ($x, $y) = @_;\n    my\
    \ $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x,\
    \ $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n     \
    \   if ($i % 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n\
    \    return $max;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n    for ($x..$y)\
    \ {\n        if ($_ % 2 == 0) {\n            $num = $_;\n        }\n    }\n  \
    \  return $num;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n    for ($x..$y) {\n\
    \        if ($_ % 2 == 0) {\n            $num = $_;\n        }\n    }\n    return\
    \ $num;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for my $num ($x..$y) {\n\
    \        if ($num % 2 == 0) {\n            $max = $num if $num > $max;\n     \
    \   }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    if ($x % 2 == 0) {\n\
    \        return $x;\n    }\n    elsif ($x % 2 == 1) {\n        $x++;\n       \
    \ return $x;\n    }\n    else {\n        return -1;\n    }\n}", "my ($x, $y) =\
    \ @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}",
  "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    if ($x % 2 == 0) {\n        return $x;\n\
    \    } else {\n        return $x + 1;\n    }\n}", "my ($x, $y) = @_;\n    my $max\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y)\
    \ = @_;\n    my $z = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $z = $i;\n        }\n    }\n    return $z;\n}", "my\
    \ ($x, $y) = @_;\n    my $max_even = -1;\n    for ($x..$y) {\n        if ($_ %\
    \ 2 == 0) {\n            $max_even = $_ if $_ > $max_even;\n        }\n    }\n\
    \    return $max_even;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for my\
    \ $i ($x..$y) {\n        if ($i % 2 == 0) {\n            $max = $i if $i > $max;\n\
    \        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $biggest =\
    \ -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $biggest =\
    \ $_;\n        }\n    }\n    return $biggest;\n}", "my ($x, $y) = @_;\n    my\
    \ $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x,\
    \ $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0 &&\
    \ $_ > $max) {\n            $max = $_;\n        }\n    }\n    return $max;\n}",
  "my ($x, $y) = @_;\n    my $biggest_even = -1;\n    for ($x..$y) {\n        if ($_\
    \ % 2 == 0) {\n            $biggest_even = $_;\n        }\n    }\n    return $biggest_even;\n\
    }", "my ($x, $y) = @_;\n    my $result = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n\
    \    return $result;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i\
    \ = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0 && $i > $max) {\n         \
    \   $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n \
    \   my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n          \
    \  $max = $_ if $_ > $max;\n        }\n    }\n    return $max;\n}", "my ($x, $y)\
    \ = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n \
    \           $max = $_ if $_ > $max;\n        }\n    }\n    return $max;\n}", "my\
    \ ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n     \
    \   $max = $_ if $_ % 2 == 0 && $_ > $max;\n    }\n    return $max;\n}", "my ($x,\
    \ $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n\
    \            $max = $_ if $_ > $max;\n        }\n    }\n    return $max;\n}",
  "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for my $i ($x..$y) {\n\
    \        if ($i % 2 == 0) {\n            $max = $i if $i > $max;\n        }\n\
    \    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $biggest_even = -1;\n\
    \    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $biggest_even = $_;\n\
    \        }\n    }\n    return $biggest_even;\n}", "my ($x, $y) = @_;\n    my $max\
    \ = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max = $_\
    \ if $_ > $max;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n\
    \    # TODO: Write your code here\n    my $biggest_even = -1;\n    for (my $i\
    \ = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest_even\
    \ = $i;\n        }\n    }\n    return $biggest_even;\n}", "my ($x, $y) = @_;\n\
    \    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2\
    \ == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my\
    \ ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 ==\
    \ 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $num = -1;\n    for ($x..$y) {\n        if ($_\
    \ % 2 == 0) {\n            $num = $_;\n        }\n    }\n    return $num;\n}",
  "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 ==\
    \ 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n  \
    \  return $max;\n}", "my ($x, $y) = @_;\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    }\n    elsif ($x % 2 == 1 && $y % 2 == 0) {\n        return $y;\n \
    \   }\n    else {\n        return -1;\n    }\n}", "my ($x, $y) = @_;\n    if ($x\
    \ % 2 == 0) {\n        return $x;\n    }\n    else {\n        $x = $x + 1;\n \
    \       if ($x > $y) {\n            return -1;\n        }\n        else {\n  \
    \          return $x;\n        }\n    }\n}", "my ($x, $y) = @_;\n    # your code\
    \ goes here\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n  \
    \  return $max;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n    for ($x..$y) {\n\
    \        if ($_ % 2 == 0) {\n            $num = $_;\n        }\n    }\n    return\
    \ $num;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <=\
    \ $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n\
    \    }\n    return $max;\n}", "my $x = shift;\n    my $y = shift;\n    my $max\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y)\
    \ = @_;\n    my $num = -1;\n    if ($x > $y) {\n        return -1;\n    }\n  \
    \  for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $num = $_;\n      \
    \  }\n    }\n    return $num;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n   \
    \ for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n           \
    \ $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n   \
    \ my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max\
    \ = $_ if $_ > $max;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n\
    \    my $num = -1;\n    if ($x % 2 == 0) {\n        $num = $x;\n    } else {\n\
    \        $num = $x + 1;\n    }\n    while ($num <= $y) {\n        return $num;\n\
    \    }\n    return -1;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my\
    \ $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n\
    \    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $num = $_;\n    \
    \    }\n    }\n    return $num;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n \
    \   for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max = $_ if ($_ >\
    \ $max);\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max\
    \ = -1;\n    if ($x > $y) {\n        return -1;\n    }\n    for ($x..$y) {\n \
    \       if ($_ % 2 == 0 && $_ > $max) {\n            $max = $_;\n        }\n \
    \   }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my\
    \ $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $biggest_even\
    \ = -1;\n    for my $num ($x..$y) {\n        if ($num % 2 == 0) {\n          \
    \  $biggest_even = $num;\n        }\n    }\n    return $biggest_even;\n}", "my\
    \ ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <=\
    \ $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n\
    \    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $biggest_even = -1;\n\
    \    if ($x % 2 == 0) {\n        $biggest_even = $x;\n    }\n    for (my $i =\
    \ $x + 1; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest_even\
    \ = $i;\n        }\n    }\n    return $biggest_even;\n}", "my ($x, $y) = @_;\n\
    \    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2\
    \ == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my\
    \ ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 ==\
    \ 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_\
    \ % 2 == 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <=\
    \ $y; $i++) {\n        if ($i % 2 == 0 && $i > $max) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n\
    \    for ($x..$y) {\n        $max = $_ if ($_ % 2 == 0 && $_ > $max);\n    }\n\
    \    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i =\
    \ $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n\
    \    for ($x..$y) {\n        $max = $_ if $_ % 2 == 0 and $_ > $max;\n    }\n\
    \    return $max;\n}", "my ($x, $y) = @_;\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else {\n        return $x + 1;\n    }\n}", "my ($x, $y) = @_;\n \
    \   my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2\
    \ == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my\
    \ ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    if ($x % 2 == 0) {\n        return $x;\n\
    \    }\n    elsif ($x % 2 == 1) {\n        return $x + 1;\n    }\n    else {\n\
    \        return -1;\n    }\n}", "my ($x, $y) = @_;\n    return -1 if $x > $y;\n\
    \    return $x if $x % 2 == 0;\n    return $x + 1 if $x + 1 <= $y;\n    return\
    \ -1;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n   \
    \ }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $biggest_even = -1;\n  \
    \  if ($x % 2 == 0) {\n        $biggest_even = $x;\n    } elsif ($x + 1 <= $y)\
    \ {\n        $biggest_even = $x + 1;\n    }\n    return $biggest_even;\n}", "my\
    \ ($x, $y) = @_;\n    # your code here\n    my $max = -1;\n    for ($x..$y) {\n\
    \        if ($_ % 2 == 0) {\n            $max = $_ if $_ > $max;\n        }\n\
    \    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $biggest_even = -1;\n\
    \    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n        \
    \    $biggest_even = $i;\n        }\n    }\n    return $biggest_even;\n}", "my\
    \ ($x, $y) = @_;\n    my $num = -1;\n    if ($x % 2 == 0) {\n        $num = $x;\n\
    \    } elsif ($x + 1 <= $y) {\n        $num = $x + 1;\n    }\n    return $num;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n  \
    \  return $max;\n}", "my ($x, $y) = @_;\n    my $biggest = -1;\n    for (my $i\
    \ = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest =\
    \ $i;\n        }\n    }\n    return $biggest;\n}", "my ($x, $y) = @_;\n    my\
    \ $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x,\
    \ $y) = @_;\n    my $result = -1;\n    if ($x % 2 == 0) {\n        $result = $x;\n\
    \    } elsif ($x + 1 <= $y) {\n        $result = $x + 1;\n    }\n    return $result;\n\
    }", "my ($x, $y) = @_;\n    my $biggest_even = -1;\n    for (my $i = $x; $i <=\
    \ $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest_even = $i;\n \
    \       }\n    }\n    return $biggest_even;\n}", "my ($x, $y) = @_;\n    my $max\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y)\
    \ = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if\
    \ ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $biggest = -1;\n    for (my $i = $x; $i <= $y;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $biggest = $i;\n        }\n\
    \    }\n    return $biggest;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for\
    \ (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $num\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $num = $i;\n        }\n    }\n    return $num;\n}", "my ($x, $y)\
    \ = @_;\n    my $biggest = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return\
    \ $biggest;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n    for ($x..$y) {\n \
    \       if ($_ % 2 == 0) {\n            $num = $_;\n        }\n    }\n    return\
    \ $num;\n}", "my ($x, $y) = @_;\n    my $biggest = -1;\n    for (my $i = $x; $i\
    \ <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest = $i;\n   \
    \     }\n    }\n    return $biggest;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n\
    \    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max = $_ if $_ >\
    \ $max;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max\
    \ = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max = $_\
    \ if $_ > $max;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n\
    \    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2\
    \ == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my\
    \ ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n\
    \    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $result = -1;\n    for\
    \ (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result\
    \ = $i;\n        }\n    }\n    return $result;\n}", "my ($x, $y) = @_;\n    my\
    \ $num = -1;\n    if ($x % 2 == 0) {\n        $num = $x;\n    } elsif ($x + 1\
    \ <= $y) {\n        $num = $x + 1;\n    }\n    return $num;\n}", "my ($x, $y)\
    \ = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n \
    \           $max = $_ if $_ > $max;\n        }\n    }\n    return $max;\n}", "my\
    \ ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    my $biggest = -1;\n    for ($x..$y) {\n \
    \       if ($_ % 2 == 0) {\n            $biggest = $_;\n        }\n    }\n   \
    \ return $biggest;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y)\
    \ {\n        $max = $_ if $_ % 2 == 0 && $_ > $max;\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $result = -1;\n    if ($x % 2 == 0) {\n       \
    \ $result = $x;\n    } elsif ($x + 1 <= $y) {\n        $result = $x + 1;\n   \
    \ }\n    return $result;\n}", "my ($x, $y) = @_;\n    my $biggest = -1;\n    if\
    \ ($x % 2 == 0) {\n        $biggest = $x;\n    } elsif ($x + 1 <= $y) {\n    \
    \    $biggest = $x + 1;\n    }\n    return $biggest;\n}", "my ($x, $y) = @_;\n\
    \    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2\
    \ == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my\
    \ ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    # your code here\n    my $biggest = -1;\n\
    \    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $biggest = $_;\n\
    \        }\n    }\n    return $biggest;\n}", "my ($x, $y) = @_;\n    my $max =\
    \ -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0 && $i >\
    \ $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my\
    \ ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n\
    \    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n    for ($x..$y)\
    \ {\n        if ($_ % 2 == 0) {\n            $num = $_;\n        }\n    }\n  \
    \  return $num;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n\
    \        if ($_ % 2 == 0) {\n            $max = $_ if $_ > $max;\n        }\n\
    \    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $result = -1;\n    for\
    \ (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result\
    \ = $i;\n        }\n    }\n    return $result;\n}", "my ($x, $y) = @_;\n    my\
    \ $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x,\
    \ $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n\
    \            $max = $_ if $_ > $max;\n        }\n    }\n    return $max;\n}",
  "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <=\
    \ $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n\
    \    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $result = -1;\n    for\
    \ (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result\
    \ = $i;\n        }\n    }\n    return $result;\n}", "my ($x, $y) = @_;\n    my\
    \ $result = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}",
  "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_ % 2 ==\
    \ 0) {\n            $max = $_ if ($_ > $max);\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_\
    \ % 2 == 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n     \
    \   if ($_ % 2 == 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n\
    \    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i =\
    \ $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n\
    \        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $biggest =\
    \ -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n  \
    \          $biggest = $i;\n        }\n    }\n    return $biggest;\n}", "my ($x,\
    \ $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_\
    \ % 2 == 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    my $num = -1;\n    if ($x % 2 == 0) {\n \
    \       $num = $x;\n    } else {\n        $num = $x + 1;\n    }\n    while ($num\
    \ <= $y) {\n        return $num;\n    }\n    return -1;\n}", "my ($x, $y) = @_;\n\
    \    my $num = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n         \
    \   $num = $_;\n        }\n    }\n    return $num;\n}", "my ($x, $y) = @_;\n \
    \   if ($x % 2 == 0) {\n        return $x;\n    }\n    elsif ($x + 1 <= $y) {\n\
    \        return $x + 1;\n    }\n    else {\n        return -1;\n    }\n}", "my\
    \ ($x, $y) = @_;\n    if ($x % 2 == 0) {\n        return $x;\n    }\n    else\
    \ {\n        if ($x + 1 <= $y) {\n            return $x + 1;\n        }\n    \
    \    else {\n            return -1;\n        }\n    }\n}", "my ($x, $y) = @_;\n\
    \    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2\
    \ == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my\
    \ ($x, $y) = @_;\n    my $biggest = -1;\n    for ($x..$y) {\n        if ($_ %\
    \ 2 == 0) {\n            $biggest = $_;\n        }\n    }\n    return $biggest;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n  \
    \  return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n    \
    \    }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    # TODO: Write your\
    \ code here\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $biggest = -1;\n    for (my $i = $x; $i <= $y;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $biggest = $i;\n        }\n\
    \    }\n    return $biggest;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for\
    \ (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    # your\
    \ code here\n}", "my ($x, $y) = @_;\n    my $max_even = -1;\n    for my $i ($x..$y)\
    \ {\n        if ($i % 2 == 0) {\n            $max_even = $i;\n        }\n    }\n\
    \    return $max_even;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for my\
    \ $i ($x..$y) {\n        if ($i % 2 == 0) {\n            $max = $i if $i > $max;\n\
    \        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n\
    \    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max = $_ if ($_\
    \ > $max);\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my\
    \ $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x,\
    \ $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        $max = $_ if ($_ %\
    \ 2 == 0 && $_ > $max);\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n   \
    \ my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x,\
    \ $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        $max =\
    \ $_ if ($_ % 2 == 0) && ($_ > $max);\n    }\n    return $max;\n}", "my ($x, $y)\
    \ = @_;\n    my $biggest_even = -1;\n    for ($x..$y) {\n        if ($_ % 2 ==\
    \ 0) {\n            $biggest_even = $_;\n        }\n    }\n    return $biggest_even;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_\
    \ % 2 == 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x; $i <=\
    \ $y; $i++) {\n        if ($i % 2 == 0) {\n            $max = $i;\n        }\n\
    \    }\n    return $max;\n}", "my ($x, $y) = @_;\n    if ($x % 2 == 0) {\n   \
    \     return $x;\n    }\n    if ($y % 2 == 0) {\n        return $y;\n    }\n \
    \   return -1;\n}", "my ($x, $y) = @_;\n    my $max = -1;\n    for (my $i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0 && $i > $max) {\n            $max\
    \ = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n    my $max\
    \ = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $max = $_\
    \ if $_ > $max;\n        }\n    }\n    return $max;\n}", "my ($x, $y) = @_;\n\
    \    my $biggest_even = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n\
    \            $biggest_even = $_;\n        }\n    }\n    return $biggest_even;\n\
    }", "my ($x, $y) = @_;\n    my $num = -1;\n    for (my $i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $num = $i;\n        }\n    }\n  \
    \  return $num;\n}", "my ($x, $y) = @_;\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    }\n    else {\n        $x = $x + 1;\n        if ($x > $y) {\n     \
    \       return -1;\n        }\n        else {\n            return $x;\n      \
    \  }\n    }\n}", "my ($x, $y) = @_;\n    if ($x % 2 == 0) {\n        return $x;\n\
    \    } else {\n        return $x + 1;\n    }\n}", "my ($x, $y) = @_;\n    my $biggest\
    \ = -1;\n    for ($x..$y) {\n        if ($_ % 2 == 0) {\n            $biggest\
    \ = $_;\n        }\n    }\n    return $biggest;\n}", "my ($x, $y) = @_;\n    my\
    \ $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0\
    \ && $i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_\
    \ % 2 == 0) {\n            $max = $_ if $_ > $max;\n        }\n    }\n    return\
    \ $max;\n}", "my ($x, $y) = @_;\n    # TODO: Write your code here\n    my $max\
    \ = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n\
    \            $max = $i;\n        }\n    }\n    return $max;\n}", "my ($x, $y)\
    \ = @_;\n    my $max = -1;\n    for (my $i = $x; $i <= $y; $i++) {\n        if\
    \ ($i % 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }", "my ($x, $y) = @_;\n    my $max = -1;\n    for ($x..$y) {\n        if ($_\
    \ % 2 == 0) {\n            $max = $_ if ($_ > $max);\n        }\n    }\n    return\
    \ $max;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

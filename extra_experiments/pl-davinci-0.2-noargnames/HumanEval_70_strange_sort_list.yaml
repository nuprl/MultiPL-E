name: HumanEval_70_strange_sort_list
language: pl
prompt: "# Given array of integers, return array in strange order.\n# Strange sorting,\
  \ is when you start with the minimum value,\n# then maximum of the remaining integers,\
  \ then minimum and so on.\n# Examples:\n# >>> strange_sort_list([1, 2, 3, 4])\n\
  # [1, 4, 2, 3]\n# >>> strange_sort_list([5, 5, 5, 5])\n# [5, 5, 5, 5]\n# >>> strange_sort_list([])\n\
  # []\nsub strange_sort_list {\n    "
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&strange_sort_list;\n\
  \        if(eq_deeply($candidate->([1, 2, 3, 4]),[1, 4, 2, 3])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 6, 7, 8, 9]),[5, 9, 6, 8, 7])) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5]),[1, 5, 2, 4, 3]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 6, 7, 8, 9, 1]),[1, 9, 5, 8, 6, 7])) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->([5, 5, 5, 5]),[5, 5, 5,\
  \ 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 3, 4, 5, 6, 7, 8]),[1, 8, 2, 7, 3, 6, 4, 5])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([0, 2, 2, 2, 5, 5,\
  \ -5, -5]),[-5, 5, -5, 5, 0, 2, 2, 2])) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n        if(eq_deeply($candidate->([111111]),[111111])) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["my $arr = shift;\n    my @res;\n    my $len = scalar @$arr;\n    my\
    \ $i = 0;\n    while ($i < $len) {\n        my $min = min(@$arr);\n        push\
    \ @res, $min;\n        $i++;\n        if ($i < $len) {\n            my $max =\
    \ max(@$arr);\n            push @res, $max;\n            $i++;\n        }\n  \
    \  }\n    return \\@res;\n}", "my @list = @_;\n    my @sorted_list;\n    my $min\
    \ = min @list;\n    my $max = max @list;\n    my $i = 0;\n    while (@list) {\n\
    \        if ($i % 2 == 0) {\n            push @sorted_list, shift @list;\n   \
    \     } else {\n            push @sorted_list, pop @list;\n        }\n       \
    \ $i++;\n    }\n    return @sorted_list;\n}", "my ($list) = @_;\n    my @sorted\
    \ = sort { $a <=> $b } @$list;\n    my @result;\n    my $i = 0;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted if\
    \ @sorted;\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $min = min(@list);\n    my $max = max(@list);\n    my $i = 0;\n    while\
    \ (@list) {\n        if ($i % 2 == 0) {\n            push @sorted_list, $min;\n\
    \            @list = grep { $_ != $min } @list;\n            $min = min(@list);\n\
    \        } else {\n            push @sorted_list, $max;\n            @list = grep\
    \ { $_ != $max } @list;\n            $max = max(@list);\n        }\n        $i++;\n\
    \    }\n    return @sorted_list;\n}", "my $list = shift;\n    my @sorted = sort\
    \ { $a <=> $b } @$list;\n    my $i = 0;\n    my $j = $#sorted;\n    my @result;\n\
    \    while ($i <= $j) {\n        push @result, $sorted[$i];\n        $i++;\n \
    \       if ($i <= $j) {\n            push @result, $sorted[$j];\n            $j--;\n\
    \        }\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $i = 0;\n    while (@list) {\n        my $min = min @list;\n        my\
    \ $max = max @list;\n        if ($i % 2 == 0) {\n            push @sorted_list,\
    \ $min;\n            @list = grep { $_ != $min } @list;\n        } else {\n  \
    \          push @sorted_list, $max;\n            @list = grep { $_ != $max } @list;\n\
    \        }\n        $i++;\n    }\n    return @sorted_list;\n}", "my $array = shift;\n\
    \    my @sorted = sort { $a <=> $b } @$array;\n    my @result;\n    my $i = 0;\n\
    \    while (@sorted) {\n        push @result, splice(@sorted, $i, 1);\n      \
    \  $i = $i == 0 ? -1 : 0;\n    }\n    return \\@result;\n}", "my @list = @_;\n\
    \    my @sorted_list;\n    my $min = min(@list);\n    my $max = max(@list);\n\
    \    my $min_index = first_index { $_ == $min } @list;\n    my $max_index = first_index\
    \ { $_ == $max } @list;\n    my $min_count = grep { $_ == $min } @list;\n    my\
    \ $max_count = grep { $_ == $max } @list;\n    my $min_remaining = $min_count\
    \ - 1;\n    my $max_remaining = $max_count - 1;\n    my $min_remaining_index =\
    \ $min_index + 1;\n    my $max_remaining_index = $max_index + 1;\n    my $min_remaining_count\
    \ = $min_count - 1;\n    my $max_remaining_count = $max_count - 1;\n    my $min_remaining_remaining\
    \ = $min_remaining_count - 1;\n    my $max_remaining_remaining = $max_remaining_count\
    \ - 1;\n    my $min_remaining_remaining_index = $min_remaining_index + 1;\n  \
    \  my $max_remaining_remaining_index = $max_remaining_index + 1;\n    my $min_remaining_remaining_count\
    \ = $min_remaining_count - 1;\n    my $max_remaining_remaining_count = $max_remaining_count\
    \ - 1;\n    my $min_remaining_remaining_remaining = $min_remaining_remaining_count\
    \ - 1;\n    my $max_remaining_remaining_remaining = $max_remaining_remaining_count\
    \ - 1;\n    my $min_remaining_remaining_remaining_index = $min_remaining_remaining_index\
    \ + 1;\n    my $max_remaining_remaining_remaining_index = $max_remaining_remaining_index\
    \ + 1;\n    my $min_remaining_remaining_remaining_count = $min_remaining_remaining_count\
    \ - 1;\n    my $max_rem", "my @list = @_;\n    my @sorted_list;\n    my $min =\
    \ min @list;\n    my $max = max @list;\n    my $i = 0;\n    while (@list) {\n\
    \        if ($i % 2 == 0) {\n            push @sorted_list, $min;\n          \
    \  @list = grep { $_ != $min } @list;\n            $min = min @list;\n       \
    \ } else {\n            push @sorted_list, $max;\n            @list = grep { $_\
    \ != $max } @list;\n            $max = max @list;\n        }\n        $i++;\n\
    \    }\n    return @sorted_list;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my @min_list;\n    my @max_list;\n    my $min;\n    my $max;\n    while (@list)\
    \ {\n        $min = min @list;\n        $max = max @list;\n        push @min_list,\
    \ $min;\n        push @max_list, $max;\n        @list = grep { $_ != $min } @list;\n\
    \        @list = grep { $_ != $max } @list;\n    }\n    while (@min_list && @max_list)\
    \ {\n        push @sorted_list, shift @min_list;\n        push @sorted_list, pop\
    \ @max_list;\n    }\n    return @sorted_list;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n           \
    \ push @sorted_list, shift @list;\n        } else {\n            push @sorted_list,\
    \ pop @list;\n        }\n        $i++;\n    }\n    return @sorted_list;\n}", "my\
    \ ($list) = @_;\n    my @sorted = sort { $a <=> $b } @$list;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted if @sorted;\n    }\n    return \\@result;\n}", "my @list = @_;\n\
    \    my @result;\n    my $i = 0;\n    my $j = $#list;\n    while ($i <= $j) {\n\
    \        push @result, $list[$i];\n        $i++;\n        if ($i <= $j) {\n  \
    \          push @result, $list[$j];\n            $j--;\n        }\n    }\n   \
    \ return @result;\n}", "my $arr = shift;\n    my @result;\n    my $i = 0;\n  \
    \  while (@$arr) {\n        if ($i % 2 == 0) {\n            push @result, shift\
    \ @$arr;\n        } else {\n            push @result, pop @$arr;\n        }\n\
    \        $i++;\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $list_size = @list;\n    my $i = 0;\n    while ($i < $list_size) {\n \
    \       my $min = min(@list);\n        my $max = max(@list);\n        push @sorted_list,\
    \ $min;\n        push @sorted_list, $max;\n        @list = grep { $_ != $min &&\
    \ $_ != $max } @list;\n        $i += 2;\n    }\n    return @sorted_list;\n}",
  "my $input = shift;\n    my @input = @$input;\n    my @output;\n    my @sorted =\
    \ sort { $a <=> $b } @input;\n    my $i = 0;\n    my $j = scalar @sorted - 1;\n\
    \    while ($i <= $j) {\n        push @output, $sorted[$i];\n        $i++;\n \
    \       if ($i <= $j) {\n            push @output, $sorted[$j];\n            $j--;\n\
    \        }\n    }\n    return \\@output;\n}", "my ($arr) = @_;\n    my @sorted\
    \ = sort { $a <=> $b } @$arr;\n    my $len = scalar @sorted;\n    my @result;\n\
    \    for (my $i = 0; $i < $len; $i++) {\n        if ($i % 2 == 0) {\n        \
    \    push @result, shift @sorted;\n        } else {\n            push @result,\
    \ pop @sorted;\n        }\n    }\n    return \\@result;\n}", "my $arr = shift;\n\
    \    my @result;\n    my $i = 0;\n    while (scalar @$arr) {\n        my $min\
    \ = min @$arr;\n        my $max = max @$arr;\n        if ($i % 2 == 0) {\n   \
    \         push @result, $min;\n            $arr = [ grep { $_ != $min } @$arr\
    \ ];\n        } else {\n            push @result, $max;\n            $arr = [\
    \ grep { $_ != $max } @$arr ];\n        }\n        $i++;\n    }\n    return \\\
    @result;\n}", "my @list = @_;\n    my @sorted;\n    my $i = 0;\n    my $j = 0;\n\
    \    my $k = 0;\n    my $min = 0;\n    my $max = 0;\n    my $min_index = 0;\n\
    \    my $max_index = 0;\n    my $min_found = 0;\n    my $max_found = 0;\n    my\
    \ $list_length = @list;\n    my $list_length_half = int($list_length / 2);\n \
    \   my $list_length_half_plus_one = $list_length_half + 1;\n    my $list_length_half_minus_one\
    \ = $list_length_half - 1;\n    my $list_length_minus_one = $list_length - 1;\n\
    \    my $list_length_minus_two = $list_length - 2;\n    my $list_length_minus_three\
    \ = $list_length - 3;\n    my $list_length_minus_four = $list_length - 4;\n  \
    \  my $list_length_minus_five = $list_length - 5;\n    my $list_length_minus_six\
    \ = $list_length - 6;\n    my $list_length_minus_seven = $list_length - 7;\n \
    \   my $list_length_minus_eight = $list_length - 8;\n    my $list_length_minus_nine\
    \ = $list_length - 9;\n    my $list_length_minus_ten = $list_length - 10;\n  \
    \  my $list_length_minus_eleven = $list_length - 11;\n    my $list_length_minus_twelve\
    \ = $list_length - 12;\n    my $list_length_minus_thirteen = $list_length - 13;\n\
    \    my $list_length_minus_fourteen = $list_length - 14;\n    my $list_length_minus_fifteen\
    \ = $list_length - 15;\n    my $list_length_minus_sixteen = $list_length - 16;\n\
    \    my $list_length_minus_seventeen = $list_length - 17;\n    my $list_length_minus_eight",
  "my @list = @_;\n    my @sorted;\n    my $i = 0;\n    while (@list) {\n        if\
    \ ($i % 2 == 0) {\n            push @sorted, shift @list;\n        } else {\n\
    \            push @sorted, pop @list;\n        }\n        $i++;\n    }\n    return\
    \ @sorted;\n}", "my $list = shift;\n    my @result;\n    my $i = 0;\n    while\
    \ (@$list) {\n        if ($i % 2 == 0) {\n            push @result, shift @$list;\n\
    \        } else {\n            push @result, pop @$list;\n        }\n        $i++;\n\
    \    }\n    return \\@result;\n}", "my ($list) = @_;\n    my @sorted = sort {\
    \ $a <=> $b } @$list;\n    my @result;\n    while (@sorted) {\n        push @result,\
    \ shift @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "my ($arr) = @_;\n    my @sorted = sort { $a <=> $b } @$arr;\n    my @result;\n\
    \    my $i = 0;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        if (@sorted) {\n            push @result, pop @sorted;\n        }\n \
    \   }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n    my\
    \ $i = 0;\n    while (@list) {\n        my $min = min(@list);\n        my $max\
    \ = max(@list);\n        if ($i % 2 == 0) {\n            push @sorted_list, $min;\n\
    \        } else {\n            push @sorted_list, $max;\n        }\n        @list\
    \ = grep { $_ != $min && $_ != $max } @list;\n        $i++;\n    }\n    return\
    \ @sorted_list;\n}", "my @list = @_;\n    my @result;\n    my $min = min @list;\n\
    \    my $max = max @list;\n    while (@list) {\n        push @result, $min;\n\
    \        @list = grep { $_ != $min } @list;\n        push @result, $max;\n   \
    \     @list = grep { $_ != $max } @list;\n        $min = min @list;\n        $max\
    \ = max @list;\n    }\n    return @result;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $min = min(@list);\n    my $max = max(@list);\n    my $i = 0;\n    while\
    \ (scalar @list > 0) {\n        if ($i % 2 == 0) {\n            push @sorted_list,\
    \ $min;\n            @list = grep { $_ != $min } @list;\n            $min = min(@list);\n\
    \        } else {\n            push @sorted_list, $max;\n            @list = grep\
    \ { $_ != $max } @list;\n            $max = max(@list);\n        }\n        $i++;\n\
    \    }\n    return @sorted_list;\n}", "my ($list) = @_;\n    my @sorted = sort\
    \ { $a <=> $b } @$list;\n    my @result;\n    while (@sorted) {\n        push\
    \ @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n    return\
    \ \\@result;\n}", "my ($arr) = @_;\n    my @sorted = sort { $a <=> $b } @$arr;\n\
    \    my @result;\n    my $i = 0;\n    while (@sorted) {\n        push @result,\
    \ shift @sorted;\n        push @result, pop @sorted if @sorted;\n    }\n    return\
    \ \\@result;\n}", "my ($array) = @_;\n    my @sorted = sort { $a <=> $b } @$array;\n\
    \    my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "my @list\
    \ = @_;\n    my @sorted;\n    my $i = 0;\n    while (@list) {\n        if ($i\
    \ % 2 == 0) {\n            push @sorted, shift @list;\n        } else {\n    \
    \        push @sorted, pop @list;\n        }\n        $i++;\n    }\n    return\
    \ @sorted;\n}", "my @list = @_;\n    my @sorted_list;\n    my $i = 0;\n    while\
    \ (@list) {\n        my $min = min(@list);\n        my $max = max(@list);\n  \
    \      if ($i % 2 == 0) {\n            push @sorted_list, $min;\n        } else\
    \ {\n            push @sorted_list, $max;\n        }\n        $i++;\n        @list\
    \ = grep { $_ != $min && $_ != $max } @list;\n    }\n    return @sorted_list;\n\
    }", "my @list = @_;\n    my @sorted;\n    my $i = 0;\n    while (@list) {\n  \
    \      if ($i % 2 == 0) {\n            push @sorted, shift @list;\n        } else\
    \ {\n            push @sorted, pop @list;\n        }\n        $i++;\n    }\n \
    \   return @sorted;\n}", "my @list = @_;\n    my @sorted;\n    my $min = min(@list);\n\
    \    my $max = max(@list);\n    my $i = 0;\n    while (@list) {\n        if ($i\
    \ % 2 == 0) {\n            push @sorted, $min;\n            @list = grep { $_\
    \ != $min } @list;\n            $min = min(@list);\n        } else {\n       \
    \     push @sorted, $max;\n            @list = grep { $_ != $max } @list;\n  \
    \          $max = max(@list);\n        }\n        $i++;\n    }\n    return @sorted;\n\
    }", "my @list = @_;\n    my @sorted_list;\n    my $min = min @list;\n    my $max\
    \ = max @list;\n    my $min_index = first_index { $_ == $min } @list;\n    my\
    \ $max_index = first_index { $_ == $max } @list;\n    push @sorted_list, $min;\n\
    \    push @sorted_list, $max;\n    splice @list, $min_index, 1;\n    splice @list,\
    \ $max_index, 1;\n    while (@list) {\n        $min = min @list;\n        $max\
    \ = max @list;\n        $min_index = first_index { $_ == $min } @list;\n     \
    \   $max_index = first_index { $_ == $max } @list;\n        push @sorted_list,\
    \ $min;\n        push @sorted_list, $max;\n        splice @list, $min_index, 1;\n\
    \        splice @list, $max_index, 1;\n    }\n    return @sorted_list;\n}", "my\
    \ @list = @_;\n    my @result;\n    my @sorted = sort { $a <=> $b } @list;\n \
    \   my $i = 0;\n    my $j = $#sorted;\n    while ($i <= $j) {\n        push @result,\
    \ $sorted[$i];\n        $i++;\n        if ($i <= $j) {\n            push @result,\
    \ $sorted[$j];\n            $j--;\n        }\n    }\n    return @result;\n}",
  "my ($list) = @_;\n    my @sorted = sort { $a <=> $b } @$list;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted if @sorted;\n    }\n    return \\@result;\n}", "my @list = @_;\n\
    \    my @result;\n    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0)\
    \ {\n            push @result, shift @list;\n        } else {\n            push\
    \ @result, pop @list;\n        }\n        $i++;\n    }\n    return @result;\n}",
  "my $arr = shift;\n    my @result;\n    my $i = 0;\n    my $j = scalar @$arr - 1;\n\
    \    while ($i <= $j) {\n        push @result, $arr->[$i];\n        $i++;\n  \
    \      if ($i <= $j) {\n            push @result, $arr->[$j];\n            $j--;\n\
    \        }\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n           \
    \ push @sorted_list, shift @list;\n        } else {\n            push @sorted_list,\
    \ pop @list;\n        }\n        $i++;\n    }\n    return @sorted_list;\n}", "my\
    \ ($arr) = @_;\n    my @sorted = sort { $a <=> $b } @$arr;\n    my @result;\n\
    \    my $i = 0;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "my @list\
    \ = @_;\n    my @sorted;\n    my $min = min @list;\n    my $max = max @list;\n\
    \    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n           \
    \ push @sorted, $min;\n            @list = grep { $_ != $min } @list;\n      \
    \      $min = min @list;\n        } else {\n            push @sorted, $max;\n\
    \            @list = grep { $_ != $max } @list;\n            $max = max @list;\n\
    \        }\n        $i++;\n    }\n    return @sorted;\n}", "my @list = @_;\n \
    \   my @sorted;\n    my @remaining = @list;\n    while (@remaining) {\n      \
    \  my $min = min @remaining;\n        my $max = max @remaining;\n        push\
    \ @sorted, $min;\n        push @sorted, $max;\n        @remaining = grep { $_\
    \ != $min && $_ != $max } @remaining;\n    }\n    return @sorted;\n}", "my $list\
    \ = shift;\n    my $sorted = [];\n    my $min = min @$list;\n    my $max = max\
    \ @$list;\n    my $i = 0;\n    while (scalar @$list) {\n        if ($i % 2 ==\
    \ 0) {\n            push @$sorted, shift @$list;\n        } else {\n         \
    \   push @$sorted, pop @$list;\n        }\n        $i++;\n    }\n    return $sorted;\n\
    }", "my ($list) = @_;\n    my @sorted = sort { $a <=> $b } @$list;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @result;\n\
    \    my $min = min @list;\n    my $max = max @list;\n    my $i = 0;\n    while\
    \ (@list) {\n        if ($i % 2 == 0) {\n            push @result, $min;\n   \
    \         @list = grep { $_ != $min } @list;\n            $min = min @list;\n\
    \        } else {\n            push @result, $max;\n            @list = grep {\
    \ $_ != $max } @list;\n            $max = max @list;\n        }\n        $i++;\n\
    \    }\n    return @result;\n}", "my @list = @_;\n    my @result;\n    my $min\
    \ = min @list;\n    my $max = max @list;\n    my $i = 0;\n    while (@list) {\n\
    \        if ($i % 2 == 0) {\n            push @result, $min;\n            @list\
    \ = grep { $_ != $min } @list;\n            $min = min @list;\n        } else\
    \ {\n            push @result, $max;\n            @list = grep { $_ != $max }\
    \ @list;\n            $max = max @list;\n        }\n        $i++;\n    }\n   \
    \ return @result;\n}", "my @list = @_;\n    my @sorted_list;\n    my $min = min(@list);\n\
    \    my $max = max(@list);\n    my $i = 0;\n    while (@list) {\n        if ($i\
    \ % 2 == 0) {\n            push @sorted_list, $min;\n            @list = grep\
    \ { $_ != $min } @list;\n            $min = min(@list);\n        } else {\n  \
    \          push @sorted_list, $max;\n            @list = grep { $_ != $max } @list;\n\
    \            $max = max(@list);\n        }\n        $i++;\n    }\n    return @sorted_list;\n\
    }", "my @list = @_;\n    my @sorted_list;\n    my $min = min @list;\n    my $max\
    \ = max @list;\n    my $min_index = firstidx { $_ == $min } @list;\n    my $max_index\
    \ = firstidx { $_ == $max } @list;\n    push @sorted_list, $min;\n    push @sorted_list,\
    \ $max;\n    splice @list, $min_index, 1;\n    splice @list, $max_index, 1;\n\
    \    while (@list) {\n        $min = min @list;\n        $max = max @list;\n \
    \       $min_index = firstidx { $_ == $min } @list;\n        $max_index = firstidx\
    \ { $_ == $max } @list;\n        push @sorted_list, $min;\n        push @sorted_list,\
    \ $max;\n        splice @list, $min_index, 1;\n        splice @list, $max_index,\
    \ 1;\n    }\n    return @sorted_list;\n}", "my ($arr) = @_;\n    my @result;\n\
    \    my $i = 0;\n    my $j = scalar @$arr - 1;\n    while ($i <= $j) {\n     \
    \   push @result, $arr->[$i];\n        $i++;\n        if ($i <= $j) {\n      \
    \      push @result, $arr->[$j];\n            $j--;\n        }\n    }\n    return\
    \ \\@result;\n}", "my @list = @_;\n    my @sorted;\n    while (@list) {\n    \
    \    push @sorted, shift @list;\n        push @sorted, pop @list;\n    }\n   \
    \ return @sorted;\n}", "my @list = @_;\n    my @result;\n    my $i = 0;\n    while\
    \ (@list) {\n        my $min = min(@list);\n        my $max = max(@list);\n  \
    \      if ($i % 2 == 0) {\n            push @result, $min;\n            @list\
    \ = grep { $_ != $min } @list;\n        } else {\n            push @result, $max;\n\
    \            @list = grep { $_ != $max } @list;\n        }\n        $i++;\n  \
    \  }\n    return @result;\n}", "my @list = @_;\n    my @result;\n    my $min =\
    \ min(@list);\n    my $max = max(@list);\n    my $i = 0;\n    while (@list) {\n\
    \        if ($i % 2 == 0) {\n            push @result, $min;\n            @list\
    \ = grep { $_ != $min } @list;\n            $min = min(@list);\n        } else\
    \ {\n            push @result, $max;\n            @list = grep { $_ != $max }\
    \ @list;\n            $max = max(@list);\n        }\n        $i++;\n    }\n  \
    \  return @result;\n}", "my @list = @_;\n    my @sorted_list;\n    my $i = 0;\n\
    \    my $j = 0;\n    my $min = 0;\n    my $max = 0;\n    my $min_index = 0;\n\
    \    my $max_index = 0;\n    my $list_length = scalar @list;\n    while ($i <\
    \ $list_length) {\n        $min = $list[0];\n        $max = $list[0];\n      \
    \  $min_index = 0;\n        $max_index = 0;\n        $j = 0;\n        while ($j\
    \ < $list_length) {\n            if ($list[$j] < $min) {\n                $min\
    \ = $list[$j];\n                $min_index = $j;\n            }\n            if\
    \ ($list[$j] > $max) {\n                $max = $list[$j];\n                $max_index\
    \ = $j;\n            }\n            $j++;\n        }\n        if ($i % 2 == 0)\
    \ {\n            push @sorted_list, $min;\n            splice @list, $min_index,\
    \ 1;\n        } else {\n            push @sorted_list, $max;\n            splice\
    \ @list, $max_index, 1;\n        }\n        $i++;\n    }\n    return @sorted_list;\n\
    }", "my @list = @_;\n    my @sorted_list;\n    my $i = 0;\n    while (@list) {\n\
    \        my $min = min(@list);\n        my $max = max(@list);\n        if ($i\
    \ % 2 == 0) {\n            push @sorted_list, $min;\n        } else {\n      \
    \      push @sorted_list, $max;\n        }\n        @list = grep { $_ != $min\
    \ && $_ != $max } @list;\n        $i++;\n    }\n    return @sorted_list;\n}",
  "my @list = @_;\n    my @sorted_list;\n    my $min = min @list;\n    my $max = max\
    \ @list;\n    my $min_index = first_index { $_ == $min } @list;\n    my $max_index\
    \ = first_index { $_ == $max } @list;\n    push @sorted_list, $min;\n    push\
    \ @sorted_list, $max;\n    splice @list, $min_index, 1;\n    splice @list, $max_index,\
    \ 1;\n    while (@list) {\n        $min = min @list;\n        $max = max @list;\n\
    \        $min_index = first_index { $_ == $min } @list;\n        $max_index =\
    \ first_index { $_ == $max } @list;\n        push @sorted_list, $min;\n      \
    \  push @sorted_list, $max;\n        splice @list, $min_index, 1;\n        splice\
    \ @list, $max_index, 1;\n    }\n    return @sorted_list;\n}", "my $list = shift;\n\
    \    my @sorted = sort { $a <=> $b } @$list;\n    my $i = 0;\n    my $j = $#sorted;\n\
    \    my @result;\n    while ($i <= $j) {\n        push @result, $sorted[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            push @result, $sorted[$j];\n\
    \            $j--;\n        }\n    }\n    return @result;\n}", "my @list = @_;\n\
    \    my @sorted;\n    my $min = min @list;\n    my $max = max @list;\n    my $i\
    \ = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n            push @sorted,\
    \ $min;\n            @list = grep { $_ != $min } @list;\n            $min = min\
    \ @list;\n        } else {\n            push @sorted, $max;\n            @list\
    \ = grep { $_ != $max } @list;\n            $max = max @list;\n        }\n   \
    \     $i++;\n    }\n    return @sorted;\n}", "my @list = @_;\n    my @result;\n\
    \    my $min = min @list;\n    my $max = max @list;\n    my $min_index = first_index\
    \ { $_ == $min } @list;\n    my $max_index = first_index { $_ == $max } @list;\n\
    \    my $min_count = grep { $_ == $min } @list;\n    my $max_count = grep { $_\
    \ == $max } @list;\n    my $min_flag = 0;\n    my $max_flag = 0;\n    my $min_index_flag\
    \ = 0;\n    my $max_index_flag = 0;\n    while (@list) {\n        if ($min_flag\
    \ < $min_count) {\n            push @result, $min;\n            $min_flag++;\n\
    \        }\n        if ($max_flag < $max_count) {\n            push @result, $max;\n\
    \            $max_flag++;\n        }\n        if ($min_index_flag < $min_count)\
    \ {\n            splice @list, $min_index, 1;\n            $min_index_flag++;\n\
    \        }\n        if ($max_index_flag < $max_count) {\n            splice @list,\
    \ $max_index, 1;\n            $max_index_flag++;\n        }\n        $min = min\
    \ @list;\n        $max = max @list;\n        $min_index = first_index { $_ ==\
    \ $min } @list;\n        $max_index = first_index { $_ == $max } @list;\n    \
    \    $min_count = grep { $_ == $min } @list;\n        $max_count = grep { $_ ==\
    \ $max } @list;\n        $min_flag = 0;\n        $max_flag = 0;\n        $min_index_flag\
    \ = 0;\n        $max_index_flag = 0;\n    }\n    return @result;\n}", "my @list\
    \ = @_;\n    my @sorted;\n    my $i = 0;\n    while (@list) {\n        if ($i\
    \ % 2 == 0) {\n            push @sorted, shift @list;\n        } else {\n    \
    \        push @sorted, pop @list;\n        }\n        $i++;\n    }\n    return\
    \ @sorted;\n}", "my @list = @_;\n    my @sorted;\n    my $i = 0;\n    while (@list)\
    \ {\n        my $min = min @list;\n        my $max = max @list;\n        if ($i\
    \ % 2 == 0) {\n            push @sorted, $min;\n            @list = grep { $_\
    \ != $min } @list;\n        } else {\n            push @sorted, $max;\n      \
    \      @list = grep { $_ != $max } @list;\n        }\n        $i++;\n    }\n \
    \   return @sorted;\n}", "my @array = @_;\n    my @result = ();\n    my @sorted\
    \ = sort { $a <=> $b } @array;\n    my $i = 0;\n    while (@sorted) {\n      \
    \  if ($i % 2 == 0) {\n            push @result, shift @sorted;\n        } else\
    \ {\n            push @result, pop @sorted;\n        }\n        $i++;\n    }\n\
    \    return @result;\n}", "my $list = shift;\n    my @sorted = sort { $a <=> $b\
    \ } @$list;\n    my $i = 0;\n    my $j = $#sorted;\n    my @result;\n    while\
    \ ($i <= $j) {\n        push @result, $sorted[$i];\n        $i++;\n        if\
    \ ($i <= $j) {\n            push @result, $sorted[$j];\n            $j--;\n  \
    \      }\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @result;\n\
    \    my $i = 0;\n    my $j = scalar @list - 1;\n    while ($i <= $j) {\n     \
    \   push @result, $list[$i];\n        $i++;\n        push @result, $list[$j] if\
    \ $i <= $j;\n        $j--;\n    }\n    return @result;\n}", "my @list = @_;\n\
    \    my @result;\n    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0)\
    \ {\n            push @result, shift @list;\n        } else {\n            push\
    \ @result, pop @list;\n        }\n        $i++;\n    }\n    return @result;\n}",
  "my @list = @_;\n    my @sorted_list;\n    my $i = 0;\n    while (@list) {\n   \
    \     if ($i % 2 == 0) {\n            push @sorted_list, shift @list;\n      \
    \  } else {\n            push @sorted_list, pop @list;\n        }\n        $i++;\n\
    \    }\n    return @sorted_list;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $min = min @list;\n    my $max = max @list;\n    my $i = 0;\n    while\
    \ (@list) {\n        if ($i % 2 == 0) {\n            push @sorted_list, $min;\n\
    \            @list = grep { $_ != $min } @list;\n            $min = min @list;\n\
    \        } else {\n            push @sorted_list, $max;\n            @list = grep\
    \ { $_ != $max } @list;\n            $max = max @list;\n        }\n        $i++;\n\
    \    }\n    return @sorted_list;\n}", "my @list = @_;\n    my @result;\n    my\
    \ $i = 0;\n    my $j = @list - 1;\n    while ($i <= $j) {\n        push @result,\
    \ $list[$i];\n        $i++;\n        if ($i <= $j) {\n            push @result,\
    \ $list[$j];\n            $j--;\n        }\n    }\n    return @result;\n}", "my\
    \ @list = @_;\n    my @sorted_list;\n    my $i = 0;\n    while (@list) {\n   \
    \     if ($i % 2 == 0) {\n            push @sorted_list, shift @list;\n      \
    \  } else {\n            push @sorted_list, pop @list;\n        }\n        $i++;\n\
    \    }\n    return @sorted_list;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n           \
    \ push @sorted_list, min(@list);\n        } else {\n            push @sorted_list,\
    \ max(@list);\n        }\n        $i++;\n    }\n    return @sorted_list;\n}",
  "my ($arr) = @_;\n    my @sorted = sort { $a <=> $b } @$arr;\n    my @result;\n\
    \    my $i = 0;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        if (@sorted) {\n            push @result, pop @sorted;\n        }\n \
    \   }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n    my\
    \ $min = min @list;\n    my $max = max @list;\n    my $i = 0;\n    while (@list)\
    \ {\n        if ($i % 2 == 0) {\n            push @sorted_list, $min;\n      \
    \      @list = grep { $_ != $min } @list;\n            $min = min @list;\n   \
    \     } else {\n            push @sorted_list, $max;\n            @list = grep\
    \ { $_ != $max } @list;\n            $max = max @list;\n        }\n        $i++;\n\
    \    }\n    return @sorted_list;\n}", "my @list = @_;\n    my @result;\n    my\
    \ $min = min @list;\n    my $max = max @list;\n    my $i = 0;\n    while (@list)\
    \ {\n        if ($i % 2 == 0) {\n            push @result, $min;\n           \
    \ @list = grep { $_ != $min } @list;\n            $min = min @list;\n        }\
    \ else {\n            push @result, $max;\n            @list = grep { $_ != $max\
    \ } @list;\n            $max = max @list;\n        }\n        $i++;\n    }\n \
    \   return @result;\n}", "my $list = shift;\n    my @sorted_list;\n    my @sorted_list_copy\
    \ = sort { $a <=> $b } @$list;\n    my $i = 0;\n    while (@sorted_list_copy)\
    \ {\n        push @sorted_list, shift @sorted_list_copy if $i % 2 == 0;\n    \
    \    push @sorted_list, pop @sorted_list_copy if $i % 2 == 1;\n        $i++;\n\
    \    }\n    return \\@sorted_list;\n}", "my ($arr) = @_;\n    my @res;\n    my\
    \ @sorted = sort { $a <=> $b } @$arr;\n    my $i = 0;\n    my $j = $#sorted;\n\
    \    while ($i <= $j) {\n        push @res, $sorted[$i];\n        $i++;\n    \
    \    push @res, $sorted[$j] if $i <= $j;\n        $j--;\n    }\n    return \\\
    @res;\n}", "my @list = @_;\n    my @result;\n    my $i = 0;\n    while (@list)\
    \ {\n        my $min = min @list;\n        my $max = max @list;\n        if ($i\
    \ % 2 == 0) {\n            push @result, $min;\n            @list = grep { $_\
    \ != $min } @list;\n        } else {\n            push @result, $max;\n      \
    \      @list = grep { $_ != $max } @list;\n        }\n        $i++;\n    }\n \
    \   return @result;\n}", "my @list = @_;\n    my @sorted;\n    my $i = 0;\n  \
    \  while (@list) {\n        if ($i % 2 == 0) {\n            push @sorted, shift\
    \ @list;\n        } else {\n            push @sorted, pop @list;\n        }\n\
    \        $i++;\n    }\n    return @sorted;\n}", "my ($list) = @_;\n    my @sorted\
    \ = sort { $a <=> $b } @$list;\n    my $i = 0;\n    my $j = $#sorted;\n    my\
    \ @result;\n    while ($i <= $j) {\n        push @result, $sorted[$i];\n     \
    \   $i++;\n        if ($i <= $j) {\n            push @result, $sorted[$j];\n \
    \           $j--;\n        }\n    }\n    return \\@result;\n}", "my ($list) =\
    \ @_;\n    my @result;\n    my @sorted = sort { $a <=> $b } @$list;\n    my $i\
    \ = 0;\n    while (@sorted) {\n        push @result, shift @sorted;\n        push\
    \ @result, pop @sorted if @sorted;\n    }\n    return \\@result;\n}", "my @list\
    \ = @_;\n    my @result;\n    my $i = 0;\n    my $j = $#list;\n    while ($i <=\
    \ $j) {\n        push @result, $list[$i];\n        $i++;\n        push @result,\
    \ $list[$j] if $i <= $j;\n        $j--;\n    }\n    return @result;\n}", "my @list\
    \ = @_;\n    my @sorted_list;\n    my $min = min(@list);\n    my $max = max(@list);\n\
    \    my $min_index = first_index { $_ == $min } @list;\n    my $max_index = first_index\
    \ { $_ == $max } @list;\n    push @sorted_list, $min;\n    push @sorted_list,\
    \ $max;\n    splice @list, $min_index, 1;\n    splice @list, $max_index, 1;\n\
    \    while (@list) {\n        $min = min(@list);\n        $max = max(@list);\n\
    \        $min_index = first_index { $_ == $min } @list;\n        $max_index =\
    \ first_index { $_ == $max } @list;\n        push @sorted_list, $min;\n      \
    \  push @sorted_list, $max;\n        splice @list, $min_index, 1;\n        splice\
    \ @list, $max_index, 1;\n    }\n    return @sorted_list;\n}", "my @list = @_;\n\
    \    my @result;\n    my $min = min(@list);\n    my $max = max(@list);\n    my\
    \ $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n            push @result,\
    \ $min;\n            @list = grep { $_ != $min } @list;\n            $min = min(@list);\n\
    \        } else {\n            push @result, $max;\n            @list = grep {\
    \ $_ != $max } @list;\n            $max = max(@list);\n        }\n        $i++;\n\
    \    }\n    return @result;\n}", "my @list = @_;\n    my @result;\n    my $min_index\
    \ = 0;\n    my $max_index = 0;\n    my $min = $list[0];\n    my $max = $list[0];\n\
    \    for (my $i = 0; $i < @list; $i++) {\n        if ($list[$i] < $min) {\n  \
    \          $min = $list[$i];\n            $min_index = $i;\n        }\n      \
    \  if ($list[$i] > $max) {\n            $max = $list[$i];\n            $max_index\
    \ = $i;\n        }\n    }\n    push @result, $min;\n    push @result, $max;\n\
    \    splice @list, $min_index, 1;\n    splice @list, $max_index, 1;\n    while\
    \ (@list) {\n        $min = $list[0];\n        $max = $list[0];\n        $min_index\
    \ = 0;\n        $max_index = 0;\n        for (my $i = 0; $i < @list; $i++) {\n\
    \            if ($list[$i] < $min) {\n                $min = $list[$i];\n    \
    \            $min_index = $i;\n            }\n            if ($list[$i] > $max)\
    \ {\n                $max = $list[$i];\n                $max_index = $i;\n   \
    \         }\n        }\n        push @result, $min;\n        push @result, $max;\n\
    \        splice @list, $min_index, 1;\n        splice @list, $max_index, 1;\n\
    \    }\n    return @result;\n}", "my @list = @_;\n    my @sorted;\n    my $i =\
    \ 0;\n    while (@list) {\n        my $min = min @list;\n        my $max = max\
    \ @list;\n        if ($i % 2 == 0) {\n            push @sorted, $min;\n      \
    \      @list = grep { $_ != $min } @list;\n        } else {\n            push\
    \ @sorted, $max;\n            @list = grep { $_ != $max } @list;\n        }\n\
    \        $i++;\n    }\n    return @sorted;\n}", "my ($list) = @_;\n    my @sorted\
    \ = sort { $a <=> $b } @$list;\n    my @result;\n    my $i = 0;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted if\
    \ @sorted;\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted;\n\
    \    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n           \
    \ push @sorted, min(@list);\n        } else {\n            push @sorted, max(@list);\n\
    \        }\n        $i++;\n    }\n    return @sorted;\n}", "my $arr = shift;\n\
    \    my @res;\n    my $i = 0;\n    while (@$arr) {\n        if ($i % 2 == 0) {\n\
    \            push @res, shift @$arr;\n        } else {\n            push @res,\
    \ pop @$arr;\n        }\n        $i++;\n    }\n    return \\@res;\n}", "my ($list)\
    \ = @_;\n    my @sorted = sort { $a <=> $b } @$list;\n    my @result;\n    my\
    \ $i = 0;\n    my $j = $#sorted;\n    while ($i <= $j) {\n        push @result,\
    \ $sorted[$i];\n        $i++;\n        if ($i <= $j) {\n            push @result,\
    \ $sorted[$j];\n            $j--;\n        }\n    }\n    return \\@result;\n}",
  "my $list = shift;\n    my @sorted = sort { $a <=> $b } @$list;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "my $list = shift;\n    my @sorted\
    \ = sort { $a <=> $b } @$list;\n    my @result;\n    while (@sorted) {\n     \
    \   push @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n\
    \    return \\@result;\n}", "my ($arr) = @_;\n    my @sorted = sort { $a <=> $b\
    \ } @$arr;\n    my @result;\n    my $i = 0;\n    my $j = $#sorted;\n    while\
    \ ($i <= $j) {\n        push @result, $sorted[$i];\n        $i++;\n        if\
    \ ($i <= $j) {\n            push @result, $sorted[$j];\n            $j--;\n  \
    \      }\n    }\n    return \\@result;\n}", "my $list = shift;\n    my @sorted\
    \ = sort { $a <=> $b } @$list;\n    my @result;\n    while (@sorted) {\n     \
    \   push @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n\
    \    return \\@result;\n}", "my @list = @_;\n    my @result;\n    my $min = min\
    \ @list;\n    my $max = max @list;\n    my $i = 0;\n    while (@list) {\n    \
    \    if ($i % 2 == 0) {\n            push @result, $min;\n            @list =\
    \ grep {$_ != $min} @list;\n            $min = min @list;\n        } else {\n\
    \            push @result, $max;\n            @list = grep {$_ != $max} @list;\n\
    \            $max = max @list;\n        }\n        $i++;\n    }\n    return @result;\n\
    }", "my ($arr) = @_;\n    my @sorted = sort { $a <=> $b } @$arr;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "my ($arr) = @_;\n    my @sorted\
    \ = sort { $a <=> $b } @$arr;\n    my @res;\n    while (@sorted) {\n        push\
    \ @res, shift @sorted;\n        push @res, pop @sorted;\n    }\n    return \\\
    @res;\n}", "my @list = @_;\n    my @result;\n    my @sorted = sort { $a <=> $b\
    \ } @list;\n    my $i = 0;\n    my $j = $#sorted;\n    while ($i <= $j) {\n  \
    \      push @result, $sorted[$i];\n        $i++;\n        if ($i <= $j) {\n  \
    \          push @result, $sorted[$j];\n            $j--;\n        }\n    }\n \
    \   return @result;\n}", "my @list = @_;\n    my @result;\n    my $i = 0;\n  \
    \  while (@list) {\n        my $min = min @list;\n        my $max = max @list;\n\
    \        if ($i % 2 == 0) {\n            push @result, $min;\n            @list\
    \ = grep { $_ != $min } @list;\n        } else {\n            push @result, $max;\n\
    \            @list = grep { $_ != $max } @list;\n        }\n        $i++;\n  \
    \  }\n    return @result;\n}", "my @list = @_;\n    my @sorted_list;\n    my $i\
    \ = 0;\n    my $j = $#list;\n    while ($i <= $j) {\n        push @sorted_list,\
    \ $list[$i];\n        $i++;\n        if ($i <= $j) {\n            push @sorted_list,\
    \ $list[$j];\n            $j--;\n        }\n    }\n    return @sorted_list;\n}",
  "my @list = @_;\n    my @result;\n    my $min;\n    my $max;\n    my $min_index;\n\
    \    my $max_index;\n    my $i = 0;\n    while (@list) {\n        $min = $list[0];\n\
    \        $max = $list[0];\n        $min_index = 0;\n        $max_index = 0;\n\
    \        for (my $j = 0; $j < @list; $j++) {\n            if ($list[$j] < $min)\
    \ {\n                $min = $list[$j];\n                $min_index = $j;\n   \
    \         }\n            if ($list[$j] > $max) {\n                $max = $list[$j];\n\
    \                $max_index = $j;\n            }\n        }\n        if ($i %\
    \ 2 == 0) {\n            push @result, $min;\n            splice @list, $min_index,\
    \ 1;\n        } else {\n            push @result, $max;\n            splice @list,\
    \ $max_index, 1;\n        }\n        $i++;\n    }\n    return @result;\n}", "my\
    \ $list = shift;\n    my @sorted_list;\n    my $min = min(@$list);\n    my $max\
    \ = max(@$list);\n    my $i = 0;\n    while ($i < @$list) {\n        if ($i %\
    \ 2 == 0) {\n            push @sorted_list, $min;\n            $min = min(grep\
    \ { $_ != $min } @$list);\n        } else {\n            push @sorted_list, $max;\n\
    \            $max = max(grep { $_ != $max } @$list);\n        }\n        $i++;\n\
    \    }\n    return \\@sorted_list;\n}", "my @list = @_;\n    my @result;\n   \
    \ my @min;\n    my @max;\n    my $min;\n    my $max;\n    my $i = 0;\n    my $j\
    \ = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my\
    \ $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n  \
    \  my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n\
    \    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n\
    \    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n\
    \    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n\
    \    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n\
    \    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n\
    \    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n\
    \    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n\
    \    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n   ", "my @list = @_;\n    my\
    \ @result;\n    my $i = 0;\n    while (@list) {\n        my $min = min @list;\n\
    \        my $max = max @list;\n        if ($i % 2 == 0) {\n            push @result,\
    \ $min;\n            @list = grep { $_ != $min } @list;\n        } else {\n  \
    \          push @result, $max;\n            @list = grep { $_ != $max } @list;\n\
    \        }\n        $i++;\n    }\n    return @result;\n}", "my @list = @_;\n \
    \   my @result;\n    my $i = 0;\n    while (@list) {\n        my $min = min @list;\n\
    \        my $max = max @list;\n        if ($i % 2 == 0) {\n            push @result,\
    \ $min;\n            @list = grep { $_ != $min } @list;\n        } else {\n  \
    \          push @result, $max;\n            @list = grep { $_ != $max } @list;\n\
    \        }\n        $i++;\n    }\n    return @result;\n}", "my $arr = shift;\n\
    \    my @sorted = sort { $a <=> $b } @$arr;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted;\n\
    \    }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n   \
    \ my $min = min(@list);\n    my $max = max(@list);\n    my $min_index = first_index\
    \ { $_ == $min } @list;\n    my $max_index = first_index { $_ == $max } @list;\n\
    \    push @sorted_list, $min;\n    push @sorted_list, $max;\n    splice @list,\
    \ $min_index, 1;\n    splice @list, $max_index, 1;\n    while (@list) {\n    \
    \    $min = min(@list);\n        $max = max(@list);\n        $min_index = first_index\
    \ { $_ == $min } @list;\n        $max_index = first_index { $_ == $max } @list;\n\
    \        push @sorted_list, $min;\n        push @sorted_list, $max;\n        splice\
    \ @list, $min_index, 1;\n        splice @list, $max_index, 1;\n    }\n    return\
    \ @sorted_list;\n}", "my @list = @_;\n    my @result;\n    my $i = 0;\n    my\
    \ $j = $#list;\n    my $k = 0;\n    while ($i <= $j) {\n        $result[$k++]\
    \ = $list[$i++];\n        $result[$k++] = $list[$j--] if $i <= $j;\n    }\n  \
    \  return @result;\n}", "my @arr = @_;\n    my @res;\n    my $i = 0;\n    my $j\
    \ = scalar @arr - 1;\n    while ($i <= $j) {\n        push @res, $arr[$i];\n \
    \       $i++;\n        if ($i <= $j) {\n            push @res, $arr[$j];\n   \
    \         $j--;\n        }\n    }\n    return @res;\n}", "my @list = @_;\n   \
    \ my @result;\n    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n\
    \            push @result, shift @list;\n        } else {\n            push @result,\
    \ pop @list;\n        }\n        $i++;\n    }\n    return @result;\n}", "my ($arr)\
    \ = @_;\n    my @sorted_arr = sort { $a <=> $b } @$arr;\n    my @result;\n   \
    \ my $i = 0;\n    my $j = $#sorted_arr;\n    while ($i <= $j) {\n        push\
    \ @result, $sorted_arr[$i];\n        $i++;\n        if ($i <= $j) {\n        \
    \    push @result, $sorted_arr[$j];\n            $j--;\n        }\n    }\n   \
    \ return \\@result;\n}", "my ($arr) = @_;\n    my @sorted = sort { $a <=> $b }\
    \ @$arr;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "my @list = @_;\n    my @sorted_list;\n    my $i = 0;\n    my $j = scalar\
    \ @list - 1;\n    while ($i <= $j) {\n        push @sorted_list, $list[$i];\n\
    \        $i++;\n        push @sorted_list, $list[$j] if $i <= $j;\n        $j--;\n\
    \    }\n    return @sorted_list;\n}", "my @list = @_;\n    my @result;\n    my\
    \ $i = 0;\n    while (@list) {\n        my $min = min @list;\n        my $max\
    \ = max @list;\n        if ($i % 2 == 0) {\n            push @result, $min;\n\
    \            @list = grep { $_ != $min } @list;\n        } else {\n          \
    \  push @result, $max;\n            @list = grep { $_ != $max } @list;\n     \
    \   }\n        $i++;\n    }\n    return @result;\n}", "my @list = @_;\n    my\
    \ @sorted_list;\n    my $min = min(@list);\n    my $max = max(@list);\n    my\
    \ $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n            push @sorted_list,\
    \ $min;\n            @list = grep { $_ != $min } @list;\n            $min = min(@list);\n\
    \        } else {\n            push @sorted_list, $max;\n            @list = grep\
    \ { $_ != $max } @list;\n            $max = max(@list);\n        }\n        $i++;\n\
    \    }\n    return @sorted_list;\n}", "my ($list) = @_;\n    my @sorted = sort\
    \ { $a <=> $b } @$list;\n    my @result;\n    my $i = 0;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted if\
    \ @sorted;\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted;\n\
    \    my $min = min(@list);\n    my $max = max(@list);\n    my $i = 0;\n    while\
    \ (@list) {\n        if ($i % 2 == 0) {\n            push @sorted, $min;\n   \
    \         @list = grep { $_ != $min } @list;\n            $min = min(@list);\n\
    \        } else {\n            push @sorted, $max;\n            @list = grep {\
    \ $_ != $max } @list;\n            $max = max(@list);\n        }\n        $i++;\n\
    \    }\n    return @sorted;\n}", "my @list = @_;\n    my @sorted;\n    my @min;\n\
    \    my @max;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n\
    \    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n\
    \    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n\
    \    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n\
    \    my $g = 0;\n    my $h = 0;\n    my $i1 = 0;\n    my $j1 = 0;\n    my $k1\
    \ = 0;\n    my $l1 = 0;\n    my $m1 = 0;\n    my $n1 = 0;\n    my $o1 = 0;\n \
    \   my $p1 = 0;\n    my $q1 = 0;\n    my $r1 = 0;\n    my $s1 = 0;\n    my $t1\
    \ = 0;\n    my $u1 = 0;\n    my $v1 = 0;\n    my $w1 = 0;\n    my $x1 = 0;\n \
    \   my $y1 = 0;\n    my $z1 = 0;\n    my $a1 = 0;\n    my $b1 = 0;\n    my $c1\
    \ = 0;\n    my $d1 = 0;\n    my $e1 = 0;\n    my $f1 = 0;\n    my $g1 = 0;\n \
    \   my $h1 = 0;\n    my $i2 = 0;\n    my $j2 = 0;\n    my $k2 = 0;\n    my $l2\
    \ = 0;\n    my $m2 =", "my ($arr) = @_;\n    my @sorted = sort { $a <=> $b } @$arr;\n\
    \    my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "my $array\
    \ = shift;\n    my @result;\n    my $i = 0;\n    my $j = scalar @$array - 1;\n\
    \    while ($i <= $j) {\n        push @result, $array->[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            push @result, $array->[$j];\n          \
    \  $j--;\n        }\n    }\n    return \\@result;\n}", "my @list = @_;\n    my\
    \ @result;\n    my $i = 0;\n    while (@list) {\n        my $min = min @list;\n\
    \        my $max = max @list;\n        if ($i % 2 == 0) {\n            push @result,\
    \ $min;\n            @list = grep { $_ != $min } @list;\n        } else {\n  \
    \          push @result, $max;\n            @list = grep { $_ != $max } @list;\n\
    \        }\n        $i++;\n    }\n    return @result;\n}", "my @list = @_;\n \
    \   my @result;\n    my $i = 0;\n    while (@list) {\n        my $min = min @list;\n\
    \        my $max = max @list;\n        if ($i % 2 == 0) {\n            push @result,\
    \ $min;\n            @list = grep { $_ != $min } @list;\n        } else {\n  \
    \          push @result, $max;\n            @list = grep { $_ != $max } @list;\n\
    \        }\n        $i++;\n    }\n    return @result;\n}", "my ($list) = @_;\n\
    \    my @sorted_list = sort { $a <=> $b } @$list;\n    my @result;\n    while\
    \ (@sorted_list) {\n        push @result, shift @sorted_list;\n        push @result,\
    \ pop @sorted_list if @sorted_list;\n    }\n    return \\@result;\n}", "my @list\
    \ = @_;\n    my @result;\n    my $i = 0;\n    my $j = scalar @list - 1;\n    while\
    \ ($i <= $j) {\n        push @result, $list[$i];\n        $i++;\n        if ($i\
    \ <= $j) {\n            push @result, $list[$j];\n            $j--;\n        }\n\
    \    }\n    return @result;\n}", "my $list = shift;\n    my @sorted_list;\n  \
    \  my $min = min @$list;\n    my $max = max @$list;\n    my $i = 0;\n    while\
    \ ($i < scalar @$list) {\n        if ($i % 2 == 0) {\n            push @sorted_list,\
    \ $min;\n            $min = min @$list;\n        } else {\n            push @sorted_list,\
    \ $max;\n            $max = max @$list;\n        }\n        $i++;\n    }\n   \
    \ return @sorted_list;\n}", "my @list = @_;\n    my @result;\n    my $min = min\
    \ @list;\n    my $max = max @list;\n    my $min_index = first_index { $_ == $min\
    \ } @list;\n    my $max_index = first_index { $_ == $max } @list;\n    my $min_flag\
    \ = 1;\n    my $max_flag = 0;\n    while (@list) {\n        if ($min_flag) {\n\
    \            push @result, $min;\n            splice @list, $min_index, 1;\n \
    \           $min_flag = 0;\n            $max_flag = 1;\n        }\n        elsif\
    \ ($max_flag) {\n            push @result, $max;\n            splice @list, $max_index,\
    \ 1;\n            $max_flag = 0;\n            $min_flag = 1;\n        }\n    \
    \    $min = min @list;\n        $max = max @list;\n        $min_index = first_index\
    \ { $_ == $min } @list;\n        $max_index = first_index { $_ == $max } @list;\n\
    \    }\n    return @result;\n}", "my @list = @_;\n    my @sorted_list;\n    my\
    \ $min = min(@list);\n    my $max = max(@list);\n    my $min_index = first_index\
    \ { $_ == $min } @list;\n    my $max_index = first_index { $_ == $max } @list;\n\
    \    my $min_index_2 = first_index { $_ == $min } @list[$min_index + 1 .. $#list];\n\
    \    my $max_index_2 = first_index { $_ == $max } @list[$max_index + 1 .. $#list];\n\
    \    my $min_index_3 = first_index { $_ == $min } @list[$min_index_2 + 1 .. $#list];\n\
    \    my $max_index_3 = first_index { $_ == $max } @list[$max_index_2 + 1 .. $#list];\n\
    \    my $min_index_4 = first_index { $_ == $min } @list[$min_index_3 + 1 .. $#list];\n\
    \    my $max_index_4 = first_index { $_ == $max } @list[$max_index_3 + 1 .. $#list];\n\
    \    my $min_index_5 = first_index { $_ == $min } @list[$min_index_4 + 1 .. $#list];\n\
    \    my $max_index_5 = first_index { $_ == $max } @list[$max_index_4 + 1 .. $#list];\n\
    \    my $min_index_6 = first_index { $_ == $min } @list[$min_index_5 + 1 .. $#list];\n\
    \    my $max_index_6 = first_index { $_ == $max } @list[$max_index_5 + 1 .. $#list];\n\
    \    my $min_index_7 = first_index { $_ == $min } @list[$min_index_6 + 1 .. $#list];\n\
    \    my $max_index_7 = first_index { $_ == $max } @list[$max_index_6 + 1 .. $#list];\n\
    \    my $min_index_8 = first_index { $_ == $", "my $list = shift;\n    my @sorted_list;\n\
    \    my $min = min(@$list);\n    my $max = max(@$list);\n    my $min_index = first_index\
    \ {$_ == $min} @$list;\n    my $max_index = first_index {$_ == $max} @$list;\n\
    \    push @sorted_list, $min;\n    push @sorted_list, $max;\n    splice @$list,\
    \ $min_index, 1;\n    splice @$list, $max_index, 1;\n    while (@$list) {\n  \
    \      $min = min(@$list);\n        $max = max(@$list);\n        $min_index =\
    \ first_index {$_ == $min} @$list;\n        $max_index = first_index {$_ == $max}\
    \ @$list;\n        push @sorted_list, $min;\n        push @sorted_list, $max;\n\
    \        splice @$list, $min_index, 1;\n        splice @$list, $max_index, 1;\n\
    \    }\n    return \\@sorted_list;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my @min_list;\n    my @max_list;\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n  \
    \  my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd\
    \ = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n \
    \   my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm\
    \ = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n \
    \   my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv\
    \ = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n \
    \   my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my\
    \ $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii\
    \ = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n\
    \    my $nnn = 0;\n    my $ooo =", "my $arr = shift;\n    my @sorted = sort {\
    \ $a <=> $b } @$arr;\n    my @result;\n    while (@sorted) {\n        push @result,\
    \ shift @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "my @list = @_;\n    my @result;\n    my $i = 0;\n    while (@list) {\n  \
    \      if ($i % 2 == 0) {\n            push @result, shift @list;\n        } else\
    \ {\n            push @result, pop @list;\n        }\n        $i++;\n    }\n \
    \   return @result;\n}", "my @list = @_;\n    my @sorted_list;\n    my $i = 0;\n\
    \    my $j = scalar @list - 1;\n    my $k = 0;\n    while ($i <= $j) {\n     \
    \   $sorted_list[$k++] = $list[$i++];\n        $sorted_list[$k++] = $list[$j--]\
    \ if $i <= $j;\n    }\n    return @sorted_list;\n}", "my @list = @_;\n    my @result;\n\
    \    while (@list) {\n        push @result, shift @list;\n        push @result,\
    \ pop @list;\n    }\n    return @result;\n}", "my $array = shift;\n    my @sorted_array;\n\
    \    my $min = min(@$array);\n    my $max = max(@$array);\n    my $min_index =\
    \ 0;\n    my $max_index = 0;\n    my $i = 0;\n    while ($i < scalar @$array)\
    \ {\n        if ($i % 2 == 0) {\n            $min_index = first_index { $_ ==\
    \ $min } @$array;\n            push @sorted_array, $min;\n            splice @$array,\
    \ $min_index, 1;\n            $min = min(@$array);\n        } else {\n       \
    \     $max_index = first_index { $_ == $max } @$array;\n            push @sorted_array,\
    \ $max;\n            splice @$array, $max_index, 1;\n            $max = max(@$array);\n\
    \        }\n        $i++;\n    }\n    return \\@sorted_array;\n}", "my $arr =\
    \ shift;\n    my @sorted = sort { $a <=> $b } @$arr;\n    my @result;\n    while\
    \ (@sorted) {\n        push @result, shift @sorted;\n        push @result, pop\
    \ @sorted;\n    }\n    return \\@result;\n}", "my ($arr) = @_;\n    my @sorted\
    \ = sort { $a <=> $b } @$arr;\n    my @result;\n    my $i = 0;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted if\
    \ @sorted;\n    }\n    return \\@result;\n}", "my $list = shift;\n    my @sorted_list;\n\
    \    my $min = min @$list;\n    my $max = max @$list;\n    my $min_index = first_index\
    \ { $_ == $min } @$list;\n    my $max_index = first_index { $_ == $max } @$list;\n\
    \    push @sorted_list, $min;\n    push @sorted_list, $max;\n    splice @$list,\
    \ $min_index, 1;\n    splice @$list, $max_index, 1;\n    while (@$list) {\n  \
    \      $min = min @$list;\n        $max = max @$list;\n        $min_index = first_index\
    \ { $_ == $min } @$list;\n        $max_index = first_index { $_ == $max } @$list;\n\
    \        push @sorted_list, $min;\n        push @sorted_list, $max;\n        splice\
    \ @$list, $min_index, 1;\n        splice @$list, $max_index, 1;\n    }\n    return\
    \ \\@sorted_list;\n}", "my $list = shift;\n    my @sorted = sort { $a <=> $b }\
    \ @$list;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "my $list = shift;\n    my @sorted_list;\n    my @sorted_list_copy = sort\
    \ { $a <=> $b } @$list;\n    my $i = 0;\n    while (@sorted_list_copy) {\n   \
    \     if ($i % 2 == 0) {\n            push @sorted_list, shift @sorted_list_copy;\n\
    \        } else {\n            push @sorted_list, pop @sorted_list_copy;\n   \
    \     }\n        $i++;\n    }\n    return \\@sorted_list;\n}", "my @list = @_;\n\
    \    my @result;\n    my $min = min @list;\n    my $max = max @list;\n    my $i\
    \ = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n            push @result,\
    \ $min;\n            @list = grep { $_ != $min } @list;\n            $min = min\
    \ @list;\n        } else {\n            push @result, $max;\n            @list\
    \ = grep { $_ != $max } @list;\n            $max = max @list;\n        }\n   \
    \     $i++;\n    }\n    return @result;\n}", "my @list = @_;\n    my @result;\n\
    \    my $i = 0;\n    while (@list) {\n        my $min = min @list;\n        my\
    \ $max = max @list;\n        if ($i % 2 == 0) {\n            push @result, $min;\n\
    \            @list = grep { $_ != $min } @list;\n        } else {\n          \
    \  push @result, $max;\n            @list = grep { $_ != $max } @list;\n     \
    \   }\n        $i++;\n    }\n    return @result;\n}", "my $list = shift;\n   \
    \ my @sorted = sort { $a <=> $b } @$list;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted if\
    \ @sorted;\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $min = min @list;\n    my $max = max @list;\n    my $min_index = first_index\
    \ { $_ == $min } @list;\n    my $max_index = first_index { $_ == $max } @list;\n\
    \    push @sorted_list, $min;\n    push @sorted_list, $max;\n    splice @list,\
    \ $min_index, 1;\n    splice @list, $max_index, 1;\n    while (@list) {\n    \
    \    $min = min @list;\n        $max = max @list;\n        $min_index = first_index\
    \ { $_ == $min } @list;\n        $max_index = first_index { $_ == $max } @list;\n\
    \        push @sorted_list, $min;\n        push @sorted_list, $max;\n        splice\
    \ @list, $min_index, 1;\n        splice @list, $max_index, 1;\n    }\n    return\
    \ @sorted_list;\n}", "my @array = @_;\n    my @result;\n    my $i = 0;\n    while\
    \ (@array) {\n        my $min = min(@array);\n        my $max = max(@array);\n\
    \        if ($i % 2 == 0) {\n            push @result, $min;\n        } else {\n\
    \            push @result, $max;\n        }\n        @array = grep { $_ != $min\
    \ && $_ != $max } @array;\n        $i++;\n    }\n    return @result;\n}", "my\
    \ @list = @_;\n    my @result;\n    my $i = 0;\n    my $j = scalar @list - 1;\n\
    \    while ($i <= $j) {\n        push @result, $list[$i];\n        $i++;\n   \
    \     if ($i <= $j) {\n            push @result, $list[$j];\n            $j--;\n\
    \        }\n    }\n    return @result;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n           \
    \ push @sorted_list, shift @list;\n        } else {\n            push @sorted_list,\
    \ pop @list;\n        }\n        $i++;\n    }\n    return @sorted_list;\n}", "my\
    \ @list = @_;\n    my @result;\n    my $i = 0;\n    my $j = $#list;\n    while\
    \ ($i <= $j) {\n        if ($i == $j) {\n            push @result, $list[$i];\n\
    \            last;\n        }\n        push @result, $list[$i];\n        push\
    \ @result, $list[$j];\n        $i++;\n        $j--;\n    }\n    return @result;\n\
    }", "my ($list) = @_;\n    my @sorted = sort { $a <=> $b } @$list;\n    my $length\
    \ = scalar @sorted;\n    my @result;\n    my $i = 0;\n    while ( $i < $length\
    \ ) {\n        if ( $i % 2 == 0 ) {\n            push @result, shift @sorted;\n\
    \        }\n        else {\n            push @result, pop @sorted;\n        }\n\
    \        $i++;\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @result;\n\
    \    my $min = min(@list);\n    my $max = max(@list);\n    my $i = 0;\n    while\
    \ (@list) {\n        if ($i % 2 == 0) {\n            push @result, $min;\n   \
    \         @list = grep { $_ != $min } @list;\n            $min = min(@list);\n\
    \        } else {\n            push @result, $max;\n            @list = grep {\
    \ $_ != $max } @list;\n            $max = max(@list);\n        }\n        $i++;\n\
    \    }\n    return @result;\n}", "my $arr = shift;\n    my @sorted_arr = sort\
    \ { $a <=> $b } @$arr;\n    my $i = 0;\n    my $j = $#sorted_arr;\n    my @result;\n\
    \    while ($i <= $j) {\n        push @result, $sorted_arr[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            push @result, $sorted_arr[$j];\n       \
    \     $j--;\n        }\n    }\n    return \\@result;\n}", "my $arr = shift;\n\
    \    my @sorted_arr = sort { $a <=> $b } @$arr;\n    my @res;\n    my $i = 0;\n\
    \    while (@sorted_arr) {\n        push @res, shift @sorted_arr;\n        push\
    \ @res, pop @sorted_arr if @sorted_arr;\n    }\n    return \\@res;\n}", "my $arr\
    \ = shift;\n    my @result;\n    my @sorted = sort { $a <=> $b } @$arr;\n    my\
    \ $i = 0;\n    while (@sorted) {\n        if ($i % 2 == 0) {\n            push\
    \ @result, shift @sorted;\n        } else {\n            push @result, pop @sorted;\n\
    \        }\n        $i++;\n    }\n    return \\@result;\n}", "my $list = shift;\n\
    \    my @sorted_list;\n    my $min = min(@$list);\n    my $max = max(@$list);\n\
    \    my $min_index = first_index {$_ == $min} @$list;\n    my $max_index = first_index\
    \ {$_ == $max} @$list;\n    push @sorted_list, $min;\n    push @sorted_list, $max;\n\
    \    splice @$list, $min_index, 1;\n    splice @$list, $max_index, 1;\n    while\
    \ (@$list) {\n        $min = min(@$list);\n        $max = max(@$list);\n     \
    \   $min_index = first_index {$_ == $min} @$list;\n        $max_index = first_index\
    \ {$_ == $max} @$list;\n        push @sorted_list, $min;\n        push @sorted_list,\
    \ $max;\n        splice @$list, $min_index, 1;\n        splice @$list, $max_index,\
    \ 1;\n    }\n    return \\@sorted_list;\n}", "my @list = @_;\n    my @sorted;\n\
    \    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n           \
    \ push @sorted, shift @list;\n        } else {\n            push @sorted, pop\
    \ @list;\n        }\n        $i++;\n    }\n    return @sorted;\n}", "my ($list)\
    \ = @_;\n    my @sorted = sort { $a <=> $b } @$list;\n    my @result;\n    while\
    \ (@sorted) {\n        push @result, shift @sorted;\n        push @result, pop\
    \ @sorted;\n    }\n    return \\@result;\n}", "my $arr = shift;\n    my @result;\n\
    \    my $i = 0;\n    my $j = scalar @$arr - 1;\n    while ($i <= $j) {\n     \
    \   push @result, $arr->[$i];\n        $i++;\n        push @result, $arr->[$j]\
    \ if $i <= $j;\n        $j--;\n    }\n    return \\@result;\n}", "my @list = @_;\n\
    \    my @sorted;\n    my $i = 0;\n    my $j = $#list;\n    while ($i <= $j) {\n\
    \        push @sorted, $list[$i];\n        $i++;\n        if ($i <= $j) {\n  \
    \          push @sorted, $list[$j];\n            $j--;\n        }\n    }\n   \
    \ return @sorted;\n}", "my $list = shift;\n    my @sorted = sort { $a <=> $b }\
    \ @$list;\n    my @result;\n    my $i = 0;\n    while (@sorted) {\n        push\
    \ @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n    return\
    \ \\@result;\n}", "my ($list) = @_;\n    my @sorted = sort { $a <=> $b } @$list;\n\
    \    my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "my @list\
    \ = @_;\n    my @sorted_list;\n    my $i = 0;\n    while (@list) {\n        if\
    \ ($i % 2 == 0) {\n            push @sorted_list, shift @list;\n        } else\
    \ {\n            push @sorted_list, pop @list;\n        }\n        $i++;\n   \
    \ }\n    return @sorted_list;\n}", "my @list = @_;\n    my @sorted_list;\n   \
    \ my $i = 0;\n    while (@list) {\n        my $min = min(@list);\n        my $max\
    \ = max(@list);\n        if ($i % 2 == 0) {\n            push @sorted_list, $min;\n\
    \        } else {\n            push @sorted_list, $max;\n        }\n        @list\
    \ = grep { $_ != $min && $_ != $max } @list;\n        $i++;\n    }\n    return\
    \ @sorted_list;\n}", "my ($arr) = @_;\n    my @sorted = sort { $a <=> $b } @$arr;\n\
    \    my @result;\n    my $i = 0;\n    while (@sorted) {\n        push @result,\
    \ shift @sorted;\n        push @result, pop @sorted if @sorted;\n    }\n    return\
    \ \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n    my $min = min @list;\n\
    \    my $max = max @list;\n    my $i = 0;\n    while (scalar @list) {\n      \
    \  if ($i % 2 == 0) {\n            push @sorted_list, $min;\n            @list\
    \ = grep { $_ != $min } @list;\n            $min = min @list;\n        } else\
    \ {\n            push @sorted_list, $max;\n            @list = grep { $_ != $max\
    \ } @list;\n            $max = max @list;\n        }\n        $i++;\n    }\n \
    \   return @sorted_list;\n}", "my @list = @_;\n    my @sorted_list;\n    my $i\
    \ = 0;\n    while (@list) {\n        my $min = min @list;\n        my $max = max\
    \ @list;\n        if ($i % 2 == 0) {\n            push @sorted_list, $min;\n \
    \       } else {\n            push @sorted_list, $max;\n        }\n        @list\
    \ = grep { $_ != $min && $_ != $max } @list;\n        $i++;\n    }\n    return\
    \ @sorted_list;\n}", "my $arr = shift;\n    my @sorted = sort { $a <=> $b } @$arr;\n\
    \    my @result;\n    my $i = 0;\n    my $j = $#sorted;\n    while ($i <= $j)\
    \ {\n        push @result, $sorted[$i];\n        $i++;\n        if ($i <= $j)\
    \ {\n            push @result, $sorted[$j];\n            $j--;\n        }\n  \
    \  }\n    return \\@result;\n}", "my ($list) = @_;\n    my @sorted = sort { $a\
    \ <=> $b } @$list;\n    my @result;\n    my $i = 0;\n    while (@sorted) {\n \
    \       push @result, splice(@sorted, $i, 1);\n        $i = $i ? 0 : -1;\n   \
    \ }\n    return \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n    my\
    \ $min = min @list;\n    my $max = max @list;\n    my $min_index = first_index\
    \ { $_ == $min } @list;\n    my $max_index = first_index { $_ == $max } @list;\n\
    \    push @sorted_list, $min;\n    push @sorted_list, $max;\n    splice @list,\
    \ $min_index, 1;\n    splice @list, $max_index, 1;\n    while (@list) {\n    \
    \    $min = min @list;\n        $max = max @list;\n        $min_index = first_index\
    \ { $_ == $min } @list;\n        $max_index = first_index { $_ == $max } @list;\n\
    \        push @sorted_list, $min;\n        push @sorted_list, $max;\n        splice\
    \ @list, $min_index, 1;\n        splice @list, $max_index, 1;\n    }\n    return\
    \ @sorted_list;\n}", "my @list = @_;\n    my @result;\n    my $i = 0;\n    while\
    \ (@list) {\n        my $min = min(@list);\n        my $max = max(@list);\n  \
    \      if ($i % 2 == 0) {\n            push @result, $min;\n            @list\
    \ = grep { $_ != $min } @list;\n        } else {\n            push @result, $max;\n\
    \            @list = grep { $_ != $max } @list;\n        }\n        $i++;\n  \
    \  }\n    return @result;\n}", "my @list = @_;\n    my @result;\n    my $i = 0;\n\
    \    while (@list) {\n        if ($i % 2 == 0) {\n            push @result, shift\
    \ @list;\n        } else {\n            push @result, pop @list;\n        }\n\
    \        $i++;\n    }\n    return @result;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $min = min @list;\n    my $max = max @list;\n    my $i = 0;\n    while\
    \ (@list) {\n        if ($i % 2 == 0) {\n            push @sorted_list, $min;\n\
    \            @list = grep { $_ != $min } @list;\n            $min = min @list;\n\
    \        } else {\n            push @sorted_list, $max;\n            @list = grep\
    \ { $_ != $max } @list;\n            $max = max @list;\n        }\n        $i++;\n\
    \    }\n    return @sorted_list;\n}", "my @arr = @_;\n    my @sorted_arr = sort\
    \ { $a <=> $b } @arr;\n    my @result;\n    my $i = 0;\n    while (@sorted_arr)\
    \ {\n        my $min = shift @sorted_arr;\n        my $max = pop @sorted_arr;\n\
    \        push @result, $min;\n        push @result, $max if $max;\n    }\n   \
    \ return @result;\n}", "my ($arr) = @_;\n    my @result;\n    my @sorted = sort\
    \ { $a <=> $b } @$arr;\n    my $i = 0;\n    while ($i < scalar @sorted) {\n  \
    \      push @result, $sorted[$i];\n        if ($i + 1 < scalar @sorted) {\n  \
    \          push @result, $sorted[-($i + 1)];\n        }\n        $i++;\n    }\n\
    \    return \\@result;\n}", "my ($list) = @_;\n    my @sorted = sort { $a <=>\
    \ $b } @$list;\n    my @result;\n    while (@sorted) {\n        push @result,\
    \ shift @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "my ($array) = @_;\n    my @sorted = sort { $a <=> $b } @$array;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @result;\n\
    \    while (@list) {\n        push @result, shift @list;\n        push @result,\
    \ pop @list;\n    }\n    return @result;\n}", "my @list = @_;\n    my @sorted_list;\n\
    \    my $min_index = 0;\n    my $max_index = 0;\n    my $min_value = $list[0];\n\
    \    my $max_value = $list[0];\n    for my $i (0 .. $#list) {\n        if ($list[$i]\
    \ < $min_value) {\n            $min_value = $list[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($list[$i] > $max_value) {\n            $max_value\
    \ = $list[$i];\n            $max_index = $i;\n        }\n    }\n    push @sorted_list,\
    \ $min_value;\n    push @sorted_list, $max_value;\n    splice @list, $min_index,\
    \ 1;\n    splice @list, $max_index - 1, 1;\n    while (@list) {\n        $min_value\
    \ = $list[0];\n        $min_index = 0;\n        $max_value = $list[0];\n     \
    \   $max_index = 0;\n        for my $i (0 .. $#list) {\n            if ($list[$i]\
    \ < $min_value) {\n                $min_value = $list[$i];\n                $min_index\
    \ = $i;\n            }\n            if ($list[$i] > $max_value) {\n          \
    \      $max_value = $list[$i];\n                $max_index = $i;\n           \
    \ }\n        }\n        push @sorted_list, $min_value;\n        push @sorted_list,\
    \ $max_value;\n        splice @list, $min_index, 1;\n        splice @list, $max_index\
    \ - 1, 1;\n    }\n    return @sorted_list;\n}", "my @list = @_;\n    my @result;\n\
    \    my $i = 0;\n    my $j = $#list;\n    while ($i <= $j) {\n        push @result,\
    \ $list[$i];\n        $i++;\n        if ($i <= $j) {\n            push @result,\
    \ $list[$j];\n            $j--;\n        }\n    }\n    return @result;\n}", "my\
    \ ($list) = @_;\n    my @sorted = sort { $a <=> $b } @$list;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "my @list = @_;\n    my @result;\n\
    \    my $i = 0;\n    my $j = $#list;\n    while ($i <= $j) {\n        push @result,\
    \ $list[$i];\n        $i++;\n        if ($i <= $j) {\n            push @result,\
    \ $list[$j];\n            $j--;\n        }\n    }\n    return @result;\n}", "my\
    \ @list = @_;\n    my @result;\n    my $min = min @list;\n    my $max = max @list;\n\
    \    my $i = 0;\n    while (@list) {\n        if ($i % 2 == 0) {\n           \
    \ push @result, $min;\n            @list = grep { $_ != $min } @list;\n      \
    \      $min = min @list;\n        } else {\n            push @result, $max;\n\
    \            @list = grep { $_ != $max } @list;\n            $max = max @list;\n\
    \        }\n        $i++;\n    }\n    return @result;\n}", "my @list = @_;\n \
    \   my @result;\n    my $i = 0;\n    my $j = $#list;\n    while ($i <= $j) {\n\
    \        push @result, $list[$i];\n        if ($i != $j) {\n            push @result,\
    \ $list[$j];\n        }\n        $i++;\n        $j--;\n    }\n    return @result;\n\
    }", "my @list = @_;\n    my @sorted_list;\n    my $i = 0;\n    my $j = scalar\
    \ @list - 1;\n    while ($i <= $j) {\n        push @sorted_list, $list[$i];\n\
    \        $i++;\n        if ($i <= $j) {\n            push @sorted_list, $list[$j];\n\
    \            $j--;\n        }\n    }\n    return @sorted_list;\n}", "my ($arr)\
    \ = @_;\n    my @sorted = sort { $a <=> $b } @$arr;\n    my @result;\n    my $i\
    \ = 0;\n    my $j = $#sorted;\n    while ($i <= $j) {\n        push @result, $sorted[$i];\n\
    \        $i++;\n        push @result, $sorted[$j] if $i <= $j;\n        $j--;\n\
    \    }\n    return \\@result;\n}", "my $list = shift;\n    my @sorted = sort {\
    \ $a <=> $b } @$list;\n    my @result;\n    while (@sorted) {\n        push @result,\
    \ shift @sorted;\n        push @result, pop @sorted if @sorted;\n    }\n    return\
    \ \\@result;\n}", "my @list = @_;\n    my @result;\n    my $i = 0;\n    while\
    \ (@list) {\n        my $min = min @list;\n        my $max = max @list;\n    \
    \    if ($i % 2 == 0) {\n            push @result, $min;\n            @list =\
    \ grep { $_ != $min } @list;\n        } else {\n            push @result, $max;\n\
    \            @list = grep { $_ != $max } @list;\n        }\n        $i++;\n  \
    \  }\n    return @result;\n}", "my @list = @_;\n    my @sorted_list;\n    my $i\
    \ = 0;\n    while (@list) {\n        my $min = min @list;\n        my $max = max\
    \ @list;\n        if ($i % 2 == 0) {\n            push @sorted_list, $min;\n \
    \       } else {\n            push @sorted_list, $max;\n        }\n        @list\
    \ = grep { $_ != $min && $_ != $max } @list;\n        $i++;\n    }\n    return\
    \ @sorted_list;\n}", "my @list = @_;\n    my @sorted_list;\n    my $min = min(@list);\n\
    \    my $max = max(@list);\n    my $i = 0;\n    while (@list) {\n        if ($i\
    \ % 2 == 0) {\n            push @sorted_list, $min;\n            @list = grep\
    \ { $_ != $min } @list;\n            $min = min(@list);\n        } else {\n  \
    \          push @sorted_list, $max;\n            @list = grep { $_ != $max } @list;\n\
    \            $max = max(@list);\n        }\n        $i++;\n    }\n    return @sorted_list;\n\
    }", "my ($list) = @_;\n    my @sorted = sort { $a <=> $b } @$list;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "my $list = shift;\n    my @sorted_list;\n\
    \    my @sorted_list_copy = sort { $a <=> $b } @$list;\n    my $i = 0;\n    while\
    \ (@sorted_list_copy) {\n        if ($i % 2 == 0) {\n            push @sorted_list,\
    \ shift @sorted_list_copy;\n        } else {\n            push @sorted_list, pop\
    \ @sorted_list_copy;\n        }\n        $i++;\n    }\n    return \\@sorted_list;\n\
    }", "my ($list) = @_;\n    my @sorted = sort { $a <=> $b } @$list;\n    my @result;\n\
    \    my $i = 0;\n    my $j = scalar @sorted - 1;\n    while ($i <= $j) {\n   \
    \     push @result, $sorted[$i];\n        $i++;\n        if ($i <= $j) {\n   \
    \         push @result, $sorted[$j];\n            $j--;\n        }\n    }\n  \
    \  return \\@result;\n}", "my ($arr) = @_;\n    my @sorted_arr = sort { $a <=>\
    \ $b } @$arr;\n    my @result;\n    while (@sorted_arr) {\n        push @result,\
    \ shift @sorted_arr;\n        push @result, pop @sorted_arr;\n    }\n    return\
    \ \\@result;\n}", "my @list = @_;\n    my @sorted_list;\n    my $min = min @list;\n\
    \    my $max = max @list;\n    my $min_index = 0;\n    my $max_index = 0;\n  \
    \  my $min_found = 0;\n    my $max_found = 0;\n    my $i = 0;\n    while (scalar\
    \ @list) {\n        if ($min_found && $max_found) {\n            $min_found =\
    \ 0;\n            $max_found = 0;\n            $min = min @list;\n           \
    \ $max = max @list;\n        }\n        if ($list[$i] == $min && !$min_found)\
    \ {\n            $min_found = 1;\n            $min_index = $i;\n        }\n  \
    \      if ($list[$i] == $max && !$max_found) {\n            $max_found = 1;\n\
    \            $max_index = $i;\n        }\n        if ($min_found && $max_found)\
    \ {\n            if ($min_index < $max_index) {\n                push @sorted_list,\
    \ $min;\n                push @sorted_list, $max;\n            }\n           \
    \ else {\n                push @sorted_list, $max;\n                push @sorted_list,\
    \ $min;\n            }\n            splice @list, $min_index, 1;\n           \
    \ splice @list, $max_index - 1, 1;\n            $i = 0;\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return @sorted_list;\n}", "my @list\
    \ = @_;\n    my @sorted_list;\n    my $min = min @list;\n    my $max = max @list;\n\
    \    my $min_index = firstidx {$_ == $min} @list;\n    my $max_index = firstidx\
    \ {$_ == $max} @list;\n    push @sorted_list, $min;\n    push @sorted_list, $max;\n\
    \    splice @list, $min_index, 1;\n    splice @list, $max_index, 1;\n    while\
    \ (@list) {\n        $min = min @list;\n        $max = max @list;\n        $min_index\
    \ = firstidx {$_ == $min} @list;\n        $max_index = firstidx {$_ == $max} @list;\n\
    \        push @sorted_list, $min;\n        push @sorted_list, $max;\n        splice\
    \ @list, $min_index, 1;\n        splice @list, $max_index, 1;\n    }\n    return\
    \ @sorted_list;\n}", "my $list = shift;\n    my @sorted = sort { $a <=> $b } @$list;\n\
    \    my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "my @list\
    \ = @_;\n    my @sorted_list;\n    my $i = 0;\n    while (@list) {\n        my\
    \ $min = min @list;\n        my $max = max @list;\n        if ($i % 2 == 0) {\n\
    \            push @sorted_list, $min;\n        } else {\n            push @sorted_list,\
    \ $max;\n        }\n        @list = grep { $_ != $min && $_ != $max } @list;\n\
    \        $i++;\n    }\n    return @sorted_list;\n}", "my $arr = shift;\n    my\
    \ $len = scalar @$arr;\n    my $res = [];\n    my $i = 0;\n    my $j = $len -\
    \ 1;\n    while ($i <= $j) {\n        push @$res, $arr->[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            push @$res, $arr->[$j];\n            $j--;\n\
    \        }\n    }\n    return $res;\n}", "my @list = @_;\n    my @result;\n  \
    \  my $min = min(@list);\n    my $max = max(@list);\n    my $i = 0;\n    while\
    \ (@list) {\n        if ($i % 2 == 0) {\n            push @result, $min;\n   \
    \         @list = grep { $_ != $min } @list;\n            $min = min(@list);\n\
    \        } else {\n            push @result, $max;\n            @list = grep {\
    \ $_ != $max } @list;\n            $max = max(@list);\n        }\n        $i++;\n\
    \    }\n    return @result;\n}", "my $array = shift;\n    my @sorted_array;\n\
    \    my $min = min @$array;\n    my $max = max @$array;\n    my $min_index = first_index\
    \ { $_ == $min } @$array;\n    my $max_index = first_index { $_ == $max } @$array;\n\
    \    my $i = 0;\n    while (@$array) {\n        if ($i % 2 == 0) {\n         \
    \   push @sorted_array, splice @$array, $min_index, 1;\n            $min = min\
    \ @$array;\n            $min_index = first_index { $_ == $min } @$array;\n   \
    \     } else {\n            push @sorted_array, splice @$array, $max_index, 1;\n\
    \            $max = max @$array;\n            $max_index = first_index { $_ ==\
    \ $max } @$array;\n        }\n        $i++;\n    }\n    return \\@sorted_array;\n\
    }", "my ($arr) = @_;\n    my @sorted = sort { $a <=> $b } @$arr;\n    my @result;\n\
    \    my $i = 0;\n    while (@sorted) {\n        if ($i % 2 == 0) {\n         \
    \   push @result, shift @sorted;\n        } else {\n            push @result,\
    \ pop @sorted;\n        }\n        $i++;\n    }\n    return \\@result;\n}", "my\
    \ ($arr) = @_;\n    my @result;\n    my @sorted = sort { $a <=> $b } @$arr;\n\
    \    my $i = 0;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted if @sorted;\n    }\n    return \\@result;\n\
    }", "my @list = @_;\n    my @sorted_list;\n    my $i = 0;\n    while (@list) {\n\
    \        if ($i % 2 == 0) {\n            push @sorted_list, shift @list;\n   \
    \     } else {\n            push @sorted_list, pop @list;\n        }\n       \
    \ $i++;\n    }\n    return @sorted_list;\n}", "my ($list) = @_;\n    my @sorted_list\
    \ = sort { $a <=> $b } @$list;\n    my @result;\n    my $i = 0;\n    my $j = $#sorted_list;\n\
    \    while ($i <= $j) {\n        push @result, $sorted_list[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            push @result, $sorted_list[$j];\n      \
    \      $j--;\n        }\n    }\n    return \\@result;\n}", "my $arr = shift;\n\
    \    my @sorted = sort { $a <=> $b } @$arr;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted if\
    \ @sorted;\n    }\n    return \\@result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

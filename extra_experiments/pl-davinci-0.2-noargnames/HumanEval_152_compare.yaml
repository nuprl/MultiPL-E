name: HumanEval_152_compare
language: pl
prompt: "# I think we all remember that feeling when the result of some long-awaited\n\
  # event is finally known. The feelings and thoughts you have at that moment are\n\
  # definitely worth noting down and comparing.\n# Your task is to determine if a\
  \ person correctly guessed the results of a number of matches.\n# You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n# Return an array of the same length denoting how far off each guess was. If\
  \ they have guessed correctly,\n# the value is 0, and if not, the value is the absolute\
  \ difference between the guess and the score.\n# example:\n# >>> compare([1, 2,\
  \ 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n# [0, 0, 0, 0, 3, 3]\n# >>> compare([0, 5,\
  \ 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n# [4, 4, 1, 0, 0, 6]\nsub compare {\n    "
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&compare;\n\
  \        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]),[0,\
  \ 0, 0, 0, 3, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0,\
  \ 0, 0, 0, 0])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
  \      if(eq_deeply($candidate->([1, 2, 3], [-1, -2, -3]),[2, 4, 6])) {\n      \
  \  print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 3, 5], [-1, 2, 3, 4]),[2, 0, 0, 1])) {\n        print \"ok!\" }else{\n    \
  \    exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0;\
    \ $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n\
    \        push @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for my $i (0..$#$scores) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for my $i (0..$#$scores) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n\
    \        push @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for my $i (0..$#$scores) {\n        $result[$i] = abs($scores->[$i] - $guesses->[$i]);\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores,\
    \ $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n\
    \        if ($scores->[$i] == $guesses->[$i]) {\n            push @result, 0;\n\
    \        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for my $i (0..$#$scores) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @results;\n  \
    \  for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @results, $diff;\n    }\n    return @results;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] != $guesses->[$i]) {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        } else {\n            push @result,\
    \ 0;\n        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores,\
    \ $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n\
    \        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result,\
    \ $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my\
    \ @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for my $i (0..$#$scores) {\n        push @result, abs($scores->[$i]\
    \ - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff =\
    \ abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff =\
    \ abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores,\
    \ $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n\
    \        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result,\
    \ $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my\
    \ @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff =\
    \ abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        push @result, abs($scores->[$i]\
    \ - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for my $i (0..$#$scores) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($$scores[$i] - $$guesses[$i]);\n    }\n \
    \   return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n    for\
    \ (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n\
    \        push @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for my $i (0..$#$scores) {\n        my $score = $scores->[$i];\n        my\
    \ $guess = $guesses->[$i];\n        my $diff = abs($score - $guess);\n       \
    \ push @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $score = $scores->[$i];\n        my $guess = $guesses->[$i];\n\
    \        my $diff = abs($score - $guess);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff\
    \ = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] != $guesses->[$i]) {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        } else {\n            push @result,\
    \ 0;\n        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff\
    \ = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for my $i (0..$#$scores)\
    \ {\n        $result[$i] = abs($scores->[$i] - $guesses->[$i]);\n    }\n    return\
    \ @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i\
    \ = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n\
    \            push @result, 0;\n        } else {\n            push @result, abs($scores->[$i]\
    \ - $guesses->[$i]);\n        }\n    }\n    return @result;\n}", "my ($scores,\
    \ $guesses) = @_;\n    my @result;\n    for my $i (0..$#$scores) {\n        my\
    \ $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for my $i (0..$#$scores) {\n        my $diff = $scores->[$i] - $guesses->[$i];\n\
    \        $diff = abs($diff);\n        push @result, $diff;\n    }\n    return\
    \ @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i\
    \ = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n\
    \        push @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ if ($scores->[$i] == $guesses->[$i]) {\n            push @result, 0;\n     \
    \   } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for my $i (0..$#$scores) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff =\
    \ abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff\
    \ = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @results;\n  \
    \  for my $i (0..$#$scores) {\n        push @results, abs($scores->[$i] - $guesses->[$i]);\n\
    \    }\n    return @results;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff =\
    \ abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        push @result, abs($scores->[$i]\
    \ - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    foreach my $i (0..$#{$scores})\
    \ {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n    return\
    \ @result;\n}", "my ($score, $guess) = @_;\n    my @result;\n    for (my $i =\
    \ 0; $i < @$score; $i++) {\n        if ($score->[$i] == $guess->[$i]) {\n    \
    \        push @result, 0;\n        } else {\n            push @result, abs($score->[$i]\
    \ - $guess->[$i]);\n        }\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff\
    \ = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        push @result, abs($scores->[$i]\
    \ - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ if ($scores->[$i] == $guesses->[$i]) {\n            push @result, 0;\n     \
    \   } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff =\
    \ abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff =\
    \ abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for my $i (0..$#$scores)\
    \ {\n        my $score = $scores->[$i];\n        my $guess = $guesses->[$i];\n\
    \        my $diff = abs($score - $guess);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for my $i (0..$#$scores) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n\
    \        push @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ if ($scores->[$i] == $guesses->[$i]) {\n            push @result, 0;\n     \
    \   } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for my $i (0..$#$scores) {\n        push @result, abs($scores->[$i]\
    \ - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for my $i (0..$#$scores) {\n        my $score = $scores->[$i];\n\
    \        my $guess = $guesses->[$i];\n        my $diff = abs($score - $guess);\n\
    \        push @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @results;\n    for (my $i = 0; $i < @$scores; $i++) {\n      \
    \  my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @results, $diff;\n\
    \    }\n    return @results;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff =\
    \ abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff\
    \ = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff =\
    \ abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        push @result, abs($scores->[$i]\
    \ - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores,\
    \ $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n\
    \        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result,\
    \ $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my\
    \ @results;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @results, $diff;\n    }\n    return @results;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff =\
    \ abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for my $i (0..$#$scores)\
    \ {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result,\
    \ $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my\
    \ @result;\n    for (0..$#{$scores}) {\n        push @result, abs($scores->[$_]\
    \ - $guesses->[$_]);\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n\
    \    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n\
    \    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for my $i (0..$#$scores) {\n        $result[$i] = abs($scores->[$i]\
    \ - $guesses->[$i]);\n    }\n    return @result;\n}", "my ($scores, $guesses)\
    \ = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n       \
    \ if ($scores->[$i] == $guesses->[$i]) {\n            push @result, 0;\n     \
    \   } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n            push @result,\
    \ 0;\n        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @results;\n    for (my $i = 0; $i <\
    \ @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i]) {\n        \
    \    push @results, 0;\n        } else {\n            push @results, abs($scores->[$i]\
    \ - $guesses->[$i]);\n        }\n    }\n    return @results;\n}", "my ($scores,\
    \ $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n\
    \        if ($scores->[$i] == $guesses->[$i]) {\n            push @result, 0;\n\
    \        } else {\n            push @result, abs($scores->[$i] - $guesses->[$i]);\n\
    \        }\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n  \
    \  my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i]\
    \ == $guesses->[$i]) {\n            push @result, 0;\n        } else {\n     \
    \       push @result, abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        push @result, abs($scores->[$i] - $guesses->[$i]);\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        if ($scores->[$i] == $guesses->[$i])\
    \ {\n            push @result, 0;\n        } else {\n            push @result,\
    \ abs($scores->[$i] - $guesses->[$i]);\n        }\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff\
    \ = abs($scores->[$i] - $guesses->[$i]);\n        push @result, $diff;\n    }\n\
    \    return @result;\n}", "my ($scores, $guesses) = @_;\n    my @result;\n   \
    \ for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    foreach my $i (0..$#{$scores})\
    \ {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push @result,\
    \ $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n    my\
    \ @result;\n    for (my $i = 0; $i < @$scores; $i++) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }", "my ($scores, $guesses) = @_;\n    my @result;\n    for (my $i = 0; $i < @$scores;\
    \ $i++) {\n        my $diff = abs($scores->[$i] - $guesses->[$i]);\n        push\
    \ @result, $diff;\n    }\n    return @result;\n}", "my ($scores, $guesses) = @_;\n\
    \    my @result;\n    for my $i (0..$#$scores) {\n        my $diff = abs($scores->[$i]\
    \ - $guesses->[$i]);\n        push @result, $diff;\n    }\n    return @result;\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

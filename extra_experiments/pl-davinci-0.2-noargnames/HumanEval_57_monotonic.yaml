name: HumanEval_57_monotonic
language: pl
prompt: "# Return 1 is array elements are monotonically increasing or decreasing.\n\
  # >>> monotonic([1, 2, 4, 20])\n# 1\n# >>> monotonic([1, 20, 4, 10])\n# \"\"\n#\
  \ >>> monotonic([4, 1, 0, -10])\n# 1\nsub monotonic {\n    "
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&monotonic;\n\
  \        if(eq_deeply($candidate->([1, 2, 4, 10]),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 4, 20]),1))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 20, 4, 10]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->([4, 1, 0, -10]),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4, 1, 1,\
  \ 0]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 3, 2, 5, 60]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 60]),1)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([9,\
  \ 9, 9, 9]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\
  \ntesthumaneval();"
completions: ["my ($array) = @_;\n    my $direction = 0;\n    my $prev = $array->[0];\n\
    \    for my $i (1 .. $#$array) {\n        my $curr = $array->[$i];\n        if\
    \ ($curr > $prev) {\n            if ($direction == 0) {\n                $direction\
    \ = 1;\n            } elsif ($direction == -1) {\n                return \"\"\
    ;\n            }\n        } elsif ($curr < $prev) {\n            if ($direction\
    \ == 0) {\n                $direction = -1;\n            } elsif ($direction ==\
    \ 1) {\n                return \"\";\n            }\n        }\n        $prev\
    \ = $curr;\n    }\n    return 1;\n}", "my ($array) = @_;\n    my $direction =\
    \ 0;\n    my $prev = $array->[0];\n    for my $i (1 .. $#$array) {\n        my\
    \ $curr = $array->[$i];\n        if ($curr == $prev) {\n            next;\n  \
    \      }\n        elsif ($curr > $prev) {\n            if ($direction == -1) {\n\
    \                return \"\";\n            }\n            $direction = 1;\n  \
    \      }\n        elsif ($curr < $prev) {\n            if ($direction == 1) {\n\
    \                return \"\";\n            }\n            $direction = -1;\n \
    \       }\n        $prev = $curr;\n    }\n    return 1;\n}", "my $array = shift;\n\
    \    my $monotonic = 1;\n    my $prev = $array->[0];\n    for my $i (1 .. $#$array)\
    \ {\n        if ($array->[$i] < $prev) {\n            $monotonic = 0;\n      \
    \      last;\n        }\n        $prev = $array->[$i];\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $monotonic = 1;\n    my $last = $array->[0];\n\
    \    foreach my $element (@$array) {\n        if ($element != $last) {\n     \
    \       if ($monotonic == 0) {\n                return 0;\n            }\n   \
    \         if ($element < $last) {\n                $monotonic = -1;\n        \
    \    }\n            else {\n                $monotonic = 1;\n            }\n \
    \       }\n        $last = $element;\n    }\n    return $monotonic;\n}", "my $arr\
    \ = shift;\n    my $mono = 1;\n    my $i = 0;\n    my $j = 1;\n    my $inc = 0;\n\
    \    my $dec = 0;\n    my $len = scalar @$arr;\n    while ($i < $len - 1) {\n\
    \        if ($arr->[$i] < $arr->[$j]) {\n            $inc = 1;\n        }\n  \
    \      if ($arr->[$i] > $arr->[$j]) {\n            $dec = 1;\n        }\n    \
    \    if ($inc && $dec) {\n            $mono = 0;\n            last;\n        }\n\
    \        $i++;\n        $j++;\n    }\n    return $mono;\n}", "my $array = shift;\n\
    \    my $mono = 1;\n    my $i = 0;\n    while ($i < @$array - 1) {\n        if\
    \ ($array->[$i] < $array->[$i + 1]) {\n            $mono = 1;\n        } elsif\
    \ ($array->[$i] > $array->[$i + 1]) {\n            $mono = -1;\n        } else\
    \ {\n            return 0;\n        }\n        $i++;\n    }\n    return $mono;\n\
    }", "my $array = shift;\n    my $direction = 0;\n    my $last = $array->[0];\n\
    \    for my $i (1 .. $#$array) {\n        my $diff = $array->[$i] - $last;\n \
    \       if ($diff == 0) {\n            next;\n        }\n        if ($direction\
    \ == 0) {\n            $direction = $diff > 0 ? 1 : -1;\n        }\n        elsif\
    \ ($direction == 1) {\n            return '' if $diff < 0;\n        }\n      \
    \  elsif ($direction == -1) {\n            return '' if $diff > 0;\n        }\n\
    \        $last = $array->[$i];\n    }\n    return 1;\n}", "my $array = shift;\n\
    \    my $monotonic = 1;\n    my $direction = 0;\n    my $previous = 0;\n    foreach\
    \ my $element (@$array) {\n        if ($previous) {\n            if ($direction\
    \ == 0) {\n                if ($element > $previous) {\n                    $direction\
    \ = 1;\n                } elsif ($element < $previous) {\n                   \
    \ $direction = -1;\n                }\n            } else {\n                if\
    \ ($direction == 1 && $element < $previous) {\n                    $monotonic\
    \ = 0;\n                    last;\n                } elsif ($direction == -1 &&\
    \ $element > $previous) {\n                    $monotonic = 0;\n             \
    \       last;\n                }\n            }\n        }\n        $previous\
    \ = $element;\n    }\n    return $monotonic;\n}", "my ($array) = @_;\n    my $result\
    \ = 0;\n    my $direction = 0;\n    my $last = undef;\n    foreach my $elem (@$array)\
    \ {\n        if (defined $last) {\n            my $diff = $elem - $last;\n   \
    \         if ($diff != 0) {\n                if ($direction == 0) {\n        \
    \            $direction = $diff;\n                }\n                elsif ($direction\
    \ * $diff < 0) {\n                    return 0;\n                }\n         \
    \   }\n        }\n        $last = $elem;\n    }\n    return 1;\n}", "my @array\
    \ = @_;\n    my $monotonic = 1;\n    my $direction = 0;\n    for (my $i = 1; $i\
    \ < @array; $i++) {\n        if ($direction == 0) {\n            if ($array[$i]\
    \ > $array[$i-1]) {\n                $direction = 1;\n            } elsif ($array[$i]\
    \ < $array[$i-1]) {\n                $direction = -1;\n            }\n       \
    \ } else {\n            if ($direction == 1) {\n                if ($array[$i]\
    \ < $array[$i-1]) {\n                    $monotonic = 0;\n                   \
    \ last;\n                }\n            } else {\n                if ($array[$i]\
    \ > $array[$i-1]) {\n                    $monotonic = 0;\n                   \
    \ last;\n                }\n            }\n        }\n    }\n    return $monotonic;\n\
    }", "my ($array) = @_;\n    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$array);\n\
    \    my $increasing = 1;\n    my $decreasing = 1;\n    for ($i = 0; $i < $n -\
    \ 1; $i++) {\n        if ($array->[$i] > $array->[$i + 1]) {\n            $increasing\
    \ = 0;\n        }\n        if ($array->[$i] < $array->[$i + 1]) {\n          \
    \  $decreasing = 0;\n        }\n    }\n    return $increasing || $decreasing;\n\
    }", "my $array = shift;\n    my $monotonic = 1;\n    my $i = 0;\n    while ($i\
    \ < @$array - 1) {\n        if ($array->[$i] < $array->[$i + 1]) {\n         \
    \   $i++;\n            while ($i < @$array - 1) {\n                if ($array->[$i]\
    \ > $array->[$i + 1]) {\n                    $monotonic = \"\";\n            \
    \        last;\n                }\n                $i++;\n            }\n    \
    \    }\n        elsif ($array->[$i] > $array->[$i + 1]) {\n            $i++;\n\
    \            while ($i < @$array - 1) {\n                if ($array->[$i] < $array->[$i\
    \ + 1]) {\n                    $monotonic = \"\";\n                    last;\n\
    \                }\n                $i++;\n            }\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $monotonic;\n}", "my ($array)\
    \ = @_;\n    my $increasing = 1;\n    my $decreasing = 1;\n    my $i;\n    for\
    \ ($i = 1; $i < @$array; $i++) {\n        $increasing = 0 if $array->[$i - 1]\
    \ > $array->[$i];\n        $decreasing = 0 if $array->[$i - 1] < $array->[$i];\n\
    \    }\n    return $increasing || $decreasing;\n}", "my $array = shift;\n    my\
    \ $monotonic = 1;\n    my $increasing = 1;\n    my $decreasing = 1;\n    for (my\
    \ $i = 1; $i < @$array; $i++) {\n        if ($array->[$i] > $array->[$i-1]) {\n\
    \            $decreasing = 0;\n        }\n        if ($array->[$i] < $array->[$i-1])\
    \ {\n            $increasing = 0;\n        }\n    }\n    if ($increasing || $decreasing)\
    \ {\n        return 1;\n    }\n    return \"\";\n}", "my $array = shift;\n   \
    \ my $direction = 0;\n    for (my $i = 1; $i < @$array; $i++) {\n        if ($array->[$i]\
    \ > $array->[$i-1]) {\n            if ($direction == -1) {\n                return\
    \ \"\";\n            }\n            $direction = 1;\n        } elsif ($array->[$i]\
    \ < $array->[$i-1]) {\n            if ($direction == 1) {\n                return\
    \ \"\";\n            }\n            $direction = -1;\n        }\n    }\n    return\
    \ 1;\n}", "my $array = shift;\n    my $mono = 1;\n    my $i = 0;\n    while ($i\
    \ < scalar(@$array) - 1) {\n        if ($array->[$i] > $array->[$i + 1]) {\n \
    \           $mono = 0;\n            last;\n        }\n        $i++;\n    }\n \
    \   return $mono;\n}", "my $array = shift;\n    my $i;\n    my $len = scalar(@$array);\n\
    \    my $inc = 0;\n    my $dec = 0;\n    for ($i = 1; $i < $len; $i++) {\n   \
    \     if ($array->[$i] > $array->[$i - 1]) {\n            $inc = 1;\n        }\n\
    \        if ($array->[$i] < $array->[$i - 1]) {\n            $dec = 1;\n     \
    \   }\n    }\n    return $inc + $dec;\n}", "my $array = shift;\n    my $i = 0;\n\
    \    my $n = scalar(@$array);\n    my $inc = 0;\n    my $dec = 0;\n    while ($i\
    \ < $n - 1) {\n        if ($array->[$i] < $array->[$i + 1]) {\n            $inc\
    \ = 1;\n        }\n        if ($array->[$i] > $array->[$i + 1]) {\n          \
    \  $dec = 1;\n        }\n        $i++;\n    }\n    if ($inc && $dec) {\n     \
    \   return \"\";\n    }\n    return 1;\n}", "my $array = shift;\n    my $direction\
    \ = 0;\n    my $prev = $array->[0];\n    foreach my $i (1..$#$array) {\n     \
    \   my $diff = $array->[$i] - $prev;\n        if ($diff == 0) {\n            next;\n\
    \        }\n        if ($direction == 0) {\n            $direction = $diff > 0\
    \ ? 1 : -1;\n        }\n        if ($direction * $diff < 0) {\n            return\
    \ '';\n        }\n        $prev = $array->[$i];\n    }\n    return 1;\n}", "my\
    \ $array = shift;\n    my $monotonic = 1;\n    my $prev = $array->[0];\n    my\
    \ $direction = 0;\n    foreach my $i (1..$#{$array}) {\n        if ($direction\
    \ == 0) {\n            if ($array->[$i] > $prev) {\n                $direction\
    \ = 1;\n            } elsif ($array->[$i] < $prev) {\n                $direction\
    \ = -1;\n            }\n        } else {\n            if ($direction == 1) {\n\
    \                if ($array->[$i] < $prev) {\n                    $monotonic =\
    \ 0;\n                    last;\n                }\n            } else {\n   \
    \             if ($array->[$i] > $prev) {\n                    $monotonic = 0;\n\
    \                    last;\n                }\n            }\n        }\n    \
    \    $prev = $array->[$i];\n    }\n    return $monotonic;\n}", "my $array = shift;\n\
    \    my $direction = 0;\n    my $previous = $array->[0];\n    foreach my $element\
    \ (@$array) {\n        if ($direction == 0) {\n            if ($element > $previous)\
    \ {\n                $direction = 1;\n            } elsif ($element < $previous)\
    \ {\n                $direction = -1;\n            }\n        } elsif ($direction\
    \ == 1) {\n            if ($element < $previous) {\n                return \"\"\
    ;\n            }\n        } elsif ($direction == -1) {\n            if ($element\
    \ > $previous) {\n                return \"\";\n            }\n        }\n   \
    \     $previous = $element;\n    }\n    return 1;\n}", "my $array = shift;\n \
    \   my $monotonic = 1;\n    my $i = 0;\n    while ($i < @$array - 1) {\n     \
    \   if ($array->[$i] > $array->[$i + 1]) {\n            $monotonic = 0;\n    \
    \        last;\n        }\n        $i++;\n    }\n    return $monotonic;\n}", "my\
    \ $array = shift;\n    my $size = scalar @$array;\n    my $i = 0;\n    my $increasing\
    \ = 0;\n    my $decreasing = 0;\n    while ($i < $size - 1) {\n        if ($array->[$i]\
    \ < $array->[$i + 1]) {\n            $increasing = 1;\n        }\n        if ($array->[$i]\
    \ > $array->[$i + 1]) {\n            $decreasing = 1;\n        }\n        $i++;\n\
    \    }\n    return $increasing + $decreasing == 1;\n}", "my @a = @_;\n    my $i\
    \ = 0;\n    my $inc = 0;\n    my $dec = 0;\n    while ($i < $#a) {\n        if\
    \ ($a[$i] < $a[$i+1]) {\n            $inc = 1;\n        }\n        if ($a[$i]\
    \ > $a[$i+1]) {\n            $dec = 1;\n        }\n        $i++;\n    }\n    if\
    \ ($inc && $dec) {\n        return \"\";\n    }\n    return 1;\n}", "my $array\
    \ = shift;\n    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$array);\n\
    \    my $monotonic = 1;\n    my $increasing = 1;\n    my $decreasing = 1;\n  \
    \  for ($i = 0; $i < $n - 1; $i++) {\n        $j = $i + 1;\n        if ($array->[$i]\
    \ > $array->[$j]) {\n            $increasing = 0;\n        }\n        if ($array->[$i]\
    \ < $array->[$j]) {\n            $decreasing = 0;\n        }\n    }\n    if (!$increasing\
    \ && !$decreasing) {\n        $monotonic = 0;\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $mono = 1;\n    my $prev = $array->[0];\n    for\
    \ my $i (1..$#$array) {\n        if ($array->[$i] < $prev) {\n            $mono\
    \ = 0;\n            last;\n        }\n        $prev = $array->[$i];\n    }\n \
    \   return $mono;\n}", "my $array = shift;\n    my $monotonic = 1;\n    my $diff\
    \ = $array->[1] - $array->[0];\n    for (my $i = 2; $i < scalar(@$array); $i++)\
    \ {\n        if ($diff * ($array->[$i] - $array->[$i-1]) < 0) {\n            $monotonic\
    \ = 0;\n            last;\n        }\n    }\n    return $monotonic;\n}", "my @a\
    \ = @_;\n    my $n = @a;\n    my $i;\n    my $inc = 1;\n    my $dec = 1;\n   \
    \ for ($i = 1; $i < $n; $i++) {\n        if ($a[$i] > $a[$i - 1]) {\n        \
    \    $dec = 0;\n        } elsif ($a[$i] < $a[$i - 1]) {\n            $inc = 0;\n\
    \        }\n    }\n    return $inc || $dec;\n}", "my $array = shift;\n    my $monotonic\
    \ = 1;\n    my $prev = $array->[0];\n    for my $i (1 .. $#$array) {\n       \
    \ if ($array->[$i] > $prev) {\n            $monotonic = 1;\n        } elsif ($array->[$i]\
    \ < $prev) {\n            $monotonic = -1;\n        } else {\n            $monotonic\
    \ = 0;\n        }\n        $prev = $array->[$i];\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $n = scalar @$array;\n    my $increasing = 1;\n\
    \    my $decreasing = 1;\n    for (my $i = 1; $i < $n; $i++) {\n        $increasing\
    \ = 0 if ($array->[$i] < $array->[$i-1]);\n        $decreasing = 0 if ($array->[$i]\
    \ > $array->[$i-1]);\n    }\n    return ($increasing || $decreasing);\n}", "my\
    \ ($array) = @_;\n    my $direction = 0;\n    my $last = $array->[0];\n    for\
    \ my $i (1 .. $#$array) {\n        my $diff = $array->[$i] - $last;\n        if\
    \ ($diff == 0) {\n            next;\n        }\n        if ($direction == 0) {\n\
    \            $direction = $diff;\n        }\n        elsif ($direction * $diff\
    \ < 0) {\n            return \"\";\n        }\n        $last = $array->[$i];\n\
    \    }\n    return 1;\n}", "my $array = shift;\n    my $len = scalar @$array;\n\
    \    my $i = 0;\n    my $inc = 0;\n    my $dec = 0;\n    while ($i < $len - 1)\
    \ {\n        if ($array->[$i] < $array->[$i + 1]) {\n            $inc = 1;\n \
    \       }\n        if ($array->[$i] > $array->[$i + 1]) {\n            $dec =\
    \ 1;\n        }\n        $i++;\n    }\n    return $inc && !$dec;\n}", "my $array\
    \ = shift;\n    my $monotonic = 1;\n    my $increasing = 1;\n    my $decreasing\
    \ = 1;\n    my $i = 0;\n    my $j = 1;\n    my $k = 2;\n    while ($k < scalar(@$array))\
    \ {\n        if ($array->[$i] > $array->[$j]) {\n            $increasing = 0;\n\
    \        }\n        if ($array->[$i] < $array->[$j]) {\n            $decreasing\
    \ = 0;\n        }\n        $i++;\n        $j++;\n        $k++;\n    }\n    if\
    \ ($increasing == 0 && $decreasing == 0) {\n        $monotonic = \"\";\n    }\n\
    \    return $monotonic;\n}", "my ($array) = @_;\n    my $prev = $array->[0];\n\
    \    my $increasing = 0;\n    my $decreasing = 0;\n    foreach my $i (1 .. $#$array)\
    \ {\n        if ($array->[$i] > $prev) {\n            $increasing = 1;\n     \
    \   }\n        elsif ($array->[$i] < $prev) {\n            $decreasing = 1;\n\
    \        }\n        $prev = $array->[$i];\n    }\n    return $increasing && !$decreasing;\n\
    }", "my @a = @_;\n    my $n = scalar @a;\n    my $i;\n    my $mono = 1;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($a[$i] < $a[$i-1]) {\n            $mono\
    \ = 0;\n            last;\n        }\n    }\n    if ($mono) {\n        return\
    \ 1;\n    }\n    $mono = 1;\n    for ($i = 1; $i < $n; $i++) {\n        if ($a[$i]\
    \ > $a[$i-1]) {\n            $mono = 0;\n            last;\n        }\n    }\n\
    \    return $mono;\n}", "my $array = shift;\n    my $i;\n    my $j;\n    my $n\
    \ = scalar(@$array);\n    my $increasing = 1;\n    my $decreasing = 1;\n    for\
    \ ($i = 0; $i < $n - 1; $i++) {\n        if ($array->[$i] > $array->[$i + 1])\
    \ {\n            $increasing = 0;\n        }\n        if ($array->[$i] < $array->[$i\
    \ + 1]) {\n            $decreasing = 0;\n        }\n    }\n    return ($increasing\
    \ || $decreasing);\n}", "my $array = shift;\n    my $direction = 0;\n    my $last\
    \ = $array->[0];\n    foreach my $elem (@$array) {\n        if ($elem > $last)\
    \ {\n            if ($direction == -1) {\n                return \"\";\n     \
    \       }\n            $direction = 1;\n        } elsif ($elem < $last) {\n  \
    \          if ($direction == 1) {\n                return \"\";\n            }\n\
    \            $direction = -1;\n        }\n        $last = $elem;\n    }\n    return\
    \ 1;\n}", "my ($array) = @_;\n    my $monotonic = 1;\n    my $direction = 0;\n\
    \    for (my $i = 1; $i < scalar(@$array); $i++) {\n        if ($direction ==\
    \ 0) {\n            if ($array->[$i] > $array->[$i - 1]) {\n                $direction\
    \ = 1;\n            } elsif ($array->[$i] < $array->[$i - 1]) {\n            \
    \    $direction = -1;\n            }\n        } elsif ($direction == 1) {\n  \
    \          if ($array->[$i] < $array->[$i - 1]) {\n                $monotonic\
    \ = 0;\n                last;\n            }\n        } elsif ($direction == -1)\
    \ {\n            if ($array->[$i] > $array->[$i - 1]) {\n                $monotonic\
    \ = 0;\n                last;\n            }\n        }\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $direction = 0;\n    my $prev = $array->[0];\n\
    \    for (my $i = 1; $i < @$array; $i++) {\n        my $curr = $array->[$i];\n\
    \        if ($curr > $prev) {\n            if ($direction == -1) {\n         \
    \       return \"\";\n            }\n            $direction = 1;\n        } elsif\
    \ ($curr < $prev) {\n            if ($direction == 1) {\n                return\
    \ \"\";\n            }\n            $direction = -1;\n        }\n        $prev\
    \ = $curr;\n    }\n    return $direction;\n}", "my ($array) = @_;\n    my $n =\
    \ scalar(@$array);\n    my $increasing = 1;\n    my $decreasing = 1;\n    for\
    \ (my $i = 1; $i < $n; $i++) {\n        $increasing = 0 if $array->[$i] < $array->[$i\
    \ - 1];\n        $decreasing = 0 if $array->[$i] > $array->[$i - 1];\n    }\n\
    \    return $increasing || $decreasing;\n}", "my @array = @_;\n    my $increasing\
    \ = 1;\n    my $decreasing = 1;\n    for (my $i = 1; $i < @array; $i++) {\n  \
    \      $increasing = 0 if $array[$i] < $array[$i - 1];\n        $decreasing =\
    \ 0 if $array[$i] > $array[$i - 1];\n    }\n    return $increasing || $decreasing;\n\
    }", "my $array = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    my\
    \ $last = shift @$array;\n    foreach my $element (@$array) {\n        if ($direction\
    \ == 0) {\n            if ($element > $last) {\n                $direction = 1;\n\
    \            } elsif ($element < $last) {\n                $direction = -1;\n\
    \            }\n        } else {\n            if ($direction == 1 && $element\
    \ < $last) {\n                $monotonic = 0;\n                last;\n       \
    \     } elsif ($direction == -1 && $element > $last) {\n                $monotonic\
    \ = 0;\n                last;\n            }\n        }\n        $last = $element;\n\
    \    }\n    return $monotonic;\n}", "my $array = shift;\n    my $prev = $array->[0];\n\
    \    my $increasing = 0;\n    my $decreasing = 0;\n    for my $i (1 .. $#$array)\
    \ {\n        if ($array->[$i] > $prev) {\n            $increasing = 1;\n     \
    \   }\n        elsif ($array->[$i] < $prev) {\n            $decreasing = 1;\n\
    \        }\n        $prev = $array->[$i];\n    }\n    return $increasing && !$decreasing;\n\
    }", "my $array = shift;\n    my $result = 0;\n    my $i = 0;\n    my $j = 1;\n\
    \    my $k = 2;\n    my $n = scalar(@$array);\n    my $direction = 0;\n    while\
    \ ($k < $n) {\n        if ($array->[$i] < $array->[$j]) {\n            if ($array->[$j]\
    \ < $array->[$k]) {\n                $direction = 1;\n            }\n        \
    \    elsif ($array->[$j] > $array->[$k]) {\n                return $result;\n\
    \            }\n        }\n        elsif ($array->[$i] > $array->[$j]) {\n   \
    \         if ($array->[$j] > $array->[$k]) {\n                $direction = -1;\n\
    \            }\n            elsif ($array->[$j] < $array->[$k]) {\n          \
    \      return $result;\n            }\n        }\n        $i++;\n        $j++;\n\
    \        $k++;\n    }\n    $result = $direction;\n    return $result;\n}", "my\
    \ ($array) = @_;\n    my $direction = 0;\n    my $prev = $array->[0];\n    for\
    \ my $i (1 .. $#$array) {\n        my $curr = $array->[$i];\n        if ($prev\
    \ < $curr) {\n            return \"\" if $direction == -1;\n            $direction\
    \ = 1;\n        } elsif ($prev > $curr) {\n            return \"\" if $direction\
    \ == 1;\n            $direction = -1;\n        }\n        $prev = $curr;\n   \
    \ }\n    return 1;\n}", "my $array = shift;\n    my $n = scalar @$array;\n   \
    \ my $increasing = 1;\n    my $decreasing = 1;\n    for (my $i = 1; $i < $n; $i++)\
    \ {\n        if ($array->[$i] < $array->[$i-1]) {\n            $increasing = 0;\n\
    \        }\n        if ($array->[$i] > $array->[$i-1]) {\n            $decreasing\
    \ = 0;\n        }\n    }\n    return $increasing || $decreasing;\n}", "my $array\
    \ = shift;\n    my $increasing = 1;\n    my $decreasing = 1;\n    for (my $i =\
    \ 1; $i < @$array; $i++) {\n        if ($array->[$i] < $array->[$i-1]) {\n   \
    \         $increasing = 0;\n        }\n        if ($array->[$i] > $array->[$i-1])\
    \ {\n            $decreasing = 0;\n        }\n    }\n    return $increasing ||\
    \ $decreasing;\n}", "my $array = shift;\n    my $increasing = 1;\n    my $decreasing\
    \ = 1;\n    my $i = 0;\n    while ( $i < @$array-1 ) {\n        if ( $array->[$i]\
    \ > $array->[$i+1] ) {\n            $increasing = 0;\n        }\n        if (\
    \ $array->[$i] < $array->[$i+1] ) {\n            $decreasing = 0;\n        }\n\
    \        $i++;\n    }\n    return ($increasing || $decreasing);\n}", "my $array\
    \ = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    my $prev = $array->[0];\n\
    \    foreach my $i (1..$#{$array}) {\n        if ($direction == 0) {\n       \
    \     if ($array->[$i] > $prev) {\n                $direction = 1;\n         \
    \   } elsif ($array->[$i] < $prev) {\n                $direction = -1;\n     \
    \       }\n        } else {\n            if ($direction == 1 && $array->[$i] <\
    \ $prev) {\n                $monotonic = 0;\n                last;\n         \
    \   } elsif ($direction == -1 && $array->[$i] > $prev) {\n                $monotonic\
    \ = 0;\n                last;\n            }\n        }\n        $prev = $array->[$i];\n\
    \    }\n    return $monotonic;\n}", "my $array = shift;\n    my $direction = 0;\n\
    \    my $last = $array->[0];\n    foreach my $current (@$array) {\n        if\
    \ ($current > $last) {\n            if ($direction == -1) {\n                return\
    \ \"\";\n            }\n            $direction = 1;\n        } elsif ($current\
    \ < $last) {\n            if ($direction == 1) {\n                return \"\"\
    ;\n            }\n            $direction = -1;\n        }\n        $last = $current;\n\
    \    }\n    return $direction;\n}", "my $array = shift;\n    my $monotonic = 1;\n\
    \    my $direction = 0;\n    my $last = $array->[0];\n    foreach my $element\
    \ (@$array) {\n        if ($direction == 0) {\n            if ($element > $last)\
    \ {\n                $direction = 1;\n            } elsif ($element < $last) {\n\
    \                $direction = -1;\n            }\n        } elsif ($direction\
    \ == 1) {\n            if ($element < $last) {\n                $monotonic = 0;\n\
    \                last;\n            }\n        } elsif ($direction == -1) {\n\
    \            if ($element > $last) {\n                $monotonic = 0;\n      \
    \          last;\n            }\n        }\n        $last = $element;\n    }\n\
    \    return $monotonic;\n}", "my $array = shift;\n    my $monotonic = 1;\n   \
    \ my $direction = 0;\n    my $last = $array->[0];\n    foreach my $element (@$array)\
    \ {\n        if ($direction == 0) {\n            if ($element > $last) {\n   \
    \             $direction = 1;\n            } elsif ($element < $last) {\n    \
    \            $direction = -1;\n            }\n        } else {\n            if\
    \ ($direction == 1 && $element < $last) {\n                $monotonic = 0;\n \
    \               last;\n            } elsif ($direction == -1 && $element > $last)\
    \ {\n                $monotonic = 0;\n                last;\n            }\n \
    \       }\n        $last = $element;\n    }\n    return $monotonic;\n}", "my $array\
    \ = shift;\n    my $direction = 0;\n    my $prev = $array->[0];\n    for my $i\
    \ (1 .. $#$array) {\n        my $curr = $array->[$i];\n        if ($curr > $prev)\
    \ {\n            if ($direction == -1) {\n                return \"\";\n     \
    \       }\n            $direction = 1;\n        } elsif ($curr < $prev) {\n  \
    \          if ($direction == 1) {\n                return \"\";\n            }\n\
    \            $direction = -1;\n        }\n        $prev = $curr;\n    }\n    return\
    \ 1;\n}", "my $array = shift;\n    my $mono = 1;\n    my $i = 0;\n    while ($i\
    \ < @$array-1) {\n        if ($array->[$i] > $array->[$i+1]) {\n            $mono\
    \ = 0;\n            last;\n        }\n        $i++;\n    }\n    return $mono;\n\
    }", "my $array = shift;\n    my $size = scalar @$array;\n    my $i = 0;\n    my\
    \ $inc = 0;\n    my $dec = 0;\n    for ($i = 0; $i < $size - 1; $i++) {\n    \
    \    if ($array->[$i] < $array->[$i + 1]) {\n            $inc = 1;\n        }\n\
    \        if ($array->[$i] > $array->[$i + 1]) {\n            $dec = 1;\n     \
    \   }\n    }\n    if ($inc && $dec) {\n        return \"\";\n    }\n    return\
    \ 1;\n}", "my @array = @_;\n    my $mono = 0;\n    my $i = 0;\n    my $j = 1;\n\
    \    my $k = 2;\n    my $len = scalar @array;\n    if ($len < 3) {\n        return\
    \ 1;\n    }\n    while ($k < $len) {\n        if ($array[$i] < $array[$j] && $array[$j]\
    \ < $array[$k]) {\n            $mono = 1;\n        } elsif ($array[$i] > $array[$j]\
    \ && $array[$j] > $array[$k]) {\n            $mono = 1;\n        } else {\n  \
    \          $mono = 0;\n            last;\n        }\n        $i++;\n        $j++;\n\
    \        $k++;\n    }\n    return $mono;\n}", "my $array = shift;\n    my $monotonic\
    \ = 1;\n    my $direction = 0;\n    my $last_value = $array->[0];\n    foreach\
    \ my $value (@$array) {\n        if ($direction == 0) {\n            if ($value\
    \ > $last_value) {\n                $direction = 1;\n            } elsif ($value\
    \ < $last_value) {\n                $direction = -1;\n            }\n        }\
    \ elsif ($direction == 1) {\n            if ($value < $last_value) {\n       \
    \         $monotonic = 0;\n                last;\n            }\n        } elsif\
    \ ($direction == -1) {\n            if ($value > $last_value) {\n            \
    \    $monotonic = 0;\n                last;\n            }\n        }\n      \
    \  $last_value = $value;\n    }\n    return $monotonic;\n}", "my $array = shift;\n\
    \    my $monotonic = 1;\n    my $i = 0;\n    while ($i < $#{$array}) {\n     \
    \   if ($array->[$i] > $array->[$i+1]) {\n            $monotonic = 0;\n      \
    \      last;\n        }\n        $i++;\n    }\n    return $monotonic;\n}", "my\
    \ $array = shift;\n    my $monotonic = 1;\n    my $prev = $array->[0];\n    for\
    \ (my $i = 1; $i < scalar(@$array); $i++) {\n        if ($array->[$i] != $prev\
    \ && $array->[$i] != $prev + 1 && $array->[$i] != $prev - 1) {\n            $monotonic\
    \ = 0;\n            last;\n        }\n        $prev = $array->[$i];\n    }\n \
    \   return $monotonic;\n}", "my $array = shift;\n    my $len = scalar @$array;\n\
    \    my $i = 0;\n    my $inc = 0;\n    my $dec = 0;\n    while ($i < $len - 1)\
    \ {\n        if ($array->[$i] < $array->[$i + 1]) {\n            $inc = 1;\n \
    \       }\n        if ($array->[$i] > $array->[$i + 1]) {\n            $dec =\
    \ 1;\n        }\n        if ($inc && $dec) {\n            return \"\";\n     \
    \   }\n        $i++;\n    }\n    return 1;\n}", "my @array = @_;\n    my $monotonic\
    \ = 1;\n    my $direction = 0;\n    my $prev = $array[0];\n    for my $i (1 ..\
    \ $#array) {\n        if ($direction == 0) {\n            if ($array[$i] > $prev)\
    \ {\n                $direction = 1;\n            } elsif ($array[$i] < $prev)\
    \ {\n                $direction = -1;\n            }\n        } else {\n     \
    \       if ($direction == 1 && $array[$i] < $prev) {\n                $monotonic\
    \ = 0;\n                last;\n            } elsif ($direction == -1 && $array[$i]\
    \ > $prev) {\n                $monotonic = 0;\n                last;\n       \
    \     }\n        }\n        $prev = $array[$i];\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $direction = 0;\n    my $prev = $array->[0];\n\
    \    for my $i (1 .. $#$array) {\n        if ($array->[$i] > $prev) {\n      \
    \      if ($direction == -1) {\n                return \"\";\n            }\n\
    \            $direction = 1;\n        } elsif ($array->[$i] < $prev) {\n     \
    \       if ($direction == 1) {\n                return \"\";\n            }\n\
    \            $direction = -1;\n        }\n        $prev = $array->[$i];\n    }\n\
    \    return $direction;\n}", "my @array = @_;\n    my $direction = 0;\n    my\
    \ $last = $array[0];\n    foreach my $elem (@array) {\n        if ($direction\
    \ == 0) {\n            if ($elem > $last) {\n                $direction = 1;\n\
    \            } elsif ($elem < $last) {\n                $direction = -1;\n   \
    \         }\n        } elsif ($direction == 1) {\n            if ($elem < $last)\
    \ {\n                return \"\";\n            }\n        } elsif ($direction\
    \ == -1) {\n            if ($elem > $last) {\n                return \"\";\n \
    \           }\n        }\n        $last = $elem;\n    }\n    return 1;\n}", "my\
    \ $array = shift;\n    my $monotonic = 0;\n    my $increasing = 1;\n    my $decreasing\
    \ = 1;\n    for (my $i = 1; $i < @$array; $i++) {\n        if ($array->[$i] >\
    \ $array->[$i-1]) {\n            $decreasing = 0;\n        }\n        if ($array->[$i]\
    \ < $array->[$i-1]) {\n            $increasing = 0;\n        }\n    }\n    if\
    \ ($increasing || $decreasing) {\n        $monotonic = 1;\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $direction = 0;\n    my $prev = $array->[0];\n\
    \    for my $i (1 .. $#$array) {\n        my $curr = $array->[$i];\n        if\
    \ ($curr > $prev) {\n            if ($direction == -1) {\n                return\
    \ \"\";\n            }\n            $direction = 1;\n        } elsif ($curr <\
    \ $prev) {\n            if ($direction == 1) {\n                return \"\";\n\
    \            }\n            $direction = -1;\n        }\n        $prev = $curr;\n\
    \    }\n    return 1;\n}", "my @array = @_;\n    my $monotonic = 0;\n    my $direction\
    \ = 0;\n    my $i = 0;\n    while ($i < scalar(@array) - 1) {\n        if ($array[$i]\
    \ < $array[$i + 1]) {\n            if ($direction == 0) {\n                $direction\
    \ = 1;\n            }\n            elsif ($direction == -1) {\n              \
    \  return \"\";\n            }\n        }\n        elsif ($array[$i] > $array[$i\
    \ + 1]) {\n            if ($direction == 0) {\n                $direction = -1;\n\
    \            }\n            elsif ($direction == 1) {\n                return\
    \ \"\";\n            }\n        }\n        $i++;\n    }\n    return 1;\n}", "my\
    \ $aref = shift;\n    my $len = scalar @$aref;\n    my $inc = 0;\n    my $dec\
    \ = 0;\n    for (my $i = 0; $i < $len - 1; $i++) {\n        if ($aref->[$i] <\
    \ $aref->[$i + 1]) {\n            $inc++;\n        }\n        if ($aref->[$i]\
    \ > $aref->[$i + 1]) {\n            $dec++;\n        }\n    }\n    if ($inc ==\
    \ $len - 1) {\n        return 1;\n    }\n    if ($dec == $len - 1) {\n       \
    \ return 1;\n    }\n    return \"\";\n}", "my $array = shift;\n    my $prev =\
    \ $array->[0];\n    my $increasing = 1;\n    my $decreasing = 1;\n    foreach\
    \ my $elem (@$array) {\n        if ($elem < $prev) {\n            $increasing\
    \ = 0;\n        }\n        if ($elem > $prev) {\n            $decreasing = 0;\n\
    \        }\n        $prev = $elem;\n    }\n    return $increasing || $decreasing;\n\
    }", "my $array = shift;\n    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$array);\n\
    \    my $increasing = 1;\n    my $decreasing = 1;\n    for ($i = 0; $i < $n -\
    \ 1; $i++) {\n        if ($array->[$i] > $array->[$i + 1]) {\n            $increasing\
    \ = 0;\n        }\n        if ($array->[$i] < $array->[$i + 1]) {\n          \
    \  $decreasing = 0;\n        }\n    }\n    if ($increasing == 1 || $decreasing\
    \ == 1) {\n        return 1;\n    } else {\n        return \"\";\n    }\n}", "my\
    \ $array = shift;\n    my $direction = 0;\n    my $prev = $array->[0];\n    foreach\
    \ my $i (1..$#$array) {\n        if ($array->[$i] > $prev) {\n            if ($direction\
    \ == -1) {\n                return \"\";\n            }\n            $direction\
    \ = 1;\n        } elsif ($array->[$i] < $prev) {\n            if ($direction ==\
    \ 1) {\n                return \"\";\n            }\n            $direction =\
    \ -1;\n        }\n        $prev = $array->[$i];\n    }\n    return $direction;\n\
    }", "my $array = shift;\n    my $i;\n    my $inc = 0;\n    my $dec = 0;\n    for\
    \ ($i = 1; $i < @$array; $i++) {\n        if ($array->[$i] > $array->[$i-1]) {\n\
    \            $inc = 1;\n        }\n        if ($array->[$i] < $array->[$i-1])\
    \ {\n            $dec = 1;\n        }\n    }\n    return ($inc && $dec) ? \"\"\
    \ : 1;\n}", "my $array = shift;\n    my $monotonic = 1;\n    my $prev = $array->[0];\n\
    \    for my $i (1 .. $#$array) {\n        if ($array->[$i] > $prev) {\n      \
    \      $monotonic = -1;\n            last;\n        }\n        $prev = $array->[$i];\n\
    \    }\n    return $monotonic;\n}", "my $array = shift;\n    my $direction = 0;\n\
    \    for (my $i = 1; $i < @$array; $i++) {\n        if ($array->[$i] > $array->[$i-1])\
    \ {\n            if ($direction == -1) {\n                return \"\";\n     \
    \       }\n            $direction = 1;\n        } elsif ($array->[$i] < $array->[$i-1])\
    \ {\n            if ($direction == 1) {\n                return \"\";\n      \
    \      }\n            $direction = -1;\n        }\n    }\n    return 1;\n}", "my\
    \ $array = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    my $previous\
    \ = 0;\n    foreach my $element (@$array) {\n        if ($previous) {\n      \
    \      if ($direction == 0) {\n                if ($element > $previous) {\n \
    \                   $direction = 1;\n                } elsif ($element < $previous)\
    \ {\n                    $direction = -1;\n                }\n            } elsif\
    \ ($direction == 1) {\n                if ($element < $previous) {\n         \
    \           $monotonic = \"\";\n                    last;\n                }\n\
    \            } elsif ($direction == -1) {\n                if ($element > $previous)\
    \ {\n                    $monotonic = \"\";\n                    last;\n     \
    \           }\n            }\n        }\n        $previous = $element;\n    }\n\
    \    return $monotonic;\n}", "my $array = shift;\n    my $monotonic = 1;\n   \
    \ my $i = 0;\n    while ($i < scalar(@$array) - 1) {\n        if ($array->[$i]\
    \ < $array->[$i + 1]) {\n            $i++;\n            while ($i < scalar(@$array)\
    \ - 1) {\n                if ($array->[$i] > $array->[$i + 1]) {\n           \
    \         $monotonic = 0;\n                    last;\n                }\n    \
    \            $i++;\n            }\n        } elsif ($array->[$i] > $array->[$i\
    \ + 1]) {\n            $i++;\n            while ($i < scalar(@$array) - 1) {\n\
    \                if ($array->[$i] < $array->[$i + 1]) {\n                    $monotonic\
    \ = 0;\n                    last;\n                }\n                $i++;\n\
    \            }\n        }\n    }\n    return $monotonic;\n}", "my $array = shift;\n\
    \    my $direction = 0;\n    my $last = $array->[0];\n    for (my $i = 1; $i <\
    \ @$array; $i++) {\n        if ($last < $array->[$i]) {\n            if ($direction\
    \ == -1) {\n                return \"\";\n            }\n            $direction\
    \ = 1;\n        } elsif ($last > $array->[$i]) {\n            if ($direction ==\
    \ 1) {\n                return \"\";\n            }\n            $direction =\
    \ -1;\n        }\n        $last = $array->[$i];\n    }\n    return 1;\n}", "my\
    \ $array = shift;\n    my $direction = 0;\n    for (my $i = 1; $i < @$array; $i++)\
    \ {\n        my $diff = $array->[$i] - $array->[$i-1];\n        if ($diff > 0)\
    \ {\n            if ($direction == -1) {\n                return \"\";\n     \
    \       }\n            $direction = 1;\n        } elsif ($diff < 0) {\n      \
    \      if ($direction == 1) {\n                return \"\";\n            }\n \
    \           $direction = -1;\n        }\n    }\n    return 1;\n}", "my $array\
    \ = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    my $prev = $array->[0];\n\
    \    foreach my $i (1..$#{$array}) {\n        if ($direction == 0) {\n       \
    \     if ($array->[$i] > $prev) {\n                $direction = 1;\n         \
    \   } elsif ($array->[$i] < $prev) {\n                $direction = -1;\n     \
    \       }\n        } else {\n            if ($direction == 1 && $array->[$i] <\
    \ $prev) {\n                $monotonic = 0;\n                last;\n         \
    \   } elsif ($direction == -1 && $array->[$i] > $prev) {\n                $monotonic\
    \ = 0;\n                last;\n            }\n        }\n        $prev = $array->[$i];\n\
    \    }\n    return $monotonic;\n}", "my $array = shift;\n    my $monotonic = 1;\n\
    \    my $direction = 0;\n    my $prev = $array->[0];\n    foreach my $i (1..$#{$array})\
    \ {\n        my $curr = $array->[$i];\n        if ($curr == $prev) {\n       \
    \     next;\n        }\n        if ($direction == 0) {\n            $direction\
    \ = $curr > $prev ? 1 : -1;\n        }\n        if ($direction == 1) {\n     \
    \       if ($curr < $prev) {\n                $monotonic = 0;\n              \
    \  last;\n            }\n        }\n        else {\n            if ($curr > $prev)\
    \ {\n                $monotonic = 0;\n                last;\n            }\n \
    \       }\n        $prev = $curr;\n    }\n    return $monotonic;\n}", "my $array\
    \ = shift;\n    my $len = scalar @$array;\n    my $inc = 0;\n    my $dec = 0;\n\
    \    for (my $i = 0; $i < $len-1; $i++) {\n        if ($array->[$i] < $array->[$i+1])\
    \ {\n            $inc = 1;\n        }\n        if ($array->[$i] > $array->[$i+1])\
    \ {\n            $dec = 1;\n        }\n    }\n    if ($inc && $dec) {\n      \
    \  return 0;\n    }\n    return 1;\n}", "my $array = shift;\n    my $monotonic\
    \ = 0;\n    my $i = 0;\n    my $j = 1;\n    my $k = 2;\n    my $increase = 0;\n\
    \    my $decrease = 0;\n    my $len = scalar @$array;\n    while ($k < $len) {\n\
    \        if ($array->[$i] < $array->[$j] && $array->[$j] < $array->[$k]) {\n \
    \           $increase = 1;\n        }\n        if ($array->[$i] > $array->[$j]\
    \ && $array->[$j] > $array->[$k]) {\n            $decrease = 1;\n        }\n \
    \       $i++;\n        $j++;\n        $k++;\n    }\n    if ($increase == 1 ||\
    \ $decrease == 1) {\n        $monotonic = 1;\n    }\n    return $monotonic;\n}",
  "my $array = shift;\n    my $direction = 0;\n    for (my $i = 1; $i < @$array; $i++)\
    \ {\n        my $diff = $array->[$i] - $array->[$i-1];\n        if ($diff == 0)\
    \ {\n            next;\n        }\n        if ($direction == 0) {\n          \
    \  $direction = $diff;\n        }\n        if ($direction * $diff < 0) {\n   \
    \         return \"\";\n        }\n    }\n    return 1;\n}", "my $array = shift;\n\
    \    my $last = $array->[0];\n    my $increasing = 0;\n    my $decreasing = 0;\n\
    \    for my $i (1 .. $#$array) {\n        if ($array->[$i] > $last) {\n      \
    \      $increasing = 1;\n        }\n        elsif ($array->[$i] < $last) {\n \
    \           $decreasing = 1;\n        }\n        $last = $array->[$i];\n    }\n\
    \    return $increasing + $decreasing;\n}", "my $array = shift;\n    my $direction\
    \ = 0;\n    for (my $i = 1; $i < @$array; $i++) {\n        my $diff = $array->[$i]\
    \ - $array->[$i-1];\n        if ($diff == 0) {\n            next;\n        }\n\
    \        if ($direction == 0) {\n            $direction = $diff > 0 ? 1 : -1;\n\
    \        }\n        if ($direction * $diff < 0) {\n            return \"\";\n\
    \        }\n    }\n    return 1;\n}", "my $array = shift;\n    my $mono = 0;\n\
    \    my $i = 0;\n    my $j = 1;\n    my $k = 2;\n    my $len = scalar(@$array);\n\
    \    my $diff = $array->[$j] - $array->[$i];\n    my $diff2 = $array->[$k] - $array->[$j];\n\
    \    if ($diff2 == 0) {\n        return 0;\n    }\n    if ($diff == 0) {\n   \
    \     return 0;\n    }\n    if ($diff2 * $diff > 0) {\n        $mono = 1;\n  \
    \  }\n    return $mono;\n}", "my @a = @_;\n    my $n = scalar @a;\n    my $i;\n\
    \    my $inc = 0;\n    my $dec = 0;\n    for ($i = 1; $i < $n; $i++) {\n     \
    \   if ($a[$i] > $a[$i - 1]) {\n            $inc = 1;\n        }\n        if ($a[$i]\
    \ < $a[$i - 1]) {\n            $dec = 1;\n        }\n    }\n    if ($inc && $dec)\
    \ {\n        return \"\";\n    }\n    return 1;\n}", "my $array = shift;\n   \
    \ my $monotonic = 0;\n    my $i = 0;\n    my $j = 1;\n    my $k = 2;\n    my $increasing\
    \ = 0;\n    my $decreasing = 0;\n    while ($k < scalar(@$array)) {\n        if\
    \ ($array->[$i] < $array->[$j] && $array->[$j] < $array->[$k]) {\n           \
    \ $increasing = 1;\n        }\n        if ($array->[$i] > $array->[$j] && $array->[$j]\
    \ > $array->[$k]) {\n            $decreasing = 1;\n        }\n        $i++;\n\
    \        $j++;\n        $k++;\n    }\n    if ($increasing || $decreasing) {\n\
    \        $monotonic = 1;\n    }\n    return $monotonic;\n}", "my $array = shift;\n\
    \    my $direction = 0;\n    for (my $i = 1; $i < @$array; $i++) {\n        if\
    \ ($array->[$i] > $array->[$i-1]) {\n            if ($direction == -1) {\n   \
    \             return '';\n            }\n            $direction = 1;\n       \
    \ } elsif ($array->[$i] < $array->[$i-1]) {\n            if ($direction == 1)\
    \ {\n                return '';\n            }\n            $direction = -1;\n\
    \        }\n    }\n    return 1;\n}", "my $array = shift;\n    my $direction =\
    \ 0;\n    my $last = $array->[0];\n    foreach my $elem (@$array) {\n        if\
    \ ($direction == 0) {\n            if ($elem > $last) {\n                $direction\
    \ = 1;\n            } elsif ($elem < $last) {\n                $direction = -1;\n\
    \            }\n        } elsif ($direction == 1) {\n            if ($elem < $last)\
    \ {\n                return \"\";\n            }\n        } elsif ($direction\
    \ == -1) {\n            if ($elem > $last) {\n                return \"\";\n \
    \           }\n        }\n        $last = $elem;\n    }\n    return 1;\n}", "my\
    \ $array = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    my $i =\
    \ 0;\n    while ($i < scalar(@$array) - 1) {\n        if ($array->[$i] < $array->[$i\
    \ + 1]) {\n            if ($direction == 0) {\n                $direction = 1;\n\
    \            } elsif ($direction == -1) {\n                $monotonic = 0;\n \
    \               last;\n            }\n        } elsif ($array->[$i] > $array->[$i\
    \ + 1]) {\n            if ($direction == 0) {\n                $direction = -1;\n\
    \            } elsif ($direction == 1) {\n                $monotonic = 0;\n  \
    \              last;\n            }\n        }\n        $i++;\n    }\n    return\
    \ $monotonic;\n}", "my $array = shift;\n    my $direction = 0;\n    my $last =\
    \ $array->[0];\n    foreach my $value (@$array) {\n        if ($direction == 0)\
    \ {\n            if ($value > $last) {\n                $direction = 1;\n    \
    \        } elsif ($value < $last) {\n                $direction = -1;\n      \
    \      }\n        } elsif ($direction == 1) {\n            if ($value < $last)\
    \ {\n                return \"\";\n            }\n        } elsif ($direction\
    \ == -1) {\n            if ($value > $last) {\n                return \"\";\n\
    \            }\n        }\n        $last = $value;\n    }\n    return 1;\n}",
  "my $array = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    for (my\
    \ $i = 1; $i < @$array; $i++) {\n        if ($direction == 0) {\n            if\
    \ ($array->[$i] > $array->[$i-1]) {\n                $direction = 1;\n       \
    \     } elsif ($array->[$i] < $array->[$i-1]) {\n                $direction =\
    \ -1;\n            }\n        } else {\n            if ($direction == 1 && $array->[$i]\
    \ < $array->[$i-1]) {\n                $monotonic = 0;\n                last;\n\
    \            } elsif ($direction == -1 && $array->[$i] > $array->[$i-1]) {\n \
    \               $monotonic = 0;\n                last;\n            }\n      \
    \  }\n    }\n    return $monotonic;\n}", "my $array = shift;\n    my $mono = 1;\n\
    \    my $direction = 0;\n    my $i = 0;\n    my $j = 1;\n    my $k = 2;\n    my\
    \ $n = @$array;\n    while ($k < $n) {\n        if ($array->[$i] < $array->[$j])\
    \ {\n            if ($direction == -1) {\n                $mono = 0;\n       \
    \         last;\n            }\n            $direction = 1;\n        }\n     \
    \   elsif ($array->[$i] > $array->[$j]) {\n            if ($direction == 1) {\n\
    \                $mono = 0;\n                last;\n            }\n          \
    \  $direction = -1;\n        }\n        $i++;\n        $j++;\n        $k++;\n\
    \    }\n    return $mono;\n}", "my $array = shift;\n    my $size = scalar @$array;\n\
    \    my $i = 0;\n    while ($i < $size - 1) {\n        if ($array->[$i] > $array->[$i\
    \ + 1]) {\n            return 0;\n        }\n        $i++;\n    }\n    return\
    \ 1;\n}", "my $array = shift;\n    my $i;\n    my $inc = 0;\n    my $dec = 0;\n\
    \    my $len = scalar(@$array);\n    for ($i = 1; $i < $len; $i++) {\n       \
    \ if ($array->[$i] > $array->[$i - 1]) {\n            $inc = 1;\n        } elsif\
    \ ($array->[$i] < $array->[$i - 1]) {\n            $dec = 1;\n        }\n    \
    \    if ($inc && $dec) {\n            return 0;\n        }\n    }\n    return\
    \ 1;\n}", "my $array = shift;\n    my $monotonic = 1;\n    my $i;\n    for ($i\
    \ = 1; $i < @$array; $i++) {\n        if ($array->[$i] == $array->[$i-1]) {\n\
    \            next;\n        }\n        if ($array->[$i] > $array->[$i-1]) {\n\
    \            if ($monotonic == -1) {\n                return \"\";\n         \
    \   }\n            $monotonic = 1;\n        }\n        else {\n            if\
    \ ($monotonic == 1) {\n                return \"\";\n            }\n         \
    \   $monotonic = -1;\n        }\n    }\n    return $monotonic;\n}", "my $array\
    \ = shift;\n    my $direction = 0;\n    my $prev = undef;\n    foreach my $elem\
    \ (@$array) {\n        if (defined $prev) {\n            if ($elem > $prev) {\n\
    \                if ($direction == -1) {\n                    return \"\";\n \
    \               }\n                $direction = 1;\n            }\n          \
    \  elsif ($elem < $prev) {\n                if ($direction == 1) {\n         \
    \           return \"\";\n                }\n                $direction = -1;\n\
    \            }\n        }\n        $prev = $elem;\n    }\n    return 1;\n}", "my\
    \ $array = shift;\n    my $direction = 0;\n    my $prev = $array->[0];\n    foreach\
    \ my $i (1..$#$array) {\n        my $diff = $array->[$i] - $prev;\n        if\
    \ ($diff == 0) {\n            next;\n        }\n        if ($direction == 0) {\n\
    \            $direction = $diff;\n        }\n        if ($direction * $diff <\
    \ 0) {\n            return \"\";\n        }\n        $prev = $array->[$i];\n \
    \   }\n    return 1;\n}", "my ($array) = @_;\n    my $direction = 0;\n    for\
    \ (my $i = 1; $i < @$array; $i++) {\n        if ($array->[$i] > $array->[$i -\
    \ 1]) {\n            if ($direction == -1) {\n                return \"\";\n \
    \           }\n            $direction = 1;\n        } elsif ($array->[$i] < $array->[$i\
    \ - 1]) {\n            if ($direction == 1) {\n                return \"\";\n\
    \            }\n            $direction = -1;\n        }\n    }\n    return 1;\n\
    }", "my @a = @_;\n    my $i;\n    for ($i = 1; $i < @a; $i++) {\n        if ($a[$i]\
    \ > $a[$i-1]) {\n            last;\n        }\n    }\n    if ($i == @a) {\n  \
    \      return 1;\n    }\n    for ($i = 1; $i < @a; $i++) {\n        if ($a[$i]\
    \ < $a[$i-1]) {\n            last;\n        }\n    }\n    if ($i == @a) {\n  \
    \      return 1;\n    }\n    return \"\";\n}", "my $array = shift;\n    my $size\
    \ = scalar @$array;\n    my $direction = 0;\n    for (my $i = 0; $i < $size -\
    \ 1; $i++) {\n        my $diff = $array->[$i + 1] - $array->[$i];\n        if\
    \ ($diff == 0) {\n            next;\n        }\n        if ($direction == 0) {\n\
    \            $direction = $diff;\n        }\n        if ($direction * $diff <\
    \ 0) {\n            return \"\";\n        }\n    }\n    return 1;\n}", "my $array\
    \ = shift;\n    my $monotonic = 0;\n    my $direction = 0;\n    my $prev = 0;\n\
    \    foreach my $elem (@$array) {\n        if ($prev == 0) {\n            $prev\
    \ = $elem;\n            next;\n        }\n        if ($direction == 0) {\n   \
    \         if ($elem > $prev) {\n                $direction = 1;\n            }\
    \ elsif ($elem < $prev) {\n                $direction = -1;\n            }\n \
    \       }\n        if ($direction == 1) {\n            if ($elem < $prev) {\n\
    \                return 0;\n            }\n        } elsif ($direction == -1)\
    \ {\n            if ($elem > $prev) {\n                return 0;\n           \
    \ }\n        }\n        $prev = $elem;\n    }\n    return 1;\n}", "my $array =\
    \ shift;\n    my $direction = 0;\n    for (my $i = 1; $i < @$array; $i++) {\n\
    \        if ($array->[$i] > $array->[$i-1]) {\n            if ($direction == -1)\
    \ {\n                return \"\";\n            }\n            $direction = 1;\n\
    \        } elsif ($array->[$i] < $array->[$i-1]) {\n            if ($direction\
    \ == 1) {\n                return \"\";\n            }\n            $direction\
    \ = -1;\n        }\n    }\n    return 1;\n}", "my $array = shift;\n    my $monotonic\
    \ = 1;\n    my $direction = 0;\n    for (my $i = 1; $i < @$array; $i++) {\n  \
    \      if ($direction == 0) {\n            if ($array->[$i] > $array->[$i-1])\
    \ {\n                $direction = 1;\n            } elsif ($array->[$i] < $array->[$i-1])\
    \ {\n                $direction = -1;\n            }\n        } else {\n     \
    \       if ($direction == 1 && $array->[$i] < $array->[$i-1]) {\n            \
    \    $monotonic = 0;\n                last;\n            } elsif ($direction ==\
    \ -1 && $array->[$i] > $array->[$i-1]) {\n                $monotonic = 0;\n  \
    \              last;\n            }\n        }\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$array);\n\
    \    my $increasing = 1;\n    my $decreasing = 1;\n    for ($i = 0; $i < $n -\
    \ 1; $i++) {\n        if ($array->[$i] > $array->[$i + 1]) {\n            $increasing\
    \ = 0;\n        }\n        if ($array->[$i] < $array->[$i + 1]) {\n          \
    \  $decreasing = 0;\n        }\n    }\n    if ($increasing || $decreasing) {\n\
    \        return 1;\n    }\n    return \"\";\n}", "my $array = shift;\n    my $i\
    \ = 0;\n    my $j = 1;\n    my $inc = 0;\n    my $dec = 0;\n    my $len = scalar(@$array);\n\
    \    while ($j < $len) {\n        if ($array->[$i] < $array->[$j]) {\n       \
    \     $inc = 1;\n        }\n        if ($array->[$i] > $array->[$j]) {\n     \
    \       $dec = 1;\n        }\n        if ($inc && $dec) {\n            return\
    \ \"\";\n        }\n        $i++;\n        $j++;\n    }\n    return 1;\n}", "my\
    \ $array = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    my $last\
    \ = $array->[0];\n    foreach my $element (@$array) {\n        if ($direction\
    \ == 0) {\n            if ($element > $last) {\n                $direction = 1;\n\
    \            } elsif ($element < $last) {\n                $direction = -1;\n\
    \            }\n        } elsif ($direction == 1) {\n            if ($element\
    \ < $last) {\n                $monotonic = 0;\n                last;\n       \
    \     }\n        } elsif ($direction == -1) {\n            if ($element > $last)\
    \ {\n                $monotonic = 0;\n                last;\n            }\n \
    \       }\n        $last = $element;\n    }\n    return $monotonic;\n}", "my $array\
    \ = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    my $last = $array->[0];\n\
    \    for my $i (1 .. $#$array) {\n        my $current = $array->[$i];\n      \
    \  if ($current > $last) {\n            if ($direction == -1) {\n            \
    \    $monotonic = 0;\n                last;\n            }\n            $direction\
    \ = 1;\n        } elsif ($current < $last) {\n            if ($direction == 1)\
    \ {\n                $monotonic = 0;\n                last;\n            }\n \
    \           $direction = -1;\n        }\n        $last = $current;\n    }\n  \
    \  return $monotonic;\n}", "my @a = @_;\n    my $n = @a;\n    my $i;\n    my $inc\
    \ = 1;\n    my $dec = 1;\n    for ($i = 1; $i < $n; $i++) {\n        if ($a[$i]\
    \ > $a[$i - 1]) {\n            $dec = 0;\n        }\n        if ($a[$i] < $a[$i\
    \ - 1]) {\n            $inc = 0;\n        }\n    }\n    return $inc || $dec;\n\
    }", "my $array = shift;\n    my $direction = 0;\n    my $last = $array->[0];\n\
    \    foreach my $elem (@$array) {\n        if ($direction == 0) {\n          \
    \  if ($elem > $last) {\n                $direction = 1;\n            } elsif\
    \ ($elem < $last) {\n                $direction = -1;\n            }\n       \
    \ } elsif ($direction == 1) {\n            if ($elem < $last) {\n            \
    \    return \"\";\n            }\n        } elsif ($direction == -1) {\n     \
    \       if ($elem > $last) {\n                return \"\";\n            }\n  \
    \      }\n        $last = $elem;\n    }\n    return 1;\n}", "my $array = shift;\n\
    \    my $monotonic = 1;\n    my $prev = $array->[0];\n    for my $i (1 .. $#$array)\
    \ {\n        if ($array->[$i] > $prev) {\n            $monotonic = 1;\n      \
    \  } elsif ($array->[$i] < $prev) {\n            $monotonic = -1;\n        } else\
    \ {\n            $monotonic = 0;\n        }\n        $prev = $array->[$i];\n \
    \   }\n    return $monotonic;\n}", "my $array = shift;\n    my $monotonic = 1;\n\
    \    my $direction = 0;\n    my $last = $array->[0];\n    for my $i (1 .. $#$array)\
    \ {\n        if ($direction == 0) {\n            if ($array->[$i] > $last) {\n\
    \                $direction = 1;\n            } elsif ($array->[$i] < $last) {\n\
    \                $direction = -1;\n            }\n        } else {\n         \
    \   if ($direction == 1 && $array->[$i] < $last) {\n                $monotonic\
    \ = 0;\n                last;\n            } elsif ($direction == -1 && $array->[$i]\
    \ > $last) {\n                $monotonic = 0;\n                last;\n       \
    \     }\n        }\n        $last = $array->[$i];\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    for\
    \ (my $i = 1; $i < scalar(@$array); $i++) {\n        if ($direction == 0) {\n\
    \            if ($array->[$i] > $array->[$i-1]) {\n                $direction\
    \ = 1;\n            } elsif ($array->[$i] < $array->[$i-1]) {\n              \
    \  $direction = -1;\n            }\n        } elsif ($direction == 1) {\n    \
    \        if ($array->[$i] < $array->[$i-1]) {\n                $monotonic = 0;\n\
    \                last;\n            }\n        } elsif ($direction == -1) {\n\
    \            if ($array->[$i] > $array->[$i-1]) {\n                $monotonic\
    \ = 0;\n                last;\n            }\n        }\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $direction = 0;\n    my $prev = $array->[0];\n\
    \    foreach my $i (1..$#$array) {\n        my $diff = $array->[$i] - $prev;\n\
    \        if ($diff == 0) {\n            next;\n        }\n        if ($direction\
    \ == 0) {\n            $direction = $diff > 0 ? 1 : -1;\n        }\n        elsif\
    \ ($direction == 1 && $diff < 0) {\n            return \"\";\n        }\n    \
    \    elsif ($direction == -1 && $diff > 0) {\n            return \"\";\n     \
    \   }\n        $prev = $array->[$i];\n    }\n    return 1;\n}", "my $array = shift;\n\
    \    my $monotonic = 1;\n    my $i = 0;\n    my $j = 1;\n    my $k = 2;\n    my\
    \ $n = @$array;\n    my $increasing = 1;\n    my $decreasing = 1;\n    while ($k\
    \ < $n) {\n        if ($array->[$i] > $array->[$j]) {\n            $increasing\
    \ = 0;\n        }\n        if ($array->[$i] < $array->[$j]) {\n            $decreasing\
    \ = 0;\n        }\n        $i++;\n        $j++;\n        $k++;\n    }\n    if\
    \ ($increasing == 0 && $decreasing == 0) {\n        $monotonic = 0;\n    }\n \
    \   return $monotonic;\n}", "my $array = shift;\n    my $monotonic = 0;\n    my\
    \ $i = 0;\n    while ($i < @$array - 1) {\n        if ($array->[$i] < $array->[$i\
    \ + 1]) {\n            $monotonic = 1;\n            $i++;\n            while ($i\
    \ < @$array - 1) {\n                if ($array->[$i] > $array->[$i + 1]) {\n \
    \                   $monotonic = 0;\n                    last;\n             \
    \   }\n                $i++;\n            }\n        }\n        elsif ($array->[$i]\
    \ > $array->[$i + 1]) {\n            $monotonic = 1;\n            $i++;\n    \
    \        while ($i < @$array - 1) {\n                if ($array->[$i] < $array->[$i\
    \ + 1]) {\n                    $monotonic = 0;\n                    last;\n  \
    \              }\n                $i++;\n            }\n        }\n        else\
    \ {\n            $i++;\n        }\n    }\n    return $monotonic;\n}", "my $array\
    \ = shift;\n    my $monotonic = 0;\n    my $increasing = 1;\n    my $decreasing\
    \ = 1;\n    my $last = $array->[0];\n    foreach my $elem (@$array) {\n      \
    \  if ($elem > $last) {\n            $decreasing = 0;\n        }\n        if ($elem\
    \ < $last) {\n            $increasing = 0;\n        }\n        $last = $elem;\n\
    \    }\n    if ($increasing || $decreasing) {\n        $monotonic = 1;\n    }\n\
    \    return $monotonic;\n}", "my $array = shift;\n    my $direction = 0;\n   \
    \ for (my $i = 1; $i < @$array; $i++) {\n        if ($array->[$i] > $array->[$i-1])\
    \ {\n            if ($direction == -1) {\n                return \"\";\n     \
    \       }\n            $direction = 1;\n        } elsif ($array->[$i] < $array->[$i-1])\
    \ {\n            if ($direction == 1) {\n                return \"\";\n      \
    \      }\n            $direction = -1;\n        }\n    }\n    return 1;\n}", "my\
    \ $array = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    my $last\
    \ = $array->[0];\n    for my $i (1 .. $#$array) {\n        if ($direction == 0)\
    \ {\n            if ($array->[$i] > $last) {\n                $direction = 1;\n\
    \            } elsif ($array->[$i] < $last) {\n                $direction = -1;\n\
    \            }\n        } elsif ($direction == 1) {\n            if ($array->[$i]\
    \ < $last) {\n                $monotonic = 0;\n                last;\n       \
    \     }\n        } elsif ($direction == -1) {\n            if ($array->[$i] >\
    \ $last) {\n                $monotonic = 0;\n                last;\n         \
    \   }\n        }\n        $last = $array->[$i];\n    }\n    return $monotonic;\n\
    }", "my @arr = @_;\n    my $len = scalar @arr;\n    my $i = 0;\n    my $inc =\
    \ 0;\n    my $dec = 0;\n    while ($i < $len - 1) {\n        if ($arr[$i] < $arr[$i\
    \ + 1]) {\n            $inc = 1;\n        }\n        if ($arr[$i] > $arr[$i +\
    \ 1]) {\n            $dec = 1;\n        }\n        $i++;\n    }\n    if ($inc\
    \ && $dec) {\n        return \"\";\n    }\n    return 1;\n}", "my $array = shift;\n\
    \    my $monotonic = 1;\n    my $direction = 0;\n    my $prev = $array->[0];\n\
    \    for my $i (1 .. $#$array) {\n        if ($direction == 0) {\n           \
    \ if ($array->[$i] > $prev) {\n                $direction = 1;\n            }\
    \ elsif ($array->[$i] < $prev) {\n                $direction = -1;\n         \
    \   }\n        } elsif ($direction == 1) {\n            if ($array->[$i] < $prev)\
    \ {\n                $monotonic = 0;\n                last;\n            }\n \
    \       } elsif ($direction == -1) {\n            if ($array->[$i] > $prev) {\n\
    \                $monotonic = 0;\n                last;\n            }\n     \
    \   }\n        $prev = $array->[$i];\n    }\n    return $monotonic;\n}", "my @array\
    \ = @_;\n    my $i;\n    my $direction = 0;\n    for ($i = 1; $i < @array; $i++)\
    \ {\n        if ($array[$i] > $array[$i - 1]) {\n            if ($direction ==\
    \ -1) {\n                return \"\";\n            }\n            $direction =\
    \ 1;\n        } elsif ($array[$i] < $array[$i - 1]) {\n            if ($direction\
    \ == 1) {\n                return \"\";\n            }\n            $direction\
    \ = -1;\n        }\n    }\n    return 1;\n}", "my $array = shift;\n    my $monotonic\
    \ = 1;\n    my $last = $array->[0];\n    for my $i (1 .. $#$array) {\n       \
    \ if ($last > $array->[$i]) {\n            $monotonic = 0;\n            last;\n\
    \        }\n        $last = $array->[$i];\n    }\n    return $monotonic;\n}",
  "my $array = shift;\n    my $monotonic = 1;\n    my $increasing = 1;\n    my $decreasing\
    \ = 1;\n    for (my $i = 1; $i < @$array; $i++) {\n        if ($array->[$i] >\
    \ $array->[$i-1]) {\n            $decreasing = 0;\n        }\n        if ($array->[$i]\
    \ < $array->[$i-1]) {\n            $increasing = 0;\n        }\n    }\n    if\
    \ ($increasing == 0 && $decreasing == 0) {\n        $monotonic = 0;\n    }\n \
    \   return $monotonic;\n}", "my $array = shift;\n    my $direction = 0;\n    my\
    \ $i = 0;\n    my $j = 1;\n    my $len = scalar @$array;\n    while ($j < $len)\
    \ {\n        if ($array->[$i] < $array->[$j]) {\n            if ($direction ==\
    \ -1) {\n                return \"\";\n            }\n            $direction =\
    \ 1;\n        } elsif ($array->[$i] > $array->[$j]) {\n            if ($direction\
    \ == 1) {\n                return \"\";\n            }\n            $direction\
    \ = -1;\n        }\n        $i++;\n        $j++;\n    }\n    return 1;\n}", "my\
    \ $array = shift;\n    my $monotonic = 1;\n    my $prev = $array->[0];\n    for\
    \ my $i (1 .. $#$array) {\n        if ($array->[$i] > $prev) {\n            if\
    \ ($monotonic == -1) {\n                return \"\";\n            }\n        \
    \    $monotonic = 1;\n        } elsif ($array->[$i] < $prev) {\n            if\
    \ ($monotonic == 1) {\n                return \"\";\n            }\n         \
    \   $monotonic = -1;\n        }\n        $prev = $array->[$i];\n    }\n    return\
    \ $monotonic;\n}", "my $array = shift;\n    my $len = scalar @$array;\n    my\
    \ $increasing = 0;\n    my $decreasing = 0;\n    for (my $i = 0; $i < $len - 1;\
    \ $i++) {\n        if ($array->[$i] < $array->[$i + 1]) {\n            $increasing\
    \ = 1;\n        }\n        if ($array->[$i] > $array->[$i + 1]) {\n          \
    \  $decreasing = 1;\n        }\n    }\n    return $increasing && !$decreasing;\n\
    }", "my $array = shift;\n    my $prev = $array->[0];\n    my $direction = 0;\n\
    \    foreach my $elem (@$array) {\n        if ($direction == 0) {\n          \
    \  if ($elem > $prev) {\n                $direction = 1;\n            } elsif\
    \ ($elem < $prev) {\n                $direction = -1;\n            }\n       \
    \ } elsif ($direction == 1) {\n            if ($elem < $prev) {\n            \
    \    return \"\";\n            }\n        } elsif ($direction == -1) {\n     \
    \       if ($elem > $prev) {\n                return \"\";\n            }\n  \
    \      }\n        $prev = $elem;\n    }\n    return 1;\n}", "my $array = shift;\n\
    \    my $monotonic = 1;\n    my $i;\n    for ($i = 1; $i < @$array; $i++) {\n\
    \        if ($array->[$i] < $array->[$i-1]) {\n            $monotonic = 0;\n \
    \           last;\n        }\n    }\n    if ($monotonic) {\n        return 1;\n\
    \    }\n    $monotonic = 1;\n    for ($i = 1; $i < @$array; $i++) {\n        if\
    \ ($array->[$i] > $array->[$i-1]) {\n            $monotonic = 0;\n           \
    \ last;\n        }\n    }\n    return $monotonic;\n}", "my $array = shift;\n \
    \   my $dir = 0;\n    my $prev = $array->[0];\n    foreach my $elem (@$array)\
    \ {\n        if ($elem > $prev) {\n            if ($dir == -1) {\n           \
    \     return \"\";\n            }\n            $dir = 1;\n        } elsif ($elem\
    \ < $prev) {\n            if ($dir == 1) {\n                return \"\";\n   \
    \         }\n            $dir = -1;\n        }\n        $prev = $elem;\n    }\n\
    \    return $dir;\n}", "my @array = @_;\n    my $increasing = 1;\n    my $decreasing\
    \ = 1;\n    for (my $i = 1; $i < scalar(@array); $i++) {\n        $increasing\
    \ = 0 if $array[$i] < $array[$i-1];\n        $decreasing = 0 if $array[$i] > $array[$i-1];\n\
    \    }\n    return $increasing || $decreasing;\n}", "my $array = shift;\n    my\
    \ $size = scalar @$array;\n    if ($size < 2) {\n        return 1;\n    }\n  \
    \  my $increasing = ($array->[0] < $array->[1]);\n    for (my $i = 1; $i < $size;\
    \ $i++) {\n        if ($increasing) {\n            if ($array->[$i - 1] > $array->[$i])\
    \ {\n                return \"\";\n            }\n        } else {\n         \
    \   if ($array->[$i - 1] < $array->[$i]) {\n                return \"\";\n   \
    \         }\n        }\n    }\n    return 1;\n}", "my $array = shift;\n    my\
    \ $monotonic = 1;\n    my $sign = 0;\n    my $prev = $array->[0];\n    foreach\
    \ my $val (@$array) {\n        if ($prev != $val) {\n            my $new_sign\
    \ = $val - $prev;\n            if ($sign != 0 && $sign * $new_sign < 0) {\n  \
    \              $monotonic = 0;\n                last;\n            }\n       \
    \     $sign = $new_sign;\n        }\n        $prev = $val;\n    }\n    return\
    \ $monotonic;\n}", "my ($array) = @_;\n    my $direction = 0;\n    my $last =\
    \ $array->[0];\n    for my $i (1 .. $#$array) {\n        if ($array->[$i] > $last)\
    \ {\n            if ($direction == -1) {\n                return \"\";\n     \
    \       }\n            $direction = 1;\n        } elsif ($array->[$i] < $last)\
    \ {\n            if ($direction == 1) {\n                return \"\";\n      \
    \      }\n            $direction = -1;\n        }\n        $last = $array->[$i];\n\
    \    }\n    return $direction;\n}", "my $array = shift;\n    my $i;\n    my $inc\
    \ = 0;\n    my $dec = 0;\n    for ($i = 1; $i < scalar(@$array); $i++) {\n   \
    \     if ($array->[$i] > $array->[$i-1]) {\n            $inc = 1;\n        } elsif\
    \ ($array->[$i] < $array->[$i-1]) {\n            $dec = 1;\n        }\n      \
    \  if ($inc && $dec) {\n            return \"\";\n        }\n    }\n    return\
    \ 1;\n}", "my @a = @_;\n    my $i = 0;\n    my $j = $#a;\n    my $increasing =\
    \ 1;\n    my $decreasing = 1;\n    while ($i < $j) {\n        if ($a[$i] < $a[$i+1])\
    \ {\n            $decreasing = 0;\n        }\n        if ($a[$i] > $a[$i+1]) {\n\
    \            $increasing = 0;\n        }\n        $i++;\n    }\n    if ($increasing\
    \ || $decreasing) {\n        return 1;\n    }\n    return \"\";\n}", "my $array\
    \ = shift;\n    my $inc = 1;\n    my $dec = 1;\n    for (my $i = 1; $i < @$array;\
    \ $i++) {\n        $inc = 0 if $array->[$i] < $array->[$i-1];\n        $dec =\
    \ 0 if $array->[$i] > $array->[$i-1];\n    }\n    return $inc || $dec;\n}", "my\
    \ $array = shift;\n    my $i;\n    my $j;\n    my $k;\n    my $n = scalar(@$array);\n\
    \    my $increasing = 0;\n    my $decreasing = 0;\n    for ($i = 0; $i < $n -\
    \ 1; $i++) {\n        $j = $i + 1;\n        $k = $array->[$i] <=> $array->[$j];\n\
    \        if ($k == 0) {\n            next;\n        }\n        if ($k == 1) {\n\
    \            $decreasing = 1;\n        }\n        if ($k == -1) {\n          \
    \  $increasing = 1;\n        }\n        if ($increasing && $decreasing) {\n  \
    \          return 0;\n        }\n    }\n    return 1;\n}", "my @a = @_;\n    my\
    \ $n = scalar @a;\n    my $i;\n    my $inc = 1;\n    my $dec = 1;\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        if ($a[$i] < $a[$i - 1]) {\n            $inc\
    \ = 0;\n        }\n        if ($a[$i] > $a[$i - 1]) {\n            $dec = 0;\n\
    \        }\n    }\n    if ($inc || $dec) {\n        return 1;\n    }\n    return\
    \ \"\";\n}", "my $array = shift;\n    my $monotonic = 1;", "my $array = shift;\n\
    \    my $i;\n    my $j;\n    my $k;\n    my $len = scalar(@$array);\n    my $increasing\
    \ = 1;\n    my $decreasing = 1;\n    for ($i = 0; $i < $len - 1; $i++) {\n   \
    \     if ($array->[$i] > $array->[$i + 1]) {\n            $increasing = 0;\n \
    \       }\n        if ($array->[$i] < $array->[$i + 1]) {\n            $decreasing\
    \ = 0;\n        }\n    }\n    return $increasing || $decreasing;\n}", "my $array\
    \ = shift;\n    my $inc = 0;\n    my $dec = 0;\n    for (my $i = 0; $i < $#{$array};\
    \ $i++) {\n        if ($array->[$i] < $array->[$i+1]) {\n            $inc = 1;\n\
    \        }\n        if ($array->[$i] > $array->[$i+1]) {\n            $dec = 1;\n\
    \        }\n    }\n    return ($inc && !$dec) || (!$inc && $dec);\n}", "my @array\
    \ = @_;\n    my $monotonic = 1;\n    my $increasing = 1;\n    my $decreasing =\
    \ 1;\n    for (my $i = 1; $i < scalar(@array); $i++) {\n        if ($array[$i]\
    \ > $array[$i-1]) {\n            $decreasing = 0;\n        }\n        if ($array[$i]\
    \ < $array[$i-1]) {\n            $increasing = 0;\n        }\n    }\n    if ($increasing\
    \ == 0 && $decreasing == 0) {\n        $monotonic = \"\";\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $len = scalar @$array;\n    return 0 if $len <\
    \ 2;\n    my $inc = $array->[0] < $array->[1];\n    for (my $i = 1; $i < $len\
    \ - 1; $i++) {\n        if ($inc) {\n            return 0 if $array->[$i] > $array->[$i\
    \ + 1];\n        } else {\n            return 0 if $array->[$i] < $array->[$i\
    \ + 1];\n        }\n    }\n    return 1;\n}", "my @a = @_;\n    my $i;\n    my\
    \ $inc = 0;\n    my $dec = 0;\n    for ($i = 1; $i < @a; $i++) {\n        if ($a[$i]\
    \ > $a[$i-1]) {\n            $inc = 1;\n        } elsif ($a[$i] < $a[$i-1]) {\n\
    \            $dec = 1;\n        }\n        if ($inc && $dec) {\n            return\
    \ \"\";\n        }\n    }\n    return 1;\n}", "my $array = shift;\n    my $direction\
    \ = 0;\n    for (my $i = 1; $i < @$array; $i++) {\n        if ($array->[$i] >\
    \ $array->[$i-1]) {\n            if ($direction == -1) {\n                return\
    \ \"\";\n            }\n            $direction = 1;\n        } elsif ($array->[$i]\
    \ < $array->[$i-1]) {\n            if ($direction == 1) {\n                return\
    \ \"\";\n            }\n            $direction = -1;\n        }\n    }\n    return\
    \ 1;\n}", "my $array = shift;\n    my $increasing = 1;\n    my $decreasing = 1;\n\
    \    for (my $i = 1; $i < @$array; $i++) {\n        $increasing = 0 if ($array->[$i]\
    \ < $array->[$i-1]);\n        $decreasing = 0 if ($array->[$i] > $array->[$i-1]);\n\
    \    }\n    return $increasing || $decreasing;\n}", "my @array = @_;\n    my $monotonic\
    \ = 1;\n    my $direction = 0;\n    my $last = $array[0];\n    foreach my $element\
    \ (@array) {\n        if ($direction == 0) {\n            if ($element > $last)\
    \ {\n                $direction = 1;\n            }\n            elsif ($element\
    \ < $last) {\n                $direction = -1;\n            }\n        }\n   \
    \     else {\n            if ($direction == 1 && $element < $last) {\n       \
    \         $monotonic = 0;\n                last;\n            }\n            elsif\
    \ ($direction == -1 && $element > $last) {\n                $monotonic = 0;\n\
    \                last;\n            }\n        }\n        $last = $element;\n\
    \    }\n    return $monotonic;\n}", "my $array = shift;\n    my $len = scalar\
    \ @$array;\n    my $i = 1;\n    while ($i < $len) {\n        if ($array->[$i]\
    \ < $array->[$i-1]) {\n            last;\n        }\n        $i++;\n    }\n  \
    \  if ($i == $len) {\n        return 1;\n    }\n    $i = 1;\n    while ($i < $len)\
    \ {\n        if ($array->[$i] > $array->[$i-1]) {\n            last;\n       \
    \ }\n        $i++;\n    }\n    if ($i == $len) {\n        return 1;\n    }\n \
    \   return \"\";\n}", "my $array = shift;\n    my $monotonic = 1;\n    my $direction\
    \ = 0;\n    my $i = 0;\n    while ($i < scalar(@$array) - 1) {\n        if ($direction\
    \ == 0) {\n            if ($array->[$i] < $array->[$i + 1]) {\n              \
    \  $direction = 1;\n            } elsif ($array->[$i] > $array->[$i + 1]) {\n\
    \                $direction = -1;\n            }\n        } else {\n         \
    \   if ($direction == 1 && $array->[$i] > $array->[$i + 1]) {\n              \
    \  $monotonic = 0;\n                last;\n            } elsif ($direction ==\
    \ -1 && $array->[$i] < $array->[$i + 1]) {\n                $monotonic = 0;\n\
    \                last;\n            }\n        }\n        $i++;\n    }\n    return\
    \ $monotonic;\n}", "my $array = shift;\n    my $mono = 0;\n    my $i = 0;\n  \
    \  while ($i < scalar(@$array) - 1) {\n        if ($array->[$i] < $array->[$i\
    \ + 1]) {\n            $mono = 1;\n            last;\n        }\n        elsif\
    \ ($array->[$i] > $array->[$i + 1]) {\n            $mono = -1;\n            last;\n\
    \        }\n        $i++;\n    }\n    return $mono;\n}", "my $array = shift;\n\
    \    my $monotonic = 1;\n    my $prev = $array->[0];\n    for my $i (1 .. $#$array)\
    \ {\n        if ($prev < $array->[$i]) {\n            if ($monotonic == -1) {\n\
    \                return \"\";\n            }\n            $monotonic = 1;\n  \
    \      } elsif ($prev > $array->[$i]) {\n            if ($monotonic == 1) {\n\
    \                return \"\";\n            }\n            $monotonic = -1;\n \
    \       }\n        $prev = $array->[$i];\n    }\n    return $monotonic;\n}", "my\
    \ @a = @_;\n    my $n = @a;\n    my $i;\n    my $inc = 0;\n    my $dec = 0;\n\
    \    for ($i = 1; $i < $n; $i++) {\n        if ($a[$i] > $a[$i - 1]) {\n     \
    \       $inc = 1;\n        }\n        if ($a[$i] < $a[$i - 1]) {\n           \
    \ $dec = 1;\n        }\n    }\n    return ($inc && !$dec) || (!$inc && $dec);\n\
    }", "my $array = shift;\n    my $inc = 0;\n    my $dec = 0;\n    for (my $i =\
    \ 0; $i < @$array - 1; $i++) {\n        if ($array->[$i] < $array->[$i + 1]) {\n\
    \            $inc = 1;\n        }\n        if ($array->[$i] > $array->[$i + 1])\
    \ {\n            $dec = 1;\n        }\n    }\n    return $inc + $dec;\n}", "my\
    \ $array_ref = shift;\n    my $direction = 0;\n    my $prev = $array_ref->[0];\n\
    \    for my $i (1 .. $#$array_ref) {\n        my $diff = $array_ref->[$i] - $prev;\n\
    \        if ($diff == 0) {\n            next;\n        }\n        if ($direction\
    \ == 0) {\n            $direction = $diff > 0 ? 1 : -1;\n        }\n        elsif\
    \ ($direction * $diff < 0) {\n            return \"\";\n        }\n        $prev\
    \ = $array_ref->[$i];\n    }\n    return $direction;\n}", "my $array = shift;\n\
    \    my $monotonic = 0;\n    my $increasing = 0;\n    my $decreasing = 0;\n  \
    \  my $last = $array->[0];\n    foreach my $i (1..$#{$array}) {\n        if ($array->[$i]\
    \ > $last) {\n            $increasing = 1;\n        } elsif ($array->[$i] < $last)\
    \ {\n            $decreasing = 1;\n        }\n        $last = $array->[$i];\n\
    \    }\n    if ($increasing && !$decreasing) {\n        $monotonic = 1;\n    }\
    \ elsif ($decreasing && !$increasing) {\n        $monotonic = 1;\n    }\n    return\
    \ $monotonic;\n}", "my $array = shift;\n    my $direction = 0;\n    my $prev =\
    \ $array->[0];\n    foreach my $curr (@$array) {\n        if ($curr > $prev) {\n\
    \            if ($direction == -1) {\n                return \"\";\n         \
    \   }\n            $direction = 1;\n        } elsif ($curr < $prev) {\n      \
    \      if ($direction == 1) {\n                return \"\";\n            }\n \
    \           $direction = -1;\n        }\n        $prev = $curr;\n    }\n    return\
    \ $direction;\n}", "my $array = shift;\n    my $direction = 0;\n    my $last =\
    \ $array->[0];\n    foreach my $i (@$array) {\n        if ($direction == 0) {\n\
    \            if ($i > $last) {\n                $direction = 1;\n            }\
    \ elsif ($i < $last) {\n                $direction = -1;\n            }\n    \
    \    } elsif ($direction == 1) {\n            if ($i < $last) {\n            \
    \    return \"\";\n            }\n        } elsif ($direction == -1) {\n     \
    \       if ($i > $last) {\n                return \"\";\n            }\n     \
    \   }\n        $last = $i;\n    }\n    return 1;\n}", "my ($array) = @_;\n   \
    \ my $n = scalar(@$array);\n    if ($n < 2) {\n        return 1;\n    }\n    my\
    \ $inc = $array->[1] > $array->[0];\n    for (my $i = 2; $i < $n; $i++) {\n  \
    \      if ($inc) {\n            if ($array->[$i] < $array->[$i - 1]) {\n     \
    \           return \"\";\n            }\n        } else {\n            if ($array->[$i]\
    \ > $array->[$i - 1]) {\n                return \"\";\n            }\n       \
    \ }\n    }\n    return 1;\n}", "my $array = shift;\n    my $monotonic = 1;\n \
    \   my $direction = 0;\n    my $prev = $array->[0];\n    for my $i (1 .. $#$array)\
    \ {\n        my $curr = $array->[$i];\n        if ($direction == 0) {\n      \
    \      if ($curr > $prev) {\n                $direction = 1;\n            } elsif\
    \ ($curr < $prev) {\n                $direction = -1;\n            }\n       \
    \ } elsif ($direction == 1) {\n            if ($curr < $prev) {\n            \
    \    $monotonic = 0;\n                last;\n            }\n        } elsif ($direction\
    \ == -1) {\n            if ($curr > $prev) {\n                $monotonic = 0;\n\
    \                last;\n            }\n        }\n        $prev = $curr;\n   \
    \ }\n    return $monotonic;\n}", "my $array = shift;\n    my $i;\n    my $len\
    \ = scalar(@$array);\n    my $increasing = 1;\n    my $decreasing = 1;\n    for\
    \ ($i = 1; $i < $len; $i++) {\n        if ($array->[$i] > $array->[$i - 1]) {\n\
    \            $decreasing = 0;\n        }\n        if ($array->[$i] < $array->[$i\
    \ - 1]) {\n            $increasing = 0;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}", "my $array = shift;\n    my $monotonic = 1;\n    my $direction\
    \ = 0;\n    for (my $i = 1; $i < scalar(@$array); $i++) {\n        if ($array->[$i]\
    \ > $array->[$i-1]) {\n            if ($direction == -1) {\n                $monotonic\
    \ = 0;\n                last;\n            }\n            $direction = 1;\n  \
    \      } elsif ($array->[$i] < $array->[$i-1]) {\n            if ($direction ==\
    \ 1) {\n                $monotonic = 0;\n                last;\n            }\n\
    \            $direction = -1;\n        }\n    }\n    return $monotonic;\n}", "my\
    \ $array = shift;\n    my $prev = $array->[0];\n    my $monotonic = 1;\n    for\
    \ my $i (1..$#$array) {\n        if ($array->[$i] < $prev) {\n            $monotonic\
    \ = 0;\n            last;\n        }\n        $prev = $array->[$i];\n    }\n \
    \   return $monotonic;\n}", "my @a = @_;\n    my $n = scalar @a;\n    my $i;\n\
    \    my $inc = 0;\n    my $dec = 0;\n    for ($i = 1; $i < $n; $i++) {\n     \
    \   if ($a[$i] > $a[$i - 1]) {\n            $inc = 1;\n        }\n        if ($a[$i]\
    \ < $a[$i - 1]) {\n            $dec = 1;\n        }\n    }\n    if ($inc && $dec)\
    \ {\n        return \"\";\n    } else {\n        return 1;\n    }\n}", "my $array\
    \ = shift;\n    my $i;\n    my $inc = 0;\n    my $dec = 0;\n    my $len = scalar(@$array);\n\
    \    for ($i = 1; $i < $len; $i++) {\n        if ($array->[$i] > $array->[$i -\
    \ 1]) {\n            $inc = 1;\n        }\n        if ($array->[$i] < $array->[$i\
    \ - 1]) {\n            $dec = 1;\n        }\n    }\n    return ($inc && !$dec)\
    \ || (!$inc && $dec);\n}", "my $array = shift;\n    my $len = scalar @$array;\n\
    \    my $i = 0;\n    my $inc = 0;\n    my $dec = 0;\n    my $prev = $array->[0];\n\
    \    for ($i = 1; $i < $len; $i++) {\n        if ($array->[$i] > $prev) {\n  \
    \          $inc = 1;\n        }\n        if ($array->[$i] < $prev) {\n       \
    \     $dec = 1;\n        }\n        $prev = $array->[$i];\n    }\n    if ($inc\
    \ && $dec) {\n        return \"\";\n    }\n    return 1;\n}", "my @a = @_;\n \
    \   my $n = @a;\n    my $i;\n    my $inc = 0;\n    my $dec = 0;\n    for ($i =\
    \ 1; $i < $n; $i++) {\n        if ($a[$i] > $a[$i - 1]) {\n            $inc =\
    \ 1;\n        }\n        if ($a[$i] < $a[$i - 1]) {\n            $dec = 1;\n \
    \       }\n    }\n    return ($inc + $dec == 1);\n}", "my @array = @_;\n    my\
    \ $i;\n    my $inc = 0;\n    my $dec = 0;\n    for ($i = 1; $i < @array; $i++)\
    \ {\n        if ($array[$i] > $array[$i-1]) {\n            $inc = 1;\n       \
    \ }\n        if ($array[$i] < $array[$i-1]) {\n            $dec = 1;\n       \
    \ }\n    }\n    if ($inc && $dec) {\n        return \"\";\n    }\n    return 1;\n\
    }", "my $array = shift;\n    my $monotonic = 1;\n    my $increasing = 1;\n   \
    \ my $decreasing = 1;\n    for (my $i = 1; $i < scalar(@$array); $i++) {\n   \
    \     if ($array->[$i] > $array->[$i-1]) {\n            $decreasing = 0;\n   \
    \     }\n        if ($array->[$i] < $array->[$i-1]) {\n            $increasing\
    \ = 0;\n        }\n    }\n    $monotonic = 0 if ($increasing == 0 && $decreasing\
    \ == 0);\n    return $monotonic;\n}", "my $array = shift;\n    my $direction =\
    \ 0;\n    my $prev = $array->[0];\n    foreach my $i (1..$#$array) {\n       \
    \ if ($array->[$i] > $prev) {\n            if ($direction == -1) {\n         \
    \       return '';\n            }\n            $direction = 1;\n        } elsif\
    \ ($array->[$i] < $prev) {\n            if ($direction == 1) {\n             \
    \   return '';\n            }\n            $direction = -1;\n        }\n     \
    \   $prev = $array->[$i];\n    }\n    return 1;\n}", "my $array = shift;\n   \
    \ my $direction = 0;\n    my $prev = $array->[0];\n    foreach my $elem (@$array)\
    \ {\n        if ($direction == 0) {\n            if ($elem > $prev) {\n      \
    \          $direction = 1;\n            } elsif ($elem < $prev) {\n          \
    \      $direction = -1;\n            }\n        } elsif ($direction == 1) {\n\
    \            if ($elem < $prev) {\n                return \"\";\n            }\n\
    \        } elsif ($direction == -1) {\n            if ($elem > $prev) {\n    \
    \            return \"\";\n            }\n        }\n        $prev = $elem;\n\
    \    }\n    return 1;\n}", "my $array = shift;\n    my $direction = 0;\n    my\
    \ $last = undef;\n    foreach my $element (@$array) {\n        if (defined $last)\
    \ {\n            if ($direction == 0) {\n                if ($element > $last)\
    \ {\n                    $direction = 1;\n                }\n                elsif\
    \ ($element < $last) {\n                    $direction = -1;\n               \
    \ }\n            }\n            elsif ($direction == 1) {\n                if\
    \ ($element < $last) {\n                    return \"\";\n                }\n\
    \            }\n            elsif ($direction == -1) {\n                if ($element\
    \ > $last) {\n                    return \"\";\n                }\n          \
    \  }\n        }\n        $last = $element;\n    }\n    return 1;\n}", "my $array\
    \ = shift;\n    my $monotonic = 1;\n    my $direction = 0;\n    my $last = $array->[0];\n\
    \    foreach my $element (@$array) {\n        if ($last < $element) {\n      \
    \      if ($direction == -1) {\n                $monotonic = 0;\n            \
    \    last;\n            }\n            $direction = 1;\n        } elsif ($last\
    \ > $element) {\n            if ($direction == 1) {\n                $monotonic\
    \ = 0;\n                last;\n            }\n            $direction = -1;\n \
    \       }\n        $last = $element;\n    }\n    return $monotonic;\n}", "my $array\
    \ = shift;\n    my $len = scalar @$array;\n    my $i = 0;\n    my $inc = 0;\n\
    \    my $dec = 0;\n    while ($i < $len - 1) {\n        if ($array->[$i] < $array->[$i\
    \ + 1]) {\n            $inc = 1;\n        }\n        if ($array->[$i] > $array->[$i\
    \ + 1]) {\n            $dec = 1;\n        }\n        $i++;\n    }\n    return\
    \ $inc ^ $dec;\n}", "my ($array) = @_;\n    my $dir = 0;\n    my $prev = $array->[0];\n\
    \    for my $i (1 .. $#$array) {\n        my $curr = $array->[$i];\n        if\
    \ ($curr > $prev) {\n            return \"\" if $dir == -1;\n            $dir\
    \ = 1;\n        } elsif ($curr < $prev) {\n            return \"\" if $dir ==\
    \ 1;\n            $dir = -1;\n        }\n        $prev = $curr;\n    }\n    return\
    \ 1;\n}", "my $array = shift;\n    my $direction = 0;\n    my $last = $array->[0];\n\
    \    foreach my $i (@$array) {\n        if ($direction == 0) {\n            if\
    \ ($i > $last) {\n                $direction = 1;\n            } elsif ($i < $last)\
    \ {\n                $direction = -1;\n            }\n        } else {\n     \
    \       if ($direction == 1 && $i < $last) {\n                return \"\";\n \
    \           } elsif ($direction == -1 && $i > $last) {\n                return\
    \ \"\";\n            }\n        }\n        $last = $i;\n    }\n    return 1;\n\
    }", "my $array = shift;\n    my $direction = 0;\n    my $last = $array->[0];\n\
    \    for my $i (1 .. $#$array) {\n        my $diff = $array->[$i] - $last;\n \
    \       if ($diff == 0) {\n            next;\n        }\n        if ($direction\
    \ == 0) {\n            $direction = $diff > 0 ? 1 : -1;\n        }\n        elsif\
    \ ($direction != ($diff > 0 ? 1 : -1)) {\n            return 0;\n        }\n \
    \       $last = $array->[$i];\n    }\n    return 1;\n}", "my $array = shift;\n\
    \    my $monotonic = 1;\n    my $last = $array->[0];\n    my $direction = 0;\n\
    \    for my $i (1 .. $#$array) {\n        my $current = $array->[$i];\n      \
    \  if ($current > $last) {\n            if ($direction == -1) {\n            \
    \    $monotonic = 0;\n                last;\n            }\n            $direction\
    \ = 1;\n        } elsif ($current < $last) {\n            if ($direction == 1)\
    \ {\n                $monotonic = 0;\n                last;\n            }\n \
    \           $direction = -1;\n        }\n        $last = $current;\n    }\n  \
    \  return $monotonic;\n}", "my ($array) = @_;\n    my $i;\n    my $j;\n    my\
    \ $n = scalar(@$array);\n    my $increasing = 1;\n    my $decreasing = 1;\n  \
    \  for ($i = 1; $i < $n; $i++) {\n        if ($array->[$i] < $array->[$i - 1])\
    \ {\n            $increasing = 0;\n        }\n        if ($array->[$i] > $array->[$i\
    \ - 1]) {\n            $decreasing = 0;\n        }\n    }\n    return ($increasing\
    \ || $decreasing);\n}", "my ($array) = @_;\n    my $monotonic = 1;\n    my $direction\
    \ = 0;\n    foreach my $i (1 .. $#{$array}) {\n        if ($direction == 0) {\n\
    \            if ($array->[$i] > $array->[$i - 1]) {\n                $direction\
    \ = 1;\n            } elsif ($array->[$i] < $array->[$i - 1]) {\n            \
    \    $direction = -1;\n            }\n        } else {\n            if ($direction\
    \ == 1) {\n                if ($array->[$i] < $array->[$i - 1]) {\n          \
    \          $monotonic = 0;\n                    last;\n                }\n   \
    \         } else {\n                if ($array->[$i] > $array->[$i - 1]) {\n \
    \                   $monotonic = 0;\n                    last;\n             \
    \   }\n            }\n        }\n    }\n    return $monotonic;\n}", "my $array\
    \ = shift;\n    my $direction = 0;\n    my $last = $array->[0];\n    foreach my\
    \ $element (@$array) {\n        if ($direction == 0) {\n            if ($element\
    \ > $last) {\n                $direction = 1;\n            } elsif ($element <\
    \ $last) {\n                $direction = -1;\n            }\n        } elsif ($direction\
    \ == 1) {\n            if ($element < $last) {\n                return \"\";\n\
    \            }\n        } elsif ($direction == -1) {\n            if ($element\
    \ > $last) {\n                return \"\";\n            }\n        }\n       \
    \ $last = $element;\n    }\n    return 1;\n}", "my $array = shift;\n    my $monotonic\
    \ = 1;\n    my $direction = 0;\n    my $i = 0;\n    while ($i < scalar(@$array)\
    \ - 1) {\n        if ($direction == 0) {\n            if ($array->[$i] > $array->[$i\
    \ + 1]) {\n                $direction = -1;\n            } elsif ($array->[$i]\
    \ < $array->[$i + 1]) {\n                $direction = 1;\n            }\n    \
    \    } else {\n            if ($direction == 1 && $array->[$i] > $array->[$i +\
    \ 1]) {\n                $monotonic = 0;\n                last;\n            }\
    \ elsif ($direction == -1 && $array->[$i] < $array->[$i + 1]) {\n            \
    \    $monotonic = 0;\n                last;\n            }\n        }\n      \
    \  $i++;\n    }\n    return $monotonic;\n}", "my $array = shift;\n    my $direction\
    \ = 0;\n    my $last = $array->[0];\n    for my $i (1 .. $#$array) {\n       \
    \ if ($last < $array->[$i]) {\n            if ($direction == -1) {\n         \
    \       return \"\";\n            }\n            $direction = 1;\n        } elsif\
    \ ($last > $array->[$i]) {\n            if ($direction == 1) {\n             \
    \   return \"\";\n            }\n            $direction = -1;\n        }\n   \
    \     $last = $array->[$i];\n    }\n    return $direction;\n}", "my $array = shift;\n\
    \    my $n = scalar @$array;\n    my $i;\n    my $increasing = 1;\n    my $decreasing\
    \ = 1;\n    for ($i = 1; $i < $n; $i++) {\n        if ($array->[$i] < $array->[$i\
    \ - 1]) {\n            $increasing = 0;\n        }\n        if ($array->[$i] >\
    \ $array->[$i - 1]) {\n            $decreasing = 0;\n        }\n    }\n    return\
    \ $increasing || $decreasing;\n}", "my @a = @_;\n    my $len = scalar @a;\n  \
    \  my $i = 0;\n    while ($i < $len - 1) {\n        if ($a[$i] < $a[$i + 1]) {\n\
    \            $i++;\n            next;\n        }\n        elsif ($a[$i] > $a[$i\
    \ + 1]) {\n            $i++;\n            next;\n        }\n        else {\n \
    \           return \"\";\n        }\n    }\n    return 1;\n}", "my $array = shift;\n\
    \    my $increasing = 1;\n    my $decreasing = 1;\n    for (my $i = 1; $i < @$array;\
    \ $i++) {\n        $increasing = 0 if $array->[$i] < $array->[$i-1];\n       \
    \ $decreasing = 0 if $array->[$i] > $array->[$i-1];\n    }\n    return $increasing\
    \ || $decreasing;\n}", "my $array = shift;\n    my $monotonic = 1;\n    my $direction\
    \ = 0;\n    my $last = $array->[0];\n    for my $i (1 .. $#$array) {\n       \
    \ my $current = $array->[$i];\n        if ($current > $last) {\n            if\
    \ ($direction == -1) {\n                $monotonic = 0;\n                last;\n\
    \            }\n            $direction = 1;\n        } elsif ($current < $last)\
    \ {\n            if ($direction == 1) {\n                $monotonic = 0;\n   \
    \             last;\n            }\n            $direction = -1;\n        }\n\
    \        $last = $current;\n    }\n    return $monotonic;\n}", "my $array = shift;\n\
    \    my $direction = 0;\n    for (my $i = 1; $i < @$array; $i++) {\n        my\
    \ $cmp = $array->[$i] <=> $array->[$i-1];\n        if ($cmp == 0) {\n        \
    \    next;\n        }\n        if ($direction == 0) {\n            $direction\
    \ = $cmp;\n        }\n        elsif ($direction != $cmp) {\n            return\
    \ \"\";\n        }\n    }\n    return 1;\n}", "my $array = shift;\n    my $monotonic\
    \ = 1;\n    my $direction = 0;\n    for (my $i = 1; $i < @$array; $i++) {\n  \
    \      if ($direction == 0) {\n            if ($array->[$i] > $array->[$i-1])\
    \ {\n                $direction = 1;\n            } elsif ($array->[$i] < $array->[$i-1])\
    \ {\n                $direction = -1;\n            }\n        } else {\n     \
    \       if ($direction == 1 && $array->[$i] < $array->[$i-1]) {\n            \
    \    $monotonic = 0;\n                last;\n            } elsif ($direction ==\
    \ -1 && $array->[$i] > $array->[$i-1]) {\n                $monotonic = 0;\n  \
    \              last;\n            }\n        }\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $monotonic = 1;\n    my $sign = 0;\n    my $i\
    \ = 0;\n    while ($i < @$array - 1) {\n        if ($sign == 0) {\n          \
    \  $sign = ($array->[$i] <=> $array->[$i + 1]);\n        }\n        if ($sign\
    \ * ($array->[$i] <=> $array->[$i + 1]) < 0) {\n            $monotonic = 0;\n\
    \            last;\n        }\n        $i++;\n    }\n    return $monotonic;\n}",
  "my $array = shift;\n    my $monotonic = 0;\n    my $prev = $array->[0];\n    for\
    \ my $i (1 .. $#$array) {\n        if ($array->[$i] > $prev) {\n            if\
    \ ($monotonic == -1) {\n                return \"\";\n            }\n        \
    \    $monotonic = 1;\n        } elsif ($array->[$i] < $prev) {\n            if\
    \ ($monotonic == 1) {\n                return \"\";\n            }\n         \
    \   $monotonic = -1;\n        }\n        $prev = $array->[$i];\n    }\n    return\
    \ $monotonic;\n}", "my @a = @_;\n    my $n = @a;\n    my $i;\n    my $inc = 1;\n\
    \    my $dec = 1;\n    for ($i = 1; $i < $n; $i++) {\n        $inc = 0 if ($a[$i]\
    \ < $a[$i - 1]);\n        $dec = 0 if ($a[$i] > $a[$i - 1]);\n    }\n    return\
    \ $inc || $dec;\n}", "my $array = shift;\n    my $direction = 0;\n    for (my\
    \ $i = 1; $i < @$array; $i++) {\n        my $diff = $array->[$i] - $array->[$i-1];\n\
    \        if ($diff == 0) {\n            next;\n        }\n        elsif ($diff\
    \ > 0) {\n            if ($direction == -1) {\n                return \"\";\n\
    \            }\n            $direction = 1;\n        }\n        elsif ($diff <\
    \ 0) {\n            if ($direction == 1) {\n                return \"\";\n   \
    \         }\n            $direction = -1;\n        }\n    }\n    return 1;\n}",
  "my ($array) = @_;\n    my $monotonic = 1;\n    my $direction = 0;\n    my $last\
    \ = $array->[0];\n    for my $i (1 .. $#$array) {\n        my $diff = $array->[$i]\
    \ - $last;\n        if ($direction == 0) {\n            $direction = $diff;\n\
    \        }\n        elsif ($direction * $diff < 0) {\n            $monotonic =\
    \ 0;\n            last;\n        }\n        $last = $array->[$i];\n    }\n   \
    \ return $monotonic;\n}", "my $array = shift;\n    my $monotonic = 1;\n    my\
    \ $i;\n    for ($i = 1; $i < @$array; $i++) {\n        if ($array->[$i] < $array->[$i-1])\
    \ {\n            $monotonic = 0;\n            last;\n        }\n    }\n    return\
    \ $monotonic;\n}", "my $array = shift;\n    my $direction = 0;\n    my $last =\
    \ $array->[0];\n    foreach my $element (@$array) {\n        if ($direction ==\
    \ 0) {\n            if ($element > $last) {\n                $direction = 1;\n\
    \            } elsif ($element < $last) {\n                $direction = -1;\n\
    \            }\n        } elsif ($direction == 1) {\n            if ($element\
    \ < $last) {\n                return \"\";\n            }\n        } elsif ($direction\
    \ == -1) {\n            if ($element > $last) {\n                return \"\";\n\
    \            }\n        }\n        $last = $element;\n    }\n    return 1;\n}",
  "my $array = shift;\n    my $monotonic = 0;\n    my $increasing = 1;\n    my $decreasing\
    \ = 1;\n    for (my $i = 1; $i < @$array; $i++) {\n        if ($array->[$i] >\
    \ $array->[$i-1]) {\n            $decreasing = 0;\n        }\n        if ($array->[$i]\
    \ < $array->[$i-1]) {\n            $increasing = 0;\n        }\n    }\n    if\
    \ ($increasing || $decreasing) {\n        $monotonic = 1;\n    }\n    return $monotonic;\n\
    }", "my $array = shift;\n    my $increasing = $array->[0] < $array->[1];\n   \
    \ for (my $i = 1; $i < @$array; $i++) {\n        if ($increasing) {\n        \
    \    return '' if $array->[$i] < $array->[$i - 1];\n        } else {\n       \
    \     return '' if $array->[$i] > $array->[$i - 1];\n        }\n    }\n    return\
    \ 1;\n}", "my $array = shift;\n    my $monotonic = 0;\n    my $increasing = 0;\n\
    \    my $decreasing = 0;\n    my $i = 0;\n    while ($i < scalar(@$array) - 1)\
    \ {\n        if ($array->[$i] < $array->[$i + 1]) {\n            $increasing =\
    \ 1;\n        }\n        if ($array->[$i] > $array->[$i + 1]) {\n            $decreasing\
    \ = 1;\n        }\n        if ($increasing && $decreasing) {\n            return\
    \ 0;\n        }\n        $i++;\n    }\n    return 1;\n}", "my $array = shift;\n\
    \    my $len = scalar @$array;\n    my $i = 0;\n    my $inc = 0;\n    my $dec\
    \ = 0;\n    my $prev = $array->[0];\n    while ($i < $len) {\n        if ($array->[$i]\
    \ > $prev) {\n            $inc = 1;\n        }\n        if ($array->[$i] < $prev)\
    \ {\n            $dec = 1;\n        }\n        $prev = $array->[$i];\n       \
    \ $i++;\n    }\n    return ($inc && $dec) ? \"\" : 1;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

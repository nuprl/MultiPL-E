name: HumanEval_136_largest_smallest_integers
language: pl
prompt: "# Create a function that returns an array (a, b), where 'a' is\n# the largest\
  \ of negative integers, and 'b' is the smallest\n# of positive integers in an array.\n\
  # If there is no negative or positive integers, return them as undef.\n# Examples:\n\
  # >>> largest_smallest_integers([2, 4, 1, 3, 5, 7])\n# [undef, 1]\n# >>> largest_smallest_integers([])\n\
  # [undef, undef]\n# >>> largest_smallest_integers([0])\n# [undef, undef]\nsub largest_smallest_integers\
  \ {\n    "
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&largest_smallest_integers;\n\
  \        if(eq_deeply($candidate->([2, 4, 1, 3, 5, 7]),[undef, 1])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
  \ 4, 1, 3, 5, 7, 0]),[undef, 1])) {\n        print \"ok!\" }else{\n        exit\
  \ 1;\n        }\n        if(eq_deeply($candidate->([1, 3, 2, 4, 5, 6, -2]),[-2,\
  \ 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4,\
  \ 5, 3, 6, 2, 7, -7]),[-7, 2])) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([7, 3, 8, 4, 9, 2, 5, -9]),[-9, 2]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[undef,\
  \ undef])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->([0]),[undef, undef])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, -3, -5, -6]),[-1,\
  \ undef])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->([-1, -3, -5, -6, 0]),[-1, undef])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-6,\
  \ -4, -4, -3, 1]),[-3, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n \
  \       }\n        if(eq_deeply($candidate->([-6, -4, -4, -3, -100, 1]),[-3, 1]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n\
    \            if (not defined $largest_negative) {\n                $largest_negative\
    \ = $element;\n            } elsif ($element > $largest_negative) {\n        \
    \        $largest_negative = $element;\n            }\n        } elsif ($element\
    \ > 0) {\n            if (not defined $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            } elsif ($element < $smallest_positive) {\n       \
    \         $smallest_positive = $element;\n            }\n        }\n    }\n  \
    \  return ($largest_negative, $smallest_positive);\n}", "my @array = @_;\n   \
    \ my $largest_negative = undef;\n    my $smallest_positive = undef;\n    foreach\
    \ my $element (@array) {\n        if ($element < 0) {\n            if (not defined\
    \ $largest_negative) {\n                $largest_negative = $element;\n      \
    \      }\n            elsif ($element > $largest_negative) {\n               \
    \ $largest_negative = $element;\n            }\n        }\n        elsif ($element\
    \ > 0) {\n            if (not defined $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n            elsif ($element < $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my @array =\
    \ @_;\n    my $max_neg = undef;\n    my $min_pos = undef;\n    for my $i (@array)\
    \ {\n        if ($i < 0) {\n            if (!defined $max_neg) {\n           \
    \     $max_neg = $i;\n            } else {\n                $max_neg = $i if $i\
    \ > $max_neg;\n            }\n        } elsif ($i > 0) {\n            if (!defined\
    \ $min_pos) {\n                $min_pos = $i;\n            } else {\n        \
    \        $min_pos = $i if $i < $min_pos;\n            }\n        }\n    }\n  \
    \  return ($max_neg, $min_pos);\n}", "my @arr = @_;\n    my @result = ();\n  \
    \  my $max = undef;\n    my $min = undef;\n    for my $i (@arr) {\n        if\
    \ ($i < 0) {\n            if (!defined $max) {\n                $max = $i;\n \
    \           } elsif ($i > $max) {\n                $max = $i;\n            }\n\
    \        } elsif ($i > 0) {\n            if (!defined $min) {\n              \
    \  $min = $i;\n            } elsif ($i < $min) {\n                $min = $i;\n\
    \            }\n        }\n    }\n    push @result, $max;\n    push @result, $min;\n\
    \    return @result;\n}", "my @array = @_;\n    my $largest_negative = undef;\n\
    \    my $smallest_positive = undef;\n    foreach my $element (@array) {\n    \
    \    if ($element < 0) {\n            if (defined $largest_negative) {\n     \
    \           if ($element > $largest_negative) {\n                    $largest_negative\
    \ = $element;\n                }\n            } else {\n                $largest_negative\
    \ = $element;\n            }\n        } elsif ($element > 0) {\n            if\
    \ (defined $smallest_positive) {\n                if ($element < $smallest_positive)\
    \ {\n                    $smallest_positive = $element;\n                }\n \
    \           } else {\n                $smallest_positive = $element;\n       \
    \     }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my @result = (undef, undef);\n    my $max_neg = undef;\n\
    \    my $min_pos = undef;\n    foreach my $element (@array) {\n        if ($element\
    \ < 0) {\n            if (!defined($max_neg) || $element > $max_neg) {\n     \
    \           $max_neg = $element;\n            }\n        } elsif ($element > 0)\
    \ {\n            if (!defined($min_pos) || $element < $min_pos) {\n          \
    \      $min_pos = $element;\n            }\n        }\n    }\n    if (defined($max_neg))\
    \ {\n        $result[0] = $max_neg;\n    }\n    if (defined($min_pos)) {\n   \
    \     $result[1] = $min_pos;\n    }\n    return @result;\n}", "my $arr = shift;\n\
    \    my ($a, $b);\n    foreach my $i (@$arr) {\n        if ($i < 0) {\n      \
    \      $a = $i if not defined $a or $i > $a;\n        } else {\n            $b\
    \ = $i if not defined $b or $i < $b;\n        }\n    }\n    return [$a, $b];\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n\
    \            if (defined $largest_negative) {\n                if ($element >\
    \ $largest_negative) {\n                    $largest_negative = $element;\n  \
    \              }\n            } else {\n                $largest_negative = $element;\n\
    \            }\n        } elsif ($element > 0) {\n            if (defined $smallest_positive)\
    \ {\n                if ($element < $smallest_positive) {\n                  \
    \  $smallest_positive = $element;\n                }\n            } else {\n \
    \               $smallest_positive = $element;\n            }\n        }\n   \
    \ }\n    return ($largest_negative, $smallest_positive);\n}", "my @array = @_;\n\
    \    my $largest_negative;\n    my $smallest_positive;\n    foreach my $element\
    \ (@array) {\n        if ($element < 0) {\n            if (!defined $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n          \
    \  elsif ($element > $largest_negative) {\n                $largest_negative =\
    \ $element;\n            }\n        }\n        elsif ($element > 0) {\n      \
    \      if (!defined $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n            elsif ($element < $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my @array =\
    \ @_;\n    my $max_negative = undef;\n    my $min_positive = undef;\n    for my\
    \ $item (@array) {\n        if ($item < 0) {\n            if (!defined $max_negative)\
    \ {\n                $max_negative = $item;\n            } elsif ($item > $max_negative)\
    \ {\n                $max_negative = $item;\n            }\n        } elsif ($item\
    \ > 0) {\n            if (!defined $min_positive) {\n                $min_positive\
    \ = $item;\n            } elsif ($item < $min_positive) {\n                $min_positive\
    \ = $item;\n            }\n        }\n    }\n    return ($max_negative, $min_positive);\n\
    }", "my @array = @_;\n    my @result = (undef, undef);\n    for my $i (@array)\
    \ {\n        if ($i < 0) {\n            if (!defined $result[0] || $i > $result[0])\
    \ {\n                $result[0] = $i;\n            }\n        } elsif ($i > 0)\
    \ {\n            if (!defined $result[1] || $i < $result[1]) {\n             \
    \   $result[1] = $i;\n            }\n        }\n    }\n    return @result;\n}",
  "my @array = @_;\n    my $max_negative = undef;\n    my $min_positive = undef;\n\
    \    foreach my $element (@array) {\n        if ($element < 0) {\n           \
    \ if (!defined($max_negative) || $element > $max_negative) {\n               \
    \ $max_negative = $element;\n            }\n        }\n        elsif ($element\
    \ > 0) {\n            if (!defined($min_positive) || $element < $min_positive)\
    \ {\n                $min_positive = $element;\n            }\n        }\n   \
    \ }\n    return ($max_negative, $min_positive);\n}", "my @array = @_;\n    my\
    \ $largest_negative = undef;\n    my $smallest_positive = undef;\n    foreach\
    \ my $element (@array) {\n        if ($element < 0) {\n            if (!defined($largest_negative)\
    \ || $element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        }\n        elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $max_neg = undef;\n    my $min_pos = undef;\n   \
    \ foreach my $num (@array) {\n        if ($num < 0) {\n            if (!defined($max_neg)\
    \ || $num > $max_neg) {\n                $max_neg = $num;\n            }\n   \
    \     }\n        elsif ($num > 0) {\n            if (!defined($min_pos) || $num\
    \ < $min_pos) {\n                $min_pos = $num;\n            }\n        }\n\
    \    }\n    return ($max_neg, $min_pos);\n}", "my $arr = shift;\n    my ($a, $b);\n\
    \    for my $i (@$arr) {\n        if ($i < 0) {\n            $a = $i if !defined\
    \ $a || $i > $a;\n        }\n        elsif ($i > 0) {\n            $b = $i if\
    \ !defined $b || $i < $b;\n        }\n    }\n    return [$a, $b];\n}", "my @array\
    \ = @_;\n    my $max_neg = undef;\n    my $min_pos = undef;\n    foreach my $i\
    \ (@array) {\n        if ($i < 0) {\n            if (not defined $max_neg) {\n\
    \                $max_neg = $i;\n            } else {\n                $max_neg\
    \ = $i if $i > $max_neg;\n            }\n        } elsif ($i > 0) {\n        \
    \    if (not defined $min_pos) {\n                $min_pos = $i;\n           \
    \ } else {\n                $min_pos = $i if $i < $min_pos;\n            }\n \
    \       }\n    }\n    return ($max_neg, $min_pos);\n}", "my @array = @_;\n   \
    \ my $largest_negative = undef;\n    my $smallest_positive = undef;\n    foreach\
    \ my $number (@array) {\n        if ($number < 0) {\n            if (!defined($largest_negative)\
    \ || $number > $largest_negative) {\n                $largest_negative = $number;\n\
    \            }\n        }\n        elsif ($number > 0) {\n            if (!defined($smallest_positive)\
    \ || $number < $smallest_positive) {\n                $smallest_positive = $number;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my $array = shift;\n    my ($a, $b);\n    for my $i (@$array) {\n       \
    \ if ($i < 0) {\n            $a = $i if !defined $a || $i > $a;\n        }\n \
    \       elsif ($i > 0) {\n            $b = $i if !defined $b || $i < $b;\n   \
    \     }\n    }\n    return [$a, $b];\n}", "my @array = @_;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (!defined($largest_negative)\
    \ || $element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        }\n        elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my $array = shift;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@$array) {\n        if ($element < 0) {\n\
    \            if (not defined $largest_negative) {\n                $largest_negative\
    \ = $element;\n            }\n            elsif ($element > $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n        }\n\
    \        elsif ($element > 0) {\n            if (not defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n         \
    \   elsif ($element < $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n        }\n    }\n    return [$largest_negative,\
    \ $smallest_positive];\n}", "my $array = shift;\n    my ($largest_negative, $smallest_positive);\n\
    \    foreach my $element (@$array) {\n        if ($element < 0) {\n          \
    \  if (!defined $largest_negative || $element > $largest_negative) {\n       \
    \         $largest_negative = $element;\n            }\n        }\n        elsif\
    \ ($element > 0) {\n            if (!defined $smallest_positive || $element <\
    \ $smallest_positive) {\n                $smallest_positive = $element;\n    \
    \        }\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my @array = @_;\n    my $a = undef;\n    my $b = undef;\n    foreach my $element\
    \ (@array) {\n        if ($element < 0) {\n            if (not defined $a) {\n\
    \                $a = $element;\n            }\n            elsif ($element >\
    \ $a) {\n                $a = $element;\n            }\n        }\n        elsif\
    \ ($element > 0) {\n            if (not defined $b) {\n                $b = $element;\n\
    \            }\n            elsif ($element < $b) {\n                $b = $element;\n\
    \            }\n        }\n    }\n    return ($a, $b);\n}", "my @array = @_;\n\
    \    my $largest;\n    my $smallest;\n    foreach (@array) {\n        if ($_ >\
    \ 0) {\n            if (!defined $smallest) {\n                $smallest = $_;\n\
    \            }\n            elsif ($_ < $smallest) {\n                $smallest\
    \ = $_;\n            }\n        }\n        elsif ($_ < 0) {\n            if (!defined\
    \ $largest) {\n                $largest = $_;\n            }\n            elsif\
    \ ($_ > $largest) {\n                $largest = $_;\n            }\n        }\n\
    \    }\n    return ($largest, $smallest);\n}", "my @array = @_;\n    my @result\
    \ = (undef, undef);\n    my $min = undef;\n    my $max = undef;\n    for my $item\
    \ (@array) {\n        if ($item > 0) {\n            if (!defined $min) {\n   \
    \             $min = $item;\n            }\n            if ($item < $min) {\n\
    \                $min = $item;\n            }\n        }\n        if ($item <\
    \ 0) {\n            if (!defined $max) {\n                $max = $item;\n    \
    \        }\n            if ($item > $max) {\n                $max = $item;\n \
    \           }\n        }\n    }\n    if (defined $min) {\n        $result[1] =\
    \ $min;\n    }\n    if (defined $max) {\n        $result[0] = $max;\n    }\n \
    \   return @result;\n}", "my $array = shift;\n    my $largest_negative = undef;\n\
    \    my $smallest_positive = undef;\n    foreach my $element (@$array) {\n   \
    \     if ($element < 0) {\n            if (!defined $largest_negative) {\n   \
    \             $largest_negative = $element;\n            }\n            elsif\
    \ ($element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        }\n        elsif ($element > 0) {\n            if (!defined\
    \ $smallest_positive) {\n                $smallest_positive = $element;\n    \
    \        }\n            elsif ($element < $smallest_positive) {\n            \
    \    $smallest_positive = $element;\n            }\n        }\n    }\n    return\
    \ [$largest_negative, $smallest_positive];\n}", "my @array = @_;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    for my $element (@array) {\n\
    \        if ($element < 0) {\n            if (!defined $largest_negative || $element\
    \ > $largest_negative) {\n                $largest_negative = $element;\n    \
    \        }\n        } elsif ($element > 0) {\n            if (!defined $smallest_positive\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my ($a, $b);\n    foreach (@array) {\n        if ($_\
    \ < 0) {\n            $a = $_ if !defined $a || $a < $_;\n        } else {\n \
    \           $b = $_ if !defined $b || $b > $_;\n        }\n    }\n    return (defined\
    \ $a ? $a : undef, defined $b ? $b : undef);\n}", "my @array = @_;\n    my $a\
    \ = undef;\n    my $b = undef;\n    foreach my $element (@array) {\n        if\
    \ ($element < 0) {\n            if (not defined $a) {\n                $a = $element;\n\
    \            }\n            elsif ($element > $a) {\n                $a = $element;\n\
    \            }\n        }\n        elsif ($element > 0) {\n            if (not\
    \ defined $b) {\n                $b = $element;\n            }\n            elsif\
    \ ($element < $b) {\n                $b = $element;\n            }\n        }\n\
    \    }\n    return ($a, $b);\n}", "my @array = @_;\n    my $largest_negative =\
    \ undef;\n    my $smallest_positive = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (!defined($largest_negative)\
    \ || $element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        } elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @arr = @_;\n    my $a = undef;\n    my $b = undef;\n    foreach my $i\
    \ (@arr) {\n        if ($i < 0) {\n            if (!defined($a) || $i > $a) {\n\
    \                $a = $i;\n            }\n        } elsif ($i > 0) {\n       \
    \     if (!defined($b) || $i < $b) {\n                $b = $i;\n            }\n\
    \        }\n    }\n    return ($a, $b);\n}", "my $array = shift;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    foreach my $element (@$array)\
    \ {\n        if ($element < 0) {\n            if (!defined $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n          \
    \  elsif ($element > $largest_negative) {\n                $largest_negative =\
    \ $element;\n            }\n        }\n        elsif ($element > 0) {\n      \
    \      if (!defined $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n            elsif ($element < $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n        }\n\
    \    }\n    return [$largest_negative, $smallest_positive];\n}", "my @array =\
    \ @_;\n    my $largest_negative = undef;\n    my $smallest_positive = undef;\n\
    \    foreach my $num (@array) {\n        if ($num < 0) {\n            if (not\
    \ defined $largest_negative) {\n                $largest_negative = $num;\n  \
    \          } elsif ($num > $largest_negative) {\n                $largest_negative\
    \ = $num;\n            }\n        } elsif ($num > 0) {\n            if (not defined\
    \ $smallest_positive) {\n                $smallest_positive = $num;\n        \
    \    } elsif ($num < $smallest_positive) {\n                $smallest_positive\
    \ = $num;\n            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my ($array) = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@$array) {\n        if ($element < 0) {\n\
    \            if (!defined($largest_negative) || $element > $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n        } elsif\
    \ ($element > 0) {\n            if (!defined($smallest_positive) || $element <\
    \ $smallest_positive) {\n                $smallest_positive = $element;\n    \
    \        }\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my $arr = shift;\n    my ($a, $b);\n    foreach my $num (@$arr) {\n     \
    \   if ($num < 0) {\n            $a = $num if !defined $a || $num > $a;\n    \
    \    }\n        else {\n            $b = $num if !defined $b || $num < $b;\n \
    \       }\n    }\n    return [$a, $b];\n}", "my @array = @_;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (!defined($largest_negative)\
    \ || $element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        } elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n\
    \            if (not defined $largest_negative) {\n                $largest_negative\
    \ = $element;\n            } elsif ($element > $largest_negative) {\n        \
    \        $largest_negative = $element;\n            }\n        } elsif ($element\
    \ > 0) {\n            if (not defined $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            } elsif ($element < $smallest_positive) {\n       \
    \         $smallest_positive = $element;\n            }\n        }\n    }\n  \
    \  return ($largest_negative, $smallest_positive);\n}", "my @array = @_;\n   \
    \ my $largest_negative = undef;\n    my $smallest_positive = undef;\n    foreach\
    \ my $element (@array) {\n        if ($element < 0) {\n            if (!defined($largest_negative)\
    \ || $element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        } elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n\
    \            if (not defined $largest_negative) {\n                $largest_negative\
    \ = $element;\n            }\n            elsif ($element > $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n        }\n\
    \        elsif ($element > 0) {\n            if (not defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n         \
    \   elsif ($element < $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n        }\n    }\n    return ($largest_negative,\
    \ $smallest_positive);\n}", "my $arr = shift;\n    my $max_neg = undef;\n    my\
    \ $min_pos = undef;\n    foreach my $i (@$arr) {\n        if ($i < 0) {\n    \
    \        if (!defined $max_neg || $i > $max_neg) {\n                $max_neg =\
    \ $i;\n            }\n        } elsif ($i > 0) {\n            if (!defined $min_pos\
    \ || $i < $min_pos) {\n                $min_pos = $i;\n            }\n       \
    \ }\n    }\n    return [$max_neg, $min_pos];\n}", "my @array = @_;\n    my @result\
    \ = (undef, undef);\n    my $i = 0;\n    my $j = 0;\n    for my $element (@array)\
    \ {\n        if ($element < 0) {\n            if ($result[0] == undef) {\n   \
    \             $result[0] = $element;\n            }\n            elsif ($result[0]\
    \ < $element) {\n                $result[0] = $element;\n            }\n     \
    \   }\n        elsif ($element > 0) {\n            if ($result[1] == undef) {\n\
    \                $result[1] = $element;\n            }\n            elsif ($result[1]\
    \ > $element) {\n                $result[1] = $element;\n            }\n     \
    \   }\n    }\n    return @result;\n}", "my $array = shift;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    foreach my $element (@$array)\
    \ {\n        if ($element < 0) {\n            if (not defined $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n          \
    \  elsif ($element > $largest_negative) {\n                $largest_negative =\
    \ $element;\n            }\n        }\n        elsif ($element > 0) {\n      \
    \      if (not defined $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n            elsif ($element < $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n        }\n\
    \    }\n    return [$largest_negative, $smallest_positive];\n}", "my $arr = shift;\n\
    \    my @result = (undef, undef);\n    for my $i (@$arr) {\n        if ($i < 0)\
    \ {\n            if (!defined $result[0] || $i > $result[0]) {\n             \
    \   $result[0] = $i;\n            }\n        }\n        elsif ($i > 0) {\n   \
    \         if (!defined $result[1] || $i < $result[1]) {\n                $result[1]\
    \ = $i;\n            }\n        }\n    }\n    return @result;\n}", "my @array\
    \ = @_;\n    my $a;\n    my $b;\n    foreach my $i (@array) {\n        if ($i\
    \ < 0) {\n            if (!defined $a) {\n                $a = $i;\n         \
    \   } elsif ($i > $a) {\n                $a = $i;\n            }\n        } elsif\
    \ ($i > 0) {\n            if (!defined $b) {\n                $b = $i;\n     \
    \       } elsif ($i < $b) {\n                $b = $i;\n            }\n       \
    \ }\n    }\n    return (defined $a ? $a : undef, defined $b ? $b : undef);\n}",
  "my @array = @_;\n    my $max_negative = undef;\n    my $min_positive = undef;\n\
    \    foreach my $element (@array) {\n        if ($element < 0) {\n           \
    \ if (not defined $max_negative) {\n                $max_negative = $element;\n\
    \            } elsif ($element > $max_negative) {\n                $max_negative\
    \ = $element;\n            }\n        } elsif ($element > 0) {\n            if\
    \ (not defined $min_positive) {\n                $min_positive = $element;\n \
    \           } elsif ($element < $min_positive) {\n                $min_positive\
    \ = $element;\n            }\n        }\n    }\n    return ($max_negative, $min_positive);\n\
    }", "my $arr = shift;\n    my $max_neg = undef;\n    my $min_pos = undef;\n  \
    \  foreach my $elem (@$arr) {\n        if ($elem < 0) {\n            if (not defined\
    \ $max_neg) {\n                $max_neg = $elem;\n            } else {\n     \
    \           $max_neg = $elem if $elem > $max_neg;\n            }\n        } elsif\
    \ ($elem > 0) {\n            if (not defined $min_pos) {\n                $min_pos\
    \ = $elem;\n            } else {\n                $min_pos = $elem if $elem <\
    \ $min_pos;\n            }\n        }\n    }\n    return [$max_neg, $min_pos];\n\
    }", "my @array = @_;\n    my $max = undef;\n    my $min = undef;\n    foreach\
    \ my $i (@array) {\n        if ($i > 0) {\n            if (defined $min) {\n \
    \               if ($i < $min) {\n                    $min = $i;\n           \
    \     }\n            } else {\n                $min = $i;\n            }\n   \
    \     } elsif ($i < 0) {\n            if (defined $max) {\n                if\
    \ ($i > $max) {\n                    $max = $i;\n                }\n         \
    \   } else {\n                $max = $i;\n            }\n        }\n    }\n  \
    \  return ($max, $min);\n}", "my @array = @_;\n    my $largest_negative = undef;\n\
    \    my $smallest_positive = undef;\n    foreach my $element (@array) {\n    \
    \    if ($element < 0) {\n            if (not defined $largest_negative) {\n \
    \               $largest_negative = $element;\n            } elsif ($element >\
    \ $largest_negative) {\n                $largest_negative = $element;\n      \
    \      }\n        } elsif ($element > 0) {\n            if (not defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            } elsif ($element\
    \ < $smallest_positive) {\n                $smallest_positive = $element;\n  \
    \          }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n\
    \            if ($largest_negative) {\n                if ($element > $largest_negative)\
    \ {\n                    $largest_negative = $element;\n                }\n  \
    \          } else {\n                $largest_negative = $element;\n         \
    \   }\n        } elsif ($element > 0) {\n            if ($smallest_positive) {\n\
    \                if ($element < $smallest_positive) {\n                    $smallest_positive\
    \ = $element;\n                }\n            } else {\n                $smallest_positive\
    \ = $element;\n            }\n        }\n    }\n    return ($largest_negative,\
    \ $smallest_positive);\n}", "my $array = shift;\n    my $largest_negative = undef;\n\
    \    my $smallest_positive = undef;\n    foreach my $element (@$array) {\n   \
    \     if ($element < 0) {\n            if (!defined $largest_negative || $element\
    \ > $largest_negative) {\n                $largest_negative = $element;\n    \
    \        }\n        }\n        elsif ($element > 0) {\n            if (!defined\
    \ $smallest_positive || $element < $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n        }\n    }\n    return [$largest_negative,\
    \ $smallest_positive];\n}", "my @array = @_;\n    my $largest_negative = undef;\n\
    \    my $smallest_positive = undef;\n    foreach my $element (@array) {\n    \
    \    if ($element < 0) {\n            if (not defined $largest_negative) {\n \
    \               $largest_negative = $element;\n            } elsif ($element >\
    \ $largest_negative) {\n                $largest_negative = $element;\n      \
    \      }\n        } elsif ($element > 0) {\n            if (not defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            } elsif ($element\
    \ < $smallest_positive) {\n                $smallest_positive = $element;\n  \
    \          }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $number (@array) {\n        if ($number < 0) {\n  \
    \          if (!defined($largest_negative) || $number > $largest_negative) {\n\
    \                $largest_negative = $number;\n            }\n        } elsif\
    \ ($number > 0) {\n            if (!defined($smallest_positive) || $number < $smallest_positive)\
    \ {\n                $smallest_positive = $number;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my $array =\
    \ shift;\n    my ($largest, $smallest);\n    foreach my $number (@$array) {\n\
    \        if ($number > 0) {\n            if (!defined $smallest || $number < $smallest)\
    \ {\n                $smallest = $number;\n            }\n        }\n        elsif\
    \ ($number < 0) {\n            if (!defined $largest || $number > $largest) {\n\
    \                $largest = $number;\n            }\n        }\n    }\n    return\
    \ [$largest, $smallest];\n}", "my @array = @_;\n    my $largest_negative = undef;\n\
    \    my $smallest_positive = undef;\n    foreach my $element (@array) {\n    \
    \    if ($element < 0) {\n            if (not defined $largest_negative) {\n \
    \               $largest_negative = $element;\n            }\n            elsif\
    \ ($element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        }\n        elsif ($element > 0) {\n            if (not\
    \ defined $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n            elsif ($element < $smallest_positive) {\n        \
    \        $smallest_positive = $element;\n            }\n        }\n    }\n   \
    \ return ($largest_negative, $smallest_positive);\n}", "my $arr = shift;\n   \
    \ my $max_neg = undef;\n    my $min_pos = undef;\n    foreach my $num (@$arr)\
    \ {\n        if ($num < 0) {\n            if (!defined $max_neg) {\n         \
    \       $max_neg = $num;\n            }\n            elsif ($num > $max_neg) {\n\
    \                $max_neg = $num;\n            }\n        }\n        elsif ($num\
    \ > 0) {\n            if (!defined $min_pos) {\n                $min_pos = $num;\n\
    \            }\n            elsif ($num < $min_pos) {\n                $min_pos\
    \ = $num;\n            }\n        }\n    }\n    return [$max_neg, $min_pos];\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $number (@array) {\n        if ($number < 0) {\n  \
    \          if (!defined($largest_negative) || $number > $largest_negative) {\n\
    \                $largest_negative = $number;\n            }\n        } elsif\
    \ ($number > 0) {\n            if (!defined($smallest_positive) || $number < $smallest_positive)\
    \ {\n                $smallest_positive = $number;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my @array =\
    \ @_;\n    my $max_negative = undef;\n    my $min_positive = undef;\n    foreach\
    \ my $element (@array) {\n        if ($element < 0) {\n            if (not defined\
    \ $max_negative) {\n                $max_negative = $element;\n            }\n\
    \            elsif ($element > $max_negative) {\n                $max_negative\
    \ = $element;\n            }\n        }\n        elsif ($element > 0) {\n    \
    \        if (not defined $min_positive) {\n                $min_positive = $element;\n\
    \            }\n            elsif ($element < $min_positive) {\n             \
    \   $min_positive = $element;\n            }\n        }\n    }\n    return ($max_negative,\
    \ $min_positive);\n}", "my ($array) = @_;\n    my $largest_negative = undef;\n\
    \    my $smallest_positive = undef;\n    foreach my $element (@$array) {\n   \
    \     if ($element < 0) {\n            if (not defined $largest_negative) {\n\
    \                $largest_negative = $element;\n            } elsif ($element\
    \ > $largest_negative) {\n                $largest_negative = $element;\n    \
    \        }\n        } elsif ($element > 0) {\n            if (not defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            } elsif ($element\
    \ < $smallest_positive) {\n                $smallest_positive = $element;\n  \
    \          }\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my @array = @_;\n    my ($largest_negative, $smallest_positive);\n    for\
    \ my $element (@array) {\n        if ($element < 0) {\n            if (not defined\
    \ $largest_negative or $element > $largest_negative) {\n                $largest_negative\
    \ = $element;\n            }\n        }\n        elsif ($element > 0) {\n    \
    \        if (not defined $smallest_positive or $element < $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n        }\n\
    \    }\n    return [$largest_negative, $smallest_positive];\n}", "my $arr = shift;\n\
    \    my $max = undef;\n    my $min = undef;\n    foreach my $elem (@$arr) {\n\
    \        if ($elem < 0) {\n            if (!defined($max) || $elem > $max) {\n\
    \                $max = $elem;\n            }\n        }\n        elsif ($elem\
    \ > 0) {\n            if (!defined($min) || $elem < $min) {\n                $min\
    \ = $elem;\n            }\n        }\n    }\n    return [$max, $min];\n}", "my\
    \ @array = @_;\n    my @result = (undef, undef);\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (!defined($result[0]) || $element\
    \ > $result[0]) {\n                $result[0] = $element;\n            }\n   \
    \     } elsif ($element > 0) {\n            if (!defined($result[1]) || $element\
    \ < $result[1]) {\n                $result[1] = $element;\n            }\n   \
    \     }\n    }\n    return @result;\n}", "my ($array) = @_;\n    my ($largest,\
    \ $smallest) = (undef, undef);\n    foreach my $num (@$array) {\n        if ($num\
    \ < 0) {\n            if (!defined($largest) || $num > $largest) {\n         \
    \       $largest = $num;\n            }\n        }\n        elsif ($num > 0) {\n\
    \            if (!defined($smallest) || $num < $smallest) {\n                $smallest\
    \ = $num;\n            }\n        }\n    }\n    return ($largest, $smallest);\n\
    }", "my @array = @_;\n    my $max_negative = undef;\n    my $min_positive = undef;\n\
    \    foreach my $element (@array) {\n        if ($element < 0) {\n           \
    \ if (not defined $max_negative) {\n                $max_negative = $element;\n\
    \            }\n            elsif ($element > $max_negative) {\n             \
    \   $max_negative = $element;\n            }\n        }\n        elsif ($element\
    \ > 0) {\n            if (not defined $min_positive) {\n                $min_positive\
    \ = $element;\n            }\n            elsif ($element < $min_positive) {\n\
    \                $min_positive = $element;\n            }\n        }\n    }\n\
    \    return ($max_negative, $min_positive);\n}", "my @array = @_;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (!defined($largest_negative)\
    \ || $element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        }\n        elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $min = undef;\n    my $max = undef;\n    foreach\
    \ my $element (@array) {\n        if ($element > 0) {\n            if (!defined\
    \ $min) {\n                $min = $element;\n            }\n            else {\n\
    \                $min = $element if $element < $min;\n            }\n        }\n\
    \        elsif ($element < 0) {\n            if (!defined $max) {\n          \
    \      $max = $element;\n            }\n            else {\n                $max\
    \ = $element if $element > $max;\n            }\n        }\n    }\n    return\
    \ ($max, $min);\n}", "my @arr = @_;\n    my $max = undef;\n    my $min = undef;\n\
    \    foreach my $i (@arr) {\n        if ($i < 0) {\n            if (!defined($max)\
    \ || $i > $max) {\n                $max = $i;\n            }\n        } elsif\
    \ ($i > 0) {\n            if (!defined($min) || $i < $min) {\n               \
    \ $min = $i;\n            }\n        }\n    }\n    return ($max, $min);\n}", "my\
    \ @array = @_;\n    my $max = undef;\n    my $min = undef;\n    foreach my $element\
    \ (@array) {\n        if ($element > 0) {\n            if (not defined $min) {\n\
    \                $min = $element;\n            }\n            elsif ($element\
    \ < $min) {\n                $min = $element;\n            }\n        }\n    \
    \    elsif ($element < 0) {\n            if (not defined $max) {\n           \
    \     $max = $element;\n            }\n            elsif ($element > $max) {\n\
    \                $max = $element;\n            }\n        }\n    }\n    return\
    \ ($max, $min);\n}", "my $arr = shift;\n    my ($largest, $smallest);\n    foreach\
    \ my $item (@$arr) {\n        if ($item < 0) {\n            $largest = $item if\
    \ !defined $largest || $item > $largest;\n        }\n        else {\n        \
    \    $smallest = $item if !defined $smallest || $item < $smallest;\n        }\n\
    \    }\n    return [$largest, $smallest];\n}", "my $arr = shift;\n    my ($a,\
    \ $b);\n    for my $i (@$arr) {\n        if ($i < 0) {\n            $a = $i if\
    \ !defined $a || $i > $a;\n        } else {\n            $b = $i if !defined $b\
    \ || $i < $b;\n        }\n    }\n    return [$a, $b];\n}", "my $array = shift;\n\
    \    my @sorted = sort { $a <=> $b } @$array;\n    my $a = undef;\n    my $b =\
    \ undef;\n    for my $i (@sorted) {\n        if ($i < 0) {\n            $a = $i;\n\
    \        }\n        elsif ($i > 0) {\n            $b = $i;\n            last;\n\
    \        }\n    }\n    return [$a, $b];\n}", "my @array = @_;\n    my @result\
    \ = (undef, undef);\n    foreach my $item (@array) {\n        if ($item < 0) {\n\
    \            if (!defined($result[0]) || $item > $result[0]) {\n             \
    \   $result[0] = $item;\n            }\n        }\n        elsif ($item > 0) {\n\
    \            if (!defined($result[1]) || $item < $result[1]) {\n             \
    \   $result[1] = $item;\n            }\n        }\n    }\n    return @result;\n\
    }", "my @array = @_;\n    my @result = (undef, undef);\n    for my $i (@array)\
    \ {\n        if ($i < 0) {\n            if (!defined $result[0] || $i > $result[0])\
    \ {\n                $result[0] = $i;\n            }\n        }\n        elsif\
    \ ($i > 0) {\n            if (!defined $result[1] || $i < $result[1]) {\n    \
    \            $result[1] = $i;\n            }\n        }\n    }\n    return @result;\n\
    }", "my @array = @_;\n    my $max = undef;\n    my $min = undef;\n    foreach\
    \ my $element (@array) {\n        if ($element > 0) {\n            if (!defined\
    \ $min) {\n                $min = $element;\n            }\n            elsif\
    \ ($element < $min) {\n                $min = $element;\n            }\n     \
    \   }\n        elsif ($element < 0) {\n            if (!defined $max) {\n    \
    \            $max = $element;\n            }\n            elsif ($element > $max)\
    \ {\n                $max = $element;\n            }\n        }\n    }\n    return\
    \ ($max, $min);\n}", "my @array = @_;\n    my $largest_negative = undef;\n   \
    \ my $smallest_positive = undef;\n    foreach my $element (@array) {\n       \
    \ if ($element < 0) {\n            if (!defined($largest_negative) || $element\
    \ > $largest_negative) {\n                $largest_negative = $element;\n    \
    \        }\n        }\n        elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my @result = (undef, undef);\n    my $is_negative =\
    \ 0;\n    my $is_positive = 0;\n    foreach my $element (@array) {\n        if\
    \ ($element < 0) {\n            $is_negative = 1;\n            if (!defined($result[0])\
    \ || $element > $result[0]) {\n                $result[0] = $element;\n      \
    \      }\n        }\n        elsif ($element > 0) {\n            $is_positive\
    \ = 1;\n            if (!defined($result[1]) || $element < $result[1]) {\n   \
    \             $result[1] = $element;\n            }\n        }\n    }\n    if\
    \ (!$is_negative) {\n        $result[0] = undef;\n    }\n    if (!$is_positive)\
    \ {\n        $result[1] = undef;\n    }\n    return @result;\n}", "my @array =\
    \ @_;\n    my @result = (undef, undef);\n    my $i = 0;\n    my $j = 0;\n    my\
    \ $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n  \
    \  my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd\
    \ = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n \
    \   my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm\
    \ = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n \
    \   my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv\
    \ = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n \
    \   my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my\
    \ $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii\
    \ = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n\
    \    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n", "my @arr = @_;\n   \
    \ my $max_neg = undef;\n    my $min_pos = undef;\n    foreach my $num (@arr) {\n\
    \        if ($num < 0) {\n            if (!defined($max_neg) || $num > $max_neg)\
    \ {\n                $max_neg = $num;\n            }\n        } elsif ($num >\
    \ 0) {\n            if (!defined($min_pos) || $num < $min_pos) {\n           \
    \     $min_pos = $num;\n            }\n        }\n    }\n    return ($max_neg,\
    \ $min_pos);\n}", "my @array = @_;\n    my $max_neg = undef;\n    my $min_pos\
    \ = undef;\n    for my $el (@array) {\n        if ($el < 0) {\n            if\
    \ (!defined $max_neg) {\n                $max_neg = $el;\n            } else {\n\
    \                $max_neg = $el if $el > $max_neg;\n            }\n        } elsif\
    \ ($el > 0) {\n            if (!defined $min_pos) {\n                $min_pos\
    \ = $el;\n            } else {\n                $min_pos = $el if $el < $min_pos;\n\
    \            }\n        }\n    }\n    return ($max_neg, $min_pos);\n}", "my @arr\
    \ = @_;\n    my ($max, $min);\n    foreach my $i (@arr) {\n        if ($i > 0)\
    \ {\n            if (!defined $min || $i < $min) {\n                $min = $i;\n\
    \            }\n        }\n        elsif ($i < 0) {\n            if (!defined\
    \ $max || $i > $max) {\n                $max = $i;\n            }\n        }\n\
    \    }\n    return [$max, $min];\n}", "my $arr = shift;\n    my ($max, $min);\n\
    \    foreach my $num (@$arr) {\n        if ($num > 0) {\n            $min = $num\
    \ unless defined $min;\n            $min = $num if $num < $min;\n        } elsif\
    \ ($num < 0) {\n            $max = $num unless defined $max;\n            $max\
    \ = $num if $num > $max;\n        }\n    }\n    return [$max, $min];\n}", "my\
    \ @array = @_;\n    my $max = undef;\n    my $min = undef;\n    foreach my $item\
    \ (@array) {\n        if ($item < 0) {\n            if (!defined($max) || $item\
    \ > $max) {\n                $max = $item;\n            }\n        }\n       \
    \ elsif ($item > 0) {\n            if (!defined($min) || $item < $min) {\n   \
    \             $min = $item;\n            }\n        }\n    }\n    return ($max,\
    \ $min);\n}", "my @arr = @_;\n    my $max_neg = undef;\n    my $min_pos = undef;\n\
    \    foreach my $elem (@arr) {\n        if ($elem < 0) {\n            if (!defined($max_neg)\
    \ || $elem > $max_neg) {\n                $max_neg = $elem;\n            }\n \
    \       } elsif ($elem > 0) {\n            if (!defined($min_pos) || $elem < $min_pos)\
    \ {\n                $min_pos = $elem;\n            }\n        }\n    }\n    return\
    \ ($max_neg, $min_pos);\n}", "my @array = @_;\n    my $largest_negative = undef;\n\
    \    my $smallest_positive = undef;\n    foreach my $element (@array) {\n    \
    \    if ($element < 0) {\n            if (!defined($largest_negative) || $element\
    \ > $largest_negative) {\n                $largest_negative = $element;\n    \
    \        }\n        }\n        elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my $array = shift;\n    my ($a, $b);\n    foreach my $elem (@$array) {\n\
    \        if ($elem < 0) {\n            if (!defined $a) {\n                $a\
    \ = $elem;\n            } elsif ($elem > $a) {\n                $a = $elem;\n\
    \            }\n        } elsif ($elem > 0) {\n            if (!defined $b) {\n\
    \                $b = $elem;\n            } elsif ($elem < $b) {\n           \
    \     $b = $elem;\n            }\n        }\n    }\n    return [$a, $b];\n}",
  "my @array = @_;\n    my ($largest, $smallest);\n    foreach my $num (@array) {\n\
    \        if ($num < 0) {\n            if (!defined $largest) {\n             \
    \   $largest = $num;\n            } elsif ($num > $largest) {\n              \
    \  $largest = $num;\n            }\n        } elsif ($num > 0) {\n           \
    \ if (!defined $smallest) {\n                $smallest = $num;\n            }\
    \ elsif ($num < $smallest) {\n                $smallest = $num;\n            }\n\
    \        }\n    }\n    return ($largest, $smallest);\n}", "my $array = shift;\n\
    \    my $largest_negative = undef;\n    my $smallest_positive = undef;\n    foreach\
    \ my $element (@$array) {\n        if ($element < 0) {\n            if (not defined\
    \ $largest_negative or $element > $largest_negative) {\n                $largest_negative\
    \ = $element;\n            }\n        }\n        elsif ($element > 0) {\n    \
    \        if (not defined $smallest_positive or $element < $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n        }\n\
    \    }\n    return [$largest_negative, $smallest_positive];\n}", "my @a = @_;\n\
    \    my $a = undef;\n    my $b = undef;\n    for my $x (@a) {\n        if ($x\
    \ < 0) {\n            if (not defined $a) {\n                $a = $x;\n      \
    \      } elsif ($x > $a) {\n                $a = $x;\n            }\n        }\
    \ elsif ($x > 0) {\n            if (not defined $b) {\n                $b = $x;\n\
    \            } elsif ($x < $b) {\n                $b = $x;\n            }\n  \
    \      }\n    }\n    return ($a, $b);\n}", "my @array = @_;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (!defined($largest_negative)\
    \ || $element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        } elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my @result = (undef, undef);\n    foreach my $item (@array)\
    \ {\n        if ($item > 0) {\n            if (!defined $result[1] || $item <\
    \ $result[1]) {\n                $result[1] = $item;\n            }\n        }\n\
    \        elsif ($item < 0) {\n            if (!defined $result[0] || $item > $result[0])\
    \ {\n                $result[0] = $item;\n            }\n        }\n    }\n  \
    \  return @result;\n}", "my $array = shift;\n    my ($largest, $smallest);\n \
    \   for my $element (@$array) {\n        if ($element < 0) {\n            $largest\
    \ = $element if !defined $largest || $element > $largest;\n        }\n       \
    \ elsif ($element > 0) {\n            $smallest = $element if !defined $smallest\
    \ || $element < $smallest;\n        }\n    }\n    return [$largest, $smallest];\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n\
    \            if (not defined $largest_negative) {\n                $largest_negative\
    \ = $element;\n            }\n            elsif ($element > $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n        }\n\
    \        elsif ($element > 0) {\n            if (not defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n         \
    \   elsif ($element < $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n        }\n    }\n    return ($largest_negative,\
    \ $smallest_positive);\n}", "my $array = shift;\n    my $largest_negative = undef;\n\
    \    my $smallest_positive = undef;\n    foreach my $element (@$array) {\n   \
    \     if ($element < 0) {\n            if (!defined $largest_negative) {\n   \
    \             $largest_negative = $element;\n            }\n            elsif\
    \ ($element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        }\n        elsif ($element > 0) {\n            if (!defined\
    \ $smallest_positive) {\n                $smallest_positive = $element;\n    \
    \        }\n            elsif ($element < $smallest_positive) {\n            \
    \    $smallest_positive = $element;\n            }\n        }\n    }\n    return\
    \ [$largest_negative, $smallest_positive];\n}", "my $array = shift;\n    my ($largest,\
    \ $smallest);\n    for my $i (@$array) {\n        if ($i < 0) {\n            if\
    \ (!defined $largest || $i > $largest) {\n                $largest = $i;\n   \
    \         }\n        }\n        elsif ($i > 0) {\n            if (!defined $smallest\
    \ || $i < $smallest) {\n                $smallest = $i;\n            }\n     \
    \   }\n    }\n    return [$largest, $smallest];\n}", "my @array = @_;\n    my\
    \ $largest_negative = undef;\n    my $smallest_positive = undef;\n    foreach\
    \ my $element (@array) {\n        if ($element < 0) {\n            if (!defined($largest_negative)\
    \ || $element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        } elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $a = undef;\n    my $b = undef;\n    for my $i (@array)\
    \ {\n        if ($i < 0) {\n            if (!defined $a) {\n                $a\
    \ = $i;\n            } elsif ($i > $a) {\n                $a = $i;\n         \
    \   }\n        } elsif ($i > 0) {\n            if (!defined $b) {\n          \
    \      $b = $i;\n            } elsif ($i < $b) {\n                $b = $i;\n \
    \           }\n        }\n    }\n    return ($a, $b);\n}", "my $array = shift;\n\
    \    my @negative_numbers = grep { $_ < 0 } @$array;\n    my @positive_numbers\
    \ = grep { $_ > 0 } @$array;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    if (@negative_numbers) {\n        $largest_negative = max @negative_numbers;\n\
    \    }\n    if (@positive_numbers) {\n        $smallest_positive = min @positive_numbers;\n\
    \    }\n    return [$largest_negative, $smallest_positive];\n}", "my @array =\
    \ @_;\n    my $max = undef;\n    my $min = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element > 0) {\n            if (!defined $min) {\n         \
    \       $min = $element;\n            } elsif ($element < $min) {\n          \
    \      $min = $element;\n            }\n        } elsif ($element < 0) {\n   \
    \         if (!defined $max) {\n                $max = $element;\n           \
    \ } elsif ($element > $max) {\n                $max = $element;\n            }\n\
    \        }\n    }\n    return ($max, $min);\n}", "my $array = shift;\n    my ($a,\
    \ $b);\n    foreach my $element (@$array) {\n        if ($element < 0) {\n   \
    \         if (!defined $a) {\n                $a = $element;\n            } elsif\
    \ ($element > $a) {\n                $a = $element;\n            }\n        }\
    \ elsif ($element > 0) {\n            if (!defined $b) {\n                $b =\
    \ $element;\n            } elsif ($element < $b) {\n                $b = $element;\n\
    \            }\n        }\n    }\n    return [$a, $b];\n}", "my $arr = shift;\n\
    \    my ($max, $min);\n    for (@$arr) {\n        if ($_ < 0) {\n            $max\
    \ = $_ if !defined $max || $max < $_;\n        } else {\n            $min = $_\
    \ if !defined $min || $min > $_;\n        }\n    }\n    return [$max, $min];\n\
    }", "my $array = shift;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@$array) {\n        if ($element < 0) {\n\
    \            if (!defined $largest_negative || $element > $largest_negative) {\n\
    \                $largest_negative = $element;\n            }\n        } elsif\
    \ ($element > 0) {\n            if (!defined $smallest_positive || $element <\
    \ $smallest_positive) {\n                $smallest_positive = $element;\n    \
    \        }\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my @array = @_;\n    my ($max_neg, $min_pos);\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (!defined $max_neg) {\n     \
    \           $max_neg = $element;\n            }\n            elsif ($element >\
    \ $max_neg) {\n                $max_neg = $element;\n            }\n        }\n\
    \        elsif ($element > 0) {\n            if (!defined $min_pos) {\n      \
    \          $min_pos = $element;\n            }\n            elsif ($element <\
    \ $min_pos) {\n                $min_pos = $element;\n            }\n        }\n\
    \    }\n    return [$max_neg, $min_pos];\n}", "my $arr = shift;\n    my ($a, $b);\n\
    \    for my $i (@$arr) {\n        if ($i < 0) {\n            $a = $i if !defined\
    \ $a || $i > $a;\n        }\n        elsif ($i > 0) {\n            $b = $i if\
    \ !defined $b || $i < $b;\n        }\n    }\n    return [$a, $b];\n}", "my @array\
    \ = @_;\n    my ($largest, $smallest);\n    foreach my $num (@array) {\n     \
    \   if ($num < 0) {\n            if (!defined $largest) {\n                $largest\
    \ = $num;\n            } elsif ($num > $largest) {\n                $largest =\
    \ $num;\n            }\n        } elsif ($num > 0) {\n            if (!defined\
    \ $smallest) {\n                $smallest = $num;\n            } elsif ($num <\
    \ $smallest) {\n                $smallest = $num;\n            }\n        }\n\
    \    }\n    return [$largest, $smallest];\n}", "my $array = shift;\n    my ($a,\
    \ $b);\n    foreach my $elem (@$array) {\n        if ($elem < 0) {\n         \
    \   $a = $elem if not defined $a or $elem > $a;\n        }\n        elsif ($elem\
    \ > 0) {\n            $b = $elem if not defined $b or $elem < $b;\n        }\n\
    \    }\n    return [$a, $b];\n}", "my @array = @_;\n    my $largest_negative =\
    \ undef;\n    my $smallest_positive = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (not defined $largest_negative)\
    \ {\n                $largest_negative = $element;\n            } elsif ($element\
    \ > $largest_negative) {\n                $largest_negative = $element;\n    \
    \        }\n        } elsif ($element > 0) {\n            if (not defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            } elsif ($element\
    \ < $smallest_positive) {\n                $smallest_positive = $element;\n  \
    \          }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n\
    \            if (!defined($largest_negative) || $element > $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n        }\n\
    \        elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $max_negative = undef;\n    my $min_positive = undef;\n\
    \    foreach my $element (@array) {\n        if ($element < 0) {\n           \
    \ if (!defined($max_negative) || $element > $max_negative) {\n               \
    \ $max_negative = $element;\n            }\n        } elsif ($element > 0) {\n\
    \            if (!defined($min_positive) || $element < $min_positive) {\n    \
    \            $min_positive = $element;\n            }\n        }\n    }\n    return\
    \ ($max_negative, $min_positive);\n}", "my @array = @_;\n    my $largest_negative;\n\
    \    my $smallest_positive;\n    foreach my $element (@array) {\n        if ($element\
    \ < 0) {\n            if (!defined $largest_negative) {\n                $largest_negative\
    \ = $element;\n            }\n            elsif ($element > $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n        }\n\
    \        elsif ($element > 0) {\n            if (!defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n         \
    \   elsif ($element < $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n        }\n    }\n    return ($largest_negative,\
    \ $smallest_positive);\n}", "my ($arr) = @_;\n    my $largest_negative = undef;\n\
    \    my $smallest_positive = undef;\n    foreach my $n (@$arr) {\n        if ($n\
    \ < 0) {\n            if (not defined $largest_negative) {\n                $largest_negative\
    \ = $n;\n            }\n            elsif ($n > $largest_negative) {\n       \
    \         $largest_negative = $n;\n            }\n        }\n        elsif ($n\
    \ > 0) {\n            if (not defined $smallest_positive) {\n                $smallest_positive\
    \ = $n;\n            }\n            elsif ($n < $smallest_positive) {\n      \
    \          $smallest_positive = $n;\n            }\n        }\n    }\n    return\
    \ [$largest_negative, $smallest_positive];\n}", "my $arr = shift;\n    my ($a,\
    \ $b);\n    for my $i (@$arr) {\n        if ($i < 0) {\n            $a = $i if\
    \ !defined $a || $i > $a;\n        } else {\n            $b = $i if !defined $b\
    \ || $i < $b;\n        }\n    }\n    return [$a, $b];\n}", "my @array = @_;\n\
    \    my $largest_negative = undef;\n    my $smallest_positive = undef;\n    foreach\
    \ my $number (@array) {\n        if ($number < 0) {\n            if (!defined($largest_negative)\
    \ || $number > $largest_negative) {\n                $largest_negative = $number;\n\
    \            }\n        } elsif ($number > 0) {\n            if (!defined($smallest_positive)\
    \ || $number < $smallest_positive) {\n                $smallest_positive = $number;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my $array = shift;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@$array) {\n        if ($element < 0) {\n\
    \            if (!defined $largest_negative || $element > $largest_negative) {\n\
    \                $largest_negative = $element;\n            }\n        } elsif\
    \ ($element > 0) {\n            if (!defined $smallest_positive || $element <\
    \ $smallest_positive) {\n                $smallest_positive = $element;\n    \
    \        }\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my @arr = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    for my $elem (@arr) {\n        if ($elem < 0) {\n            if\
    \ (not defined $largest_negative or $elem > $largest_negative) {\n           \
    \     $largest_negative = $elem;\n            }\n        } elsif ($elem > 0) {\n\
    \            if (not defined $smallest_positive or $elem < $smallest_positive)\
    \ {\n                $smallest_positive = $elem;\n            }\n        }\n \
    \   }\n    return ($largest_negative, $smallest_positive);\n}", "my $arr = shift;\n\
    \    my ($max_neg, $min_pos);\n    for my $i (@$arr) {\n        if ($i < 0) {\n\
    \            $max_neg = $i if !defined $max_neg || $i > $max_neg;\n        }\n\
    \        elsif ($i > 0) {\n            $min_pos = $i if !defined $min_pos || $i\
    \ < $min_pos;\n        }\n    }\n    return [$max_neg, $min_pos];\n}", "my @array\
    \ = @_;\n    my @result = (undef, undef);\n    for my $item (@array) {\n     \
    \   if ($item > 0) {\n            if (!defined $result[1] || $item < $result[1])\
    \ {\n                $result[1] = $item;\n            }\n        } elsif ($item\
    \ < 0) {\n            if (!defined $result[0] || $item > $result[0]) {\n     \
    \           $result[0] = $item;\n            }\n        }\n    }\n    return @result;\n\
    }", "my $array = shift;\n    my $a = undef;\n    my $b = undef;\n    foreach my\
    \ $element (@$array) {\n        if ($element < 0) {\n            if (!defined($a)\
    \ || $element > $a) {\n                $a = $element;\n            }\n       \
    \ }\n        elsif ($element > 0) {\n            if (!defined($b) || $element\
    \ < $b) {\n                $b = $element;\n            }\n        }\n    }\n \
    \   return [$a, $b];\n}", "my $arr = shift;\n    my $a = undef;\n    my $b = undef;\n\
    \    foreach my $i (@$arr) {\n        if ($i < 0) {\n            if (!defined($a)\
    \ || $i > $a) {\n                $a = $i;\n            }\n        }\n        elsif\
    \ ($i > 0) {\n            if (!defined($b) || $i < $b) {\n                $b =\
    \ $i;\n            }\n        }\n    }\n    return [$a, $b];\n}", "my $array =\
    \ shift;\n    my @sorted = sort { $a <=> $b } @$array;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    for my $i (@sorted) {\n  \
    \      if ($i < 0) {\n            $largest_negative = $i;\n        }\n       \
    \ elsif ($i > 0) {\n            $smallest_positive = $i;\n            last;\n\
    \        }\n    }\n    return [$largest_negative, $smallest_positive];\n}", "my\
    \ @array = @_;\n    my $a = undef;\n    my $b = undef;\n    foreach my $item (@array)\
    \ {\n        if ($item < 0) {\n            if (!defined($a) || $item > $a) {\n\
    \                $a = $item;\n            }\n        } elsif ($item > 0) {\n \
    \           if (!defined($b) || $item < $b) {\n                $b = $item;\n \
    \           }\n        }\n    }\n    return ($a, $b);\n}", "my @array = @_;\n\
    \    my $largest_negative = undef;\n    my $smallest_positive = undef;\n    foreach\
    \ my $number (@array) {\n        if ($number < 0) {\n            if (!defined($largest_negative)\
    \ || $number > $largest_negative) {\n                $largest_negative = $number;\n\
    \            }\n        } elsif ($number > 0) {\n            if (!defined($smallest_positive)\
    \ || $number < $smallest_positive) {\n                $smallest_positive = $number;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my $array = shift;\n    my @result = (undef, undef);\n    my $max_negative\
    \ = undef;\n    my $min_positive = undef;\n    foreach my $item (@$array) {\n\
    \        if ($item < 0) {\n            if (not defined $max_negative or $item\
    \ > $max_negative) {\n                $max_negative = $item;\n            }\n\
    \        }\n        elsif ($item > 0) {\n            if (not defined $min_positive\
    \ or $item < $min_positive) {\n                $min_positive = $item;\n      \
    \      }\n        }\n    }\n    if (defined $max_negative) {\n        $result[0]\
    \ = $max_negative;\n    }\n    if (defined $min_positive) {\n        $result[1]\
    \ = $min_positive;\n    }\n    return @result;\n}", "my $arr = shift;\n    my\
    \ $max_neg;\n    my $min_pos;\n    foreach my $num (@$arr) {\n        if ($num\
    \ < 0) {\n            if (!defined $max_neg || $num > $max_neg) {\n          \
    \      $max_neg = $num;\n            }\n        } elsif ($num > 0) {\n       \
    \     if (!defined $min_pos || $num < $min_pos) {\n                $min_pos =\
    \ $num;\n            }\n        }\n    }\n    return [$max_neg, $min_pos];\n}",
  "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive =\
    \ undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n  \
    \          if (not defined $largest_negative) {\n                $largest_negative\
    \ = $element;\n            } elsif ($element > $largest_negative) {\n        \
    \        $largest_negative = $element;\n            }\n        } elsif ($element\
    \ > 0) {\n            if (not defined $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            } elsif ($element < $smallest_positive) {\n       \
    \         $smallest_positive = $element;\n            }\n        }\n    }\n  \
    \  return ($largest_negative, $smallest_positive);\n}", "my @array = @_;\n   \
    \ my $a = undef;\n    my $b = undef;\n    foreach my $i (@array) {\n        if\
    \ ($i < 0) {\n            if (not defined $a) {\n                $a = $i;\n  \
    \          } elsif ($i > $a) {\n                $a = $i;\n            }\n    \
    \    } elsif ($i > 0) {\n            if (not defined $b) {\n                $b\
    \ = $i;\n            } elsif ($i < $b) {\n                $b = $i;\n         \
    \   }\n        }\n    }\n    return ($a, $b);\n}", "my ($arr) = @_;\n    my ($largest,\
    \ $smallest) = (undef, undef);\n    foreach my $num (@$arr) {\n        if ($num\
    \ < 0) {\n            $largest = $num if !defined $largest || $num > $largest;\n\
    \        }\n        elsif ($num > 0) {\n            $smallest = $num if !defined\
    \ $smallest || $num < $smallest;\n        }\n    }\n    return [$largest, $smallest];\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n\
    \            if (not defined $largest_negative) {\n                $largest_negative\
    \ = $element;\n            }\n            elsif ($element > $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n        }\n\
    \        elsif ($element > 0) {\n            if (not defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n         \
    \   elsif ($element < $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n        }\n    }\n    return ($largest_negative,\
    \ $smallest_positive);\n}", "my @array = @_;\n    my @result = (undef, undef);\n\
    \    my $positive_min = undef;\n    my $negative_max = undef;\n    for my $number\
    \ (@array) {\n        if ($number > 0) {\n            if (!defined $positive_min\
    \ || $number < $positive_min) {\n                $positive_min = $number;\n  \
    \          }\n        }\n        elsif ($number < 0) {\n            if (!defined\
    \ $negative_max || $number > $negative_max) {\n                $negative_max =\
    \ $number;\n            }\n        }\n    }\n    if (defined $positive_min) {\n\
    \        $result[1] = $positive_min;\n    }\n    if (defined $negative_max) {\n\
    \        $result[0] = $negative_max;\n    }\n    return @result;\n}", "my $array\
    \ = shift;\n    my ($largest, $smallest);\n    for my $item (@$array) {\n    \
    \    if ($item < 0) {\n            $largest = $item if not defined $largest or\
    \ $item > $largest;\n        }\n        elsif ($item > 0) {\n            $smallest\
    \ = $item if not defined $smallest or $item < $smallest;\n        }\n    }\n \
    \   return [$largest, $smallest];\n}", "my @array = @_;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (!defined($largest_negative)\
    \ || $element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        }\n        elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n\
    \            if (not defined $largest_negative) {\n                $largest_negative\
    \ = $element;\n            }\n            elsif ($element > $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n        }\n\
    \        elsif ($element > 0) {\n            if (not defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n         \
    \   elsif ($element < $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n        }\n    }\n    return ($largest_negative,\
    \ $smallest_positive);\n}", "my @array = @_;\n    my $max_neg = undef;\n    my\
    \ $min_pos = undef;\n    foreach my $el (@array) {\n        if ($el < 0) {\n \
    \           if (!defined($max_neg) || $el > $max_neg) {\n                $max_neg\
    \ = $el;\n            }\n        } elsif ($el > 0) {\n            if (!defined($min_pos)\
    \ || $el < $min_pos) {\n                $min_pos = $el;\n            }\n     \
    \   }\n    }\n    return ($max_neg, $min_pos);\n}", "my @array = @_;\n    my $max_neg\
    \ = undef;\n    my $min_pos = undef;\n    foreach my $item (@array) {\n      \
    \  if ($item < 0) {\n            if (!defined($max_neg) || $item > $max_neg) {\n\
    \                $max_neg = $item;\n            }\n        }\n        elsif ($item\
    \ > 0) {\n            if (!defined($min_pos) || $item < $min_pos) {\n        \
    \        $min_pos = $item;\n            }\n        }\n    }\n    return ($max_neg,\
    \ $min_pos);\n}", "my @array = @_;\n    my $largest_negative = undef;\n    my\
    \ $smallest_positive = undef;\n    foreach my $element (@array) {\n        if\
    \ ($element < 0) {\n            if (defined $largest_negative) {\n           \
    \     if ($element > $largest_negative) {\n                    $largest_negative\
    \ = $element;\n                }\n            } else {\n                $largest_negative\
    \ = $element;\n            }\n        } elsif ($element > 0) {\n            if\
    \ (defined $smallest_positive) {\n                if ($element < $smallest_positive)\
    \ {\n                    $smallest_positive = $element;\n                }\n \
    \           } else {\n                $smallest_positive = $element;\n       \
    \     }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my $arr = shift;\n    my $max_neg = undef;\n    my $min_pos = undef;\n  \
    \  foreach my $num (@$arr) {\n        if ($num < 0) {\n            if (!defined\
    \ $max_neg || $num > $max_neg) {\n                $max_neg = $num;\n         \
    \   }\n        }\n        if ($num > 0) {\n            if (!defined $min_pos ||\
    \ $num < $min_pos) {\n                $min_pos = $num;\n            }\n      \
    \  }\n    }\n    return [$max_neg, $min_pos];\n}", "my @array = @_;\n    my $a\
    \ = undef;\n    my $b = undef;\n    foreach my $element (@array) {\n        if\
    \ ($element < 0) {\n            if (!defined($a) || $element > $a) {\n       \
    \         $a = $element;\n            }\n        }\n        elsif ($element >\
    \ 0) {\n            if (!defined($b) || $element < $b) {\n                $b =\
    \ $element;\n            }\n        }\n    }\n    return ($a, $b);\n}", "my ($arr)\
    \ = @_;\n    my ($largest_negative, $smallest_positive);\n    for my $num (@$arr)\
    \ {\n        if ($num < 0) {\n            if (!defined $largest_negative || $num\
    \ > $largest_negative) {\n                $largest_negative = $num;\n        \
    \    }\n        } elsif ($num > 0) {\n            if (!defined $smallest_positive\
    \ || $num < $smallest_positive) {\n                $smallest_positive = $num;\n\
    \            }\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my @array = @_;\n    my $a = undef;\n    my $b = undef;\n    foreach (@array)\
    \ {\n        if ($_ < 0) {\n            if (defined $a) {\n                if\
    \ ($_ > $a) {\n                    $a = $_;\n                }\n            }\
    \ else {\n                $a = $_;\n            }\n        } elsif ($_ > 0) {\n\
    \            if (defined $b) {\n                if ($_ < $b) {\n             \
    \       $b = $_;\n                }\n            } else {\n                $b\
    \ = $_;\n            }\n        }\n    }\n    return ($a, $b);\n}", "my ($array)\
    \ = @_;\n    my $largest_negative = undef;\n    my $smallest_positive = undef;\n\
    \    foreach my $number (@$array) {\n        if ($number < 0) {\n            if\
    \ (not defined $largest_negative) {\n                $largest_negative = $number;\n\
    \            }\n            elsif ($number > $largest_negative) {\n          \
    \      $largest_negative = $number;\n            }\n        }\n        elsif ($number\
    \ > 0) {\n            if (not defined $smallest_positive) {\n                $smallest_positive\
    \ = $number;\n            }\n            elsif ($number < $smallest_positive)\
    \ {\n                $smallest_positive = $number;\n            }\n        }\n\
    \    }\n    return [$largest_negative, $smallest_positive];\n}", "my @array =\
    \ @_;\n    my $largest_negative = undef;\n    my $smallest_positive = undef;\n\
    \    foreach my $number (@array) {\n        if ($number < 0) {\n            if\
    \ (!defined($largest_negative) || $number > $largest_negative) {\n           \
    \     $largest_negative = $number;\n            }\n        }\n        elsif ($number\
    \ > 0) {\n            if (!defined($smallest_positive) || $number < $smallest_positive)\
    \ {\n                $smallest_positive = $number;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my @array =\
    \ @_;\n    my $max_neg = undef;\n    my $min_pos = undef;\n    foreach my $num\
    \ (@array) {\n        if ($num < 0) {\n            if (not defined $max_neg) {\n\
    \                $max_neg = $num;\n            } elsif ($num > $max_neg) {\n \
    \               $max_neg = $num;\n            }\n        } elsif ($num > 0) {\n\
    \            if (not defined $min_pos) {\n                $min_pos = $num;\n \
    \           } elsif ($num < $min_pos) {\n                $min_pos = $num;\n  \
    \          }\n        }\n    }\n    return ($max_neg, $min_pos);\n}", "my @array\
    \ = @_;\n    my @result = (undef, undef);\n    my $i = 0;\n    my $j = 0;\n  \
    \  my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n\
    \    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n\
    \    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n\
    \    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd\
    \ = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n \
    \   my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm\
    \ = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n \
    \   my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv\
    \ = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n \
    \   my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my\
    \ $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii\
    \ = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n\
    \    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n", "my $array = shift;\n\
    \    my $largest_negative = undef;\n    my $smallest_positive = undef;\n    foreach\
    \ my $element (@$array) {\n        if ($element < 0) {\n            if (!defined\
    \ $largest_negative) {\n                $largest_negative = $element;\n      \
    \      }\n            elsif ($element > $largest_negative) {\n               \
    \ $largest_negative = $element;\n            }\n        }\n        elsif ($element\
    \ > 0) {\n            if (!defined $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n            elsif ($element < $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n        }\n\
    \    }\n    return [$largest_negative, $smallest_positive];\n}", "my @array =\
    \ @_;\n    my $largest_negative = undef;\n    my $smallest_positive = undef;\n\
    \    foreach my $element (@array) {\n        if ($element < 0) {\n           \
    \ if (!defined($largest_negative) || $element > $largest_negative) {\n       \
    \         $largest_negative = $element;\n            }\n        } elsif ($element\
    \ > 0) {\n            if (!defined($smallest_positive) || $element < $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my @array =\
    \ @_;\n    my @result = (undef, undef);\n    my $negative_max = 0;\n    my $positive_min\
    \ = 0;\n    foreach my $element (@array) {\n        if ($element < 0) {\n    \
    \        if ($element > $negative_max) {\n                $negative_max = $element;\n\
    \            }\n        } elsif ($element > 0) {\n            if ($element < $positive_min)\
    \ {\n                $positive_min = $element;\n            }\n        }\n   \
    \ }\n    if ($negative_max != 0) {\n        $result[0] = $negative_max;\n    }\n\
    \    if ($positive_min != 0) {\n        $result[1] = $positive_min;\n    }\n \
    \   return @result;\n}", "my @array = @_;\n    my $max = undef;\n    my $min =\
    \ undef;\n    foreach my $num (@array) {\n        if ($num > 0) {\n          \
    \  if (!defined $min) {\n                $min = $num;\n            }\n       \
    \     elsif ($num < $min) {\n                $min = $num;\n            }\n   \
    \     }\n        elsif ($num < 0) {\n            if (!defined $max) {\n      \
    \          $max = $num;\n            }\n            elsif ($num > $max) {\n  \
    \              $max = $num;\n            }\n        }\n    }\n    return ($max,\
    \ $min);\n}", "my $arr = shift;\n    my ($a, $b);\n    for my $i (@$arr) {\n \
    \       if ($i < 0) {\n            $a = $i if not defined $a or $i > $a;\n   \
    \     }\n        elsif ($i > 0) {\n            $b = $i if not defined $b or $i\
    \ < $b;\n        }\n    }\n    return [$a, $b];\n}", "my @array = @_;\n    my\
    \ ($largest, $smallest);\n    foreach my $num (@array) {\n        if ($num < 0)\
    \ {\n            if (!defined $largest) {\n                $largest = $num;\n\
    \            } elsif ($num > $largest) {\n                $largest = $num;\n \
    \           }\n        } elsif ($num > 0) {\n            if (!defined $smallest)\
    \ {\n                $smallest = $num;\n            } elsif ($num < $smallest)\
    \ {\n                $smallest = $num;\n            }\n        }\n    }\n    return\
    \ ($largest, $smallest);\n}", "my ($array) = @_;\n    my ($largest_negative, $smallest_positive);\n\
    \    for my $num (@$array) {\n        if ($num < 0) {\n            if (!defined\
    \ $largest_negative || $num > $largest_negative) {\n                $largest_negative\
    \ = $num;\n            }\n        } elsif ($num > 0) {\n            if (!defined\
    \ $smallest_positive || $num < $smallest_positive) {\n                $smallest_positive\
    \ = $num;\n            }\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my $array = shift;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    for my $element (@$array) {\n        if ($element < 0 && (!defined\
    \ $largest_negative || $element > $largest_negative)) {\n            $largest_negative\
    \ = $element;\n        }\n        if ($element > 0 && (!defined $smallest_positive\
    \ || $element < $smallest_positive)) {\n            $smallest_positive = $element;\n\
    \        }\n    }\n    return [$largest_negative, $smallest_positive];\n}", "my\
    \ $arr = shift;\n    my ($a, $b);\n    foreach (@$arr) {\n        if ($_ < 0)\
    \ {\n            $a = $_ if !defined $a || $a < $_;\n        } else {\n      \
    \      $b = $_ if !defined $b || $b > $_;\n        }\n    }\n    return [$a, $b];\n\
    }", "my $array = shift;\n    my $max_negative = undef;\n    my $min_positive =\
    \ undef;\n    foreach my $element (@$array) {\n        if ($element < 0) {\n \
    \           if (!defined($max_negative) || $element > $max_negative) {\n     \
    \           $max_negative = $element;\n            }\n        } elsif ($element\
    \ > 0) {\n            if (!defined($min_positive) || $element < $min_positive)\
    \ {\n                $min_positive = $element;\n            }\n        }\n   \
    \ }\n    return [$max_negative, $min_positive];\n}", "my @array = @_;\n    my\
    \ $max_neg = undef;\n    my $min_pos = undef;\n    for my $i (@array) {\n    \
    \    if ($i < 0) {\n            if (not defined $max_neg) {\n                $max_neg\
    \ = $i;\n            } elsif ($i > $max_neg) {\n                $max_neg = $i;\n\
    \            }\n        } elsif ($i > 0) {\n            if (not defined $min_pos)\
    \ {\n                $min_pos = $i;\n            } elsif ($i < $min_pos) {\n \
    \               $min_pos = $i;\n            }\n        }\n    }\n    return ($max_neg,\
    \ $min_pos);\n}", "my @array = @_;\n    my $largest_negative = undef;\n    my\
    \ $smallest_positive = undef;\n    foreach my $number (@array) {\n        if ($number\
    \ < 0) {\n            if (!defined($largest_negative) || $number > $largest_negative)\
    \ {\n                $largest_negative = $number;\n            }\n        } elsif\
    \ ($number > 0) {\n            if (!defined($smallest_positive) || $number < $smallest_positive)\
    \ {\n                $smallest_positive = $number;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my @array =\
    \ @_;\n    my $largest_negative = undef;\n    my $smallest_positive = undef;\n\
    \    foreach my $number (@array) {\n        if ($number < 0) {\n            if\
    \ (!defined($largest_negative) || $number > $largest_negative) {\n           \
    \     $largest_negative = $number;\n            }\n        }\n        elsif ($number\
    \ > 0) {\n            if (!defined($smallest_positive) || $number < $smallest_positive)\
    \ {\n                $smallest_positive = $number;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my @array =\
    \ @_;\n    my $a = undef;\n    my $b = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (defined $a) {\n            \
    \    if ($element > $a) {\n                    $a = $element;\n              \
    \  }\n            } else {\n                $a = $element;\n            }\n  \
    \      } elsif ($element > 0) {\n            if (defined $b) {\n             \
    \   if ($element < $b) {\n                    $b = $element;\n               \
    \ }\n            } else {\n                $b = $element;\n            }\n   \
    \     }\n    }\n    return ($a, $b);\n}", "my @array = @_;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (not defined $largest_negative)\
    \ {\n                $largest_negative = $element;\n            } elsif ($element\
    \ > $largest_negative) {\n                $largest_negative = $element;\n    \
    \        }\n        } elsif ($element > 0) {\n            if (not defined $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            } elsif ($element\
    \ < $smallest_positive) {\n                $smallest_positive = $element;\n  \
    \          }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n\
    \            if (!defined($largest_negative) || $element > $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n        } elsif\
    \ ($element > 0) {\n            if (!defined($smallest_positive) || $element <\
    \ $smallest_positive) {\n                $smallest_positive = $element;\n    \
    \        }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my $array = shift;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $element (@$array) {\n        if ($element < 0) {\n\
    \            if (!defined $largest_negative || $element > $largest_negative) {\n\
    \                $largest_negative = $element;\n            }\n        } elsif\
    \ ($element > 0) {\n            if (!defined $smallest_positive || $element <\
    \ $smallest_positive) {\n                $smallest_positive = $element;\n    \
    \        }\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $number (@array) {\n        if ($number < 0) {\n  \
    \          if (!defined($largest_negative) || $number > $largest_negative) {\n\
    \                $largest_negative = $number;\n            }\n        }\n    \
    \    elsif ($number > 0) {\n            if (!defined($smallest_positive) || $number\
    \ < $smallest_positive) {\n                $smallest_positive = $number;\n   \
    \         }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my $array = shift;\n    my @sorted = sort { $a <=> $b } @$array;\n    my\
    \ $largest_negative = undef;\n    my $smallest_positive = undef;\n    for my $i\
    \ (@sorted) {\n        if ($i < 0) {\n            $largest_negative = $i;\n  \
    \      }\n        elsif ($i > 0) {\n            $smallest_positive = $i;\n   \
    \         last;\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $item (@array) {\n        if ($item < 0) {\n      \
    \      if (!defined($largest_negative) || $item > $largest_negative) {\n     \
    \           $largest_negative = $item;\n            }\n        }\n        elsif\
    \ ($item > 0) {\n            if (!defined($smallest_positive) || $item < $smallest_positive)\
    \ {\n                $smallest_positive = $item;\n            }\n        }\n \
    \   }\n    return ($largest_negative, $smallest_positive);\n}", "my @array = @_;\n\
    \    my $max_negative = undef;\n    my $min_positive = undef;\n    foreach my\
    \ $element (@array) {\n        if ($element < 0) {\n            if (!defined($max_negative)\
    \ || $element > $max_negative) {\n                $max_negative = $element;\n\
    \            }\n        }\n        elsif ($element > 0) {\n            if (!defined($min_positive)\
    \ || $element < $min_positive) {\n                $min_positive = $element;\n\
    \            }\n        }\n    }\n    return ($max_negative, $min_positive);\n\
    }", "my @array = @_;\n    my @result = (undef, undef);\n    foreach my $elem (@array)\
    \ {\n        if ($elem < 0) {\n            if (!defined($result[0]) || $elem >\
    \ $result[0]) {\n                $result[0] = $elem;\n            }\n        }\
    \ elsif ($elem > 0) {\n            if (!defined($result[1]) || $elem < $result[1])\
    \ {\n                $result[1] = $elem;\n            }\n        }\n    }\n  \
    \  return @result;\n}", "my @array = @_;\n    my @result = (undef, undef);\n \
    \   my $min = undef;\n    my $max = undef;\n    foreach my $num (@array) {\n \
    \       if ($num > 0) {\n            if (not defined $min or $num < $min) {\n\
    \                $min = $num;\n            }\n        }\n        elsif ($num <\
    \ 0) {\n            if (not defined $max or $num > $max) {\n                $max\
    \ = $num;\n            }\n        }\n    }\n    if (defined $min) {\n        $result[1]\
    \ = $min;\n    }\n    if (defined $max) {\n        $result[0] = $max;\n    }\n\
    \    return @result;\n}", "my $array = shift;\n    my $max = undef;\n    my $min\
    \ = undef;\n    foreach my $x (@$array) {\n        if ($x > 0) {\n           \
    \ if (!defined($min) || $x < $min) {\n                $min = $x;\n           \
    \ }\n        } elsif ($x < 0) {\n            if (!defined($max) || $x > $max)\
    \ {\n                $max = $x;\n            }\n        }\n    }\n    return [$max,\
    \ $min];\n}", "my @array = @_;\n    my ($largest, $smallest);\n    for my $num\
    \ (@array) {\n        if ($num < 0) {\n            $largest = $num if !defined\
    \ $largest || $num > $largest;\n        }\n        elsif ($num > 0) {\n      \
    \      $smallest = $num if !defined $smallest || $num < $smallest;\n        }\n\
    \    }\n    return (defined $largest ? $largest : undef,\n            defined\
    \ $smallest ? $smallest : undef);\n}", "my @array = @_;\n    my ($max, $min);\n\
    \    foreach my $num (@array) {\n        if ($num > 0) {\n            $min = $num\
    \ if !defined $min || $num < $min;\n        }\n        elsif ($num < 0) {\n  \
    \          $max = $num if !defined $max || $num > $max;\n        }\n    }\n  \
    \  return (defined $max ? $max : undef, defined $min ? $min : undef);\n}", "my\
    \ @array = @_;\n    my $max_neg = undef;\n    my $min_pos = undef;\n    foreach\
    \ my $num (@array) {\n        if ($num < 0) {\n            if (not defined $max_neg)\
    \ {\n                $max_neg = $num;\n            }\n            elsif ($num\
    \ > $max_neg) {\n                $max_neg = $num;\n            }\n        }\n\
    \        elsif ($num > 0) {\n            if (not defined $min_pos) {\n       \
    \         $min_pos = $num;\n            }\n            elsif ($num < $min_pos)\
    \ {\n                $min_pos = $num;\n            }\n        }\n    }\n    return\
    \ ($max_neg, $min_pos);\n}", "my @array = @_;\n    my @result = ();\n    my $max_neg\
    \ = undef;\n    my $min_pos = undef;\n    foreach my $item (@array) {\n      \
    \  if ($item < 0) {\n            if (!defined($max_neg) || $item > $max_neg) {\n\
    \                $max_neg = $item;\n            }\n        }\n        elsif ($item\
    \ > 0) {\n            if (!defined($min_pos) || $item < $min_pos) {\n        \
    \        $min_pos = $item;\n            }\n        }\n    }\n    push @result,\
    \ $max_neg;\n    push @result, $min_pos;\n    return @result;\n}", "my @array\
    \ = @_;\n    my $largest_negative = undef;\n    my $smallest_positive = undef;\n\
    \    foreach my $element (@array) {\n        if ($element < 0) {\n           \
    \ if (!defined($largest_negative) || $element > $largest_negative) {\n       \
    \         $largest_negative = $element;\n            }\n        } elsif ($element\
    \ > 0) {\n            if (!defined($smallest_positive) || $element < $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my @array =\
    \ @_;\n    my @result = (undef, undef);\n    my $min = undef;\n    my $max = undef;\n\
    \    foreach my $item (@array) {\n        if ($item > 0) {\n            if (!defined($min)\
    \ || $item < $min) {\n                $min = $item;\n            }\n        }\
    \ elsif ($item < 0) {\n            if (!defined($max) || $item > $max) {\n   \
    \             $max = $item;\n            }\n        }\n    }\n    if (defined($min))\
    \ {\n        $result[1] = $min;\n    }\n    if (defined($max)) {\n        $result[0]\
    \ = $max;\n    }\n    return @result;\n}", "my @array = @_;\n    my ($min, $max);\n\
    \    foreach my $num (@array) {\n        if ($num > 0) {\n            if (!defined\
    \ $min) {\n                $min = $num;\n            }\n            if ($num <\
    \ $min) {\n                $min = $num;\n            }\n        }\n        if\
    \ ($num < 0) {\n            if (!defined $max) {\n                $max = $num;\n\
    \            }\n            if ($num > $max) {\n                $max = $num;\n\
    \            }\n        }\n    }\n    return [$max, $min];\n}", "my @array = @_;\n\
    \    my $max_neg = undef;\n    my $min_pos = undef;\n    foreach my $num (@array)\
    \ {\n        if ($num < 0) {\n            if (not defined $max_neg) {\n      \
    \          $max_neg = $num;\n            } elsif ($num > $max_neg) {\n       \
    \         $max_neg = $num;\n            }\n        } elsif ($num > 0) {\n    \
    \        if (not defined $min_pos) {\n                $min_pos = $num;\n     \
    \       } elsif ($num < $min_pos) {\n                $min_pos = $num;\n      \
    \      }\n        }\n    }\n    return ($max_neg, $min_pos);\n}", "my $array =\
    \ shift;\n    my ($a, $b);\n    foreach my $item (@$array) {\n        if ($item\
    \ < 0) {\n            $a = $item if !defined $a || $item > $a;\n        }\n  \
    \      else {\n            $b = $item if !defined $b || $item < $b;\n        }\n\
    \    }\n    return [$a, $b];\n}", "my ($array) = @_;\n    my $a = undef;\n   \
    \ my $b = undef;\n    foreach my $element (@$array) {\n        if ($element >\
    \ 0) {\n            if (!defined($b) || $element < $b) {\n                $b =\
    \ $element;\n            }\n        } elsif ($element < 0) {\n            if (!defined($a)\
    \ || $element > $a) {\n                $a = $element;\n            }\n       \
    \ }\n    }\n    return [$a, $b];\n}", "my $arr = shift;\n    my ($max, $min) =\
    \ (undef, undef);\n    for my $i (@$arr) {\n        if ($i > 0) {\n          \
    \  $min = $i if !defined $min || $i < $min;\n        } elsif ($i < 0) {\n    \
    \        $max = $i if !defined $max || $i > $max;\n        }\n    }\n    return\
    \ [$max, $min];\n}", "my @array = @_;\n    my @result = (undef, undef);\n    my\
    \ $min = undef;\n    my $max = undef;\n    foreach my $element (@array) {\n  \
    \      if ($element > 0) {\n            if (!defined($min) || $element < $min)\
    \ {\n                $min = $element;\n            }\n        }\n        if ($element\
    \ < 0) {\n            if (!defined($max) || $element > $max) {\n             \
    \   $max = $element;\n            }\n        }\n    }\n    if (defined($min))\
    \ {\n        $result[1] = $min;\n    }\n    if (defined($max)) {\n        $result[0]\
    \ = $max;\n    }\n    return @result;\n}", "my @arr = @_;\n    my $max = undef;\n\
    \    my $min = undef;\n    foreach my $i (@arr) {\n        if ($i < 0) {\n   \
    \         if (not defined $max or $i > $max) {\n                $max = $i;\n \
    \           }\n        }\n        elsif ($i > 0) {\n            if (not defined\
    \ $min or $i < $min) {\n                $min = $i;\n            }\n        }\n\
    \    }\n    return ($max, $min);\n}", "my @array = @_;\n    my $a;\n    my $b;\n\
    \    foreach my $i (@array) {\n        if ($i < 0) {\n            if (!defined\
    \ $a) {\n                $a = $i;\n            } elsif ($i > $a) {\n         \
    \       $a = $i;\n            }\n        } elsif ($i > 0) {\n            if (!defined\
    \ $b) {\n                $b = $i;\n            } elsif ($i < $b) {\n         \
    \       $b = $i;\n            }\n        }\n    }\n    return [$a, $b];\n}", "my\
    \ @arr = @_;\n    my $max_neg = undef;\n    my $min_pos = undef;\n    foreach\
    \ my $i (@arr) {\n        if ($i < 0) {\n            if (not defined $max_neg)\
    \ {\n                $max_neg = $i;\n            } elsif ($i > $max_neg) {\n \
    \               $max_neg = $i;\n            }\n        } elsif ($i > 0) {\n  \
    \          if (not defined $min_pos) {\n                $min_pos = $i;\n     \
    \       } elsif ($i < $min_pos) {\n                $min_pos = $i;\n          \
    \  }\n        }\n    }\n    return ($max_neg, $min_pos);\n}", "my @array = @_;\n\
    \    my $largest_negative = undef;\n    my $smallest_positive = undef;\n    foreach\
    \ my $number (@array) {\n        if ($number < 0) {\n            if (not defined\
    \ $largest_negative) {\n                $largest_negative = $number;\n       \
    \     }\n            elsif ($number > $largest_negative) {\n                $largest_negative\
    \ = $number;\n            }\n        }\n        elsif ($number > 0) {\n      \
    \      if (not defined $smallest_positive) {\n                $smallest_positive\
    \ = $number;\n            }\n            elsif ($number < $smallest_positive)\
    \ {\n                $smallest_positive = $number;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my $array =\
    \ shift;\n    my ($largest_negative, $smallest_positive);\n    foreach my $element\
    \ (@$array) {\n        if ($element < 0) {\n            if (!defined $largest_negative\
    \ || $element > $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n        } elsif ($element > 0) {\n            if (!defined $smallest_positive\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my $arr = shift;\n    my ($min, $max) = (undef, undef);\n    for my $e (@$arr)\
    \ {\n        if ($e > 0) {\n            $min = $e if !defined $min || $e < $min;\n\
    \        } elsif ($e < 0) {\n            $max = $e if !defined $max || $e > $max;\n\
    \        }\n    }\n    return [$max, $min];\n}", "my @array = @_;\n    my @result\
    \ = (undef, undef);\n    my @positive_array = grep { $_ > 0 } @array;\n    my\
    \ @negative_array = grep { $_ < 0 } @array;\n    if (@positive_array) {\n    \
    \    @result[1] = min(@positive_array);\n    }\n    if (@negative_array) {\n \
    \       @result[0] = max(@negative_array);\n    }\n    return @result;\n}", "my\
    \ @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive =\
    \ undef;\n    foreach my $element (@array) {\n        if ($element < 0) {\n  \
    \          if (!defined($largest_negative) || $element > $largest_negative) {\n\
    \                $largest_negative = $element;\n            }\n        } elsif\
    \ ($element > 0) {\n            if (!defined($smallest_positive) || $element <\
    \ $smallest_positive) {\n                $smallest_positive = $element;\n    \
    \        }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $largest_negative = undef;\n    my $smallest_positive\
    \ = undef;\n    foreach my $num (@array) {\n        if ($num < 0) {\n        \
    \    if (!defined $largest_negative) {\n                $largest_negative = $num;\n\
    \            } elsif ($num > $largest_negative) {\n                $largest_negative\
    \ = $num;\n            }\n        } elsif ($num > 0) {\n            if (!defined\
    \ $smallest_positive) {\n                $smallest_positive = $num;\n        \
    \    } elsif ($num < $smallest_positive) {\n                $smallest_positive\
    \ = $num;\n            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my @result = (undef, undef);\n    my $negative_max =\
    \ undef;\n    my $positive_min = undef;\n    foreach my $element (@array) {\n\
    \        if ($element < 0) {\n            if (!defined($negative_max) || $element\
    \ > $negative_max) {\n                $negative_max = $element;\n            }\n\
    \        } elsif ($element > 0) {\n            if (!defined($positive_min) ||\
    \ $element < $positive_min) {\n                $positive_min = $element;\n   \
    \         }\n        }\n    }\n    if (defined($negative_max)) {\n        $result[0]\
    \ = $negative_max;\n    }\n    if (defined($positive_min)) {\n        $result[1]\
    \ = $positive_min;\n    }\n    return @result;\n}", "my @array = @_;\n    my $largest_negative\
    \ = undef;\n    my $smallest_positive = undef;\n    foreach my $element (@array)\
    \ {\n        if ($element < 0) {\n            if (not defined $largest_negative)\
    \ {\n                $largest_negative = $element;\n            }\n          \
    \  elsif ($element > $largest_negative) {\n                $largest_negative =\
    \ $element;\n            }\n        }\n        elsif ($element > 0) {\n      \
    \      if (not defined $smallest_positive) {\n                $smallest_positive\
    \ = $element;\n            }\n            elsif ($element < $smallest_positive)\
    \ {\n                $smallest_positive = $element;\n            }\n        }\n\
    \    }\n    return ($largest_negative, $smallest_positive);\n}", "my @array =\
    \ @_;\n    my ($largest, $smallest);\n    foreach my $element (@array) {\n   \
    \     if ($element < 0) {\n            if (!defined $largest) {\n            \
    \    $largest = $element;\n            }\n            elsif ($element > $largest)\
    \ {\n                $largest = $element;\n            }\n        }\n        elsif\
    \ ($element > 0) {\n            if (!defined $smallest) {\n                $smallest\
    \ = $element;\n            }\n            elsif ($element < $smallest) {\n   \
    \             $smallest = $element;\n            }\n        }\n    }\n    return\
    \ (defined $largest ? $largest : undef, defined $smallest ? $smallest : undef);\n\
    }", "my $arr = shift;\n    my $max_neg = undef;\n    my $min_pos = undef;\n  \
    \  foreach my $num (@$arr) {\n        if ($num < 0) {\n            if (!defined\
    \ $max_neg) {\n                $max_neg = $num;\n            }\n            elsif\
    \ ($num > $max_neg) {\n                $max_neg = $num;\n            }\n     \
    \   }\n        elsif ($num > 0) {\n            if (!defined $min_pos) {\n    \
    \            $min_pos = $num;\n            }\n            elsif ($num < $min_pos)\
    \ {\n                $min_pos = $num;\n            }\n        }\n    }\n    return\
    \ [$max_neg, $min_pos];\n}", "my @arr = @_;\n    my $max_neg = undef;\n    my\
    \ $min_pos = undef;\n    foreach my $num (@arr) {\n        if ($num < 0) {\n \
    \           if (!defined($max_neg) || $num > $max_neg) {\n                $max_neg\
    \ = $num;\n            }\n        }\n        elsif ($num > 0) {\n            if\
    \ (!defined($min_pos) || $num < $min_pos) {\n                $min_pos = $num;\n\
    \            }\n        }\n    }\n    return ($max_neg, $min_pos);\n}", "my @array\
    \ = @_;\n    my @result = (undef, undef);\n    my $min = undef;\n    my $max =\
    \ undef;\n    foreach my $element (@array) {\n        if ($element > 0) {\n  \
    \          if (!defined($min) || $element < $min) {\n                $min = $element;\n\
    \            }\n        } elsif ($element < 0) {\n            if (!defined($max)\
    \ || $element > $max) {\n                $max = $element;\n            }\n   \
    \     }\n    }\n    $result[0] = $max;\n    $result[1] = $min;\n    return @result;\n\
    }", "my $array = shift;\n    my ($largest, $smallest);\n    foreach my $num (@$array)\
    \ {\n        if ($num > 0) {\n            if (!defined $smallest) {\n        \
    \        $smallest = $num;\n            }\n            elsif ($num < $smallest)\
    \ {\n                $smallest = $num;\n            }\n        }\n        elsif\
    \ ($num < 0) {\n            if (!defined $largest) {\n                $largest\
    \ = $num;\n            }\n            elsif ($num > $largest) {\n            \
    \    $largest = $num;\n            }\n        }\n    }\n    return [$largest,\
    \ $smallest];\n}", "my @array = @_;\n    my $largest_negative = undef;\n    my\
    \ $smallest_positive = undef;\n    foreach my $element (@array) {\n        if\
    \ ($element < 0) {\n            if (!defined($largest_negative) || $element >\
    \ $largest_negative) {\n                $largest_negative = $element;\n      \
    \      }\n        } elsif ($element > 0) {\n            if (!defined($smallest_positive)\
    \ || $element < $smallest_positive) {\n                $smallest_positive = $element;\n\
    \            }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my @array = @_;\n    my $max = undef;\n    my $min = undef;\n    foreach\
    \ my $i (@array) {\n        if ($i > 0) {\n            if (!defined $min || $i\
    \ < $min) {\n                $min = $i;\n            }\n        } elsif ($i <\
    \ 0) {\n            if (!defined $max || $i > $max) {\n                $max =\
    \ $i;\n            }\n        }\n    }\n    return ($max, $min);\n}", "my @array\
    \ = @_;\n    my $largest_negative = undef;\n    my $smallest_positive = undef;\n\
    \    foreach my $element (@array) {\n        if ($element < 0) {\n           \
    \ if (not defined $largest_negative) {\n                $largest_negative = $element;\n\
    \            }\n            elsif ($element > $largest_negative) {\n         \
    \       $largest_negative = $element;\n            }\n        }\n        elsif\
    \ ($element > 0) {\n            if (not defined $smallest_positive) {\n      \
    \          $smallest_positive = $element;\n            }\n            elsif ($element\
    \ < $smallest_positive) {\n                $smallest_positive = $element;\n  \
    \          }\n        }\n    }\n    return ($largest_negative, $smallest_positive);\n\
    }", "my $arr = shift;\n    my ($a, $b);\n    for my $i (@$arr) {\n        if ($i\
    \ < 0) {\n            $a = $i if !defined $a || $i > $a;\n        }\n        elsif\
    \ ($i > 0) {\n            $b = $i if !defined $b || $i < $b;\n        }\n    }\n\
    \    return [$a, $b];\n}", "my @array = @_;\n    my @result = (undef, undef);\n\
    \    my $positive = undef;\n    my $negative = undef;\n    foreach my $num (@array)\
    \ {\n        if ($num > 0) {\n            if (!defined $positive) {\n        \
    \        $positive = $num;\n            } elsif ($num < $positive) {\n       \
    \         $positive = $num;\n            }\n        } elsif ($num < 0) {\n   \
    \         if (!defined $negative) {\n                $negative = $num;\n     \
    \       } elsif ($num > $negative) {\n                $negative = $num;\n    \
    \        }\n        }\n    }\n    if (defined $positive) {\n        $result[1]\
    \ = $positive;\n    }\n    if (defined $negative) {\n        $result[0] = $negative;\n\
    \    }\n    return @result;\n}", "my @array = @_;\n    my @result = (undef, undef);\n\
    \    foreach my $item (@array) {\n        if ($item > 0) {\n            if (defined\
    \ $result[1]) {\n                $result[1] = $item if $item < $result[1];\n \
    \           } else {\n                $result[1] = $item;\n            }\n   \
    \     } elsif ($item < 0) {\n            if (defined $result[0]) {\n         \
    \       $result[0] = $item if $item > $result[0];\n            } else {\n    \
    \            $result[0] = $item;\n            }\n        }\n    }\n    return\
    \ @result;\n}", "my $array = shift;\n    my $largest_negative = undef;\n    my\
    \ $smallest_positive = undef;\n    foreach my $number (@$array) {\n        if\
    \ ($number < 0) {\n            if (!defined $largest_negative || $number > $largest_negative)\
    \ {\n                $largest_negative = $number;\n            }\n        }\n\
    \        elsif ($number > 0) {\n            if (!defined $smallest_positive ||\
    \ $number < $smallest_positive) {\n                $smallest_positive = $number;\n\
    \            }\n        }\n    }\n    return [$largest_negative, $smallest_positive];\n\
    }", "my @array = @_;\n    my $max_negative = undef;\n    my $min_positive = undef;\n\
    \    foreach my $item (@array) {\n        if ($item < 0) {\n            if (not\
    \ defined $max_negative) {\n                $max_negative = $item;\n         \
    \   }\n            elsif ($item > $max_negative) {\n                $max_negative\
    \ = $item;\n            }\n        }\n        elsif ($item > 0) {\n          \
    \  if (not defined $min_positive) {\n                $min_positive = $item;\n\
    \            }\n            elsif ($item < $min_positive) {\n                $min_positive\
    \ = $item;\n            }\n        }\n    }\n    return ($max_negative, $min_positive);\n\
    }"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

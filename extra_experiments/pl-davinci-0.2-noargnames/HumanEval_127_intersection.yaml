name: HumanEval_127_intersection
language: pl
prompt: "# You are given two intervals,\n# where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n# The given intervals are closed\
  \ which means that the interval (start, end)\n# includes both start and end.\n#\
  \ For each given interval, it is assumed that its start is less or equal its end.\n\
  # Your task is to determine whether the length of intersection of these two \n#\
  \ intervals is a prime number.\n# Example, the intersection of the intervals (1,\
  \ 3), (2, 4) is (2, 3)\n# which its length is 1, which not a prime number.\n# If\
  \ the length of the intersection is a prime number, return \"YES\",\n# otherwise,\
  \ return \"NO\".\n# If the two intervals don't intersect, return \"NO\".\n# [input/output]\
  \ samples:\n# >>> intersection([1, 2], [2, 3])\n# \"NO\"\n# >>> intersection([-1,\
  \ 1], [0, 4])\n# \"NO\"\n# >>> intersection([-3, -1], [-5, 5])\n# \"YES\"\nsub intersection\
  \ {\n    "
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&intersection;\n\
  \        if(eq_deeply($candidate->([1, 2], [2, 3]),\"NO\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1,\
  \ 1], [0, 4]),\"NO\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
  \  }\n        if(eq_deeply($candidate->([-3, -1], [-5, 5]),\"YES\")) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
  \ 2], [-4, 0]),\"YES\")) {\n        print \"ok!\" }else{\n        exit 1;\n    \
  \    }\n        if(eq_deeply($candidate->([-11, 2], [-1, -1]),\"NO\")) {\n     \
  \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2], [3, 5]),\"NO\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
  \  }\n        if(eq_deeply($candidate->([1, 2], [1, 2]),\"NO\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
  \ -2], [-3, -2]),\"NO\")) {\n        print \"ok!\" }else{\n        exit 1;\n   \
  \     }\n}\n\ntesthumaneval();"
completions: ["my ($a, $b) = @_;\n    my ($start, $end) = (0, 0);\n    if ($a->[0]\
    \ <= $b->[0]) {\n        $start = $b->[0];\n    } else {\n        $start = $a->[0];\n\
    \    }\n    if ($a->[1] <= $b->[1]) {\n        $end = $a->[1];\n    } else {\n\
    \        $end = $b->[1];\n    }\n    if ($start > $end) {\n        return \"NO\"\
    ;\n    }\n    my $len = $end - $start + 1;\n    if ($len == 1) {\n        return\
    \ \"NO\";\n    }\n    my $sqrt = sqrt($len);\n    for (my $i = 2; $i <= $sqrt;\
    \ $i++) {\n        if ($len % $i == 0) {\n            return \"NO\";\n       \
    \ }\n    }\n    return \"YES\";\n}", "my ($a, $b) = @_;\n    my ($start, $end)\
    \ = ($a->[0], $b->[1]);\n    if ($a->[0] > $b->[0]) {\n        $start = $b->[0];\n\
    \    }\n    if ($a->[1] < $b->[1]) {\n        $end = $a->[1];\n    }\n    if ($start\
    \ > $end) {\n        return \"NO\";\n    }\n    my $length = $end - $start + 1;\n\
    \    if ($length == 1) {\n        return \"NO\";\n    }\n    if ($length == 2)\
    \ {\n        return \"YES\";\n    }\n    my $sqrt = sqrt($length);\n    for (my\
    \ $i = 2; $i <= $sqrt; $i++) {\n        if ($length % $i == 0) {\n           \
    \ return \"NO\";\n        }\n    }\n    return \"YES\";\n}", "my ($a, $b) = @_;\n\
    \    my $intersection = [$a->[0] > $b->[0] ? $a->[0] : $b->[0],\n            \
    \            $a->[1] < $b->[1] ? $a->[1] : $b->[1]];\n    return $intersection->[0]\
    \ > $intersection->[1] ? \"NO\" :\n        is_prime($intersection->[1] - $intersection->[0]\
    \ + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [\n\
    \        max($a->[0], $b->[0]),\n        min($a->[1], $b->[1]),\n    ];\n    return\
    \ $intersection->[0] > $intersection->[1] ? \"NO\" : is_prime($intersection->[1]\
    \ - $intersection->[0]) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start\
    \ = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start\
    \ > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($start1,\
    \ $end1, $start2, $end2) = @_;\n    my $intersection = 0;\n    if ($start1 <=\
    \ $start2) {\n        if ($end1 >= $start2) {\n            $intersection = $end1\
    \ - $start2 + 1;\n        }\n    } else {\n        if ($end2 >= $start1) {\n \
    \           $intersection = $end2 - $start1 + 1;\n        }\n    }\n    return\
    \ $intersection;\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0], $b->[1]);\n\
    \    $start = $b->[0] if $b->[0] > $start;\n    $end = $a->[1] if $a->[1] < $end;\n\
    \    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [\n\
    \        max($a->[0], $b->[0]),\n        min($a->[1], $b->[1]),\n    ];\n    return\
    \ $intersection->[0] > $intersection->[1] ? \"NO\" : is_prime($intersection->[1]\
    \ - $intersection->[0]) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start\
    \ = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start\
    \ > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a,\
    \ $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1],\
    \ $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ?\
    \ \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return $intersection->[0] > $intersection->[1]\
    \ ? \"NO\" : is_prime($intersection->[1] - $intersection->[0] + 1) ? \"YES\" :\
    \ \"NO\";\n}", "my ($start1, $end1, $start2, $end2) = @_;\n    my ($start, $end);\n\
    \    if ($start1 > $start2) {\n        $start = $start1;\n    } else {\n     \
    \   $start = $start2;\n    }\n    if ($end1 < $end2) {\n        $end = $end1;\n\
    \    } else {\n        $end = $end2;\n    }\n    if ($start > $end) {\n      \
    \  return \"NO\";\n    }\n    my $length = $end - $start + 1;\n    if ($length\
    \ == 1) {\n        return \"NO\";\n    }\n    for (my $i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            return \"NO\";\n        }\n\
    \    }\n    return \"YES\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0],\
    \ $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    my $len = $end - $start\
    \ + 1;\n    return $len > 0 && is_prime($len) ? \"YES\" : \"NO\";\n}", "my ($a,\
    \ $b) = @_;\n    my $intersection = [\n        max($a->[0], $b->[0]),\n      \
    \  min($a->[1], $b->[1]),\n    ];\n    return $intersection->[0] > $intersection->[1]\
    \ ? \"NO\" : is_prime($intersection->[1] - $intersection->[0]) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0], $b->[1]);\n \
    \   if ($a->[0] > $b->[0]) {\n        $start = $b->[0];\n    }\n    if ($a->[1]\
    \ < $b->[1]) {\n        $end = $a->[1];\n    }\n    if ($start > $end) {\n   \
    \     return \"NO\";\n    }\n    my $length = $end - $start + 1;\n    my $is_prime\
    \ = 1;\n    for (my $i = 2; $i < $length; $i++) {\n        if ($length % $i ==\
    \ 0) {\n            $is_prime = 0;\n            last;\n        }\n    }\n    return\
    \ $is_prime ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection\
    \ = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n    return \"NO\" if $intersection->[0]\
    \ > $intersection->[1];\n    return \"YES\" if is_prime($intersection->[1] - $intersection->[0]\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0],\
    \ $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start > $end ?\
    \ \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0], $b->[1]);\n \
    \   if ($a->[0] > $b->[0]) {\n        $start = $b->[0];\n    }\n    if ($a->[1]\
    \ < $b->[1]) {\n        $end = $a->[1];\n    }\n    if ($start > $end) {\n   \
    \     return \"NO\";\n    }\n    my $len = $end - $start + 1;\n    if ($len ==\
    \ 1) {\n        return \"NO\";\n    }\n    my $is_prime = 1;\n    for (my $i =\
    \ 2; $i < $len; $i++) {\n        if ($len % $i == 0) {\n            $is_prime\
    \ = 0;\n            last;\n        }\n    }\n    if ($is_prime) {\n        return\
    \ \"YES\";\n    }\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start,\
    \ $end) = ($a->[0], $b->[1]);\n    if ($a->[0] > $b->[0]) {\n        $start =\
    \ $b->[0];\n    }\n    if ($a->[1] < $b->[1]) {\n        $end = $a->[1];\n   \
    \ }\n    if ($start > $end) {\n        return \"NO\";\n    }\n    my $length =\
    \ $end - $start + 1;\n    if ($length == 1) {\n        return \"NO\";\n    }\n\
    \    for (my $i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n\
    \            return \"NO\";\n        }\n    }\n    return \"YES\";\n}", "my ($a,\
    \ $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1]\
    \ < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n    return\
    \ \"YES\" if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($a, $b)\
    \ = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my ($x, $y) = ($a->[0], $a->[1]);\n    my ($u,\
    \ $v) = ($b->[0], $b->[1]);\n    my ($start, $end) = (0, 0);\n    if ($x <= $u\
    \ && $u <= $y) {\n        $start = $u;\n    } elsif ($u <= $x && $x <= $v) {\n\
    \        $start = $x;\n    }\n    if ($x <= $v && $v <= $y) {\n        $end =\
    \ $v;\n    } elsif ($u <= $y && $y <= $v) {\n        $end = $y;\n    }\n    if\
    \ ($start == 0 && $end == 0) {\n        return \"NO\";\n    }\n    my $len = $end\
    \ - $start;\n    return \"YES\" if is_prime($len);\n    return \"NO\";\n}", "my\
    \ ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1],\
    \ $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ?\
    \ \"YES\" : \"NO\";\n}", "my ($start1, $end1, $start2, $end2) = @_;\n    my $start\
    \ = max($start1, $start2);\n    my $end = min($end1, $end2);\n    if ($start >\
    \ $end) {\n        return \"NO\";\n    }\n    my $length = $end - $start + 1;\n\
    \    return is_prime($length) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n  \
    \  my ($start, $end) = ($a->[0], $b->[1]);\n    $start = $b->[0] if $b->[0] >\
    \ $start;\n    $end = $a->[1] if $a->[1] < $end;\n    return \"NO\" if $start\
    \ > $end;\n    return \"YES\" if is_prime($end - $start + 1);\n    return \"NO\"\
    ;\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0], $b->[1]);\n    if\
    \ ($a->[0] > $b->[0]) {\n        $start = $b->[0];\n    }\n    if ($a->[1] < $b->[1])\
    \ {\n        $end = $a->[1];\n    }\n    if ($start > $end) {\n        return\
    \ \"NO\";\n    }\n    my $length = $end - $start + 1;\n    my $is_prime = 1;\n\
    \    for (my $i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n\
    \            $is_prime = 0;\n            last;\n        }\n    }\n    if ($is_prime)\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "my ($a, $b) = @_;\n\
    \    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1]\
    \ ? $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\"\
    \ if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n\
    \    my $intersection = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n    return\
    \ $intersection->[0] > $intersection->[1] ? \"NO\" : is_prime($intersection->[1]\
    \ - $intersection->[0] + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my\
    \ $intersection = [\n        max($a->[0], $b->[0]),\n        min($a->[1], $b->[1]),\n\
    \    ];\n    return $intersection->[0] <= $intersection->[1] ? $intersection :\
    \ undef;\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0], $b->[0]),\
    \ min($a->[1], $b->[1])];\n    return \"NO\" if $intersection->[0] > $intersection->[1];\n\
    \    return \"YES\" if is_prime($intersection->[1] - $intersection->[0] + 1);\n\
    \    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = ($a->[0] >\
    \ $b->[0]) ? $a->[0] : $b->[0];\n    $intersection = ($intersection > $b->[1])\
    \ ? $b->[1] : $intersection;\n    $intersection = ($intersection > $a->[1]) ?\
    \ $a->[1] : $intersection;\n    return $intersection;\n}", "my ($a, $b) = @_;\n\
    \    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1]\
    \ ? $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\"\
    \ if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($start1, $end1,\
    \ $start2, $end2) = @_;\n    my $start = max($start1, $start2);\n    my $end =\
    \ min($end1, $end2);\n    return $start > $end ? \"NO\" : is_prime($end - $start\
    \ + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0] >\
    \ $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my\
    \ $end = min($a->[1], $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] :\
    \ $b->[1];\n    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end\
    \ - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start,\
    \ $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1]\
    \ : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end\
    \ - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start,\
    \ $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1]\
    \ : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end\
    \ - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start,\
    \ $end) = ($a->[0], $b->[1]);\n    $start = $b->[0] if $b->[0] > $start;\n   \
    \ $end = $a->[1] if $a->[1] < $end;\n    return \"NO\" if $start > $end;\n   \
    \ return \"YES\" if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my\
    \ ($a, $b) = @_;\n    my $intersection = [max($a->[0], $b->[0]), min($a->[1],\
    \ $b->[1])];\n    return \"NO\" if $intersection->[0] > $intersection->[1];\n\
    \    return \"YES\" if is_prime($intersection->[1] - $intersection->[0] + 1);\n\
    \    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0] > $b->[0]\
    \ ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my\
    \ $end = min($a->[1], $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0],\
    \ $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start <= $end ?\
    \ is_prime($end - $start + 1) ? \"YES\" : \"NO\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my ($x, $y) = ($a->[0], $a->[1]);\n    my ($u, $v) = ($b->[0], $b->[1]);\n\
    \    my ($start, $end) = ($x, $y);\n    if ($x > $u) {\n        $start = $u;\n\
    \    }\n    if ($y < $v) {\n        $end = $v;\n    }\n    if ($start > $end)\
    \ {\n        return \"NO\";\n    }\n    my $len = $end - $start + 1;\n    if (is_prime($len))\
    \ {\n        return \"YES\";\n    }\n    return \"NO\";\n}", "my ($a, $b) = @_;\n\
    \    my $start = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1]\
    \ < $b->[1] ? $a->[1] : $b->[1];\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection\
    \ = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n    return \"NO\" if $intersection->[0]\
    \ > $intersection->[1];\n    return \"YES\" if is_prime($intersection->[1] - $intersection->[0]\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return \"NO\" if $intersection->[0] >\
    \ $intersection->[1];\n    return is_prime($intersection->[1] - $intersection->[0]\
    \ + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0],\
    \ $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start > $end ?\
    \ \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my ($start, $end) = ($a->[0], $b->[1]);\n    if ($a->[0] > $b->[0])\
    \ {\n        $start = $b->[0];\n    }\n    if ($a->[1] < $b->[1]) {\n        $end\
    \ = $a->[1];\n    }\n    if ($start > $end) {\n        return \"NO\";\n    }\n\
    \    my $length = $end - $start + 1;\n    if ($length == 1) {\n        return\
    \ \"NO\";\n    }\n    for (my $i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return \"NO\";\n        }\n    }\n    return \"YES\"\
    ;\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end\
    \ = min($a->[1], $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"\
    YES\" if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($start1, $end1,\
    \ $start2, $end2) = @_;\n    my $start = $start1 > $start2 ? $start1 : $start2;\n\
    \    my $end = $end1 < $end2 ? $end1 : $end2;\n    return $start > $end ? \"NO\"\
    \ : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n\
    \    my $intersection = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n    return\
    \ \"NO\" if $intersection->[0] > $intersection->[1];\n    return \"YES\" if is_prime($intersection->[1]\
    \ - $intersection->[0] + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n   \
    \ my $start = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] <\
    \ $b->[1] ? $a->[1] : $b->[1];\n    return \"NO\" if $start > $end;\n    return\
    \ \"YES\" if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($a, $b)\
    \ = @_;\n    my $intersect = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n\
    \    return \"NO\" if $intersect->[0] > $intersect->[1];\n    return is_prime($intersect->[1]\
    \ - $intersect->[0] + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection\
    \ = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n    return \"NO\" if $intersection->[0]\
    \ > $intersection->[1];\n    return \"YES\" if is_prime($intersection->[1] - $intersection->[0]\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersect = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return $intersect->[0] > $intersect->[1]\
    \ ? \"NO\" : is_prime($intersect->[1] - $intersect->[0] + 1) ? \"YES\" : \"NO\"\
    ;\n}", "my ($a, $b) = @_;\n    my $start = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n\
    \    my $end = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n    return $start > $end\
    \ ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($interval1,\
    \ $interval2) = @_;\n    my ($start1, $end1) = @$interval1;\n    my ($start2,\
    \ $end2) = @$interval2;\n    my $intersection = [max($start1, $start2), min($end1,\
    \ $end2)];\n    my ($start, $end) = @$intersection;\n    return 'NO' if $start\
    \ > $end;\n    return 'YES' if is_prime($end - $start);\n    return 'NO';\n}",
  "my ($a, $b) = @_;\n    my $start = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n   \
    \ my $end = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n    return $start > $end ?\
    \ \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my ($start, $end) = ($a->[0], $b->[1]);\n    $start = $b->[0] if $b->[0]\
    \ > $start;\n    $end = $a->[1] if $a->[1] < $end;\n    return \"NO\" if $start\
    \ > $end;\n    return \"YES\" if is_prime($end - $start);\n    return \"NO\";\n\
    }", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0], $b->[0]), min($a->[1],\
    \ $b->[1])];\n    return \"NO\" if $intersection->[0] > $intersection->[1];\n\
    \    return \"YES\" if is_prime($intersection->[1] - $intersection->[0] + 1);\n\
    \    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n   \
    \ return $start <= $end ? is_prime($end - $start + 1) ? \"YES\" : \"NO\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0], $b->[1]);\n \
    \   if ($a->[0] > $b->[0]) {\n        $start = $b->[0];\n    }\n    if ($a->[1]\
    \ < $b->[1]) {\n        $end = $a->[1];\n    }\n    if ($start > $end) {\n   \
    \     return \"NO\";\n    }\n    my $length = $end - $start + 1;\n    return is_prime($length)\
    \ ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($x, $y) = ($a->[0], $a->[1]);\n\
    \    my ($u, $v) = ($b->[0], $b->[1]);\n    my $intersection = [max($x, $u), min($y,\
    \ $v)];\n    my $length = $intersection->[1] - $intersection->[0];\n    return\
    \ $length > 0 && is_prime($length) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n\
    \    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my $x = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n\
    \    my $y = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n    return $x > $y ? \"NO\"\
    \ : is_prime($y - $x + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my\
    \ $start = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1]\
    \ ? $a->[1] : $b->[1];\n    if ($start > $end) {\n        return \"NO\";\n   \
    \ }\n    my $len = $end - $start + 1;\n    return is_prime($len) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0], $b->[0]),\
    \ min($a->[1], $b->[1])];\n    return $intersection->[0] > $intersection->[1]\
    \ ? \"NO\" : is_prime($intersection->[1] - $intersection->[0] + 1) ? \"YES\" :\
    \ \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0] > $b->[0] ? $a->[0]\
    \ : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n    return\
    \ $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}",
  "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0],\
    \ $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n\
    \    return \"YES\" if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my\
    \ ($a, $b) = @_;\n    my $start = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n   \
    \ my $end = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n    return \"NO\" if $start\
    \ > $end;\n    return \"YES\" if is_prime($end - $start + 1);\n    return \"NO\"\
    ;\n}", "my ($a, $b) = @_;\n    my $intersection = [$a->[0] > $b->[0] ? $a->[0]\
    \ : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]];\n    return $intersection->[0]\
    \ > $intersection->[1] ? \"NO\" : is_prime($intersection->[1] - $intersection->[0]\
    \ + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n   \
    \ return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n   \
    \ return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0] >\
    \ $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0]\
    \ : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start\
    \ > $end;\n    return \"YES\" if is_prime($end - $start + 1);\n    return \"NO\"\
    ;\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end\
    \ = min($a->[1], $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection\
    \ = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n    return \"NO\" if $intersection->[0]\
    \ > $intersection->[1];\n    return \"YES\" if is_prime($intersection->[1] - $intersection->[0]\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n   \
    \ return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0] >\
    \ $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n\
    \    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n   \
    \ return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0],\
    \ $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start > $end ?\
    \ \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1]\
    \ < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n    return\
    \ \"YES\" if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($a, $b)\
    \ = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1]\
    \ < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n    return\
    \ \"YES\" if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($a, $b)\
    \ = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1]\
    \ < $b->[1] ? $a->[1] : $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end)\
    \ = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n\
    \    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0] >\
    \ $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0]\
    \ : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start\
    \ > $end;\n    return is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my\
    \ ($a, $b) = @_;\n    my $start = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n   \
    \ my $end = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n    return $start > $end ?\
    \ \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0], $b->[0]),\
    \ min($a->[1], $b->[1])];\n    return $intersection->[0] > $intersection->[1]\
    \ ? \"NO\" : is_prime($intersection->[1] - $intersection->[0] + 1) ? \"YES\" :\
    \ \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0]\
    \ ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n    return \"\
    NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start + 1);\n \
    \   return \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return \"NO\" if $intersection->[0] >\
    \ $intersection->[1];\n    return \"YES\" if is_prime($intersection->[1] - $intersection->[0]\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0],\
    \ $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start <= $end ?\
    \ is_prime($end - $start + 1) ? \"YES\" : \"NO\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1]\
    \ < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n    return\
    \ is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n  \
    \  my $start = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] <\
    \ $b->[1] ? $a->[1] : $b->[1];\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0],\
    \ $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start > $end ?\
    \ \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1]\
    \ < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n    return\
    \ \"YES\" if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($a, $b)\
    \ = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1]\
    \ < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if ($start > $end);\n   \
    \ return \"YES\" if (is_prime($end - $start + 1));\n    return \"NO\";\n}", "my\
    \ ($a, $b) = @_;\n    my ($start, $end) = ($a->[0], $b->[1]);\n    if ($a->[0]\
    \ > $b->[0]) {\n        $start = $b->[0];\n    }\n    if ($a->[1] < $b->[1]) {\n\
    \        $end = $a->[1];\n    }\n    if ($start > $end) {\n        return \"NO\"\
    ;\n    }\n    my $len = $end - $start + 1;\n    if ($len == 1) {\n        return\
    \ \"NO\";\n    }\n    if ($len == 2) {\n        return \"YES\";\n    }\n    for\
    \ (my $i = 2; $i < $len; $i++) {\n        if ($len % $i == 0) {\n            return\
    \ \"NO\";\n        }\n    }\n    return \"YES\";\n}", "my ($a, $b) = @_;\n   \
    \ my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n \
    \   return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my ($x, $y) = ($a->[0], $a->[1]);\n    my ($u,\
    \ $v) = ($b->[0], $b->[1]);\n    my ($start, $end) = ($x > $u ? $x : $u, $y <\
    \ $v ? $y : $v);\n    return $start > $end ? \"NO\" : is_prime($end - $start +\
    \ 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return $intersection->[0] > $intersection->[1]\
    \ ? \"NO\" : is_prime($intersection->[1] - $intersection->[0] + 1) ? \"YES\" :\
    \ \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n  \
    \  my $end = min($a->[1], $b->[1]);\n    return $start <= $end ? $end - $start\
    \ + 1 : 0;\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0], $b->[1]);\n\
    \    if ($a->[0] > $b->[0]) {\n        $start = $b->[0];\n    }\n    if ($a->[1]\
    \ < $b->[1]) {\n        $end = $a->[1];\n    }\n    if ($start > $end) {\n   \
    \     return \"NO\";\n    }\n    my $len = $end - $start + 1;\n    return \"YES\"\
    \ if is_prime($len);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start\
    \ = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ?\
    \ $a->[1] : $b->[1];\n    return \"NO\" if $start > $end;\n    return \"YES\"\
    \ if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($start1, $end1,\
    \ $start2, $end2) = @_;\n    my $intersection = 0;\n    if ($start1 <= $start2)\
    \ {\n        if ($end1 >= $start2) {\n            if ($end1 <= $end2) {\n    \
    \            $intersection = $end1 - $start2 + 1;\n            } else {\n    \
    \            $intersection = $end2 - $start2 + 1;\n            }\n        }\n\
    \    } else {\n        if ($end2 >= $start1) {\n            if ($end2 <= $end1)\
    \ {\n                $intersection = $end2 - $start1 + 1;\n            } else\
    \ {\n                $intersection = $end1 - $start1 + 1;\n            }\n   \
    \     }\n    }\n    if ($intersection == 0) {\n        return \"NO\";\n    } else\
    \ {\n        return is_prime($intersection) ? \"YES\" : \"NO\";\n    }\n}", "my\
    \ ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1],\
    \ $b->[1]);\n    my $len = $end - $start + 1;\n    return $len > 0 && is_prime($len)\
    \ ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return $intersection->[0] <= $intersection->[1]\
    \ && is_prime($intersection->[1] - $intersection->[0] + 1) ? \"YES\" : \"NO\"\
    ;\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end\
    \ = min($a->[1], $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] :\
    \ $b->[1];\n    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ?\
    \ \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return $intersection->[0] > $intersection->[1]\
    \ ? \"NO\" : is_prime($intersection->[1] - $intersection->[0] + 1) ? \"YES\" :\
    \ \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0], $b->[0]),\
    \ min($a->[1], $b->[1])];\n    return $intersection->[0] > $intersection->[1]\
    \ ? \"NO\" : is_prime($intersection->[1] - $intersection->[0] + 1) ? \"YES\" :\
    \ \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0], $b->[1]);\n\
    \    $start = $b->[0] if $b->[0] > $start;\n    $end = $a->[1] if $a->[1] < $end;\n\
    \    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return $intersection->[0] > $intersection->[1]\
    \ ? \"NO\" : is_prime($intersection->[1] - $intersection->[0] + 1) ? \"YES\" :\
    \ \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = $a->[0] > $b->[0] ?\
    \ $a->[0] : $b->[0];\n    $intersection = $a->[1] < $b->[1] ? $a->[1] : $b->[1];\n\
    \    $intersection = $intersection - $intersection + 1;\n    return $intersection\
    \ == 1 ? \"NO\" : is_prime($intersection) ? \"YES\" : \"NO\";\n}", "my ($a, $b)\
    \ = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my\
    \ $end = min($a->[1], $b->[1]);\n    return $start <= $end ? $end - $start + 1\
    \ : 0;\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0], $b->[0]),\
    \ min($a->[1], $b->[1])];\n    return \"NO\" if $intersection->[0] > $intersection->[1];\n\
    \    my $length = $intersection->[1] - $intersection->[0] + 1;\n    return \"\
    YES\" if is_prime($length);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my\
    \ ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ?\
    \ $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\"\
    \ if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($start1, $end1,\
    \ $start2, $end2) = @_;\n    my $start = max($start1, $start2);\n    my $end =\
    \ min($end1, $end2);\n    return $start > $end ? \"NO\" : is_prime($end - $start\
    \ + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [\n\
    \        max($a->[0], $b->[0]),\n        min($a->[1], $b->[1]),\n    ];\n    return\
    \ $intersection->[0] > $intersection->[1] ? \"NO\" : is_prime($intersection->[1]\
    \ - $intersection->[0]) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start,\
    \ $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1]\
    \ : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end\
    \ - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection\
    \ = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n    return $intersection->[0]\
    \ <= $intersection->[1] ? is_prime($intersection->[1] - $intersection->[0]) ?\
    \ \"YES\" : \"NO\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersect = ($a->[0]\
    \ <= $b->[1] && $a->[1] >= $b->[0]) ? 1 : 0;\n    return $intersect ? is_prime($b->[0]\
    \ - $a->[1]) ? \"YES\" : \"NO\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start,\
    \ $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1]\
    \ : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end\
    \ - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start,\
    \ $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1]\
    \ : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end\
    \ - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start =\
    \ max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start\
    \ > $end ? 'NO' : is_prime($end - $start + 1) ? 'YES' : 'NO';\n}", "my ($a, $b)\
    \ = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n\
    \    my $len = $end - $start + 1;\n    return $len > 0 && is_prime($len) ? \"\
    YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return $intersection->[0] <= $intersection->[1]\
    \ && is_prime($intersection->[1] - $intersection->[0] + 1) ? \"YES\" : \"NO\"\
    ;\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0]\
    \ : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start\
    \ > $end;\n    return \"YES\" if is_prime($end - $start + 1);\n    return \"NO\"\
    ;\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end\
    \ = min($a->[1], $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] :\
    \ $b->[1];\n    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end\
    \ - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start =\
    \ $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1]\
    \ : $b->[1];\n    return $start > $end ? \"NO\" : is_prime($end - $start + 1)\
    \ ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n   \
    \ return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [\n\
    \        max($a->[0], $b->[0]),\n        min($a->[1], $b->[1]),\n    ];\n    return\
    \ $intersection->[0] > $intersection->[1] ? \"NO\" : is_prime($intersection->[1]\
    \ - $intersection->[0]) ? \"YES\" : \"NO\";\n}", "my ($start1, $end1, $start2,\
    \ $end2) = @_;\n    my $start = max($start1, $start2);\n    my $end = min($end1,\
    \ $end2);\n    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"\
    YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n\
    \    my $end = min($a->[1], $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($x, $y) =\
    \ @$a;\n    my ($u, $v) = @$b;\n    my $i = [$x, $y]->[$x > $y];\n    my $j =\
    \ [$u, $v]->[$u > $v];\n    my $k = [$x, $y]->[$x < $y];\n    my $l = [$u, $v]->[$u\
    \ < $v];\n    if ($i > $l || $j < $k) {\n        return \"NO\";\n    }\n    my\
    \ $m = [$i, $k]->[$i < $k];\n    my $n = [$j, $l]->[$j < $l];\n    my $p = $n\
    \ - $m + 1;\n    return $p == 2 || $p == 3 || $p == 5 || $p == 7 ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0]\
    \ : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start\
    \ > $end;\n    return \"YES\" if is_prime($end - $start + 1);\n    return \"NO\"\
    ;\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0], $b->[0]), min($a->[1],\
    \ $b->[1])];\n    return $intersection->[0] > $intersection->[1] ? \"NO\" : is_prime($intersection->[1]\
    \ - $intersection->[0] + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my\
    \ $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return\
    \ \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start + 1);\n\
    \    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return \"NO\" if $intersection->[0] >\
    \ $intersection->[1];\n    return \"YES\" if is_prime($intersection->[1] - $intersection->[0]\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n   \
    \ return \"NO\" if $start > $end;\n    return is_prime($end - $start + 1) ? \"\
    YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0]\
    \ ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n    return \"\
    NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start + 1);\n \
    \   return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0] >\
    \ $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n    return\
    \ \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start + 1);\n\
    \    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n   \
    \ return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $c = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return $c->[0] <= $c->[1] ? is_prime($c->[1]\
    \ - $c->[0]) ? \"YES\" : \"NO\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start,\
    \ $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1]\
    \ : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end\
    \ - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start =\
    \ $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1]\
    \ : $b->[1];\n    return $start > $end ? \"NO\" : is_prime($end - $start + 1)\
    \ ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n   \
    \ return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [max($a->[0],\
    \ $b->[0]), min($a->[1], $b->[1])];\n    return $intersection->[0] <= $intersection->[1]\
    \ ? is_prime($intersection->[1] - $intersection->[0]) ? \"YES\" : \"NO\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my\
    \ $end = min($a->[1], $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] :\
    \ $b->[1];\n    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ?\
    \ \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n\
    \    my $end = min($a->[1], $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end)\
    \ = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n\
    \    if ($start > $end) {\n        return \"NO\";\n    }\n    return is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection\
    \ = [\n        max($a->[0], $b->[0]),\n        min($a->[1], $b->[1]),\n    ];\n\
    \    return $intersection->[0] <= $intersection->[1]\n        ? is_prime($intersection->[1]\
    \ - $intersection->[0])\n        : 'NO';\n}", "my ($a, $b) = @_;\n    my $intersection\
    \ = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n    return $intersection->[0]\
    \ <= $intersection->[1] ? is_prime($intersection->[1] - $intersection->[0]) ?\
    \ \"YES\" : \"NO\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] :\
    \ $b->[1];\n    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ?\
    \ \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n\
    \    my $end = min($a->[1], $b->[1]);\n    return \"NO\" if $start > $end;\n \
    \   return is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0]\
    \ : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n    return $start > $end\
    \ ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b)\
    \ = @_;\n    my $intersection = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n\
    \    return $intersection->[0] > $intersection->[1] ? \"NO\" : is_prime($intersection->[1]\
    \ - $intersection->[0] + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my\
    \ $start = $a->[0] > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1]\
    \ ? $a->[1] : $b->[1];\n    return \"NO\" if $start > $end;\n    return is_prime($end\
    \ - $start) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection\
    \ = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n    return 'NO' if $intersection->[0]\
    \ > $intersection->[1];\n    return is_prime($intersection->[1] - $intersection->[0]\
    \ + 1) ? 'YES' : 'NO';\n}", "my ($start1, $end1, $start2, $end2) = @_;\n    my\
    \ $start = $start1 > $start2 ? $start1 : $start2;\n    my $end = $end1 < $end2\
    \ ? $end1 : $end2;\n    return $start > $end ? \"NO\" : is_prime($end - $start\
    \ + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [$a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]];\n   \
    \ return $intersection->[0] > $intersection->[1] ? \"NO\" : is_prime($intersection->[1]\
    \ - $intersection->[0] + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my\
    \ ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ?\
    \ $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\"\
    \ if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n\
    \    my $intersection = [0, 0];\n    if ($a->[0] > $b->[0]) {\n        $intersection->[0]\
    \ = $a->[0];\n    } else {\n        $intersection->[0] = $b->[0];\n    }\n   \
    \ if ($a->[1] < $b->[1]) {\n        $intersection->[1] = $a->[1];\n    } else\
    \ {\n        $intersection->[1] = $b->[1];\n    }\n    if ($intersection->[0]\
    \ > $intersection->[1]) {\n        return \"NO\";\n    }\n    my $length = $intersection->[1]\
    \ - $intersection->[0] + 1;\n    if ($length == 1) {\n        return \"NO\";\n\
    \    }\n    my $is_prime = 1;\n    for (my $i = 2; $i < $length; $i++) {\n   \
    \     if ($length % $i == 0) {\n            $is_prime = 0;\n            last;\n\
    \        }\n    }\n    if ($is_prime) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }\n}", "my ($a, $b) = @_;\n    my $c = [$a->[0],\
    \ $b->[0]];\n    my $d = [$a->[1], $b->[1]];\n    my $start = max($c);\n    my\
    \ $end = min($d);\n    return $start > $end ? \"NO\" : is_prime($end - $start\
    \ + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [$a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]];\n   \
    \ return 'NO' if $intersection->[0] > $intersection->[1];\n    return 'YES' if\
    \ is_prime($intersection->[1] - $intersection->[0] + 1);\n    return 'NO';\n}",
  "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0],\
    \ $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n    return \"NO\" if $start > $end;\n\
    \    return \"YES\" if is_prime($end - $start + 1);\n    return \"NO\";\n}", "my\
    \ ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1],\
    \ $b->[1]);\n    return $start <= $end ? $end - $start + 1 : 0;\n}", "my ($a,\
    \ $b) = @_;\n    my $intersection = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n\
    \    return $intersection->[0] > $intersection->[1] ? \"NO\" : is_prime($intersection->[1]\
    \ - $intersection->[0] + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my\
    \ ($start, $end) = ($a->[0], $b->[1]);\n    $start = $b->[0] if $b->[0] > $start;\n\
    \    $end = $a->[1] if $a->[1] < $end;\n    return \"NO\" if $start > $end;\n\
    \    return \"YES\" if is_prime($end - $start);\n    return \"NO\";\n}", "my ($a,\
    \ $b) = @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1]\
    \ < $b->[1] ? $a->[1] : $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0],\
    \ $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start > $end ?\
    \ \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n\
    \    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"\
    NO\";\n}", "my ($a, $b) = @_;\n    my $intersection = [\n        max($a->[0],\
    \ $b->[0]),\n        min($a->[1], $b->[1]),\n    ];\n    if ($intersection->[0]\
    \ > $intersection->[1]) {\n        return \"NO\";\n    }\n    return is_prime($intersection->[1]\
    \ - $intersection->[0] + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my\
    \ ($start, $end) = ($a->[0], $b->[1]);\n    return \"NO\" if $start > $end;\n\
    \    return \"YES\" if is_prime($end - $start);\n    return \"NO\";\n}", "my ($a,\
    \ $b) = @_;\n    my $intersection = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n\
    \    return $intersection->[0] > $intersection->[1] ? \"NO\" : is_prime($intersection->[1]\
    \ - $intersection->[0] + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my\
    \ ($x, $y) = ($a->[0], $a->[1]);\n    my ($u, $v) = ($b->[0], $b->[1]);\n    my\
    \ ($start, $end) = (max($x, $u), min($y, $v));\n    return \"NO\" if $start >\
    \ $end;\n    return \"YES\" if is_prime($end - $start + 1);\n    return \"NO\"\
    ;\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n    my $end\
    \ = min($a->[1], $b->[1]);\n    return $start <= $end ? is_prime($end - $start\
    \ + 1) ? \"YES\" : \"NO\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end)\
    \ = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1] : $b->[1]);\n\
    \    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end - $start\
    \ + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0],\
    \ $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return $start > $end ?\
    \ \"NO\" : is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my ($start, $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1]\
    \ < $b->[1] ? $a->[1] : $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] :\
    \ $b->[1];\n    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ?\
    \ \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0],\
    \ $b->[1]);\n    $start = $b->[0] if $b->[0] > $start;\n    $end = $a->[1] if\
    \ $a->[1] < $end;\n    return $start > $end ? \"NO\" : is_prime($end - $start\
    \ + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my ($start, $end) = ($a->[0],\
    \ $b->[1]);\n    if ($a->[0] > $b->[0]) {\n        $start = $b->[0];\n    }\n\
    \    if ($a->[1] < $b->[1]) {\n        $end = $a->[1];\n    }\n    if ($start\
    \ > $end) {\n        return \"NO\";\n    }\n    my $length = $end - $start + 1;\n\
    \    if ($length == 1) {\n        return \"NO\";\n    }\n    for (my $i = 2; $i\
    \ < $length; $i++) {\n        if ($length % $i == 0) {\n            return \"\
    NO\";\n        }\n    }\n    return \"YES\";\n}", "my ($a, $b) = @_;\n    my ($start,\
    \ $end) = ($a->[0] > $b->[0] ? $a->[0] : $b->[0], $a->[1] < $b->[1] ? $a->[1]\
    \ : $b->[1]);\n    return \"NO\" if $start > $end;\n    return \"YES\" if is_prime($end\
    \ - $start + 1);\n    return \"NO\";\n}", "my ($a, $b) = @_;\n    my ($x, $y)\
    \ = ($a->[0], $a->[1]);\n    my ($u, $v) = ($b->[0], $b->[1]);\n    my ($start,\
    \ $end) = ($x, $y);\n    if ($x > $u) {\n        $start = $u;\n    }\n    if ($y\
    \ < $v) {\n        $end = $v;\n    }\n    if ($start > $end) {\n        return\
    \ \"NO\";\n    }\n    my $len = $end - $start + 1;\n    return \"YES\" if is_prime($len);\n\
    \    return \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n\
    \    my $end = min($a->[1], $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = $a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] :\
    \ $b->[1];\n    if ($start > $end) {\n        return \"NO\";\n    }\n    return\
    \ is_prime($end - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n  \
    \  my $intersection = [max($a->[0], $b->[0]), min($a->[1], $b->[1])];\n    if\
    \ ($intersection->[0] > $intersection->[1]) {\n        return \"NO\";\n    }\n\
    \    my $length = $intersection->[1] - $intersection->[0] + 1;\n    return is_prime($length)\
    \ ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0], $b->[0]);\n\
    \    my $end = min($a->[1], $b->[1]);\n    return $start > $end ? \"NO\" : is_prime($end\
    \ - $start + 1) ? \"YES\" : \"NO\";\n}", "my ($a, $b) = @_;\n    my $start = max($a->[0],\
    \ $b->[0]);\n    my $end = min($a->[1], $b->[1]);\n    return \"NO\" if $start\
    \ > $end;\n    return \"YES\" if is_prime($end - $start + 1);\n    return \"NO\"\
    ;\n}", "my ($a, $b) = @_;\n    my ($x1, $x2) = @$a;\n    my ($y1, $y2) = @$b;\n\
    \    my $x = $x1 > $y1 ? $x1 : $y1;\n    my $y = $x2 < $y2 ? $x2 : $y2;\n    return\
    \ $x > $y ? \"NO\" : is_prime($y - $x) ? \"YES\" : \"NO\";\n}", "my ($a, $b) =\
    \ @_;\n    my $intersection = 0;\n    if ($a->[0] <= $b->[0] && $b->[0] <= $a->[1])\
    \ {\n        $intersection = $a->[1] - $b->[0] + 1;\n    } elsif ($b->[0] <= $a->[0]\
    \ && $a->[0] <= $b->[1]) {\n        $intersection = $b->[1] - $a->[0] + 1;\n \
    \   }\n    return $intersection;\n}", "my ($a, $b) = @_;\n    my $start = $a->[0]\
    \ > $b->[0] ? $a->[0] : $b->[0];\n    my $end = $a->[1] < $b->[1] ? $a->[1] :\
    \ $b->[1];\n    return $start > $end ? \"NO\" : is_prime($end - $start + 1) ?\
    \ \"YES\" : \"NO\";\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

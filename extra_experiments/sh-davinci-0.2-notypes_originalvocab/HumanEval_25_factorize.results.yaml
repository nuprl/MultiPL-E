language: sh
name: HumanEval_25_factorize
results:
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while (( i <= n ));\
    \ do\n        if (( n % i == 0 )); then\n            factors+=($i)\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while ((i * i <= n));\
    \ do\n        while ((n % i == 0)); do\n            factors+=($i)\n          \
    \  ((n /= i))\n        done\n        ((i++))\n    done\n    if ((n > 1)); then\n\
    \        factors+=($n)\n    fi\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $n -gt 1 ];\
    \ do\n        while [ $((n % i)) -eq 0 ]; do\n            factors+=($i)\n    \
    \        n=$((n / i))\n        done\n        i=$((i + 1))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $n -gt 1 ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            number=$((number / i))\n        done\n        i=$((i + 1))\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while ((\
    \ number > 1 )); do\n        while (( number % divisor == 0 )); do\n         \
    \   factors+=($divisor)\n            number=$(( number / divisor ))\n        done\n\
    \        divisor=$(( divisor + 1 ))\n    done\n    echo \"${factors[@]}\"\n}\n\
    \ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local divisor=2\n  while [ $number -gt\
    \ 1 ]; do\n    while [ $((number % divisor)) -eq 0 ]; do\n      factors+=($divisor)\n\
    \      number=$((number / divisor))\n    done\n    divisor=$((divisor + 1))\n\
    \  done\n  echo ${factors[@]}\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local factor=2\n  while [ $number -gt\
    \ 1 ]; do\n    while [ $((number % factor)) -eq 0 ]; do\n      factors+=($factor)\n\
    \      number=$((number / factor))\n    done\n    factor=$((factor + 1))\n  done\n\
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    local quotient=$number\n\
    \    while [ $quotient -gt 1 ]; do\n        if [ $((quotient % divisor)) -eq 0\
    \ ]; then\n            factors+=($divisor)\n            quotient=$((quotient /\
    \ divisor))\n        else\n            divisor=$((divisor + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $(($number % $i)) -eq 0 ]; then\n            number=$(($number\
    \ / $i))\n            factors+=($i)\n        else\n            i=$(($i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local factor=2\n  while [[ $number -gt\
    \ 1 ]]; do\n    while [[ $((number % factor)) -eq 0 ]]; do\n      factors+=($factor)\n\
    \      number=$((number / factor))\n    done\n    factor=$((factor + 1))\n  done\n\
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=\"$1\"\n    local factors=()\n    local i=2\n    while [ $i\
    \ -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $num -gt 1\
    \ ]; do\n        while [ $((num % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            num=$((num / i))\n        done\n        i=$((i + 1))\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local n=$1\n  local factors=()\n  local i=2\n  while (( i <= n ))\n  do\n \
    \   if (( n % i == 0 ))\n    then\n      factors+=($i)\n      (( n /= i ))\n \
    \   else\n      (( i++ ))\n    fi\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $(($n % $i)) -eq 0 ]; then\n            factors+=($i)\n   \
    \         n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $factor\
    \ -le $number ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n       \
    \     number=$((number / factor))\n            factors+=($factor)\n        else\n\
    \            factor=$((factor + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $factor\
    \ -le $number ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n       \
    \     factors+=($factor)\n            number=$((number / factor))\n        else\n\
    \            factor=$((factor + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while (( i <= number\
    \ )); do\n        if (( number % i == 0 )); then\n            factors+=($i)\n\
    \            number=$(( number / i ))\n        else\n            (( i++ ))\n \
    \       fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while ((n > 1)); do\n\
    \        while ((n % i == 0)); do\n            factors+=($i)\n            ((n\
    \ /= i))\n        done\n        ((i++))\n    done\n    echo \"${factors[@]}\"\n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $(($n % $i)) -eq 0 ]; then\n            factors+=($i)\n   \
    \         n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $(( num % i )) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$(( num / i ))\n        else\n            i=$(( i + 1 ))\n  \
    \      fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local result=()\n    local divisor=2\n    while (( num\
    \ > 1 )); do\n        while (( num % divisor == 0 )); do\n            result+=($divisor)\n\
    \            (( num /= divisor ))\n        done\n        (( divisor++ ))\n   \
    \ done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local n=$1\n  local factors=()\n  local i=2\n  while [ $n -gt 1 ]; do\n   \
    \ while [ $((n % i)) -eq 0 ]; do\n      factors+=($i)\n      n=$((n / i))\n  \
    \  done\n    i=$((i + 1))\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $n -gt 1 ];\
    \ do\n        while [ $((n % i)) -eq 0 ]; do\n            factors+=($i)\n    \
    \        n=$((n / i))\n        done\n        i=$((i + 1))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $num -gt 1\
    \ ]; do\n        while [ $((num % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            num=$((num / i))\n        done\n        i=$((i + 1))\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local factor=2\n  while [ $number -gt\
    \ 1 ]; do\n    while [ $((number % factor)) -eq 0 ]; do\n      factors+=($factor)\n\
    \      number=$((number / factor))\n    done\n    factor=$((factor + 1))\n  done\n\
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local num=$1\n  local factors=()\n  local i=2\n  while [ $i -le $num ]; do\n\
    \    if [ $((num % i)) -eq 0 ]; then\n      factors+=($i)\n      num=$((num /\
    \ i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo \"${factors[@]}\"\n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local factor=2\n  while (( number >\
    \ 1 )); do\n    while (( number % factor == 0 )); do\n      factors+=($factor)\n\
    \      number=$(( number / factor ))\n    done\n    (( factor++ ))\n  done\n \
    \ echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $n -gt 1 ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo ${factors[@]}\n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while (( i*i <= n ));\
    \ do\n        if (( n % i == 0 )); then\n            factors+=($i)\n         \
    \   (( n /= i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    if (( n > 1 )); then\n        factors+=($n)\n    fi\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local n=$1\n  local factors=()\n  local i=2\n  while [ $i -le $n ]; do\n  \
    \  if [ $((n % i)) -eq 0 ]; then\n      factors+=($i)\n      n=$((n / i))\n  \
    \  else\n      i=$((i + 1))\n    fi\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            number=$((number\
    \ / i))\n            factors+=(\"$i\")\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            number=$((number\
    \ / divisor))\n            factors+=($divisor)\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local i=2\n    local factors=()\n    while [ $i -le $n ];\
    \ do\n        if [ $(($n % $i)) -eq 0 ]; then\n            factors+=($i)\n   \
    \         n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            number=$((number\
    \ / divisor))\n            factors+=($divisor)\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            factors+=($divisor)\n\
    \            number=$((number / divisor))\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [[ $number\
    \ -gt 1 ]]; do\n        while [[ $((number % factor)) -eq 0 ]]; do\n         \
    \   factors+=($factor)\n            number=$((number / factor))\n        done\n\
    \        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $n -gt 1 ];\
    \ do\n        while [ $((n % i)) -eq 0 ]; do\n            factors+=($i)\n    \
    \        n=$((n / i))\n        done\n        i=$((i + 1))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            number=$((number\
    \ / i))\n            factors+=($i)\n        else\n            i=$((i + 1))\n \
    \       fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [[ $number\
    \ -gt 1 ]]; do\n        while [[ $((number % factor)) -eq 0 ]]; do\n         \
    \   factors+=($factor)\n            number=$((number / factor))\n        done\n\
    \        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local num=$1\n  local factors=()\n  local i=2\n  while [ $num -gt 1 ]; do\n\
    \    if [ $((num % i)) -eq 0 ]; then\n      factors+=(\"$i\")\n      num=$((num\
    \ / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local result=()\n    local i=2\n    while [ $n -gt 1 ]; do\n\
    \        if [ $((n % i)) -eq 0 ]; then\n            result+=($i)\n           \
    \ n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    local j=0\n    while\
    \ [ $num -gt 1 ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            num=$((num\
    \ / i))\n            factors[$j]=$i\n            j=$((j + 1))\n        else\n\
    \            i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local i=2\n  while [ $i -le $number\
    \ ]; do\n    if [ $((number % i)) -eq 0 ]; then\n      factors+=($i)\n      number=$((number\
    \ / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            factors+=($divisor)\n\
    \            number=$((number / divisor))\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $n -gt 1 ];\
    \ do\n        while [ $((n % i)) -eq 0 ]; do\n            factors+=($i)\n    \
    \        n=$((n / i))\n        done\n        i=$((i + 1))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            number=$((number\
    \ / divisor))\n            factors+=(\"\\\"$divisor\\\"\")\n        else\n   \
    \         divisor=$((divisor + 1))\n        fi\n    done\n    echo \"[${factors[@]}]\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            number=$((number\
    \ / divisor))\n            factors+=($divisor)\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $(($number % $i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$(($number / $i))\n        else\n            i=$(($i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while (( i <= n ));\
    \ do\n        if (( n % i == 0 )); then\n            factors+=($i)\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while (( num > 1 ));\
    \ do\n        while (( num % i == 0 )); do\n            factors+=($i)\n      \
    \      (( num /= i ))\n        done\n        (( i++ ))\n    done\n    echo \"\
    ${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local factor=2\n    while [ $n -gt\
    \ 1 ]; do\n        while [ $((n % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            n=$((n / factor))\n        done\n        factor=$((factor + 1))\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $(($number % $i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$(($number / $i))\n        else\n            i=$(($i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while (( number\
    \ > 1 )); do\n        if (( number % factor == 0 )); then\n            number=$((\
    \ number / factor ))\n            factors+=($factor)\n        else\n         \
    \   factor=$(( factor + 1 ))\n        fi\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=(\"\
    $factor\")\n            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while ((\
    \ number > 1 )); do\n        if (( number % divisor == 0 )); then\n          \
    \  factors+=($divisor)\n            number=$(( number / divisor ))\n        else\n\
    \            divisor=$(( divisor + 1 ))\n        fi\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            number=$((number / i))\n        done\n        i=$((i + 1))\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while ((\
    \ number > 1 )); do\n        while (( number % divisor == 0 )); do\n         \
    \   factors+=($divisor)\n            number=$(( number / divisor ))\n        done\n\
    \        divisor=$(( divisor + 1 ))\n    done\n    echo \"${factors[@]}\"\n}\n\
    \ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            factors+=($divisor)\n\
    \            number=$((number / divisor))\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            factors+=($divisor)\n\
    \            number=$((number / divisor))\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while (( number\
    \ > 1 )); do\n        while (( number % factor == 0 )); do\n            factors+=($factor)\n\
    \            number=$(( number / factor ))\n        done\n        factor=$(( factor\
    \ + 1 ))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local n=$1\n  local factors=()\n  local i=2\n  while [ $i -le $n ]; do\n  \
    \  if [ $((n % i)) -eq 0 ]; then\n      factors+=($i)\n      n=$((n / i))\n  \
    \  else\n      i=$((i + 1))\n    fi\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $(($number % $i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$(($number / $i))\n        else\n            i=$(($i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local factor=2\n  while [ $number -gt\
    \ 1 ]; do\n    while [ $((number % factor)) -eq 0 ]; do\n      number=$((number\
    \ / factor))\n      factors+=($factor)\n    done\n    factor=$((factor + 1))\n\
    \  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local -i n=$1\n    local -i i=2\n    local -a factors\n    while (( n > 1\
    \ )); do\n        while (( n % i == 0 )); do\n            factors+=($i)\n    \
    \        (( n /= i ))\n        done\n        (( i++ ))\n    done\n    echo \"\
    ${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    local i=0\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            number=$((number / factor))\n            factors[$i]=$factor\n  \
    \          i=$((i + 1))\n        else\n            factor=$((factor + 1))\n  \
    \      fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local current_factor=2\n    while\
    \ [ $number -gt 1 ]; do\n        if [ $((number % current_factor)) -eq 0 ]; then\n\
    \            number=$((number / current_factor))\n            factors+=($current_factor)\n\
    \        else\n            current_factor=$((current_factor + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $factor\
    \ -le $number ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n       \
    \     factors+=($factor)\n            number=$((number / factor))\n        else\n\
    \            factor=$((factor + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local i=2\n  while [ $i -le $number\
    \ ]; do\n    if [ $(($number % $i)) -eq 0 ]; then\n      factors+=($i)\n     \
    \ number=$(($number / $i))\n    else\n      i=$(($i + 1))\n    fi\n  done\n  echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local factor=2\n    while [ $n -gt\
    \ 1 ]; do\n        while [ $(( n % factor )) -eq 0 ]; do\n            factors+=($factor)\n\
    \            n=$(( n / factor ))\n        done\n        factor=$(( factor + 1\
    \ ))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            factors+=($divisor)\n\
    \            number=$((number / divisor))\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            factors+=($divisor)\n\
    \            number=$((number / divisor))\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local factor=2\n    while [ $num\
    \ -gt 1 ]; do\n        while [ $(( num % factor )) -eq 0 ]; do\n            factors+=($factor)\n\
    \            num=$(( num / factor ))\n        done\n        factor=$(( factor\
    \ + 1 ))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [[ $number\
    \ -gt 1 ]]; do\n        while [[ $((number % factor)) -eq 0 ]]; do\n         \
    \   factors+=($factor)\n            number=$((number / factor))\n        done\n\
    \        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=\"$1\"\n    local factors=()\n    local i=2\n    while [ $i -le $n\
    \ ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n  \
    \          n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $n -gt 1 ];\
    \ do\n        if [ $(($n % $i)) -eq 0 ]; then\n            factors+=($i)\n   \
    \         n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local -i n=$1\n    local -i d=2\n    local -a factors\n    while (( n > 1\
    \ )); do\n        while (( n % d == 0 )); do\n            factors+=($d)\n    \
    \        (( n /= d ))\n        done\n        (( d++ ))\n    done\n    echo \"\
    ${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local factor=2\n  while [ $number -gt\
    \ 1 ]; do\n    while [ $((number % factor)) -eq 0 ]; do\n      factors+=($factor)\n\
    \      number=$((number / factor))\n    done\n    factor=$((factor + 1))\n  done\n\
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            number=$((number\
    \ / divisor))\n            factors+=($divisor)\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [[ $number\
    \ -gt 1 ]]; do\n        while [[ $((number % factor)) -eq 0 ]]; do\n         \
    \   factors+=($factor)\n            number=$((number / factor))\n        done\n\
    \        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            factors+=($divisor)\n\
    \            number=$((number / divisor))\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $(($num % $i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$(($num / $i))\n        else\n            i=$(($i + 1))\n   \
    \     fi\n    done\n    echo ${factors[@]}\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            factors+=($divisor)\n\
    \            number=$((number / divisor))\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ]; then\n            factors+=($divisor)\n\
    \            number=$((number / divisor))\n        else\n            divisor=$((divisor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $n -gt 1 ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local num=$1\n    local factors=()\n    local i=2\n    while [ $i -le $num\
    \ ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local factor=2\n  while [ $number -gt\
    \ 1 ]; do\n    if [ $((number % factor)) -eq 0 ]; then\n      factors+=($factor)\n\
    \      number=$((number / factor))\n    else\n      factor=$((factor + 1))\n \
    \   fi\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while (( n > 1 )); do\n\
    \        while (( n % i == 0 )); do\n            factors+=($i)\n            ((\
    \ n /= i ))\n        done\n        (( i++ ))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local factor=2\n  while [ $number -gt\
    \ 1 ]; do\n    if [ $((number % factor)) -eq 0 ]; then\n      number=$((number\
    \ / factor))\n      factors+=($factor)\n    else\n      factor=$((factor + 1))\n\
    \    fi\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local divisor=2\n  while (( number >\
    \ 1 )); do\n    while (( number % divisor == 0 )); do\n      factors+=($divisor)\n\
    \      number=$(( number / divisor ))\n    done\n    divisor=$(( divisor + 1 ))\n\
    \  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local divisor=2\n  while (( number >\
    \ 1 )); do\n    while (( number % divisor == 0 )); do\n      factors+=($divisor)\n\
    \      number=$(( number / divisor ))\n    done\n    divisor=$(( divisor + 1 ))\n\
    \  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=\"$1\"\n    local divisor=2\n    local factors=()\n    while\
    \ [ $number -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n \
    \           factors+=($divisor)\n            number=$((number / divisor))\n  \
    \      done\n        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $n -gt 1 ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local result=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            result+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $i -le\
    \ $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=\"\"\n    local factor=2\n    while [\
    \ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n    \
    \        factors=\"$factors $factor\"\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"[$(echo $factors\
    \ | tr ' ' ',')]\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            number=$((number / i))\n        done\n        i=$((i + 1))\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \  local number=$1\n  local factors=()\n  local divisor=2\n  while [ $number -gt\
    \ 1 ]; do\n    if [ $(($number % $divisor)) -eq 0 ]; then\n      number=$(($number\
    \ / $divisor))\n      factors+=($divisor)\n    else\n      divisor=$(($divisor\
    \ + 1))\n    fi\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while (( number\
    \ > 1 )); do\n        if (( number % factor == 0 )); then\n            factors+=($factor)\n\
    \            number=$(( number / factor ))\n        else\n            factor=$((\
    \ factor + 1 ))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=\"$1\"\n    local factors=()\n    local factor=2\n    while\
    \ [ \"$number\" -gt 1 ]; do\n        if [ \"$((number % factor))\" -eq 0 ]; then\n\
    \            factors+=(\"$factor\")\n            number=\"$((number / factor))\"\
    \n        else\n            factor=\"$((factor + 1))\"\n        fi\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local factor=2\n    while [ $n -gt\
    \ 1 ]; do\n        while [ $((n % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            n=$((n / factor))\n        done\n        factor=$((factor + 1))\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local divisor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0 ]; do\n           \
    \ factors+=($divisor)\n            number=$((number / divisor))\n        done\n\
    \        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local i=2\n    local num=$1\n    local factors=()\n    while (( $num > 1\
    \ )); do\n        if (( $num % $i == 0 )); then\n            num=$(( num / i ))\n\
    \            factors+=($i)\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$((number / factor))\n        done\n        factor=$((factor\
    \ + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            number=$((number / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local i=2\n    while [ $number\
    \ -gt 1 ]; do\n        while [ $((number % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            number=$((number / i))\n        done\n        i=$((i + 1))\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local n=$1\n    local factors=()\n    local i=2\n    while [ $i -le $n ];\
    \ do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n     \
    \       n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while (( number\
    \ > 1 )); do\n        while (( number % factor == 0 )); do\n            factors+=($factor)\n\
    \            number=$(( number / factor ))\n        done\n        factor=$(( factor\
    \ + 1 ))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\nfactorize() {\n\
    \    local number=$1\n    local factors=()\n    local factor=2\n    while [ $number\
    \ -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n            number=$((number\
    \ / factor))\n            factors+=($factor)\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660343000

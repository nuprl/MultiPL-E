name: HumanEval_120_maximum
language: sh
prompt: "#!/bin/bash\n# Given an array arr of integers and a positive integer k, return\
  \ a sorted list \n# of length k with the maximum k numbers in arr.\n# Example 1:\n\
  # >>> $(maximum \"-3 -4 5\" \"3\")\n# ['\"-4\"', '\"-3\"', '\"5\"']\n# Example 2:\n\
  # >>> $(maximum \"4 -4 4\" \"2\")\n# ['\"4\"', '\"4\"']\n# Example 3:\n# >>> $(maximum\
  \ \"-3 2 1 2 -1 -2 1\" \"1\")\n# ['\"2\"']\n# Note:\n# 1. The length of the array\
  \ will be in the range of [1, 1000].\n# 2. The elements in the array will be in\
  \ the range of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\nmaximum() {\n"
tests: "}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\"\
  \ \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n\
  \    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
  \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13\
  \ -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
  \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[\
  \ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\"\
  ) = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n\
  }\n\nrun_test"
completions: ["    local arr=$1\n    local k=$2\n    local -a arr_sorted\n    local\
    \ -a arr_max\n    local -i i\n    local -i j\n    local -i len\n    local -i max_index\n\
    \    local -i max_value\n    local -i temp\n    arr_sorted=($(echo $arr | tr '\
    \ ' '\\n' | sort -n))\n    len=${#arr_sorted[@]}\n    for ((i=0; i<k; i++)); do\n\
    \        max_index=$((len-1-i))\n        max_value=${arr_sorted[$max_index]}\n\
    \        arr_max[$i]=$max_value\n    done\n    echo ${arr_max[@]}", "    local\
    \ arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\
    \n    local arr_max=\"$(echo \"$arr\" | sort -nr | head -n \"$k\")\"\n    local\
    \ arr_max_len=\"$(echo \"$arr_max\" | wc -w)\"\n    local arr_max_len_diff=\"\
    $((arr_len - arr_max_len))\"\n    local arr_max_len_diff_arr=\"$(echo \"$arr\"\
    \ | sort -n | head -n \"$arr_max_len_diff\")\"\n    local arr_max_len_diff_arr_len=\"\
    $(echo \"$arr_max_len_diff_arr\" | wc -w)\"\n    local arr_max_len_diff_arr_len_diff=\"\
    $((arr_max_len - arr_max_len_diff_arr_len))\"\n    local arr_max_len_diff_arr_len_diff_arr=\"\
    $(echo \"$arr_max_len_diff_arr\" | sort -nr | head -n \"$arr_max_len_diff_arr_len_diff\"\
    )\"\n    local arr_max_len_diff_arr_len_diff_arr_len=\"$(echo \"$arr_max_len_diff_arr_len_diff_arr\"\
    \ | wc -w)\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff=\"$((arr_max_len_diff_arr_len\
    \ - arr_max_len_diff_arr_len_diff_arr_len))\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff_arr=\"\
    $(echo \"$arr_max_len_diff_arr_len_diff_arr\" | sort -n | head -n \"$arr_max_len_diff_arr_len_diff_arr_len_diff\"\
    )\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff_arr_len=\"$(echo \"\
    $arr_max_len_diff_arr_len_diff_arr_len_diff_arr\" | wc -w)\"\n", "    local -n\
    \ arr=$1\n    local k=$2\n    local -a res=()\n    for i in ${arr[@]}; do\n  \
    \      res+=($i)\n        if [[ ${#res[@]} -gt $k ]]; then\n            res=($(echo\
    \ ${res[@]} | tr ' ' '\\n' | sort -n | head -n $k))\n        fi\n    done\n  \
    \  echo ${res[@]}", "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=$(echo\
    \ \"$arr\" | wc -w)\n    local max_arr=()\n    local max_arr_len=0\n    local\
    \ i=0\n    local j=0\n    local max_num=0\n    local num=0\n    local max_num_index=0\n\
    \    local max_num_index_arr=()\n    local max_num_index_arr_len=0\n    local\
    \ max_num_index_arr_len_prev=0\n    local max_num_index_arr_len_diff=0\n    local\
    \ max_num_index_arr_len_diff_prev=0\n    local max_num_index_arr_len_diff_max=0\n\
    \    local max_num_index_arr_len_diff_max_index=0\n    local max_num_index_arr_len_diff_max_index_prev=0\n\
    \    local max_num_index_arr_len_diff_max_index_prev_prev=0\n    local max_num_index_arr_len_diff_max_index_prev_prev_prev=0\n\
    \    local max_num_index_arr_len_diff_max_index_prev_prev_prev_prev=0\n    local\
    \ max_num_index_arr_len_diff_max_index_prev_prev_prev_prev_prev=0\n    local max_num_index_arr_len_diff_max_index_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_num_index_arr_len_diff_max_index_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_num_index_arr_len_diff_max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_num_index_arr_len_diff_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_num_index_arr_len_diff_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0",
  "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=0\n    local tmp=0\n\
    \    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1;\
    \ j<len; j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n     \
    \           tmp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$tmp\n\
    \            fi\n        done\n    done\n    echo \"${arr[@]:0:$k}\"", "    local\
    \ -n arr=$1\n    local k=$2\n    local -a result\n    local -a sorted\n    local\
    \ -a max\n    local i\n    local j\n    local max_index\n    local max_value\n\
    \    local temp\n    for i in ${arr[@]}; do\n        sorted+=(\"$i\")\n    done\n\
    \    for ((i=0; i<${#sorted[@]}; i++)); do\n        max_index=$i\n        max_value=${sorted[$i]}\n\
    \        for ((j=i+1; j<${#sorted[@]}; j++)); do\n            if ((sorted[j] >\
    \ max_value)); then\n                max_index=$j\n                max_value=${sorted[$j]}\n\
    \            fi\n        done\n        temp=${sorted[$i]}\n        sorted[$i]=${sorted[$max_index]}\n\
    \        sorted[$max_index]=$temp\n    done\n    for ((i=0; i<k; i++)); do\n \
    \       result+=(\"${sorted[$i]}\")\n    done\n    echo \"${result[@]}\"", " \
    \   local -n arr=$1\n    local k=$2\n    local -a max_arr\n    local max\n   \
    \ for i in ${arr[@]}; do\n        if [[ ${#max_arr[@]} -lt $k ]]; then\n     \
    \       max_arr+=($i)\n            max=$i\n        elif [[ $i -gt $max ]]; then\n\
    \            max_arr[0]=$i\n            max=$i\n        fi\n        for j in ${!max_arr[@]};\
    \ do\n            if [[ $j -gt 0 ]] && [[ ${max_arr[$j]} -lt ${max_arr[$j-1]}\
    \ ]]; then\n                max_arr[$j]=${max_arr[$j-1]}\n                max_arr[$j-1]=${max_arr[$j]}\n\
    \            fi\n        done\n    done\n    echo ${max_arr[@]}", "    local -n\
    \ arr=$1\n    local k=$2\n    local -a max\n    for ((i=0; i<k; i++)); do\n  \
    \      max[i]=${arr[i]}\n    done\n    for ((i=k; i<${#arr[@]}; i++)); do\n  \
    \      for ((j=0; j<k; j++)); do\n            if [[ ${arr[i]} -gt ${max[j]} ]];\
    \ then\n                max[j]=${arr[i]}\n                break\n            fi\n\
    \        done\n    done\n    echo \"${max[@]}\" | tr ' ' '\\n' | sort -nr | tr\
    \ '\\n' ' '", "    local arr=(\"$@\")\n    local k=${arr[-1]}\n    arr=(\"${arr[@]:0:${#arr[@]}-1}\"\
    )\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local tmp=0\n \
    \   for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n     \
    \       if ((${arr[i]} < ${arr[j]})); then\n                tmp=${arr[i]}\n  \
    \              arr[i]=${arr[j]}\n                arr[j]=$tmp\n            fi\n\
    \        done\n    done\n    echo \"${arr[@]:0:$k}\"", "    local -a arr=(\"$1\"\
    )\n    local k=\"$2\"\n    local -a max=()\n    local -a res=()\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ ${#max[@]} -lt $k ]]; then\n            max+=(\"\
    $i\")\n        else\n            local min=${max[0]}\n            local min_idx=0\n\
    \            for ((j=1; j<${#max[@]}; j++)); do\n                if [[ ${max[j]}\
    \ -lt $min ]]; then\n                    min=${max[j]}\n                    min_idx=$j\n\
    \                fi\n            done\n            if [[ $i -gt $min ]]; then\n\
    \                max[$min_idx]=\"$i\"\n            fi\n        fi\n    done\n\
    \    for i in \"${max[@]}\"; do\n        res+=(\"\\\"$i\\\"\")\n    done\n   \
    \ echo \"${res[@]}\"", "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=$(echo\
    \ \"$arr\" | wc -w)\n    local max_arr=()\n    local max_arr_len=0\n    local\
    \ max_arr_len_max=$((k - 1))\n    local max_arr_len_min=$((k - arr_len))\n   \
    \ local max_arr_len_min_abs=$((-1 * max_arr_len_min))\n    local max_arr_len_min_abs_half=$((max_arr_len_min_abs\
    \ / 2))\n    local max_arr_len_min_abs_half_ceil=$((max_arr_len_min_abs_half +\
    \ 1))\n    local max_arr_len_min_abs_half_floor=$((max_arr_len_min_abs_half))\n\
    \    local max_arr_len_min_abs_half_floor_abs=$((-1 * max_arr_len_min_abs_half_floor))\n\
    \    local max_arr_len_min_abs_half_floor_abs_half=$((max_arr_len_min_abs_half_floor_abs\
    \ / 2))\n    local max_arr_len_min_abs_half_floor_abs_half_ceil=$((max_arr_len_min_abs_half_floor_abs_half\
    \ + 1))\n    local max_arr_len_min_abs_half_floor_abs_half_floor=$((max_arr_len_min_abs_half_floor_abs_half))\n\
    \    local max_arr_len_min_abs_half_floor_abs_half_floor_abs=$((-1 * max_arr_len_min_abs_half_floor_abs_half_floor))\n\
    \    local max_arr_len_min_abs_half_floor_abs_half_floor_abs_half=$((max_arr_len_min_abs_half_floor_abs_half_floor_abs\
    \ / 2))\n    local max_arr_len_min_abs_half_floor_abs_half_floor_abs_half_ceil=$((max_arr_len_min_abs_half_floor_",
  "    local -n arr=$1\n    local k=$2\n    local -a res\n    local -a max\n    local\
    \ -a min\n    local i\n    local j\n    local n\n    local m\n    local t\n  \
    \  for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n    done\n    for ((i=k;\
    \ i<${#arr[@]}; i++)); do\n        for ((j=0; j<k; j++)); do\n            if [[\
    \ ${arr[i]} -gt ${max[j]} ]]; then\n                t=${max[j]}\n            \
    \    max[j]=${arr[i]}\n                arr[i]=$t\n            fi\n        done\n\
    \    done\n    for ((i=0; i<k; i++)); do\n        res[i]=${max[i]}\n    done\n\
    \    echo ${res[@]}", "    local arr=$1\n    local k=$2\n    local -a arr_sorted\n\
    \    local -a arr_max\n    local i=0\n    local j=0\n    local len=0\n    local\
    \ max=0\n    local max_index=0\n    local temp=0\n    arr_sorted=($(echo \"$arr\"\
    \ | tr ' ' '\\n' | sort -n))\n    len=${#arr_sorted[@]}\n    for ((i=0; i<k; i++));\
    \ do\n        max=${arr_sorted[0]}\n        max_index=0\n        for ((j=0; j<len;\
    \ j++)); do\n            temp=${arr_sorted[j]}\n            if [[ $temp -gt $max\
    \ ]]; then\n                max=$temp\n                max_index=$j\n        \
    \    fi\n        done\n        arr_max[i]=$max\n        unset arr_sorted[$max_index]\n\
    \        arr_sorted=(${arr_sorted[@]})\n        len=${#arr_sorted[@]}\n    done\n\
    \    echo \"${arr_max[@]}\"", "    local -n arr=$1\n    local k=$2\n    local\
    \ -a max\n    for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n    done\n\
    \    for ((i=k; i<${#arr[@]}; i++)); do\n        for ((j=0; j<k; j++)); do\n \
    \           if [[ ${arr[i]} -gt ${max[j]} ]]; then\n                max[j]=${arr[i]}\n\
    \                break\n            fi\n        done\n    done\n    echo ${max[@]}\
    \ | tr \" \" \"\\n\" | sort -nr | tr \"\\n\" \" \"", "    arr=$1\n    k=$2\n \
    \   arr=($arr)\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]};\
    \ j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n            \
    \    temp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$temp\n\
    \            fi\n        done\n    done\n    echo ${arr[@]:0:$k}", "    local\
    \ -n _arr=$1\n    local _k=$2\n    local _max=()\n    for ((i=0; i<_k; i++));\
    \ do\n        local _max_i=0\n        for ((j=0; j<${#_arr[@]}; j++)); do\n  \
    \          if ((${_arr[j]} > ${_arr[$_max_i]})); then\n                _max_i=$j\n\
    \            fi\n        done\n        _max+=(${_arr[$_max_i]})\n        unset\
    \ _arr[$_max_i]\n    done\n    echo \"${_max[@]}\"", "    local arr=\"$1\"\n \
    \   local k=\"$2\"\n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\n    local\
    \ i=0\n    local j=0\n    local temp=0\n    local max_arr=()\n    local max_arr_len=0\n\
    \    local max_arr_i=0\n    local max_arr_j=0\n    local max_arr_temp=0\n    local\
    \ max_arr_temp_len=0\n    local max_arr_temp_i=0\n    local max_arr_temp_j=0\n\
    \    local max_arr_temp_temp=0\n    local max_arr_temp_temp_len=0\n    local max_arr_temp_temp_i=0\n\
    \    local max_arr_temp_temp_j=0\n    local max_arr_temp_temp_temp=0\n    local\
    \ max_arr_temp_temp_temp_len=0\n    local max_arr_temp_temp_temp_i=0\n    local\
    \ max_arr_temp_temp_temp_j=0\n    local max_arr_temp_temp_temp_temp=0\n    local\
    \ max_arr_temp_temp_temp_temp_len=0\n    local max_arr_temp_temp_temp_temp_i=0\n\
    \    local max_arr_temp_temp_temp_temp_j=0\n    local max_arr_temp_temp_temp_temp_temp=0\n\
    \    local max_arr_temp_temp_temp_temp_temp_len=0\n    local max_arr_temp_temp_temp_temp_temp_i=0\n\
    \    local max_arr_temp_temp_temp_temp_temp_j=0\n    local max_arr_temp_temp_temp_temp_temp_temp=0\n\
    \    local max_arr_temp_temp_temp_temp_temp_temp_len=0\n    local max_arr_temp_temp_temp_temp_temp_temp_i=0\n\
    \    local max_arr_temp_temp_temp_temp_temp_temp_j=0\n    local max_arr_temp_temp_temp_temp_temp_temp_temp=0\n\
    \    local", "    local -n arr=$1\n    local k=$2\n    local -a res\n    local\
    \ -i i=0 j=0\n    local -i len=${#arr[@]}\n    local -i max\n    local -i max_i\n\
    \    while ((i < k)); do\n        max=${arr[j]}\n        max_i=$j\n        while\
    \ ((j < len)); do\n            if ((arr[j] > max)); then\n                max=${arr[j]}\n\
    \                max_i=$j\n            fi\n            ((j++))\n        done\n\
    \        res[i]=$max\n        arr[max_i]=$((-1 * max))\n        ((i++))\n    \
    \    j=0\n    done\n    echo \"${res[@]}\"", "    local arr=\"$1\"\n    local\
    \ k=\"$2\"\n    local -a arr_sorted\n    local -a arr_max\n    local i\n    local\
    \ j\n    local max_index\n    local max_value\n    local -a result\n\n    # Sort\
    \ the array\n    arr_sorted=($(echo \"$arr\" | tr ' ' '\\n' | sort -n))\n\n  \
    \  # Get the maximum k numbers\n    for ((i=0; i<k; i++)); do\n        arr_max[$i]=${arr_sorted[$i]}\n\
    \    done\n\n    # Find the maximum number in the array\n    max_index=0\n   \
    \ max_value=${arr_max[0]}\n    for ((i=1; i<k; i++)); do\n        if [[ ${arr_max[$i]}\
    \ -gt $max_value ]]; then\n            max_index=$i\n            max_value=${arr_max[$i]}\n\
    \        fi\n    done\n\n    # Replace the maximum number with the next number\
    \ in the sorted array\n    for ((i=k; i<${#arr_sorted[@]}; i++)); do\n       \
    \ if [[ ${arr_sorted[$i]} -gt $max_value ]]; then\n            arr_max[$max_index]=${arr_sorted[$i]}\n\
    \            max_value=${arr_sorted[$i]}\n            for ((j=0; j<k; j++)); do\n\
    \                if [[ ${arr_max[$j]} -gt $max_value ]]; then\n              \
    \      max_index=$j\n                    max_value=${arr_max[$j]}\n          \
    \      fi\n            done\n        fi\n    done\n\n    # Format the result\n\
    \    for ((i=0; i<k; i++)); do\n        result[$i]=\"\\\"${arr_max[$i]}\\\"\"\n\
    \    done\n\n    echo \"${result[@]}\"", "    local -n _arr=$1\n    local _k=$2\n\
    \    local _len=${#_arr[@]}\n    local _max_index=0\n    local _max_value=${_arr[0]}\n\
    \    local _temp\n    local _i\n    local _j\n    local _result=()\n    for ((_i=0;\
    \ _i<_k; _i++)); do\n        _max_index=0\n        _max_value=${_arr[0]}\n   \
    \     for ((_j=1; _j<_len-_i; _j++)); do\n            if [[ ${_arr[_j]} -gt $_max_value\
    \ ]]; then\n                _max_index=$_j\n                _max_value=${_arr[_j]}\n\
    \            fi\n        done\n        _result+=(\"$_max_value\")\n        _temp=${_arr[$_max_index]}\n\
    \        _arr[$_max_index]=${_arr[$_len-_i-1]}\n        _arr[$_len-_i-1]=$_temp\n\
    \    done\n    echo \"${_result[@]}\"", "    local -n arr=$1\n    local k=$2\n\
    \    local -a result\n    local -a sorted\n    local -a max\n    local -a min\n\
    \    local i\n    local j\n    local len\n    local max_len\n    local min_len\n\
    \    local max_index\n    local min_index\n    local max_value\n    local min_value\n\
    \    local value\n    local tmp\n\n    # Sort the array\n    for i in ${arr[@]};\
    \ do\n        sorted+=($i)\n    done\n    len=${#sorted[@]}\n    for ((i=0; i<len;\
    \ i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${sorted[i]}\
    \ -gt ${sorted[j]} ]]; then\n                tmp=${sorted[i]}\n              \
    \  sorted[i]=${sorted[j]}\n                sorted[j]=$tmp\n            fi\n  \
    \      done\n    done\n\n    # Find the max k numbers\n    max_len=0\n    min_len=0\n\
    \    for ((i=0; i<len; i++)); do\n        value=${sorted[i]}\n        if [[ $max_len\
    \ -eq 0 ]]; then\n            max+=($value)\n            max_len=$((max_len+1))\n\
    \        elif [[ $max_len -lt $k ]]; then\n            max+=($value)\n       \
    \     max_len=$((max_len+1))\n        else\n            min+=($value)\n      \
    \      min_len=$((min_len+1))\n        fi\n    done\n\n    # Find the max k numbers\n\
    \    for ((i=0; i<k; i++)); do\n        max_index=0\n        max_value=${max[0]}\n\
    \        for ((j=1; j<max_len; j++)); do\n            if [[ ${max[j]} -gt $max_value\
    \ ]]; then\n                max_index=$j\n                max_value=${max[j]}\n\
    \            fi\n        done\n        result+=($max_value)\n        unset max[$max_index]\n\
    \        max_len=$((max_len-", "    local arr=\"$1\"\n    local k=\"$2\"\n   \
    \ local arr=($arr)\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n \
    \   local temp=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len;\
    \ j++))\n        do\n            if [[ ${arr[i]} -lt ${arr[j]} ]]\n          \
    \  then\n                temp=${arr[i]}\n                arr[i]=${arr[j]}\n  \
    \              arr[j]=$temp\n            fi\n        done\n    done\n    local\
    \ result=()\n    for ((i=0; i<k; i++))\n    do\n        result[i]=${arr[i]}\n\
    \    done\n    echo ${result[@]}", "    local -n _arr=$1\n    local k=$2\n   \
    \ local -a arr=(\"${_arr[@]}\")\n    local -a res\n    local i\n    for ((i=0;\
    \ i<k; i++)); do\n        local max=${arr[0]}\n        local max_idx=0\n     \
    \   for ((j=1; j<${#arr[@]}; j++)); do\n            if (( arr[j] > max )); then\n\
    \                max=${arr[j]}\n                max_idx=$j\n            fi\n \
    \       done\n        res+=($max)\n        unset arr[$max_idx]\n        arr=(\"\
    ${arr[@]}\")\n    done\n    echo \"${res[@]}\"", "    local arr=\"$1\"\n    local\
    \ k=\"$2\"\n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\n    local max_arr=()\n\
    \    local max_arr_len=0\n    local max_arr_len_max=0\n    local max_arr_len_min=0\n\
    \    local max_arr_len_diff=0\n    local max_arr_len_diff_max=0\n    local max_arr_len_diff_min=0\n\
    \    local max_arr_len_diff_diff=0\n    local max_arr_len_diff_diff_max=0\n  \
    \  local max_arr_len_diff_diff_min=0\n    local max_arr_len_diff_diff_diff=0\n\
    \    local max_arr_len_diff_diff_diff_max=0\n    local max_arr_len_diff_diff_diff_min=0\n\
    \    local max_arr_len_diff_diff_diff_diff=0\n    local max_arr_len_diff_diff_diff_diff_max=0\n\
    \    local max_arr_len_diff_diff_diff_diff_min=0\n    local max_arr_len_diff_diff_diff_diff_diff=0\n\
    \    local max_arr_len_diff_diff_diff_diff_diff_max=0\n    local max_arr_len_diff_diff_diff_diff_diff_min=0\n\
    \    local max_arr_len_diff_diff_diff_diff_diff_diff=0\n    local max_arr_len_diff_diff_diff_diff_diff_diff_max=0\n\
    \    local max_arr_len_diff_diff_diff_diff_diff_diff_min=0\n    local max_arr_len_diff_diff_diff_diff_diff_diff_diff=0\n\
    \    local max_arr_len_diff_diff_diff_diff_diff_diff_diff_max=0\n    local max_arr_len_diff_diff_diff_diff_diff_diff_diff_min=0\n\
    \    local max_arr_len_diff_diff_diff_diff_diff_diff_diff_diff=0\n    local",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local -a arr_sorted\n    local -a\
    \ arr_max\n    local -i i\n    local -i j\n    local -i len\n    local -i k_max\n\
    \    local -i k_max_index\n    local -i k_max_index_temp\n    local -i k_max_temp\n\
    \    local -i max\n    local -i max_index\n    local -i max_index_temp\n    local\
    \ -i max_temp\n    local -i temp\n    local -i temp_index\n    local -i temp_index_temp\n\
    \    local -i temp_max\n    local -i temp_max_index\n    local -i temp_max_index_temp\n\
    \    local -i temp_max_temp\n    local -i temp_temp\n    local -i temp_temp_index\n\
    \    local -i temp_temp_index_temp\n    local -i temp_temp_temp\n    local -i\
    \ temp_temp_temp_index\n    local -i temp_temp_temp_index_temp\n    local -i temp_temp_temp_temp\n\
    \    local -i temp_temp_temp_temp_index\n    local -i temp_temp_temp_temp_index_temp\n\
    \    local -i temp_temp_temp_temp_temp\n    local -i temp_temp_temp_temp_temp_index\n\
    \    local -i temp_temp_temp_temp_temp_index_temp\n    local -i temp_temp_temp_temp_temp_temp\n\
    \    local -i temp_temp_temp_temp_temp_temp_index\n    local -i temp_temp_temp_temp_temp_temp_index_temp\n\
    \    local -i temp_temp_temp_temp_temp_temp_temp\n    local -i temp_temp_temp_temp_temp_temp_temp_index\n\
    \    local -i temp_temp_temp_temp_temp_temp_temp_index_temp\n    local -i temp_temp_temp_temp_temp_temp_temp_temp\n\
    \    local -i temp_temp_temp_temp_temp_temp_temp_temp_index\n    local -i temp_temp_temp_temp_",
  "    local arr=$1\n    local k=$2\n    local arr_sorted=$(echo $arr | tr \" \" \"\
    \\n\" | sort -nr | tr \"\\n\" \" \")\n    local arr_max=$(echo $arr_sorted | cut\
    \ -d \" \" -f 1-$k)\n    echo $arr_max", "    local -n _arr=$1\n    local _k=$2\n\
    \    local _ret=()\n    local _i=0\n    local _j=0\n    local _tmp=0\n    for\
    \ ((_i=0; _i<${#_arr[@]}; _i++)); do\n        for ((_j=_i+1; _j<${#_arr[@]}; _j++));\
    \ do\n            if [[ ${_arr[_i]} -lt ${_arr[_j]} ]]; then\n               \
    \ _tmp=${_arr[_i]}\n                _arr[_i]=${_arr[_j]}\n                _arr[_j]=$_tmp\n\
    \            fi\n        done\n    done\n    for ((_i=0; _i<_k; _i++)); do\n \
    \       _ret+=(\"\\\"${_arr[_i]}\\\"\")\n    done\n    echo ${_ret[@]}", "   \
    \ local arr=\"$1\"\n    local k=\"$2\"\n    local i=0\n    local j=0\n    local\
    \ max=0\n    local max_index=0\n    local temp=0\n    local result=()\n    for\
    \ i in $(seq 1 $k); do\n        max=${arr[0]}\n        max_index=0\n        for\
    \ j in $(seq 1 $(( ${#arr[@]} - 1 ))); do\n            if [[ ${arr[$j]} -gt $max\
    \ ]]; then\n                max=${arr[$j]}\n                max_index=$j\n   \
    \         fi\n        done\n        result+=($max)\n        unset arr[$max_index]\n\
    \    done\n    echo ${result[@]}", "    local -n arr=$1\n    local k=$2\n    local\
    \ -a res\n    local -i i j\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for\
    \ ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]}\
    \ ]]; then\n                local tmp=${arr[i]}\n                arr[i]=${arr[j]}\n\
    \                arr[j]=$tmp\n            fi\n        done\n    done\n    for\
    \ ((i=0; i<k; i++)); do\n        res[i]=${arr[i]}\n    done\n    echo ${res[@]}",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local -a arr_sorted\n    local -a\
    \ arr_max\n    local i\n    local j\n    local max\n    local max_index\n    local\
    \ arr_len\n    arr_len=$(echo \"$arr\" | wc -w)\n    arr_sorted=($(echo \"$arr\"\
    \ | tr ' ' '\\n' | sort -n))\n    for ((i=0; i<k; i++)); do\n        max=${arr_sorted[0]}\n\
    \        max_index=0\n        for ((j=1; j<arr_len-i; j++)); do\n            if\
    \ [[ ${arr_sorted[j]} -gt $max ]]; then\n                max=${arr_sorted[j]}\n\
    \                max_index=$j\n            fi\n        done\n        arr_max[i]=$max\n\
    \        arr_sorted[$max_index]=${arr_sorted[arr_len-i-1]}\n    done\n    echo\
    \ \"${arr_max[@]}\"", "    local -n arr=$1\n    local k=$2\n    local -a res=()\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${#res[@]} -lt $k ]]; then\n\
    \            res+=(${arr[i]})\n        else\n            for ((j=0; j<${#res[@]};\
    \ j++)); do\n                if [[ ${arr[i]} -gt ${res[j]} ]]; then\n        \
    \            res=(${res[@]:0:j} ${arr[i]} ${res[@]:j})\n                    break\n\
    \                fi\n            done\n        fi\n    done\n    echo ${res[@]:0:k}",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local -a arr_sorted\n    local -a\
    \ arr_max\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i\
    \ len_max=0\n    local -i max=0\n    local -i max_index=0\n    local -i num=0\n\
    \    local -i num_max=0\n    local -i num_max_index=0\n    local -i num_max_index_old=0\n\
    \    local -i num_max_old=0\n    local -i num_old=0\n    local -i tmp=0\n    local\
    \ -i tmp_index=0\n    local -i tmp_index_old=0\n    local -i tmp_old=0\n    local\
    \ -i tmp_old_index=0\n    local -i tmp_old_index_old=0\n    local -i tmp_old_old=0\n\
    \    local -i tmp_old_old_index=0\n    local -i tmp_old_old_index_old=0\n    local\
    \ -i tmp_old_old_old=0\n    local -i tmp_old_old_old_index=0\n    local -i tmp_old_old_old_index_old=0\n\
    \    local -i tmp_old_old_old_old=0\n    local -i tmp_old_old_old_old_index=0\n\
    \    local -i tmp_old_old_old_old_index_old=0\n    local -i tmp_old_old_old_old_old=0\n\
    \    local -i tmp_old_old_old_old_old_index=0\n    local -i tmp_old_old_old_old_old_index_old=0\n\
    \    local -i tmp_old_old_old_old_old_old=0\n    local -i tmp_old_old_old_old_old_old_index=0\n\
    \    local -i tmp_old_old_old_old_old_old_index_old=0\n    local -i tmp_old_old_old_old_old_old_old=0\n\
    \    local", "    local arr=\"$1\"\n    local k=\"$2\"\n    local max_arr=()\n\
    \    local max_arr_len=0\n    local arr_len=0\n    local arr_i=0\n    local arr_j=0\n\
    \    local arr_k=0\n    local arr_l=0\n    local arr_m=0\n    local arr_n=0\n\
    \    local arr_o=0\n    local arr_p=0\n    local arr_q=0\n    local arr_r=0\n\
    \    local arr_s=0\n    local arr_t=0\n    local arr_u=0\n    local arr_v=0\n\
    \    local arr_w=0\n    local arr_x=0\n    local arr_y=0\n    local arr_z=0\n\
    \    local arr_A=0\n    local arr_B=0\n    local arr_C=0\n    local arr_D=0\n\
    \    local arr_E=0\n    local arr_F=0\n    local arr_G=0\n    local arr_H=0\n\
    \    local arr_I=0\n    local arr_J=0\n    local arr_K=0\n    local arr_L=0\n\
    \    local arr_M=0\n    local arr_N=0\n    local arr_O=0\n    local arr_P=0\n\
    \    local arr_Q=0\n    local arr_R=0\n    local arr_S=0\n    local arr_T=0\n\
    \    local arr_U=0\n    local arr_V=0\n    local arr_W=0\n    local arr_X=0\n\
    \    local arr_Y=0\n    local arr_Z=0\n    local arr_a=0\n    local arr_b=0\n\
    \    local arr_c=0\n    local arr_d=0\n    local arr_e=0\n    local arr_f=0\n\
    \    local arr_g=0\n    local arr_h=0\n    local arr_i=0\n    local arr_j=0\n\
    \    local arr_k=0\n    local arr_l=0\n    local arr_m=0\n    local arr_n=0\n\
    \    local arr_o", "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=\"\
    $(echo \"$arr\" | wc -w)\"\n    local max_arr=()\n    local max_arr_len=0\n  \
    \  local max_arr_index=0\n    local max_arr_index_arr=()\n    local max_arr_index_arr_len=0\n\
    \    local max_arr_index_arr_index=0\n    local max_arr_index_arr_index_arr=()\n\
    \    local max_arr_index_arr_index_arr_len=0\n    local max_arr_index_arr_index_arr_index=0\n\
    \    local max_arr_index_arr_index_arr_index_arr=()\n    local max_arr_index_arr_index_arr_index_arr_len=0\n\
    \    local max_arr_index_arr_index_arr_index_arr_index=0\n    local max_arr_index_arr_index_arr_index_arr_index_arr=()\n\
    \    local max_arr_index_arr_index_arr_index_arr_index_arr_len=0\n    local max_arr_index_arr_index_arr_index_arr_index_arr_index=0\n\
    \    local max_arr_index_arr_index_arr_index_arr_index_arr_index_arr=()\n    local\
    \ max_arr_index_arr_index_arr_index_arr_index_arr_index_arr_len=0\n    local max_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index=0\n\
    \    local max_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr=()\n\
    \    local max_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr_len=0\n\
    \    local max_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index=0\n\
    \    local max_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=\"$(echo \"$arr\" |\
    \ wc -w)\"\n    local arr_max=\"$(echo \"$arr\" | sort -nr | head -n \"$k\")\"\
    \n    local arr_max_len=\"$(echo \"$arr_max\" | wc -w)\"\n    local arr_max_len_diff=\"\
    $((arr_len - arr_max_len))\"\n    local arr_max_len_diff_arr=\"$(echo \"$arr\"\
    \ | sort -n | head -n \"$arr_max_len_diff\")\"\n    local arr_max_len_diff_arr_len=\"\
    $(echo \"$arr_max_len_diff_arr\" | wc -w)\"\n    local arr_max_len_diff_arr_len_diff=\"\
    $((arr_max_len - arr_max_len_diff_arr_len))\"\n    local arr_max_len_diff_arr_len_diff_arr=\"\
    $(echo \"$arr_max_len_diff_arr\" | sort -nr | head -n \"$arr_max_len_diff_arr_len_diff\"\
    )\"\n    local arr_max_len_diff_arr_len_diff_arr_len=\"$(echo \"$arr_max_len_diff_arr_len_diff_arr\"\
    \ | wc -w)\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff=\"$((arr_max_len_diff_arr_len\
    \ - arr_max_len_diff_arr_len_diff_arr_len))\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff_arr=\"\
    $(echo \"$arr_max_len_diff_arr_len_diff_arr\" | sort -n | head -n \"$arr_max_len_diff_arr_len_diff_arr_len_diff\"\
    )\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff_arr_len=\"$(echo \"\
    $arr_max_len_diff_arr_len_diff_arr_len_diff_arr\" | wc -w)\"\n", "    local arr=\"\
    $1\"\n    local k=\"$2\"\n    local -a arr_sorted\n    local -a arr_max\n    IFS='\
    \ ' read -r -a arr_sorted <<< \"$(echo \"$arr\" | tr ' ' '\\n' | sort -nr)\"\n\
    \    for ((i=0; i<k; i++)); do\n        arr_max[i]=\"${arr_sorted[i]}\"\n    done\n\
    \    echo \"${arr_max[@]}\"", "    local arr=$1\n    local k=$2\n    local arr_len=$(echo\
    \ $arr | wc -w)\n    local max_arr=()\n    local max_arr_len=0\n    local max_arr_len_max=$(($arr_len\
    \ - 1))\n    local max_arr_len_min=$(($arr_len - $k))\n    local max_arr_len_min=$(($max_arr_len_min\
    \ < 0 ? 0 : $max_arr_len_min))\n    local max_arr_len_min=$(($max_arr_len_min\
    \ > $max_arr_len_max ? $max_arr_len_max : $max_arr_len_min))\n    local arr_i=0\n\
    \    local max_arr_i=0\n    local max_arr_j=0\n    local max_arr_j_max=$(($arr_len\
    \ - 1))\n    local max_arr_j_min=$(($arr_len - $k))\n    local max_arr_j_min=$(($max_arr_j_min\
    \ < 0 ? 0 : $max_arr_j_min))\n    local max_arr_j_min=$(($max_arr_j_min > $max_arr_j_max\
    \ ? $max_arr_j_max : $max_arr_j_min))\n    local max_arr_j_max=$(($max_arr_j_max\
    \ < $max_arr_j_min ? $max_arr_j_min : $max_arr_j_max))\n    local max_arr_j_max=$(($max_arr_j_max\
    \ > $arr_len ? $arr_len : $max_arr_j_max))\n    local max_arr_j_max=$(($max_arr_j_max\
    \ < 0 ? 0 : $max_arr_j_max))\n    local max_arr_j_max=$(($max_arr_j_max > $arr_len\
    \ ? $arr_len : $max_arr_j_max))\n    local max_arr_j_max=$(($max_arr_j_max < 0\
    \ ? 0 : $max_arr_j_max", "    local arr=\"$1\"\n    local k=\"$2\"\n    local\
    \ res=()\n    for i in $(echo \"$arr\" | tr \" \" \"\\n\" | sort -nr); do\n  \
    \      res+=(\"$i\")\n        if [[ ${#res[@]} -eq $k ]]; then\n            break\n\
    \        fi\n    done\n    echo \"${res[@]}\"", "    local arr=\"$1\"\n    local\
    \ k=\"$2\"\n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\n    local result=()\n\
    \    local i=0\n    while [ $i -lt $k ]; do\n        local max=0\n        local\
    \ max_index=0\n        local j=0\n        while [ $j -lt $arr_len ]; do\n    \
    \        local num=\"$(echo \"$arr\" | cut -d \" \" -f $((j+1)))\"\n         \
    \   if [ $num -gt $max ]; then\n                max=\"$num\"\n               \
    \ max_index=\"$j\"\n            fi\n            j=$((j+1))\n        done\n   \
    \     result+=(\"$max\")\n        arr=\"$(echo \"$arr\" | cut -d \" \" -f -$max_index)\"\
    \n        arr=\"$(echo \"$arr\" | cut -d \" \" -f 2-)\"\n        arr_len=$((arr_len-1))\n\
    \        i=$((i+1))\n    done\n    echo \"${result[@]}\"", "    local arr=$1\n\
    \    local k=$2\n    local arr=($arr)\n    local max_arr=()\n    local max_num=${arr[0]}\n\
    \    local max_index=0\n    local i=0\n    local j=0\n    local temp=0\n    local\
    \ len=${#arr[@]}\n    for ((i=0; i<k; i++)); do\n        max_arr[$i]=${arr[$i]}\n\
    \        if [[ ${arr[$i]} -gt $max_num ]]; then\n            max_num=${arr[$i]}\n\
    \            max_index=$i\n        fi\n    done\n    for ((i=k; i<len; i++));\
    \ do\n        if [[ ${arr[$i]} -gt $max_num ]]; then\n            max_arr[$max_index]=${arr[$i]}\n\
    \            max_num=${arr[$i]}\n            for ((j=0; j<k; j++)); do\n     \
    \           if [[ ${max_arr[$j]} -gt $max_num ]]; then\n                    max_num=${max_arr[$j]}\n\
    \                    max_index=$j\n                fi\n            done\n    \
    \    fi\n    done\n    for ((i=0; i<k; i++)); do\n        for ((j=i+1; j<k; j++));\
    \ do\n            if [[ ${max_arr[$i]} -lt ${max_arr[$j]} ]]; then\n         \
    \       temp=${max_arr[$i]}\n                max_arr[$i]=${max_arr[$j]}\n    \
    \            max_arr[$j]=$temp\n            fi\n        done\n    done\n    echo\
    \ \"${max_arr[@]}\"", "    local -n arr=$1\n    local k=$2\n    local -a res=()\n\
    \    local i j\n    for ((i=0; i<k; i++)); do\n        local max=${arr[0]}\n \
    \       for ((j=1; j<${#arr[@]}; j++)); do\n            if ((${arr[j]} > max));\
    \ then\n                max=${arr[j]}\n            fi\n        done\n        res+=($max)\n\
    \        arr=(${arr[@]/$max})\n    done\n    echo \"${res[@]}\"", "    local arr=$1\n\
    \    local k=$2\n    local arr_len=$(echo $arr | wc -w)\n    local max_arr=()\n\
    \    local max_num=0\n    local max_idx=0\n    for ((i=0; i<$k; i++)); do\n  \
    \      max_num=-1000\n        for ((j=0; j<$arr_len; j++)); do\n            local\
    \ num=$(echo $arr | cut -d \" \" -f $((j+1)))\n            if [[ $num -gt $max_num\
    \ ]]; then\n                max_num=$num\n                max_idx=$j\n       \
    \     fi\n        done\n        max_arr+=($max_num)\n        arr=$(echo $arr |\
    \ sed \"s/\\s*$max_num\\s*/ /g\")\n    done\n    echo ${max_arr[@]}", "    local\
    \ -n arr=$1\n    local k=$2\n    local -a max_arr=()\n    local max_num\n    local\
    \ max_index\n    local i\n    for ((i=0; i<k; i++)); do\n        max_num=${arr[0]}\n\
    \        max_index=0\n        for ((j=1; j<${#arr[@]}; j++)); do\n           \
    \ if [[ ${arr[j]} -gt $max_num ]]; then\n                max_num=${arr[j]}\n \
    \               max_index=$j\n            fi\n        done\n        max_arr+=($max_num)\n\
    \        unset arr[$max_index]\n    done\n    echo \"${max_arr[@]}\"", "    local\
    \ arr=$1\n    local k=$2\n    local max_arr=()\n    local max_arr_len=0\n    local\
    \ arr_len=0\n    local i=0\n    local j=0\n    local tmp=0\n    local tmp_arr=()\n\
    \    local tmp_arr_len=0\n    local tmp_arr_str=''\n    local result=''\n    #\
    \ Split the array into an array of strings.\n    IFS=' ' read -r -a arr_str <<<\
    \ \"$arr\"\n    arr_len=${#arr_str[@]}\n    # If k is greater than the length\
    \ of the array, return the array.\n    if [[ $k -gt $arr_len ]]; then\n      \
    \  echo \"${arr_str[@]}\"\n        return\n    fi\n    # Find the maximum k numbers\
    \ in arr.\n    for ((i=0; i<$k; i++)); do\n        max_arr[$i]=${arr_str[$i]}\n\
    \    done\n    max_arr_len=${#max_arr[@]}\n    for ((i=$k; i<$arr_len; i++));\
    \ do\n        tmp=${arr_str[$i]}\n        tmp_arr=()\n        tmp_arr_len=0\n\
    \        for ((j=0; j<$max_arr_len; j++)); do\n            if [[ $tmp -gt ${max_arr[$j]}\
    \ ]]; then\n                tmp_arr[$tmp_arr_len]=${max_arr[$j]}\n           \
    \     tmp_arr_len=$((tmp_arr_len+1))\n            else\n                tmp_arr[$tmp_arr_len]=$tmp\n\
    \                tmp_arr_len=$((tmp_arr_len+1))\n                tmp=$((tmp-1))\n\
    \            fi\n        done\n        max_arr=(\"${tmp_arr[@]}\")\n        max_arr_len=${#max_arr[@]}\n\
    \    done\n    # Convert the array of strings to a string.\n    tmp_arr_str=$(IFS=$'\
    \ '; echo \"${max_arr[*]}\")\n    # Convert the string to a JSON array.\n    result=$(",
  "    local -n __arr=$1\n    local k=$2\n    local -a __arr_sorted\n    local -a\
    \ __arr_max\n    local i\n    local j\n    local __len\n    local __max\n    local\
    \ __max_index\n    local __tmp\n    __arr_sorted=($(echo \"${__arr[@]}\" | tr\
    \ ' ' '\\n' | sort -n))\n    __len=${#__arr_sorted[@]}\n    for ((i=0; i<k; i++));\
    \ do\n        __max=${__arr_sorted[0]}\n        __max_index=0\n        for ((j=1;\
    \ j<__len; j++)); do\n            if [[ ${__arr_sorted[j]} -gt $__max ]]; then\n\
    \                __max=${__arr_sorted[j]}\n                __max_index=$j\n  \
    \          fi\n        done\n        __arr_max[i]=$__max\n        __arr_sorted[$__max_index]=$((__max-1))\n\
    \    done\n    echo \"${__arr_max[@]}\"", "    local -n arr=$1\n    local k=$2\n\
    \    local -a result\n    local -a sorted\n    local -a sorted_k\n    local i\n\
    \    local j\n    local max\n    local max_index\n    for i in ${arr[@]}; do\n\
    \        sorted+=(\"$i\")\n    done\n    for ((i=0; i<k; i++)); do\n        max=${sorted[0]}\n\
    \        max_index=0\n        for ((j=1; j<${#sorted[@]}; j++)); do\n        \
    \    if [[ ${sorted[j]} -gt $max ]]; then\n                max=${sorted[j]}\n\
    \                max_index=$j\n            fi\n        done\n        sorted_k+=(\"\
    $max\")\n        unset sorted[$max_index]\n        sorted=(${sorted[@]})\n   \
    \ done\n    for i in ${sorted_k[@]}; do\n        result+=(\"\\\"$i\\\"\")\n  \
    \  done\n    echo ${result[@]}", "    local arr=$1\n    local k=$2\n    local\
    \ arr_len=$(echo $arr | wc -w)\n    local max_arr=()\n    local max_arr_len=0\n\
    \    local max_num=0\n    local max_num_index=0\n    local i=0\n    local j=0\n\
    \    local num=0\n    local num_index=0\n    local tmp=0\n    local tmp_index=0\n\
    \    for i in $(seq $k); do\n        max_num=0\n        max_num_index=0\n    \
    \    for j in $(seq $arr_len); do\n            num=$(echo $arr | cut -d \" \"\
    \ -f $j)\n            if [[ $num -gt $max_num ]]; then\n                max_num=$num\n\
    \                max_num_index=$j\n            fi\n        done\n        max_arr[$max_arr_len]=$max_num\n\
    \        max_arr_len=$(($max_arr_len + 1))\n        arr=$(echo $arr | sed \"s/$max_num//\"\
    )\n        arr_len=$(($arr_len - 1))\n    done\n    echo ${max_arr[@]}", "   \
    \ local -n __arr=$1\n    local k=$2\n    local -a arr=(\"${__arr[@]}\")\n    local\
    \ -a res=()\n    local -a tmp=()\n    local i=0\n    local j=0\n    local n=${#arr[@]}\n\
    \    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -gt ${arr[0]} ]]; then\n\
    \            arr[0]=${arr[i]}\n        fi\n    done\n    res[0]=${arr[0]}\n  \
    \  for ((i=1; i<k; i++)); do\n        for ((j=0; j<n; j++)); do\n            if\
    \ [[ ${arr[j]} -gt ${arr[0]} ]]; then\n                arr[0]=${arr[j]}\n    \
    \        fi\n        done\n        res[i]=${arr[0]}\n    done\n    echo \"${res[@]}\"",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local -a arr_sorted\n    local -a\
    \ arr_max\n    local -a arr_max_sorted\n    local -i i=0\n    local -i j=0\n \
    \   local -i n=0\n    local -i m=0\n    local -i len=0\n    local -i len_max=0\n\
    \    local -i len_max_sorted=0\n    local -i len_sorted=0\n    local -i k_max=0\n\
    \    local -i k_max_sorted=0\n    local -i k_sorted=0\n    local -i k_max_sorted_1=0\n\
    \    local -i k_max_sorted_2=0\n    local -i k_max_sorted_3=0\n    local -i k_max_sorted_4=0\n\
    \    local -i k_max_sorted_5=0\n    local -i k_max_sorted_6=0\n    local -i k_max_sorted_7=0\n\
    \    local -i k_max_sorted_8=0\n    local -i k_max_sorted_9=0\n    local -i k_max_sorted_10=0\n\
    \    local -i k_max_sorted_11=0\n    local -i k_max_sorted_12=0\n    local -i\
    \ k_max_sorted_13=0\n    local -i k_max_sorted_14=0\n    local -i k_max_sorted_15=0\n\
    \    local -i k_max_sorted_16=0\n    local -i k_max_sorted_17=0\n    local -i\
    \ k_max_sorted_18=0\n    local -i k_max_sorted_19=0\n    local -i k_max_sorted_20=0\n\
    \    local -i k_max_sorted_21=0\n    local -i k_max_sorted_22=0\n    local -i\
    \ k_max_sorted_23=0\n    local -i k_max_sorted_24=0", "    local arr=\"$1\"\n\
    \    local k=\"$2\"\n    local max_arr=()\n    local max_arr_len=0\n    local\
    \ arr_len=0\n    local arr_item=0\n    local i=0\n    local j=0\n    local tmp=0\n\
    \    for arr_item in $arr; do\n        arr_len=$((arr_len + 1))\n        if [[\
    \ $max_arr_len -lt $k ]]; then\n            max_arr[$max_arr_len]=$arr_item\n\
    \            max_arr_len=$((max_arr_len + 1))\n        else\n            for i\
    \ in $(seq 0 $((max_arr_len - 1))); do\n                if [[ ${max_arr[$i]} -lt\
    \ $arr_item ]]; then\n                    tmp=${max_arr[$i]}\n               \
    \     max_arr[$i]=$arr_item\n                    for j in $(seq $((i + 1)) $((max_arr_len\
    \ - 1))); do\n                        arr_item=${max_arr[$j]}\n              \
    \          max_arr[$j]=$tmp\n                        tmp=$arr_item\n         \
    \           done\n                    break\n                fi\n            done\n\
    \        fi\n    done\n    echo -n \"[\"\n    for i in $(seq 0 $((max_arr_len\
    \ - 1))); do\n        echo -n \"\\\"${max_arr[$i]}\\\"\"\n        if [[ $i -lt\
    \ $((max_arr_len - 1)) ]]; then\n            echo -n \", \"\n        fi\n    done\n\
    \    echo -n \"]\"", "    local arr=$1\n    local k=$2\n    local arr_len=$(echo\
    \ $arr | wc -w)\n    local max_arr=()\n    local max_arr_len=0\n    local i=0\n\
    \    while [ $i -lt $arr_len ]; do\n        local num=$(echo $arr | cut -d ' '\
    \ -f $((i+1)))\n        if [ $max_arr_len -lt $k ]; then\n            max_arr+=($num)\n\
    \            max_arr_len=$((max_arr_len+1))\n        else\n            local min_num=$(echo\
    \ ${max_arr[@]} | tr ' ' '\\n' | sort -n | head -n 1)\n            if [ $num -gt\
    \ $min_num ]; then\n                local min_num_index=$(echo ${max_arr[@]} |\
    \ tr ' ' '\\n' | grep -n $min_num | cut -d ':' -f 1)\n                max_arr[$min_num_index]=$num\n\
    \            fi\n        fi\n        i=$((i+1))\n    done\n    echo ${max_arr[@]}\
    \ | tr ' ' ',' | sed 's/,/\", \"/g' | sed 's/^/\"/' | sed 's/$/\"/'", "    local\
    \ arr=\"$1\"\n    local k=\"$2\"\n    local arr=($arr)\n    local len=${#arr[@]}\n\
    \    local res=()\n    local i=0\n    local j=0\n    local max=0\n    local max_index=0\n\
    \    local temp=0\n    for ((i=0; i<k; i++)); do\n        max=${arr[0]}\n    \
    \    max_index=0\n        for ((j=1; j<len-i; j++)); do\n            if [[ ${arr[j]}\
    \ -gt $max ]]; then\n                max=${arr[j]}\n                max_index=$j\n\
    \            fi\n        done\n        res[i]=$max\n        temp=${arr[max_index]}\n\
    \        arr[max_index]=${arr[len-i-1]}\n        arr[len-i-1]=$temp\n    done\n\
    \    echo \"${res[@]}\"", "    local -n arr=$1\n    local k=$2\n    local -a res=()\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((${#res[@]} < k)); then\n\
    \            res+=(${arr[i]})\n        else\n            for ((j=0; j<${#res[@]};\
    \ j++)); do\n                if ((${arr[i]} > ${res[j]})); then\n            \
    \        res=(${res[@]:0:j} ${arr[i]} ${res[@]:j})\n                    break\n\
    \                fi\n            done\n        fi\n    done\n    echo ${res[@]:0:k}",
  "    local -n arr=$1\n    local k=$2\n    local -a res\n    local -i i j\n    for\
    \ ((i=0; i<k; i++)); do\n        res[i]=${arr[i]}\n    done\n    for ((i=k; i<${#arr[@]};\
    \ i++)); do\n        for ((j=0; j<k; j++)); do\n            if [[ ${arr[i]} -gt\
    \ ${res[j]} ]]; then\n                res[j]=${arr[i]}\n                break\n\
    \            fi\n        done\n    done\n    echo \"${res[@]}\"", "    local -n\
    \ arr=\"$1\"\n    local k=\"$2\"\n    local -a result\n    local -i i\n    for\
    \ ((i=0; i<k; i++)); do\n        result[i]=${arr[i]}\n    done\n    for ((i=k;\
    \ i<${#arr[@]}; i++)); do\n        local -i j\n        for ((j=0; j<k; j++));\
    \ do\n            if [[ ${arr[i]} -gt ${result[j]} ]]; then\n                local\
    \ -i l\n                for ((l=k-1; l>j; l--)); do\n                    result[l]=${result[l-1]}\n\
    \                done\n                result[j]=${arr[i]}\n                break\n\
    \            fi\n        done\n    done\n    echo \"${result[@]}\"", "    local\
    \ -n arr=$1\n    local k=$2\n    local -a max\n    local -a min\n    local i\n\
    \    for i in ${arr[@]}; do\n        if [[ ${#max[@]} -lt $k ]]; then\n      \
    \      max+=($i)\n        else\n            min+=($i)\n        fi\n    done\n\
    \    if [[ ${#max[@]} -lt $k ]]; then\n        echo ${min[@]}\n    else\n    \
    \    echo ${max[@]}\n    fi", "    local arr=\"$1\"\n    local k=\"$2\"\n    local\
    \ arr=($arr)\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local\
    \ tmp=0\n    local res=()\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1;\
    \ j<len; j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n     \
    \           tmp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$tmp\n\
    \            fi\n        done\n    done\n    for ((i=0; i<k; i++)); do\n     \
    \   res[i]=${arr[i]}\n    done\n    echo ${res[@]}", "    local arr=\"$1\"\n \
    \   local k=\"$2\"\n    local result=()\n    local i=0\n    local j=0\n    local\
    \ n=0\n    local temp=0\n    local arr_len=0\n    local arr_len_minus_k=0\n  \
    \  local arr_len_minus_1=0\n    local arr_len_minus_k_minus_1=0\n    local arr_len_minus_k_minus_2=0\n\
    \    local arr_len_minus_k_minus_3=0\n    local arr_len_minus_k_minus_4=0\n  \
    \  local arr_len_minus_k_minus_5=0\n    local arr_len_minus_k_minus_6=0\n    local\
    \ arr_len_minus_k_minus_7=0\n    local arr_len_minus_k_minus_8=0\n    local arr_len_minus_k_minus_9=0\n\
    \    local arr_len_minus_k_minus_10=0\n    local arr_len_minus_k_minus_11=0\n\
    \    local arr_len_minus_k_minus_12=0\n    local arr_len_minus_k_minus_13=0\n\
    \    local arr_len_minus_k_minus_14=0\n    local arr_len_minus_k_minus_15=0\n\
    \    local arr_len_minus_k_minus_16=0\n    local arr_len_minus_k_minus_17=0\n\
    \    local arr_len_minus_k_minus_18=0\n    local arr_len_minus_k_minus_19=0\n\
    \    local arr_len_minus_k_minus_20=0\n    local arr_len_minus_k_minus_21=0\n\
    \    local arr_len_minus_k_minus_22=0\n    local arr_len_minus_k_minus_23=0\n\
    \    local arr_len_minus_k_minus_24=0\n    local arr_len_minus_k_minus_25=0\n\
    \    local arr_len_minus_k_minus_26=0\n    local arr_len_minus_k_minus_27=0\n\
    \   ", "    local arr=\"$1\"\n    local k=\"$2\"\n    local max_arr=()\n    local\
    \ max_arr_len=0\n    local arr_len=0\n    local i=0\n    local j=0\n    local\
    \ tmp=0\n    local arr_i=0\n    local max_arr_i=0\n    local max_arr_j=0\n   \
    \ local max_arr_tmp=0\n    local max_arr_tmp_i=0\n    local max_arr_tmp_j=0\n\
    \    local max_arr_tmp_len=0\n    local max_arr_tmp_arr=()\n    local max_arr_tmp_arr_i=0\n\
    \    local max_arr_tmp_arr_j=0\n    local max_arr_tmp_arr_tmp=0\n    local max_arr_tmp_arr_len=0\n\
    \    local max_arr_tmp_arr_len_i=0\n    local max_arr_tmp_arr_len_j=0\n    local\
    \ max_arr_tmp_arr_len_tmp=0\n    local max_arr_tmp_arr_len_len=0\n    local max_arr_tmp_arr_len_len_i=0\n\
    \    local max_arr_tmp_arr_len_len_j=0\n    local max_arr_tmp_arr_len_len_tmp=0\n\
    \    local max_arr_tmp_arr_len_len_len=0\n    local max_arr_tmp_arr_len_len_len_i=0\n\
    \    local max_arr_tmp_arr_len_len_len_j=0\n    local max_arr_tmp_arr_len_len_len_tmp=0\n\
    \    local max_arr_tmp_arr_len_len_len_len=0\n    local max_arr_tmp_arr_len_len_len_len_i=0\n\
    \    local max_arr_tmp_arr_len_len_len_len_j=0\n    local max_arr_tmp_arr_len_len_len_len_tmp=0\n\
    \    local max_arr_tmp_arr_len_len_len_len_len=0\n    local max_arr", "    local\
    \ -n arr=$1\n    local k=$2\n    local -a result\n    local -a temp\n    local\
    \ i\n    local j\n    local max\n    local index\n    for ((i=0; i<k; i++)); do\n\
    \        max=${arr[0]}\n        index=0\n        for ((j=1; j<${#arr[@]}; j++));\
    \ do\n            if [[ ${arr[j]} -gt $max ]]; then\n                max=${arr[j]}\n\
    \                index=$j\n            fi\n        done\n        result+=($max)\n\
    \        unset arr[$index]\n        arr=(\"${arr[@]}\")\n    done\n    echo \"\
    ${result[@]}\"", "    local -n arr=$1\n    local k=$2\n    local -a max\n    local\
    \ -a res\n    local i\n    local j\n    local max_index\n    local max_value\n\
    \    for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n    done\n    for ((i=k;\
    \ i<${#arr[@]}; i++)); do\n        max_index=0\n        max_value=${max[0]}\n\
    \        for ((j=1; j<k; j++)); do\n            if [[ ${max[j]} -gt $max_value\
    \ ]]; then\n                max_index=$j\n                max_value=${max[j]}\n\
    \            fi\n        done\n        if [[ ${arr[i]} -gt $max_value ]]; then\n\
    \            max[$max_index]=${arr[i]}\n        fi\n    done\n    for ((i=0; i<k;\
    \ i++)); do\n        res[i]=\"\\\"${max[i]}\\\"\"\n    done\n    echo \"${res[@]}\"",
  "    local -n arr=$1\n    local k=$2\n    local -a res=()\n    for i in ${arr[@]};\
    \ do\n        if [ ${#res[@]} -lt $k ]; then\n            res+=($i)\n        else\n\
    \            local min=${res[0]}\n            local min_idx=0\n            for\
    \ j in ${!res[@]}; do\n                if [ ${res[$j]} -lt $min ]; then\n    \
    \                min=${res[$j]}\n                    min_idx=$j\n            \
    \    fi\n            done\n            if [ $i -gt $min ]; then\n            \
    \    res[$min_idx]=$i\n            fi\n        fi\n    done\n    echo ${res[@]}\
    \ | tr ' ' '\\n' | sort -nr | tr '\\n' ' '", "    local arr=\"$1\"\n    local\
    \ k=\"$2\"\n    local -a arr_sorted\n    local -a arr_max\n    local -a arr_max_sorted\n\
    \    local -i i\n    local -i j\n    local -i len\n    local -i len_max\n    local\
    \ -i max\n    local -i max_index\n    local -i max_index_sorted\n    local -i\
    \ max_sorted\n    local -i max_sorted_index\n    local -i max_sorted_index_sorted\n\
    \    local -i max_sorted_sorted\n    local -i max_sorted_sorted_index\n    local\
    \ -i max_sorted_sorted_index_sorted\n    local -i max_sorted_sorted_sorted\n \
    \   local -i max_sorted_sorted_sorted_index\n    local -i max_sorted_sorted_sorted_index_sorted\n\
    \    local -i max_sorted_sorted_sorted_sorted\n    local -i max_sorted_sorted_sorted_sorted_index\n\
    \    local -i max_sorted_sorted_sorted_sorted_index_sorted\n    local -i max_sorted_sorted_sorted_sorted_sorted\n\
    \    local -i max_sorted_sorted_sorted_sorted_sorted_index\n    local -i max_sorted_sorted_sorted_sorted_sorted_index_sorted\n\
    \    local -i max_sorted_sorted_sorted_sorted_sorted_sorted\n    local -i max_sorted_sorted_sorted_sorted_sorted_sorted_index\n\
    \    local -i max_sorted_sorted_sorted_sorted_sorted_sorted_index_sorted\n   \
    \ local -i max_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n    local -i\
    \ max_sorted_sorted_sorted_sorted_sorted_sorted_sorted_index\n    local -i max_sorted_sorted_sorted_sorted_sorted_",
  "    local -n arr=$1\n    local k=$2\n    local -a result\n    local -i i=0\n  \
    \  local -i j=0\n    local -i len=${#arr[@]}\n    local -i max=0\n    local -i\
    \ max_index=0\n    local -i tmp=0\n    while (( i < k )) && (( i < len )); do\n\
    \        max=${arr[i]}\n        max_index=i\n        for (( j = i + 1; j < len;\
    \ j++ )); do\n            tmp=${arr[j]}\n            if (( tmp > max )); then\n\
    \                max=tmp\n                max_index=j\n            fi\n      \
    \  done\n        result[i]=${arr[max_index]}\n        arr[max_index]=${arr[i]}\n\
    \        arr[i]=$max\n        (( i++ ))\n    done\n    echo ${result[@]}", " \
    \   local -n _arr=$1\n    local _k=$2\n    local _max=()\n    local _i=0\n   \
    \ for _i in ${_arr[@]}; do\n        if [[ ${#_max[@]} -lt $_k ]]; then\n     \
    \       _max+=($_i)\n        else\n            local _j=0\n            for _j\
    \ in ${_max[@]}; do\n                if [[ $_i -gt $_j ]]; then\n            \
    \        _max+=($_i)\n                    unset _max[$((${#_max[@]} - $_k - 1))]\n\
    \                    break\n                fi\n            done\n        fi\n\
    \    done\n    echo ${_max[@]}", "    local -n _arr=$1\n    local _k=$2\n    local\
    \ _max=()\n    local _i=0\n    for _i in ${_arr[@]}; do\n        if [[ ${#_max[@]}\
    \ -lt $_k ]]; then\n            _max+=(\"$_i\")\n        else\n            local\
    \ _j=0\n            for _j in ${_max[@]}; do\n                if [[ $_i -gt $_j\
    \ ]]; then\n                    _max[$_j]=$_i\n                    break\n   \
    \             fi\n            done\n        fi\n    done\n    echo ${_max[@]}",
  "    local -n arr=$1\n    local k=$2\n    local -a arr_sorted\n    local -a arr_max\n\
    \    local i\n    local j\n    local n\n    local tmp\n    arr_sorted=($(printf\
    \ \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    arr_max=(\"${arr_sorted[@]:0:$k}\"\
    )\n    printf \"[\"\n    for ((i=0; i<${#arr_max[@]}; i++)); do\n        printf\
    \ '\"%s\"' \"${arr_max[$i]}\"\n        if ((i < ${#arr_max[@]}-1)); then\n   \
    \         printf \", \"\n        fi\n    done\n    printf \"]\\n\"", "    local\
    \ arr=\"$1\"\n    local k=\"$2\"\n    local -a arr=($arr)\n    local -a max\n\
    \    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i m=0\n\
    \    local -i tmp=0\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n;\
    \ j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n            \
    \    tmp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$tmp\n\
    \            fi\n        done\n    done\n    for ((i=0; i<k; i++)); do\n     \
    \   max[$i]=${arr[i]}\n    done\n    echo ${max[@]}", "    local -n arr=$1\n \
    \   local k=$2\n    local -a max_arr\n    local max_num\n    local max_index\n\
    \    local i\n    local j\n    local len=${#arr[@]}\n    for ((i=0; i<k; i++));\
    \ do\n        max_num=${arr[0]}\n        max_index=0\n        for ((j=1; j<len-i;\
    \ j++)); do\n            if ((arr[j] > max_num)); then\n                max_num=${arr[j]}\n\
    \                max_index=$j\n            fi\n        done\n        max_arr[i]=$max_num\n\
    \        arr[max_index]=${arr[len-i-1]}\n    done\n    echo ${max_arr[@]}", " \
    \   local -n _arr=$1\n    local _k=$2\n    local _arr_len=${#_arr[@]}\n    local\
    \ _i=0\n    local _j=0\n    local _tmp=0\n    for ((_i=0; _i<_arr_len; _i++));\
    \ do\n        for ((_j=_i+1; _j<_arr_len; _j++)); do\n            if [[ ${_arr[_i]}\
    \ -lt ${_arr[_j]} ]]; then\n                _tmp=${_arr[_i]}\n               \
    \ _arr[_i]=${_arr[_j]}\n                _arr[_j]=$_tmp\n            fi\n     \
    \   done\n    done\n    for ((_i=0; _i<_k; _i++)); do\n        echo -n \"\\\"\
    ${_arr[_i]}\\\" \"\n    done\n    echo", "    local arr=\"$1\"\n    local k=\"\
    $2\"\n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\n    local max_arr=()\n \
    \   local max_num\n    local i\n    local j\n    local tmp\n    for ((i=0; i<k;\
    \ i++)); do\n        max_num=\"-1000\"\n        for ((j=0; j<arr_len; j++)); do\n\
    \            tmp=\"$(echo \"$arr\" | cut -d ' ' -f $((j+1)))\"\n            if\
    \ [[ \"$tmp\" -gt \"$max_num\" ]]; then\n                max_num=\"$tmp\"\n  \
    \          fi\n        done\n        max_arr+=(\"$max_num\")\n        arr=\"$(echo\
    \ \"$arr\" | sed \"s/$max_num//g\")\"\n        arr_len=\"$(echo \"$arr\" | wc\
    \ -w)\"\n    done\n    echo \"${max_arr[@]}\"", "    local -n arr=$1\n    local\
    \ k=$2\n    local -a max\n    local -a res\n    for i in ${arr[@]}; do\n     \
    \   if [[ ${#max[@]} -lt $k ]]; then\n            max+=($i)\n        else\n  \
    \          for j in ${!max[@]}; do\n                if [[ $i -gt ${max[$j]} ]];\
    \ then\n                    max[$j]=$i\n                    break\n          \
    \      fi\n            done\n        fi\n    done\n    for i in ${max[@]}; do\n\
    \        res+=($i)\n    done\n    echo ${res[@]}", "    local arr=\"$1\"\n   \
    \ local k=\"$2\"\n    local max_arr=()\n    local max_arr_len=0\n    local arr_len=0\n\
    \    local arr_i=0\n    local arr_j=0\n    local arr_k=0\n    local arr_v=0\n\
    \    local arr_v_max=0\n    local arr_v_max_i=0\n    local arr_v_max_j=0\n   \
    \ local arr_v_max_k=0\n    local arr_v_max_v=0\n    local arr_v_max_v_i=0\n  \
    \  local arr_v_max_v_j=0\n    local arr_v_max_v_k=0\n    local arr_v_max_v_v=0\n\
    \    local arr_v_max_v_v_i=0\n    local arr_v_max_v_v_j=0\n    local arr_v_max_v_v_k=0\n\
    \    local arr_v_max_v_v_v=0\n    local arr_v_max_v_v_v_i=0\n    local arr_v_max_v_v_v_j=0\n\
    \    local arr_v_max_v_v_v_k=0\n    local arr_v_max_v_v_v_v=0\n    local arr_v_max_v_v_v_v_i=0\n\
    \    local arr_v_max_v_v_v_v_j=0\n    local arr_v_max_v_v_v_v_k=0\n    local arr_v_max_v_v_v_v_v=0\n\
    \    local arr_v_max_v_v_v_v_v_i=0\n    local arr_v_max_v_v_v_v_v_j=0\n    local\
    \ arr_v_max_v_v_v_v_v_k=0\n    local arr_v_max_v_v_v_v_v_v=0\n    local arr_v_max_v_v_v_v_v_v",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr=($arr)\n    local len=${#arr[@]}\n\
    \    local i=0\n    local j=0\n    local max=0\n    local max_index=0\n    local\
    \ result=()\n    while [ $i -lt $k ]; do\n        max=${arr[0]}\n        max_index=0\n\
    \        for j in $(seq 1 $len); do\n            if [ ${arr[$j]} -gt $max ]; then\n\
    \                max=${arr[$j]}\n                max_index=$j\n            fi\n\
    \        done\n        result+=($max)\n        unset arr[$max_index]\n       \
    \ i=$((i+1))\n    done\n    echo ${result[@]}", "    arr=(\"$@\")\n    k=${arr[-1]}\n\
    \    arr=(\"${arr[@]:0:${#arr[@]}-1}\")\n    arr=(\"${arr[@]// /}\")\n    arr=(\"\
    ${arr[@]//\\'/}\")\n    arr=(\"${arr[@]//\\\"/}\")\n    arr=(\"${arr[@]//\\[/}\"\
    )\n    arr=(\"${arr[@]//\\]/}\")\n    arr=(\"${arr[@]//\\(/}\")\n    arr=(\"${arr[@]//\\\
    )/}\")\n    arr=(\"${arr[@]//\\,/}\")\n    arr=(\"${arr[@]//\\:/}\")\n    arr=(\"\
    ${arr[@]//\\;/}\")\n    arr=(\"${arr[@]//\\{/}\")\n    arr=(\"${arr[@]//\\}/}\"\
    )\n    arr=(\"${arr[@]//\\!/}\")\n    arr=(\"${arr[@]//\\?/}\")\n    arr=(\"${arr[@]//\\\
    */}\")\n    arr=(\"${arr[@]//\\&/}\")\n    arr=(\"${arr[@]//\\^/}\")\n    arr=(\"\
    ${arr[@]//\\%/}\")\n    arr=(\"${arr[@]//\\$/}\")\n    arr=(\"${arr[@]//\\#/}\"\
    )\n    arr=(\"${arr[@]//\\@/}\")\n    arr=(\"${arr[@]//\\~/}\")\n    arr=(\"${arr[@]//\\\
    `/}\")\n    arr=(\"${arr[@]//\\=/}\")\n    arr=(\"${arr[@]//\\+/}\")\n    arr=(\"\
    ${arr[@]//\\-/}\")\n    arr=(\"${arr[@]//\\|/}\")\n    arr=(\"${arr[@]//\\\\/}\"\
    )\n    arr=(\"${arr[@]//\\</}\")\n    arr=(\"${arr[@]//\\>/}\")\n    arr=(\"",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=\"$(echo \"$arr\" |\
    \ wc -w)\"\n    local arr_max=\"$(echo \"$arr\" | sort -nr | head -n \"$k\")\"\
    \n    local arr_max_len=\"$(echo \"$arr_max\" | wc -w)\"\n    local arr_max_len_diff=\"\
    $((arr_len - arr_max_len))\"\n    local arr_max_len_diff_arr=\"$(echo \"$arr\"\
    \ | sort -n | head -n \"$arr_max_len_diff\")\"\n    local arr_max_len_diff_arr_len=\"\
    $(echo \"$arr_max_len_diff_arr\" | wc -w)\"\n    local arr_max_len_diff_arr_len_diff=\"\
    $((arr_max_len - arr_max_len_diff_arr_len))\"\n    local arr_max_len_diff_arr_len_diff_arr=\"\
    $(echo \"$arr_max_len_diff_arr\" | sort -nr | head -n \"$arr_max_len_diff_arr_len_diff\"\
    )\"\n    local arr_max_len_diff_arr_len_diff_arr_len=\"$(echo \"$arr_max_len_diff_arr_len_diff_arr\"\
    \ | wc -w)\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff=\"$((arr_max_len_diff_arr_len\
    \ - arr_max_len_diff_arr_len_diff_arr_len))\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff_arr=\"\
    $(echo \"$arr_max_len_diff_arr_len_diff_arr\" | sort -n | head -n \"$arr_max_len_diff_arr_len_diff_arr_len_diff\"\
    )\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff_arr_len=\"$(echo \"\
    $arr_max_len_diff_arr_len_diff_arr_len_diff_arr\" | wc -w)\"\n", "    local -a\
    \ arr=(\"$1\")\n    local k=$2\n    local -a max=()\n    local -a result=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ ${#max[@]} -lt $k ]]; then\n  \
    \          max+=(\"$i\")\n        else\n            for j in \"${!max[@]}\"; do\n\
    \                if [[ ${max[$j]} -lt $i ]]; then\n                    max[$j]=$i\n\
    \                    break\n                fi\n            done\n        fi\n\
    \    done\n    for i in \"${max[@]}\"; do\n        result+=(\"\\\"$i\\\"\")\n\
    \    done\n    echo \"${result[@]}\"", "    local arr=\"$1\"\n    local k=\"$2\"\
    \n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\n    local max_arr=()\n    local\
    \ max_arr_len=0\n    local i=0\n    local j=0\n    local tmp=0\n    local max_num=0\n\
    \    local max_num_index=0\n    for i in $(seq 1 \"$arr_len\"); do\n        tmp=\"\
    $(echo \"$arr\" | cut -d \" \" -f \"$i\")\"\n        if [ \"$max_arr_len\" -lt\
    \ \"$k\" ]; then\n            max_arr+=(\"$tmp\")\n            max_arr_len=\"\
    $(($max_arr_len + 1))\"\n        else\n            max_num=\"$(echo \"${max_arr[@]}\"\
    \ | tr \" \" \"\\n\" | sort -n | head -n 1)\"\n            max_num_index=\"$(echo\
    \ \"${max_arr[@]}\" | tr \" \" \"\\n\" | grep -n \"$max_num\" | cut -d \":\" -f\
    \ 1)\"\n            if [ \"$tmp\" -gt \"$max_num\" ]; then\n                max_arr[$max_num_index]=\"\
    $tmp\"\n            fi\n        fi\n    done\n    echo \"${max_arr[@]}\" | tr\
    \ \" \" \"\\n\" | sort -n | tr \"\\n\" \" \"", "    local -n arr=$1\n    local\
    \ k=$2\n    local -a max\n    local -a max_idx\n    local -a max_val\n    local\
    \ -a max_idx_val\n    local -a max_idx_val_idx\n    local -a max_idx_val_val\n\
    \    local -a max_idx_val_idx_val\n    local -a max_idx_val_idx_val_idx\n    local\
    \ -a max_idx_val_idx_val_val\n    local -a max_idx_val_idx_val_idx_val\n    local\
    \ -a max_idx_val_idx_val_idx_val_idx\n    local -a max_idx_val_idx_val_idx_val_val\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val\n    local -a max_idx_val_idx_val_idx_val_idx_val_idx\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_val\n    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx\n    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_val\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val\n    local -a\
    \ max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx\n    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_val\n\
    \    local -a max_idx_val_idx_val_idx_val_", "    local -n arr=$1\n    local k=$2\n\
    \    local -a res\n    for ((i=0; i<k; i++)); do\n        local max_index=0\n\
    \        for ((j=1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[j]} -gt ${arr[max_index]}\
    \ ]]; then\n                max_index=$j\n            fi\n        done\n     \
    \   res+=(${arr[max_index]})\n        unset arr[max_index]\n    done\n    echo\
    \ ${res[@]}", "    local -n arr=$1\n    local k=$2\n    local -a res=()\n    for\
    \ i in ${arr[@]}; do\n        if [[ ${#res[@]} -lt $k ]]; then\n            res+=($i)\n\
    \        else\n            local min=${res[0]}\n            local min_idx=0\n\
    \            for j in ${!res[@]}; do\n                if [[ ${res[$j]} -lt $min\
    \ ]]; then\n                    min=${res[$j]}\n                    min_idx=$j\n\
    \                fi\n            done\n            if [[ $i -gt $min ]]; then\n\
    \                res[$min_idx]=$i\n            fi\n        fi\n    done\n    echo\
    \ ${res[@]}", "    local arr=$1\n    local k=$2\n    local arr=($arr)\n    local\
    \ len=${#arr[@]}\n    local max_arr=()\n    local max_arr_len=0\n    local i=0\n\
    \    local j=0\n    local max_num=0\n    local max_num_index=0\n    local max_num_index_arr=()\n\
    \    local max_num_index_arr_len=0\n    local temp_arr=()\n    local temp_arr_len=0\n\
    \    local temp_num=0\n    local temp_num_index=0\n    local temp_num_index_arr=()\n\
    \    local temp_num_index_arr_len=0\n    local temp_num_index_arr_len_new=0\n\
    \    local temp_num_index_arr_len_old=0\n    local temp_num_index_arr_len_diff=0\n\
    \    local temp_num_index_arr_len_diff_half=0\n    local temp_num_index_arr_len_diff_half_floor=0\n\
    \    local temp_num_index_arr_len_diff_half_ceil=0\n    local temp_num_index_arr_len_diff_half_floor_index=0\n\
    \    local temp_num_index_arr_len_diff_half_ceil_index=0\n    local temp_num_index_arr_len_diff_half_floor_num=0\n\
    \    local temp_num_index_arr_len_diff_half_ceil_num=0\n    local temp_num_index_arr_len_diff_half_floor_num_index=0\n\
    \    local temp_num_index_arr_len_diff_half_ceil_num_index=0\n    local temp_num_index_arr_len_diff_half_floor_num_index_arr=()\n\
    \    local temp_num_index_arr_len_diff_half_ceil_num_index_arr=()\n    local temp_num_index_arr_len_diff_half_floor_num_index_arr_len=0\n\
    \    local temp_num_index_arr_len_diff_half_ce", "    local arr=$1\n    local\
    \ k=$2\n    local -a arr_sorted\n    local -a arr_max\n    IFS=' ' read -r -a\
    \ arr_sorted <<< \"$(echo \"$arr\" | tr ' ' '\\n' | sort -n)\"\n    for ((i=0;\
    \ i<k; i++)); do\n        arr_max[i]=${arr_sorted[-i-1]}\n    done\n    echo \"\
    ${arr_max[@]}\"", "    local -n arr=$1\n    local k=$2\n    local -a max\n   \
    \ for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n    done\n    for ((i=k;\
    \ i<${#arr[@]}; i++)); do\n        for ((j=0; j<k; j++)); do\n            if [[\
    \ ${arr[i]} -gt ${max[j]} ]]; then\n                max[j]=${arr[i]}\n       \
    \         break\n            fi\n        done\n    done\n    echo \"${max[@]}\"\
    \ | tr ' ' '\\n' | sort -nr | tr '\\n' ' '", "    local arr=$1\n    local k=$2\n\
    \    local arr_sorted=$(echo $arr | tr \" \" \"\\n\" | sort -nr)\n    local arr_sorted_k=$(echo\
    \ $arr_sorted | tr \" \" \"\\n\" | head -n $k)\n    echo $arr_sorted_k | tr \"\
    \ \" \",\"", "    local arr=$1\n    local k=$2\n    local arr_len=$(echo \"$arr\"\
    \ | wc -w)\n    local max_arr=()\n    local max_arr_len=0\n    local i=0\n   \
    \ local j=0\n    local temp=0\n    local max_num=0\n    local max_num_index=0\n\
    \    local arr_i=0\n    local arr_j=0\n    local arr_temp=0\n    local arr_max_num=0\n\
    \    local arr_max_num_index=0\n    local arr_max_arr=()\n    local arr_max_arr_len=0\n\
    \    local arr_arr_len=0\n    local arr_arr=()\n    local arr_arr_i=0\n    local\
    \ arr_arr_j=0\n    local arr_arr_temp=0\n    local arr_arr_max_num=0\n    local\
    \ arr_arr_max_num_index=0\n    local arr_arr_max_arr=()\n    local arr_arr_max_arr_len=0\n\
    \    local arr_arr_arr_len=0\n    local arr_arr_arr=()\n    local arr_arr_arr_i=0\n\
    \    local arr_arr_arr_j=0\n    local arr_arr_arr_temp=0\n    local arr_arr_arr_max_num=0\n\
    \    local arr_arr_arr_max_num_index=0\n    local arr_arr_arr_max_arr=()\n   \
    \ local arr_arr_arr_max_arr_len=0\n    local arr_arr_arr_arr_len=0\n    local\
    \ arr_arr_arr_arr=()\n    local arr_arr_arr_arr_i=0\n    local arr_arr_arr_arr_j=0\n\
    \    local arr_arr_arr_arr_temp=0\n    local arr_arr_arr_arr_max_num=0\n    local\
    \ arr_arr_arr_arr_max_num_index=0\n    local arr_arr_arr_arr_max_arr=()\n    local\
    \ arr_arr_arr_arr_max_arr_len=0\n    local arr_arr", "    local arr=\"$1\"\n \
    \   local k=\"$2\"\n    local max_arr=()\n    for num in $arr; do\n        if\
    \ [[ ${#max_arr[@]} -lt $k ]]; then\n            max_arr+=(\"$num\")\n       \
    \ else\n            local min_num=${max_arr[0]}\n            local min_index=0\n\
    \            for ((i=1; i<${#max_arr[@]}; i++)); do\n                if [[ ${max_arr[$i]}\
    \ -lt $min_num ]]; then\n                    min_num=${max_arr[$i]}\n        \
    \            min_index=$i\n                fi\n            done\n            if\
    \ [[ $num -gt $min_num ]]; then\n                max_arr[$min_index]=\"$num\"\n\
    \            fi\n        fi\n    done\n    echo \"${max_arr[@]}\"", "    local\
    \ arr=$1\n    local k=$2\n    local max_arr=()\n    local max_arr_len=0\n    local\
    \ max_arr_idx=0\n    local max_arr_idx_tmp=0\n    local max_arr_idx_tmp_len=0\n\
    \    local max_arr_idx_tmp_len_max=0\n    local max_arr_idx_tmp_len_max_idx=0\n\
    \    local max_arr_idx_tmp_len_max_idx_tmp=0\n    local max_arr_idx_tmp_len_max_idx_tmp_len=0\n\
    \    local max_arr_idx_tmp_len_max_idx_tmp_len_max=0\n    local max_arr_idx_tmp_len_max_idx_tmp_len_max_idx=0\n\
    \    local max_arr_idx_tmp_len_max_idx_tmp_len_max_idx_tmp=0\n    local max_arr_idx_tmp_len_max_idx_tmp_len_max_idx_tmp_len=0\n\
    \    local max_arr_idx_tmp_len_max_idx_tmp_len_max_idx_tmp_len_max=0\n    local\
    \ max_arr_idx_tmp_len_max_idx_tmp_len_max_idx_tmp_len_max_idx=0\n    local max_arr_idx_tmp_len_max_idx_tmp_len_max_idx_tmp_len_max_idx_tmp=0\n\
    \    local max_arr_idx_tmp_len_max_idx_tmp_len_max_idx_tmp_len_max_idx_tmp_len=0\n\
    \    local max_arr_idx_tmp_len_max_idx_tmp_len_max_idx_tmp_len_max_idx_tmp_len_max=0\n\
    \    local max_arr_idx_tmp_len_max_idx_tmp_len_max_idx_tmp_len_max_idx_tmp_len_max",
  "    local -n arr=$1\n    local k=$2\n    local -a max\n    local -a max_idx\n \
    \   local -a max_val\n    local -a max_idx_val\n    local -a max_idx_val_idx\n\
    \    local -a max_idx_val_idx_val\n    local -a max_idx_val_idx_val_idx\n    local\
    \ -a max_idx_val_idx_val_idx_val\n    local -a max_idx_val_idx_val_idx_val_idx\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val\n    local -a max_idx_val_idx_val_idx_val_idx_val_idx\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val\n    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val\n    local -a\
    \ max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx\n    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx",
  "    local -n arr=$1\n    local k=$2\n    local -a sorted\n    local -a result\n\
    \    for i in ${arr[@]}; do\n        sorted+=($i)\n    done\n    IFS=$'\\n' sorted=($(sort\
    \ -nr <<<\"${sorted[*]}\"))\n    unset IFS\n    for ((i=0; i<k; i++)); do\n  \
    \      result+=(${sorted[i]})\n    done\n    echo \"${result[@]}\"", "    local\
    \ -n arr=$1\n    local k=$2\n    local -a res\n    local -a tmp\n    local i\n\
    \    local j\n    local max\n    for ((i=0; i<k; i++)); do\n        max=${arr[0]}\n\
    \        for ((j=1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[j]} -gt $max\
    \ ]]; then\n                max=${arr[j]}\n            fi\n        done\n    \
    \    res+=($max)\n        tmp=()\n        for ((j=0; j<${#arr[@]}; j++)); do\n\
    \            if [[ ${arr[j]} -ne $max ]]; then\n                tmp+=(${arr[j]})\n\
    \            fi\n        done\n        arr=(\"${tmp[@]}\")\n    done\n    echo\
    \ \"${res[@]}\"", "    arr=$1\n    k=$2\n    echo $arr | tr \" \" \"\\n\" | sort\
    \ -nr | head -n $k | tr \"\\n\" \" \"", "    local -n arr=$1\n    local k=$2\n\
    \    local -a res\n    local -a sorted\n    local -a max\n    local i\n    local\
    \ j\n    local len\n    local tmp\n    len=${#arr[@]}\n    for ((i=0; i<len; i++));\
    \ do\n        sorted[i]=${arr[i]}\n    done\n    for ((i=0; i<len; i++)); do\n\
    \        for ((j=i+1; j<len; j++)); do\n            if ((sorted[i] < sorted[j]));\
    \ then\n                tmp=${sorted[i]}\n                sorted[i]=${sorted[j]}\n\
    \                sorted[j]=$tmp\n            fi\n        done\n    done\n    for\
    \ ((i=0; i<k; i++)); do\n        max[i]=${sorted[i]}\n    done\n    for ((i=0;\
    \ i<k; i++)); do\n        res[i]=\"\\\"${max[i]}\\\"\"\n    done\n    echo ${res[@]}",
  "    local -n _arr=$1\n    local _k=$2\n    local _max_arr=()\n    local _max_arr_len=0\n\
    \    local _arr_len=${#_arr[@]}\n    local _i=0\n    local _j=0\n    local _max_i=0\n\
    \    local _max_j=0\n    local _max_num=0\n    local _num=0\n    local _num_str=0\n\
    \    local _max_num_str=0\n    local _max_num_str_len=0\n    local _num_str_len=0\n\
    \    local _max_num_str_len_diff=0\n    local _num_str_len_diff=0\n    local _max_num_str_len_diff_abs=0\n\
    \    local _num_str_len_diff_abs=0\n    local _max_num_str_len_diff_abs_min=0\n\
    \    local _num_str_len_diff_abs_min=0\n    local _max_num_str_len_diff_abs_min_i=0\n\
    \    local _num_str_len_diff_abs_min_i=0\n    local _max_num_str_len_diff_abs_min_j=0\n\
    \    local _num_str_len_diff_abs_min_j=0\n    local _max_num_str_len_diff_abs_min_num=0\n\
    \    local _num_str_len_diff_abs_min_num=0\n    local _max_num_str_len_diff_abs_min_num_str=0\n\
    \    local _num_str_len_diff_abs_min_num_str=0\n    local _max_num_str_len_diff_abs_min_num_str_len=0\n\
    \    local _num_str_len_diff_abs_min_num_str_len=0\n    local _max_num_str_len_diff_abs_min_num_str_len_diff=0\n\
    \    local _num_str_len_diff_abs_min_num_str_len_diff=0\n    local _max_num_str",
  "    local arr=$1\n    local k=$2\n    local arr_len=$(echo $arr | wc -w)\n    local\
    \ i=0\n    local j=0\n    local max_idx=0\n    local tmp=0\n    local arr_arr=($arr)\n\
    \    local arr_arr_len=${#arr_arr[@]}\n    local arr_arr_len_1=$((arr_arr_len\
    \ - 1))\n    local arr_arr_len_2=$((arr_arr_len - 2))\n    local arr_arr_len_3=$((arr_arr_len\
    \ - 3))\n    local arr_arr_len_4=$((arr_arr_len - 4))\n    local arr_arr_len_5=$((arr_arr_len\
    \ - 5))\n    local arr_arr_len_6=$((arr_arr_len - 6))\n    local arr_arr_len_7=$((arr_arr_len\
    \ - 7))\n    local arr_arr_len_8=$((arr_arr_len - 8))\n    local arr_arr_len_9=$((arr_arr_len\
    \ - 9))\n    local arr_arr_len_10=$((arr_arr_len - 10))\n    local arr_arr_len_11=$((arr_arr_len\
    \ - 11))\n    local arr_arr_len_12=$((arr_arr_len - 12))\n    local arr_arr_len_13=$((arr_arr_len\
    \ - 13))\n    local arr_arr_len_14=$((arr_arr_len - 14))\n    local arr_arr_len_15=$((arr_arr_len\
    \ - 15))\n    local arr_arr_len_16=$((arr_arr_len - 16))\n    local arr_arr_len_17=$((arr_arr_len\
    \ - 17))\n    local arr_arr_len_18=$((arr_arr_len - 18))\n    local arr_arr_len_19=$((arr_arr_len\
    \ - 19))\n    local arr_arr_len_20=$((arr_arr_len - 20))\n    local arr_arr_len_21=$((arr_arr_len\
    \ - 21))\n    local arr_arr_len_", "    local arr=\"$1\"\n    local k=\"$2\"\n\
    \    local -a arr_sorted\n    local -a arr_max\n    local -i i=0\n    local -i\
    \ j=0\n    local -i len=0\n    local -i max=0\n    local -i max_idx=0\n    local\
    \ -i arr_len=0\n    local -i arr_max_len=0\n    local -i arr_sorted_len=0\n  \
    \  local -i arr_max_idx=0\n    local -i arr_sorted_idx=0\n    local -i arr_max_idx_last=0\n\
    \    local -i arr_sorted_idx_last=0\n    local -i arr_max_idx_last_prev=0\n  \
    \  local -i arr_sorted_idx_last_prev=0\n    local -i arr_max_idx_last_prev_prev=0\n\
    \    local -i arr_sorted_idx_last_prev_prev=0\n    local -i arr_max_idx_last_prev_prev_prev=0\n\
    \    local -i arr_sorted_idx_last_prev_prev_prev=0\n    local -i arr_max_idx_last_prev_prev_prev_prev=0\n\
    \    local -i arr_sorted_idx_last_prev_prev_prev_prev=0\n    local -i arr_max_idx_last_prev_prev_prev_prev_prev=0\n\
    \    local -i arr_sorted_idx_last_prev_prev_prev_prev_prev=0\n    local -i arr_max_idx_last_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i arr_sorted_idx_last_prev_prev_prev_prev_prev_prev=0\n    local -i\
    \ arr_max_idx_last_prev_prev_prev_prev_prev_prev_prev=0\n    local -i arr_sorted_idx_last_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i arr_max_idx_last_", "    local -a arr=(\"$1\")\n    local k=\"$2\"\
    \n    local -a result\n    local -a max\n    local -a max_index\n    local -a\
    \ max_index_new\n    local -a max_new\n    local -a max_index_old\n    local -a\
    \ max_old\n    local -a max_index_tmp\n    local -a max_tmp\n    local -a max_index_tmp2\n\
    \    local -a max_tmp2\n    local -a max_index_tmp3\n    local -a max_tmp3\n \
    \   local -a max_index_tmp4\n    local -a max_tmp4\n    local -a max_index_tmp5\n\
    \    local -a max_tmp5\n    local -a max_index_tmp6\n    local -a max_tmp6\n \
    \   local -a max_index_tmp7\n    local -a max_tmp7\n    local -a max_index_tmp8\n\
    \    local -a max_tmp8\n    local -a max_index_tmp9\n    local -a max_tmp9\n \
    \   local -a max_index_tmp10\n    local -a max_tmp10\n    local -a max_index_tmp11\n\
    \    local -a max_tmp11\n    local -a max_index_tmp12\n    local -a max_tmp12\n\
    \    local -a max_index_tmp13\n    local -a max_tmp13\n    local -a max_index_tmp14\n\
    \    local -a max_tmp14\n    local -a max_index_tmp15\n    local -a max_tmp15\n\
    \    local -a max_index_tmp16\n    local -a max_tmp16\n    local -a max_index_tmp17\n\
    \    local -a max_tmp17\n    local -a max_index_tmp18\n    local -a max_tmp18\n\
    \    local -a max_index_tmp19\n    local -a max_tmp19\n    local -a max_index_tmp20\n\
    \    local -a max_tmp20\n    local -a max_index_tmp21\n    local -a max_tmp21\n\
    \    local -a max_index_tmp22\n    local -a max_tmp", "    local -n arr=$1\n \
    \   local k=$2\n    local -a res=()\n    for i in ${arr[@]}; do\n        if [[\
    \ ${#res[@]} -lt $k ]]; then\n            res+=($i)\n        else\n          \
    \  local j\n            for j in ${!res[@]}; do\n                if [[ $i -gt\
    \ ${res[$j]} ]]; then\n                    res[$j]=$i\n                    break\n\
    \                fi\n            done\n        fi\n    done\n    echo \"${res[@]}\"",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local -a arr_sorted=()\n    local\
    \ -a arr_max=()\n    local -a arr_max_sorted=()\n    local -i i=0\n    local -i\
    \ j=0\n    local -i len=0\n    local -i len_max=0\n    local -i len_max_sorted=0\n\
    \    local -i len_sorted=0\n    local -i max=0\n    local -i max_sorted=0\n  \
    \  local -i min=0\n    local -i min_sorted=0\n    local -i tmp=0\n    local -i\
    \ tmp_sorted=0\n    local -i tmp_max=0\n    local -i tmp_max_sorted=0\n    local\
    \ -i tmp_min=0\n    local -i tmp_min_sorted=0\n    local -i tmp_len=0\n    local\
    \ -i tmp_len_sorted=0\n    local -i tmp_len_max=0\n    local -i tmp_len_max_sorted=0\n\
    \    local -i tmp_len_min=0\n    local -i tmp_len_min_sorted=0\n    local -i tmp_len_sorted_max=0\n\
    \    local -i tmp_len_sorted_min=0\n    local -i tmp_max_sorted_len=0\n    local\
    \ -i tmp_min_sorted_len=0\n    local -i tmp_sorted_len=0\n    local -i tmp_sorted_len_max=0\n\
    \    local -i tmp_sorted_len_min=0\n    local -i tmp_sorted_max=0\n    local -i\
    \ tmp_sorted_min=0\n    local -i tmp_sorted_max_len=0\n    local -i tmp_sorted_min_len=0\n\
    \    local -i tmp_sorted_max_sorted=0\n    local -i tmp_sorted_min_sorted=0\n\
    \    local -i tmp_sorted_sorted=0\n    local -i tmp_sorted_sorted_max=0\n    local",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local -a arr=($arr)\n    local -a\
    \ max=()\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n  \
    \  local -i max_len=0\n    local -i tmp=0\n    local -i max_tmp=0\n    local -i\
    \ max_i=0\n    local -i max_j=0\n    local -i max_index=0\n    local -i max_index_tmp=0\n\
    \    local -i max_index_i=0\n    local -i max_index_j=0\n    local -i max_index_len=0\n\
    \    local -i max_index_max_len=0\n    local -i max_index_max_i=0\n    local -i\
    \ max_index_max_j=0\n    local -i max_index_max_index=0\n    local -i max_index_max_index_tmp=0\n\
    \    local -i max_index_max_index_i=0\n    local -i max_index_max_index_j=0\n\
    \    local -i max_index_max_index_len=0\n    local -i max_index_max_index_max_len=0\n\
    \    local -i max_index_max_index_max_i=0\n    local -i max_index_max_index_max_j=0\n\
    \    local -i max_index_max_index_max_index=0\n    local -i max_index_max_index_max_index_tmp=0\n\
    \    local -i max_index_max_index_max_index_i=0\n    local -i max_index_max_index_max_index_j=0\n\
    \    local -i max_index_max_index_max_index_len=0\n    local -i max_index_max_index_max_index_max_len=0\n\
    \    local -i max_index_max_index_max_index_max_i=0\n    local -i max_index_max_index_max_index_max_j=0\n\
    \    local -i", "    local -n arr=$1\n    local k=$2\n    local -a res=()\n  \
    \  for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${#res[@]} -lt $k ]]; then\n\
    \            res+=(\"${arr[$i]}\")\n        else\n            local min=${res[0]}\n\
    \            local min_idx=0\n            for ((j=1; j<${#res[@]}; j++)); do\n\
    \                if [[ ${res[$j]} -lt $min ]]; then\n                    min=${res[$j]}\n\
    \                    min_idx=$j\n                fi\n            done\n      \
    \      if [[ ${arr[$i]} -gt $min ]]; then\n                res[$min_idx]=${arr[$i]}\n\
    \            fi\n        fi\n    done\n    echo \"${res[@]}\"", "    local -n\
    \ arr=$1\n    local k=$2\n    local -a result\n    local -a temp\n    local i\n\
    \    local j\n    local max\n    local max_index\n    for ((i=0; i<k; i++)); do\n\
    \        max=${arr[0]}\n        max_index=0\n        for ((j=1; j<${#arr[@]};\
    \ j++)); do\n            if [[ ${arr[j]} -gt $max ]]; then\n                max=${arr[j]}\n\
    \                max_index=$j\n            fi\n        done\n        result[i]=$max\n\
    \        temp[i]=$max_index\n        arr[max_index]=${arr[${#arr[@]}-1]}\n   \
    \     unset arr[${#arr[@]}-1]\n    done\n    for ((i=0; i<${#temp[@]}; i++));\
    \ do\n        arr[${temp[i]}]=${result[i]}\n    done\n    echo \"${arr[@]}\"",
  "    local arr=$1\n    local k=$2\n    local arr_len=$(echo $arr | wc -w)\n    local\
    \ max_arr=()\n    local max_arr_len=0\n    local max_num=0\n    local max_num_index=0\n\
    \    local i=0\n    local j=0\n    local num=0\n    local num_index=0\n    local\
    \ num_arr=()\n    local num_arr_len=0\n    local num_arr_str=''\n    local max_arr_str=''\n\
    \    local max_arr_str_len=0\n    local max_arr_str_index=0\n    local max_arr_str_index_len=0\n\
    \    local max_arr_str_index_len_str=''\n    local max_arr_str_index_len_str_len=0\n\
    \    local max_arr_str_index_len_str_len_str=''\n    local max_arr_str_index_len_str_len_str_len=0\n\
    \    local max_arr_str_index_len_str_len_str_len_str=''\n    local max_arr_str_index_len_str_len_str_len_str_len=0\n\
    \    local max_arr_str_index_len_str_len_str_len_str_len_str=''\n    local max_arr_str_index_len_str_len_str_len_str_len_str_len=0\n\
    \    local max_arr_str_index_len_str_len_str_len_str_len_str_len_str=''\n    local\
    \ max_arr_str_index_len_str_len_str_len_str_len_str_len_str_len=0\n    local max_arr_str_index_len_str_len_str_len_str_len_str_len_str_len_str=''\n\
    \    local max_arr_str_index_len_str_len_str_len_str_len_str_len_str_len_str_len=0\n\
    \    local max_arr_str_index_len_str_len_str_len_", "    local -n arr=$1\n   \
    \ local k=$2\n    local -a max\n    for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n\
    \    done\n    for ((i=k; i<${#arr[@]}; i++)); do\n        for ((j=0; j<k; j++));\
    \ do\n            if [[ ${arr[i]} -gt ${max[j]} ]]; then\n                max[j]=${arr[i]}\n\
    \                break\n            fi\n        done\n    done\n    echo ${max[@]}\
    \ | tr ' ' '\\n' | sort -nr | tr '\\n' ' '", "    local -n arr=$1\n    local k=$2\n\
    \    local -a max\n    for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n \
    \   done\n    for ((i=k; i<${#arr[@]}; i++)); do\n        for ((j=0; j<k; j++));\
    \ do\n            if [[ ${arr[i]} -gt ${max[j]} ]]; then\n                for\
    \ ((l=k-1; l>j; l--)); do\n                    max[l]=${max[l-1]}\n          \
    \      done\n                max[j]=${arr[i]}\n                break\n       \
    \     fi\n        done\n    done\n    echo ${max[@]}", "    local arr=\"$1\"\n\
    \    local k=\"$2\"\n    local max_nums=()\n    local max_num\n    local num\n\
    \    for num in $arr; do\n        if [[ ${#max_nums[@]} -lt $k ]]; then\n    \
    \        max_nums+=(\"$num\")\n        else\n            max_num=$(echo \"${max_nums[@]}\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n            if [[ $num -gt $max_num ]];\
    \ then\n                max_nums=(\"${max_nums[@]/$max_num/$num}\")\n        \
    \    fi\n        fi\n    done\n    echo \"${max_nums[@]}\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '", "    local -n arr=$1\n    local k=$2\n    local -a max\n\
    \    for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n    done\n    for ((i=k;\
    \ i<${#arr[@]}; i++)); do\n        for ((j=0; j<k; j++)); do\n            if [[\
    \ ${arr[i]} -gt ${max[j]} ]]; then\n                max[j]=${arr[i]}\n       \
    \         break\n            fi\n        done\n    done\n    echo \"${max[@]}\"\
    \ | tr ' ' '\\n' | sort -nr | tr '\\n' ' '", "    local -a arr=(\"$1\")\n    local\
    \ k=\"$2\"\n    local -a max\n    local -i i\n    local -i j\n    local -i len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n    \
    \        if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n                local tmp=${arr[i]}\n\
    \                arr[i]=${arr[j]}\n                arr[j]=$tmp\n            fi\n\
    \        done\n    done\n    for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n\
    \    done\n    echo \"${max[@]}\"", "    local arr=$1\n    local k=$2\n    local\
    \ arr_len=$(echo $arr | wc -w)\n    local arr_sorted=$(echo $arr | tr ' ' '\\\
    n' | sort -nr | tr '\\n' ' ')\n    local arr_max=$(echo $arr_sorted | cut -d '\
    \ ' -f1-$k)\n    echo \"[$(echo $arr_max | tr ' ' ',' | sed 's/,/\", \"/g')]\"",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local -a arr_sorted\n    local -a\
    \ arr_max\n    local i\n    local j\n    local max_index\n    local max_value\n\
    \    local -i arr_len\n\n    # Sort the array.\n    IFS=' ' read -r -a arr_sorted\
    \ <<< \"$(echo \"$arr\" | tr ' ' '\\n' | sort -n)\"\n    arr_len=${#arr_sorted[@]}\n\
    \n    # Get the maximum k numbers.\n    for ((i=0; i<k; i++)); do\n        max_index=0\n\
    \        max_value=${arr_sorted[0]}\n        for ((j=1; j<arr_len; j++)); do\n\
    \            if [[ ${arr_sorted[j]} -gt $max_value ]]; then\n                max_index=$j\n\
    \                max_value=${arr_sorted[j]}\n            fi\n        done\n  \
    \      arr_max[i]=$max_value\n        arr_sorted[$max_index]=0\n    done\n\n \
    \   # Print the maximum k numbers.\n    echo \"${arr_max[@]}\"", "    local -n\
    \ arr=$1\n    local k=$2\n    local -a max\n    local -a res\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ ${#max[@]} -lt $k ]]; then\n            max+=(\"\
    $i\")\n        else\n            for j in \"${!max[@]}\"; do\n               \
    \ if [[ $i -gt ${max[$j]} ]]; then\n                    max[$j]=$i\n         \
    \           break\n                fi\n            done\n        fi\n    done\n\
    \    for i in \"${max[@]}\"; do\n        res+=(\"\\\"$i\\\"\")\n    done\n   \
    \ echo \"${res[@]}\"", "    local arr=\"$1\"\n    local k=\"$2\"\n    local i\n\
    \    local j\n    local max\n    local max_index\n    local result=()\n    for\
    \ ((i=0; i<k; i++)); do\n        max=${arr[0]}\n        max_index=0\n        for\
    \ ((j=1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[j]} -gt $max ]]; then\n\
    \                max=${arr[j]}\n                max_index=$j\n            fi\n\
    \        done\n        result+=($max)\n        unset arr[$max_index]\n    done\n\
    \    echo \"${result[@]}\"", "    local arr=\"$1\"\n    local k=\"$2\"\n    local\
    \ arr_len=\"$(echo \"$arr\" | wc -w)\"\n    if [[ \"$arr_len\" -lt \"$k\" ]];\
    \ then\n        echo \"[]\"\n        return\n    fi\n    local max_arr=()\n  \
    \  local max_arr_len=0\n    for i in $arr; do\n        if [[ \"$max_arr_len\"\
    \ -lt \"$k\" ]]; then\n            max_arr+=(\"$i\")\n            max_arr_len=$((max_arr_len\
    \ + 1))\n        else\n            local min_index=0\n            local min_value=\"\
    ${max_arr[0]}\"\n            for j in \"${!max_arr[@]}\"; do\n               \
    \ if [[ \"${max_arr[$j]}\" -lt \"$min_value\" ]]; then\n                    min_index=\"\
    $j\"\n                    min_value=\"${max_arr[$j]}\"\n                fi\n \
    \           done\n            if [[ \"$i\" -gt \"$min_value\" ]]; then\n     \
    \           max_arr[$min_index]=\"$i\"\n            fi\n        fi\n    done\n\
    \    echo \"${max_arr[@]}\" | tr ' ' '\\n' | sort -nr | tr '\\n' ' ' | sed 's/^/[/'\
    \ | sed 's/ /\", \"/g' | sed 's/$/\"]/'", "    local arr=$1\n    local k=$2\n\
    \    local -a arr_sorted\n    local -a arr_max\n    local i\n    local j\n   \
    \ local len\n    local max\n    local max_index\n    local max_index_tmp\n   \
    \ local tmp\n\n    arr_sorted=($(echo \"$arr\" | tr ' ' '\\n' | sort -n))\n  \
    \  len=${#arr_sorted[@]}\n    for ((i=0; i<k; i++)); do\n        max=${arr_sorted[0]}\n\
    \        max_index=0\n        for ((j=1; j<len; j++)); do\n            if [[ ${arr_sorted[j]}\
    \ -gt $max ]]; then\n                max=${arr_sorted[j]}\n                max_index=$j\n\
    \            fi\n        done\n        arr_max[i]=$max\n        arr_sorted[$max_index]=${arr_sorted[len-1]}\n\
    \        arr_sorted[len-1]=$max\n        len=$((len-1))\n    done\n    echo \"\
    ${arr_max[@]}\"", "    local arr=\"$1\"\n    local k=\"$2\"\n    local result=()\n\
    \    local i=0\n    local j=0\n    local temp=0\n    local len=0\n    local arr_len=0\n\
    \    local arr_str=()\n    local arr_num=()\n    local arr_num_str=()\n    local\
    \ arr_num_str_len=0\n    local arr_num_str_len_max=0\n    local arr_num_str_len_max_index=0\n\
    \    local arr_num_str_len_max_index_temp=0\n    local arr_num_str_len_max_index_temp_len=0\n\
    \    local arr_num_str_len_max_index_temp_len_max=0\n    local arr_num_str_len_max_index_temp_len_max_index=0\n\
    \    local arr_num_str_len_max_index_temp_len_max_index_temp=0\n    local arr_num_str_len_max_index_temp_len_max_index_temp_len=0\n\
    \    local arr_num_str_len_max_index_temp_len_max_index_temp_len_max=0\n    local\
    \ arr_num_str_len_max_index_temp_len_max_index_temp_len_max_index=0\n    local\
    \ arr_num_str_len_max_index_temp_len_max_index_temp_len_max_index_temp=0\n   \
    \ local arr_num_str_len_max_index_temp_len_max_index_temp_len_max_index_temp_len=0\n\
    \    local arr_num_str_len_max_index_temp_len_max_index_temp_len_max_index_temp_len_max=0\n\
    \    local arr_num_str_len_max_index_temp_len_max_index_temp_len_max_index_temp_len_max_index=0\n\
    \    local arr_num_str_len_max_index_temp_len_max_index_temp_len_max_index_temp_len_max_index_temp=0",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local i=0\n    local max_arr=()\n\
    \    local max_arr_len=0\n    local max_arr_index=0\n    local max_arr_index_tmp=0\n\
    \    local max_arr_index_tmp_len=0\n    local max_arr_index_tmp_len_max=0\n  \
    \  local max_arr_index_tmp_len_max_index=0\n    local max_arr_index_tmp_len_max_index_tmp=0\n\
    \    local max_arr_index_tmp_len_max_index_tmp_len=0\n    local max_arr_index_tmp_len_max_index_tmp_len_max=0\n\
    \    local max_arr_index_tmp_len_max_index_tmp_len_max_index=0\n    local max_arr_index_tmp_len_max_index_tmp_len_max_index_tmp=0\n\
    \    local max_arr_index_tmp_len_max_index_tmp_len_max_index_tmp_len=0\n    local\
    \ max_arr_index_tmp_len_max_index_tmp_len_max_index_tmp_len_max=0\n    local max_arr_index_tmp_len_max_index_tmp_len_max_index_tmp_len_max_index=0\n\
    \    local max_arr_index_tmp_len_max_index_tmp_len_max_index_tmp_len_max_index_tmp=0\n\
    \    local max_arr_index_tmp_len_max_index_tmp_len_max_index_tmp_len_max_index_tmp_len=0\n\
    \    local max_arr_index_tmp_len_max_index_tmp_len_max_index_tmp_len_max_index_tmp_len_max=0\n\
    \    local max_arr_index_tmp_len_max_index_tmp_len_max_index_tmp_len_max_index_tmp_len_max_index=0\n\
    \    local max_arr_index_tmp_len_max_index_tmp_len_max_index_tmp_len_max", " \
    \   local arr=\"$1\"\n    local k=\"$2\"\n    local max_arr=()\n    local max_arr_len=0\n\
    \    local arr_len=0\n    local i=0\n    local j=0\n    local tmp=0\n    local\
    \ tmp_str=''\n    local tmp_arr=()\n    local tmp_arr_len=0\n    local tmp_arr_str=''\n\
    \    local max_arr_str=''\n    local max_arr_str_len=0\n    local max_arr_str_len_tmp=0\n\
    \    local max_arr_str_len_tmp_str=''\n    local max_arr_str_len_tmp_str_len=0\n\
    \    local max_arr_str_len_tmp_str_len_str=''\n    local max_arr_str_len_tmp_str_len_str_len=0\n\
    \    local max_arr_str_len_tmp_str_len_str_len_str=''\n    local max_arr_str_len_tmp_str_len_str_len_str_len=0\n\
    \    local max_arr_str_len_tmp_str_len_str_len_str_len_str=''\n    local max_arr_str_len_tmp_str_len_str_len_str_len_str_len=0\n\
    \    local max_arr_str_len_tmp_str_len_str_len_str_len_str_len_str=''\n    local\
    \ max_arr_str_len_tmp_str_len_str_len_str_len_str_len_str_len=0\n    local max_arr_str_len_tmp_str_len_str_len_str_len_str_len_str_len_str=''\n\
    \    local max_arr_str_len_tmp_str_len_str_len_str_len_str_len_str_len_str_len=0\n\
    \    local max_arr_str_len_tmp_str_len_str_len_str_len_str_len_str_len_str_len_str=''\n\
    \    local max_arr_str_len_tmp_str_len", "    local arr=\"$1\"\n    local k=\"\
    $2\"\n    local arr_len=$(echo \"$arr\" | wc -w)\n    if [[ $arr_len -lt $k ]];\
    \ then\n        echo \"Invalid input: k is greater than the length of arr.\"\n\
    \        return 1\n    fi\n    local max_arr=()\n    local max_arr_len=0\n   \
    \ local i=0\n    while [[ $i -lt $arr_len ]]; do\n        local curr_num=$(echo\
    \ \"$arr\" | cut -d ' ' -f $((i+1)))\n        if [[ $max_arr_len -lt $k ]]; then\n\
    \            max_arr+=(\"$curr_num\")\n            max_arr_len=$((max_arr_len+1))\n\
    \        else\n            local min_num=$(echo \"${max_arr[@]}\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n            if [[ $curr_num -gt $min_num ]]; then\n\
    \                local min_num_idx=$(echo \"${max_arr[@]}\" | tr ' ' '\\n' | grep\
    \ -n \"$min_num\" | cut -d ':' -f 1)\n                max_arr[$((min_num_idx-1))]=\"\
    $curr_num\"\n            fi\n        fi\n        i=$((i+1))\n    done\n    echo\
    \ \"${max_arr[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '", "    local arr=\"\
    $1\"\n    local k=\"$2\"\n    local -a arr_max\n    local -a arr_sorted\n    local\
    \ -a arr_result\n    local i\n    local j\n    local max_index\n    local max_value\n\
    \    local -i arr_len\n    local -i arr_max_len\n    local -i arr_sorted_len\n\
    \    local -i arr_result_len\n    local -i arr_max_index\n    local -i arr_sorted_index\n\
    \    local -i arr_result_index\n    local -i arr_max_value\n    local -i arr_sorted_value\n\
    \    local -i arr_result_value\n    local -i arr_max_max_index\n    local -i arr_max_max_value\n\
    \    local -i arr_sorted_max_index\n    local -i arr_sorted_max_value\n    local\
    \ -i arr_result_max_index\n    local -i arr_result_max_value\n    local -i arr_max_max_index_value\n\
    \    local -i arr_sorted_max_index_value\n    local -i arr_result_max_index_value\n\
    \    local -i arr_max_max_value_value\n    local -i arr_sorted_max_value_value\n\
    \    local -i arr_result_max_value_value\n    local -i arr_max_max_value_index\n\
    \    local -i arr_sorted_max_value_index\n    local -i arr_result_max_value_index\n\
    \    local -i arr_max_max_value_index_value\n    local -i arr_sorted_max_value_index_value\n\
    \    local -i arr_result_max_value_index_value\n    local -i arr_max_max_index_value_value\n\
    \    local -i arr_sorted_max_index_value_value\n    local -i arr_result_max_index_value_value\n\
    \    local -i arr_max_max_index_value_value_value\n    local -i arr_sorted_max_index_value_value_value\n\
    \    local -i arr_result_max_index", "    local arr=$1\n    local k=$2\n    local\
    \ -a arr_sorted\n    local -a arr_max\n    local -i i\n    local -i j\n    local\
    \ -i len\n    local -i max_index\n    local -i max_value\n    local -i tmp\n \
    \   arr_sorted=($(echo $arr | tr \" \" \"\\n\" | sort -nr))\n    len=${#arr_sorted[@]}\n\
    \    for ((i=0; i<k; i++)); do\n        max_index=$i\n        max_value=${arr_sorted[$i]}\n\
    \        for ((j=i+1; j<len; j++)); do\n            tmp=${arr_sorted[$j]}\n  \
    \          if ((tmp > max_value)); then\n                max_index=$j\n      \
    \          max_value=$tmp\n            fi\n        done\n        arr_sorted[$i]=${arr_sorted[$max_index]}\n\
    \        arr_sorted[$max_index]=$max_value\n        arr_max[$i]=$max_value\n \
    \   done\n    echo ${arr_max[@]}", "    local arr=($1)\n    local k=$2\n    local\
    \ i=0\n    local j=0\n    local temp=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[i]} -lt\
    \ ${arr[j]} ]]; then\n                temp=${arr[i]}\n                arr[i]=${arr[j]}\n\
    \                arr[j]=$temp\n            fi\n        done\n    done\n    echo\
    \ ${arr[@]:0:$k}", "    arr=$1\n    k=$2\n    arr=($arr)\n    for ((i=0; i<$k;\
    \ i++)); do\n        max=${arr[0]}\n        for ((j=1; j<${#arr[@]}; j++)); do\n\
    \            if [[ ${arr[$j]} -gt $max ]]; then\n                max=${arr[$j]}\n\
    \            fi\n        done\n        echo -n \"\\\"$max\\\" \"\n        arr=(${arr[@]/$max})\n\
    \    done", "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=${#arr[@]}\n\
    \    local res=()\n    for ((i=0; i<k; i++)); do\n        local max_idx=0\n  \
    \      for ((j=1; j<arr_len-i; j++)); do\n            if [[ ${arr[j]} -gt ${arr[max_idx]}\
    \ ]]; then\n                max_idx=$j\n            fi\n        done\n       \
    \ res+=(${arr[max_idx]})\n        arr[max_idx]=${arr[arr_len-i-1]}\n    done\n\
    \    echo ${res[@]}", "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr=($arr)\n\
    \    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local tmp=0\n   \
    \ local res=()\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++));\
    \ do\n            if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n                tmp=${arr[i]}\n\
    \                arr[i]=${arr[j]}\n                arr[j]=$tmp\n            fi\n\
    \        done\n    done\n    for ((i=0; i<k; i++)); do\n        res[i]=${arr[i]}\n\
    \    done\n    echo ${res[@]}", "    local -n arr=$1\n    local k=$2\n    local\
    \ -a max_arr\n    local -a max_arr_index\n    local -a max_arr_index_sorted\n\
    \    local -a max_arr_sorted\n    local -a arr_sorted\n    local -a arr_index\n\
    \    local -a arr_index_sorted\n    local -a arr_sorted\n    local -a arr_sorted_index\n\
    \    local -a arr_sorted_index_sorted\n    local -a arr_sorted_sorted\n    local\
    \ -a arr_sorted_sorted_index\n    local -a arr_sorted_sorted_index_sorted\n  \
    \  local -a arr_sorted_sorted_sorted\n    local -a arr_sorted_sorted_sorted_index\n\
    \    local -a arr_sorted_sorted_sorted_index_sorted\n    local -a arr_sorted_sorted_sorted_sorted\n\
    \    local -a arr_sorted_sorted_sorted_sorted_index\n    local -a arr_sorted_sorted_sorted_sorted_index_sorted\n\
    \    local -a arr_sorted_sorted_sorted_sorted_sorted\n    local -a arr_sorted_sorted_sorted_sorted_sorted_index\n\
    \    local -a arr_sorted_sorted_sorted_sorted_sorted_index_sorted\n    local -a\
    \ arr_sorted_sorted_sorted_sorted_sorted_sorted\n    local -a arr_sorted_sorted_sorted_sorted_sorted_sorted_index\n\
    \    local -a arr_sorted_sorted_sorted_sorted_sorted_sorted_index_sorted\n   \
    \ local -a arr_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n    local -a\
    \ arr_sorted_sorted_sorted_sorted_sorted_sorted_sorted_index\n    local -a arr_sorted_sorted_sorted_sorted_sorted_sorted_sorted_index_sorted\n",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr=($arr)\n    local len=${#arr[@]}\n\
    \    local i=0\n    local j=0\n    local max=0\n    local max_index=0\n    local\
    \ result=()\n    for ((i=0; i<k; i++)); do\n        max=${arr[0]}\n        max_index=0\n\
    \        for ((j=1; j<len-i; j++)); do\n            if [[ ${arr[j]} -gt $max ]];\
    \ then\n                max=${arr[j]}\n                max_index=$j\n        \
    \    fi\n        done\n        result+=($max)\n        arr[$max_index]=${arr[$len-i-1]}\n\
    \    done\n    echo ${result[@]}", "    local -n _arr=$1\n    local _k=$2\n  \
    \  local _i _j _tmp\n    for ((_i=0; _i<_k; _i++)); do\n        for ((_j=_i+1;\
    \ _j<${#_arr[@]}; _j++)); do\n            if ((${_arr[_i]} < ${_arr[_j]})); then\n\
    \                _tmp=${_arr[_i]}\n                _arr[_i]=${_arr[_j]}\n    \
    \            _arr[_j]=$_tmp\n            fi\n        done\n    done\n    echo\
    \ \"${_arr[@]:0:_k}\"", "    local arr=\"$1\"\n    local k=\"$2\"\n    local -a\
    \ arr_copy=()\n    local -a result=()\n    local -i i=0\n    local -i j=0\n  \
    \  local -i len=0\n    local -i max=0\n    local -i max_index=0\n    local -i\
    \ temp=0\n    local -i temp_index=0\n    local -i arr_len=0\n    local -i arr_copy_len=0\n\
    \    local -i result_len=0\n    local -i result_index=0\n    local -i result_max=0\n\
    \    local -i result_max_index=0\n    local -i result_temp=0\n    local -i result_temp_index=0\n\
    \    # Convert string to array\n    IFS=' ' read -r -a arr <<< \"$arr\"\n    #\
    \ Get length of arr\n    arr_len=${#arr[@]}\n    # Copy arr to arr_copy\n    for\
    \ ((i=0; i<arr_len; i++)); do\n        arr_copy[i]=${arr[i]}\n    done\n    #\
    \ Get length of arr_copy\n    arr_copy_len=${#arr_copy[@]}\n    # Get length of\
    \ result\n    result_len=${#result[@]}\n    # Get max value in arr_copy\n    for\
    \ ((i=0; i<arr_copy_len; i++)); do\n        temp=${arr_copy[i]}\n        if ((temp\
    \ > max)); then\n            max=$temp\n            max_index=$i\n        fi\n\
    \    done\n    # Add max value to result\n    result[result_len]=$max\n    # Remove\
    \ max value from arr_copy\n    unset arr_copy[max_index]\n    # Get length of\
    \ result\n    result_len=${#result[@]}\n    # Get max value in arr_copy\n    for\
    \ ((i=0; i<arr_copy_len; i++)); do\n        temp=${arr_copy[i]}\n        if ((temp\
    \ > max)); then\n            max=$temp\n            max_index=$i\n        fi\n\
    \    done\n    # Add max value to", "    local -n arr=$1\n    local k=$2\n   \
    \ local max=()\n    local i=0\n    for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n\
    \    done\n    for ((i=k; i<${#arr[@]}; i++)); do\n        for ((j=0; j<k; j++));\
    \ do\n            if [[ ${arr[i]} -gt ${max[j]} ]]; then\n                max[j]=${arr[i]}\n\
    \                break\n            fi\n        done\n    done\n    echo ${max[@]}",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=$(echo \"$arr\" | wc\
    \ -w)\n    local max_arr=()\n    local max_arr_len=0\n    local num\n    local\
    \ i\n    local j\n    for num in $arr; do\n        if [[ $max_arr_len -lt $k ]];\
    \ then\n            max_arr+=(\"$num\")\n            max_arr_len=$((max_arr_len\
    \ + 1))\n        else\n            for i in $(seq 0 $(($max_arr_len - 1))); do\n\
    \                if [[ $num -gt ${max_arr[$i]} ]]; then\n                    for\
    \ j in $(seq $(($max_arr_len - 1)) -1 $i); do\n                        max_arr[$j]=\"\
    ${max_arr[$((j - 1))]}\"\n                    done\n                    max_arr[$i]=\"\
    $num\"\n                    break\n                fi\n            done\n    \
    \    fi\n    done\n    echo \"${max_arr[@]}\"", "    local -n arr=$1\n    local\
    \ k=$2\n    local -a max\n    local -a res\n    for ((i=0; i<k; i++)); do\n  \
    \      max[i]=${arr[i]}\n    done\n    for ((i=k; i<${#arr[@]}; i++)); do\n  \
    \      for ((j=0; j<k; j++)); do\n            if [[ ${arr[i]} -gt ${max[j]} ]];\
    \ then\n                max[j]=${arr[i]}\n                break\n            fi\n\
    \        done\n    done\n    for ((i=0; i<k; i++)); do\n        res[i]=\"\\\"\
    ${max[i]}\\\"\"\n    done\n    echo ${res[@]}", "    local -n arr=$1\n    local\
    \ k=$2\n    local -a max\n    local -a res\n    local i\n    local j\n    local\
    \ max_i\n    local max_j\n    local max_val\n    for ((i=0; i<k; i++)); do\n \
    \       max[i]=${arr[i]}\n    done\n    for ((i=k; i<${#arr[@]}; i++)); do\n \
    \       max_val=${max[0]}\n        max_i=0\n        max_j=0\n        for ((j=0;\
    \ j<k; j++)); do\n            if [[ ${max[j]} -gt $max_val ]]; then\n        \
    \        max_val=${max[j]}\n                max_i=$j\n                max_j=$j\n\
    \            fi\n        done\n        if [[ ${arr[i]} -gt $max_val ]]; then\n\
    \            max[max_i]=${arr[i]}\n        fi\n    done\n    for ((i=0; i<k; i++));\
    \ do\n        res[i]=\"\\\"${max[i]}\\\"\"\n    done\n    echo \"${res[@]}\"",
  "    local -n _arr=$1\n    local _k=$2\n    local _arr_len=${#_arr[@]}\n    local\
    \ _i=0\n    local _j=0\n    local _tmp=0\n    local _max=()\n    local _max_len=0\n\
    \    local _max_i=0\n    local _max_j=0\n    local _max_tmp=0\n    local _max_str=()\n\
    \    local _max_str_len=0\n    local _max_str_i=0\n    local _max_str_j=0\n  \
    \  local _max_str_tmp=0\n    if [[ $_arr_len -lt $_k ]]; then\n        echo \"\
    \\\"${_arr[@]}\\\"\"\n        return\n    fi\n    for ((_i=0; _i<_arr_len; _i++));\
    \ do\n        _tmp=${_arr[_i]}\n        _j=$_i\n        while [[ $_j -gt 0 &&\
    \ ${_arr[$((_j-1))]} -lt $_tmp ]]; do\n            _arr[$_j]=${_arr[$((_j-1))]}\n\
    \            _j=$((_j-1))\n        done\n        _arr[$_j]=$_tmp\n    done\n \
    \   for ((_i=0; _i<_k; _i++)); do\n        _max[$_i]=${_arr[$((_arr_len-1-_i))]}\n\
    \    done\n    _max_len=${#_max[@]}\n    for ((_i=0; _i<_max_len; _i++)); do\n\
    \        _max_tmp=${_max[_i]}\n        _max_j=$_i\n        while [[ $_max_j -gt\
    \ 0 && ${_max[$((_max_j-1))]} -lt $_max_tmp ]]; do\n            _max[$_max_j]=${_max[$((_max_j-1))]}\n\
    \            _max_j=$((_max_j-1))\n        done\n        _max[$_max_j]=$_max_tmp\n\
    \    done\n    for ((_i=", "    local -n arr=$1\n    local k=$2\n    local -a\
    \ max\n    for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n    done\n   \
    \ for ((i=k; i<${#arr[@]}; i++)); do\n        for ((j=0; j<k; j++)); do\n    \
    \        if [[ ${arr[i]} -gt ${max[j]} ]]; then\n                max[j]=${arr[i]}\n\
    \                break\n            fi\n        done\n    done\n    echo \"${max[@]}\"\
    \ | tr ' ' '\\n' | sort -nr | tr '\\n' ' '", "    local arr=\"$1\"\n    local\
    \ k=\"$2\"\n    local max_arr=()\n    local max_arr_len=0\n    for i in $arr;\
    \ do\n        if [[ $max_arr_len -lt $k ]]; then\n            max_arr+=($i)\n\
    \            max_arr_len=$(($max_arr_len + 1))\n        else\n            local\
    \ min_index=0\n            local min_value=${max_arr[0]}\n            for j in\
    \ $(seq 1 $(($max_arr_len - 1))); do\n                if [[ ${max_arr[$j]} -lt\
    \ $min_value ]]; then\n                    min_index=$j\n                    min_value=${max_arr[$j]}\n\
    \                fi\n            done\n            if [[ $i -gt $min_value ]];\
    \ then\n                max_arr[$min_index]=$i\n            fi\n        fi\n \
    \   done\n    echo ${max_arr[@]}", "    local -n _arr=$1\n    local _k=$2\n  \
    \  local _arr_len=${#_arr[@]}\n    local _max=()\n    local _max_len=0\n    local\
    \ _i=0\n    local _j=0\n    local _tmp=0\n    local _max_str=()\n    local _max_str_len=0\n\
    \    local _str=()\n    local _str_len=0\n    local _str_tmp=()\n    local _str_tmp_len=0\n\
    \    local _str_tmp_i=0\n    local _str_tmp_j=0\n    local _str_tmp_k=0\n    local\
    \ _str_tmp_l=0\n    local _str_tmp_m=0\n    local _str_tmp_n=0\n    local _str_tmp_o=0\n\
    \    local _str_tmp_p=0\n    local _str_tmp_q=0\n    local _str_tmp_r=0\n    local\
    \ _str_tmp_s=0\n    local _str_tmp_t=0\n    local _str_tmp_u=0\n    local _str_tmp_v=0\n\
    \    local _str_tmp_w=0\n    local _str_tmp_x=0\n    local _str_tmp_y=0\n    local\
    \ _str_tmp_z=0\n    local _str_tmp_aa=0\n    local _str_tmp_ab=0\n    local _str_tmp_ac=0\n\
    \    local _str_tmp_ad=0\n    local _str_tmp_ae=0\n    local _str_tmp_af=0\n \
    \   local _str_tmp_ag=0\n    local _str_tmp_ah=0\n    local _str_tmp_ai=0\n  \
    \  local _str_tmp_aj=0\n    local _str_tmp_ak=0\n    local _str_tmp_al=0\n   \
    \ local _str_tmp_am=0\n    local _str_tmp_an=0\n    local _str_tmp_ao=0\n    local\
    \ _str_tmp_ap=0\n    local _str_tmp_aq=0\n    local", "    local -n _arr=$1\n\
    \    local _k=$2\n    local _max=()\n    local _i=0\n    local _j=0\n    local\
    \ _tmp=0\n    for _i in ${_arr[@]}; do\n        if [ ${#_max[@]} -lt $_k ]; then\n\
    \            _max+=($_i)\n        else\n            for _j in ${_max[@]}; do\n\
    \                if [ $_i -gt $_j ]; then\n                    _tmp=$_j\n    \
    \                _j=$_i\n                    _i=$_tmp\n                fi\n  \
    \          done\n            _max[0]=$_i\n        fi\n    done\n    echo ${_max[@]}",
  "    local -n arr=\"$1\"\n    local k=\"$2\"\n    local -a result\n    local -a\
    \ tmp\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local\
    \ -i max=0\n    local -i max_index=0\n    local -i tmp_len=0\n    local -i tmp_max=0\n\
    \    local -i tmp_max_index=0\n    local -i tmp_index=0\n    local -i index=0\n\
    \    local -i count=0\n    local -i tmp_count=0\n    local -i tmp_i=0\n    local\
    \ -i tmp_j=0\n    local -i tmp_len_i=0\n    local -i tmp_len_j=0\n    local -i\
    \ tmp_index_i=0\n    local -i tmp_index_j=0\n    local -i tmp_count_i=0\n    local\
    \ -i tmp_count_j=0\n    local -i tmp_max_i=0\n    local -i tmp_max_j=0\n    local\
    \ -i tmp_max_index_i=0\n    local -i tmp_max_index_j=0\n    local -i tmp_i_i=0\n\
    \    local -i tmp_i_j=0\n    local -i tmp_j_i=0\n    local -i tmp_j_j=0\n    local\
    \ -i tmp_len_i_i=0\n    local -i tmp_len_i_j=0\n    local -i tmp_len_j_i=0\n \
    \   local -i tmp_len_j_j=0\n    local -i tmp_index_i_i=0\n    local -i tmp_index_i_j=0\n\
    \    local -i tmp_index_j_i=0\n    local -i tmp_index_j_j=0\n    local -i tmp_count_i_i=0\n\
    \    local -i tmp_count_i_j=0\n    local -i tmp_count_j_i=0\n    local -i tmp_count_j_j=0\n\
    \    local -i tmp_", "    local -n arr=$1\n    local k=$2\n    local -a result\n\
    \    local -a max\n    local i\n    local j\n    local len\n    local max_len\n\
    \    local max_index\n    local max_value\n    local value\n    local -a arr_copy\n\
    \    arr_copy=(\"${arr[@]}\")\n    len=${#arr_copy[@]}\n    max_len=${#max[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        value=${arr_copy[$i]}\n        if ((max_len\
    \ < k)); then\n            max+=($value)\n            max_len=${#max[@]}\n   \
    \     else\n            max_index=0\n            max_value=${max[0]}\n       \
    \     for ((j=1; j<max_len; j++)); do\n                if ((max_value < ${max[$j]}));\
    \ then\n                    max_index=$j\n                    max_value=${max[$j]}\n\
    \                fi\n            done\n            if ((value > max_value)); then\n\
    \                max[$max_index]=$value\n            fi\n        fi\n    done\n\
    \    for ((i=0; i<k; i++)); do\n        result+=($(printf '\"%s\"' \"${max[$i]}\"\
    ))\n    done\n    echo \"${result[@]}\"", "    local -n arr=$1\n    local k=$2\n\
    \    local -a result\n    local -a sorted\n    local i\n    local j\n    local\
    \ max\n    local max_index\n    for ((i=0; i<k; i++)); do\n        max=${arr[0]}\n\
    \        max_index=0\n        for ((j=1; j<${#arr[@]}; j++)); do\n           \
    \ if [[ ${arr[j]} -gt $max ]]; then\n                max=${arr[j]}\n         \
    \       max_index=$j\n            fi\n        done\n        result+=($max)\n \
    \       unset arr[$max_index]\n    done\n    echo \"${result[@]}\"", "    local\
    \ arr=\"$1\"\n    local k=\"$2\"\n    local -a arr_sorted\n    local -a arr_max\n\
    \    local i\n    local j\n\n    # Sort the array in descending order.\n    arr_sorted=($(echo\
    \ \"$arr\" | tr ' ' '\\n' | sort -nr))\n\n    # Get the first k elements.\n  \
    \  for ((i=0; i<k; i++)); do\n        arr_max[i]=${arr_sorted[i]}\n    done\n\n\
    \    # Print the array.\n    for ((i=0; i<k; i++)); do\n        printf '\"%s\"\
    ' \"${arr_max[i]}\"\n        if ((i < k-1)); then\n            printf ','\n  \
    \      fi\n    done\n    printf '\\n'", "    local arr=$1\n    local k=$2\n  \
    \  local arr_len=$(echo $arr | wc -w)\n    local max_arr=()\n    local max_arr_len=0\n\
    \    local max_arr_idx=0\n    local max_arr_idx_len=0\n    local max_arr_idx_len_idx=0\n\
    \    local max_arr_idx_len_idx_val=0\n    local max_arr_idx_len_idx_val_len=0\n\
    \    local max_arr_idx_len_idx_val_len_idx=0\n    local max_arr_idx_len_idx_val_len_idx_val=0\n\
    \    local max_arr_idx_len_idx_val_len_idx_val_len=0\n    local max_arr_idx_len_idx_val_len_idx_val_len_idx=0\n\
    \    local max_arr_idx_len_idx_val_len_idx_val_len_idx_val=0\n    local max_arr_idx_len_idx_val_len_idx_val_len_idx_val_len=0\n\
    \    local max_arr_idx_len_idx_val_len_idx_val_len_idx_val_len_idx=0\n    local\
    \ max_arr_idx_len_idx_val_len_idx_val_len_idx_val_len_idx_val=0\n    local max_arr_idx_len_idx_val_len_idx_val_len_idx_val_len_idx_val_len=0\n\
    \    local max_arr_idx_len_idx_val_len_idx_val_len_idx_val_len_idx_val_len_idx=0\n\
    \    local max_arr_idx_len_idx_val_len_idx_val_len_idx_val_len_idx_val_len_idx_val=0\n\
    \    local max_arr_idx", "    local arr=$1\n    local k=$2\n    local arr=($arr)\n\
    \    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local tmp=0\n   \
    \ for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n       \
    \     if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n                tmp=${arr[i]}\n\
    \                arr[i]=${arr[j]}\n                arr[j]=$tmp\n            fi\n\
    \        done\n    done\n    for ((i=0; i<k; i++)); do\n        echo -n \"\\\"\
    ${arr[i]}\\\" \"\n    done\n    echo", "    local -n arr=\"$1\"\n    local k=\"\
    $2\"\n    local -a res=()\n    local -a temp=()\n    local -a temp_res=()\n  \
    \  local -a temp_res_str=()\n    local -a temp_str=()\n    local -a temp_str_res=()\n\
    \    local -a temp_str_res_str=()\n    local -a temp_str_str=()\n    local -a\
    \ temp_str_str_res=()\n    local -a temp_str_str_res_str=()\n    local -a temp_str_str_str=()\n\
    \    local -a temp_str_str_str_res=()\n    local -a temp_str_str_str_res_str=()\n\
    \    local -a temp_str_str_str_str=()\n    local -a temp_str_str_str_str_res=()\n\
    \    local -a temp_str_str_str_str_res_str=()\n    local -a temp_str_str_str_str_str=()\n\
    \    local -a temp_str_str_str_str_str_res=()\n    local -a temp_str_str_str_str_str_res_str=()\n\
    \    local -a temp_str_str_str_str_str_str=()\n    local -a temp_str_str_str_str_str_str_res=()\n\
    \    local -a temp_str_str_str_str_str_str_res_str=()\n    local -a temp_str_str_str_str_str_str_str=()\n\
    \    local -a temp_str_str_str_str_str_str_str_res=()\n    local -a temp_str_str_str_str_str_str_str_res_str=()\n\
    \    local -a temp_str_str_str_str_str_str_str_str=()\n    local -a temp_str_str_str_str_str_str_str_str_res=()\n\
    \    local -a temp_str_str_str_str_str_str_str_str_res_str=()", "    local arr=\"\
    $1\"\n    local k=\"$2\"\n    local -a arr_sorted\n    local -a arr_max\n    local\
    \ i\n    local j\n    local len\n    local max\n    local max_index\n    local\
    \ max_index_tmp\n    local tmp\n\n    # Sort the array\n    arr_sorted=($(echo\
    \ \"$arr\" | tr ' ' '\\n' | sort -n))\n    len=${#arr_sorted[@]}\n    # Get the\
    \ maximum k numbers\n    for ((i=0; i<k; i++)); do\n        max=${arr_sorted[0]}\n\
    \        max_index=0\n        for ((j=1; j<len-i; j++)); do\n            if [[\
    \ ${arr_sorted[j]} -gt $max ]]; then\n                max=${arr_sorted[j]}\n \
    \               max_index=$j\n            fi\n        done\n        arr_max[i]=$max\n\
    \        # Swap the maximum number to the end of the array\n        tmp=${arr_sorted[len-i-1]}\n\
    \        arr_sorted[len-i-1]=$max\n        arr_sorted[max_index]=$tmp\n    done\n\
    \    echo \"${arr_max[@]}\"", "    local -n _arr=$1\n    local _k=$2\n    local\
    \ _arr_len=${#_arr[@]}\n    local _max_arr=()\n    local _max_arr_len=0\n    local\
    \ _max_arr_len_max=$((_k > _arr_len ? _arr_len : _k))\n    local _max_arr_len_min=$((_max_arr_len_max\
    \ - 1))\n    local _max_arr_len_mid=$((_max_arr_len_max / 2))\n    local _max_arr_len_mid_min=$((_max_arr_len_mid\
    \ - 1))\n    local _max_arr_len_mid_max=$((_max_arr_len_mid + 1))\n    local _max_arr_len_mid_min_max=$((_max_arr_len_mid_min\
    \ + 1))\n    local _max_arr_len_mid_max_min=$((_max_arr_len_mid_max - 1))\n  \
    \  local _max_arr_len_mid_min_max_mid=$((_max_arr_len_mid_min_max / 2))\n    local\
    \ _max_arr_len_mid_min_max_mid_min=$((_max_arr_len_mid_min_max_mid - 1))\n   \
    \ local _max_arr_len_mid_min_max_mid_max=$((_max_arr_len_mid_min_max_mid + 1))\n\
    \    local _max_arr_len_mid_min_max_mid_min_max=$((_max_arr_len_mid_min_max_mid_min\
    \ + 1))\n    local _max_arr_len_mid_min_max_mid_max_min=$((_max_arr_len_mid_min_max_mid_max\
    \ - 1))\n    local _max_arr_len_mid_min_max_mid_min_max_mid=$((_max_arr_len_mid_min_max_mid_min_max\
    \ / 2))\n    local _max_arr_len_mid_min_max_mid_min_max_mid_min=$((_max_arr_",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local max_arr=()\n    local max_arr_len=0\n\
    \    local max_arr_idx=0\n    local max_arr_len_idx=0\n    local max_arr_len_idx_val=0\n\
    \    local max_arr_len_idx_val_idx=0\n    local max_arr_len_idx_val_idx_val=0\n\
    \    local max_arr_len_idx_val_idx_val_idx=0\n    local max_arr_len_idx_val_idx_val_idx_val=0\n\
    \    local max_arr_len_idx_val_idx_val_idx_val_idx=0\n    local max_arr_len_idx_val_idx_val_idx_val_idx_val=0\n\
    \    local max_arr_len_idx_val_idx_val_idx_val_idx_val_idx=0\n    local max_arr_len_idx_val_idx_val_idx_val_idx_val_idx_val=0\n\
    \    local max_arr_len_idx_val_idx_val_idx_val_idx_val_idx_val_idx=0\n    local\
    \ max_arr_len_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val=0\n    local max_arr_len_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx=0\n\
    \    local max_arr_len_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val=0\n\
    \    local max_arr_len_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx=0\n\
    \    local max_arr_len_idx_val", "    local arr=$1\n    local k=$2\n    local\
    \ res=()\n    local i=0\n    while [ $i -lt $k ]; do\n        local max=${arr[0]}\n\
    \        local max_i=0\n        local j=0\n        while [ $j -lt ${#arr[@]} ];\
    \ do\n            if [ ${arr[$j]} -gt $max ]; then\n                max=${arr[$j]}\n\
    \                max_i=$j\n            fi\n            j=$((j+1))\n        done\n\
    \        res+=(\"$max\")\n        unset arr[$max_i]\n        i=$((i+1))\n    done\n\
    \    echo \"${res[@]}\"", "    local arr=$1\n    local k=$2\n    local arr_len=$(echo\
    \ $arr | wc -w)\n    if [[ $k -gt $arr_len ]]; then\n        echo \"Error: k must\
    \ be less than or equal to the length of arr.\"\n        return 1\n    fi\n  \
    \  local arr_sorted=$(echo $arr | tr \" \" \"\\n\" | sort -nr | tr \"\\n\" \"\
    \ \")\n    local arr_max=$(echo $arr_sorted | cut -d \" \" -f 1-$k)\n    echo\
    \ \"[$(echo $arr_max | tr \" \" \", \")]\"", "    local -n arr=$1\n    local k=$2\n\
    \    local -a result\n    for ((i=0; i<k; i++)); do\n        local max=${arr[0]}\n\
    \        for ((j=1; j<${#arr[@]}; j++)); do\n            if ((${arr[j]} > max));\
    \ then\n                max=${arr[j]}\n            fi\n        done\n        result+=(\"\
    $max\")\n        arr=(${arr[@]/$max})\n    done\n    echo \"${result[@]}\"", " \
    \   local -n arr=$1\n    local k=$2\n    local -a result\n    local -a sorted\n\
    \    local -a max\n    local i\n    local j\n    local max_index\n    local max_value\n\
    \    for i in ${arr[@]}; do\n        sorted+=($i)\n    done\n    sorted=($(printf\
    \ \"%s\\n\" \"${sorted[@]}\" | sort -n))\n    for ((i=0; i<k; i++)); do\n    \
    \    max+=(${sorted[-1]})\n        sorted=(${sorted[@]::${#sorted[@]}-1})\n  \
    \  done\n    for i in ${max[@]}; do\n        result+=($i)\n    done\n    echo\
    \ ${result[@]}", "    local -n arr=$1\n    local k=$2\n    local -a result\n \
    \   local -a sorted\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        sorted[i]=${arr[i]}\n    done\n    for\
    \ ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n           \
    \ if ((sorted[i] < sorted[j])); then\n                local tmp=${sorted[i]}\n\
    \                sorted[i]=${sorted[j]}\n                sorted[j]=$tmp\n    \
    \        fi\n        done\n    done\n    for ((i=0; i<k; i++)); do\n        result[i]=${sorted[i]}\n\
    \    done\n    echo ${result[@]}", "    local -n arr=$1\n    local k=$2\n    local\
    \ -a res=()\n    for i in ${arr[@]}; do\n        if [[ ${#res[@]} -lt $k ]]; then\n\
    \            res+=($i)\n        else\n            for j in ${!res[@]}; do\n  \
    \              if [[ $i -gt ${res[$j]} ]]; then\n                    res[$j]=$i\n\
    \                    break\n                fi\n            done\n        fi\n\
    \    done\n    echo ${res[@]}", "    local -n _arr=$1\n    local _k=$2\n    local\
    \ _arr_len=${#_arr[@]}\n    local _i=0\n    local _j=0\n    local _tmp=0\n   \
    \ local _max=0\n    local _max_index=0\n    local _result=()\n    for ((_i=0;\
    \ _i<_k; _i++)); do\n        _max=${_arr[0]}\n        _max_index=0\n        for\
    \ ((_j=1; _j<_arr_len; _j++)); do\n            if [[ ${_arr[$_j]} -gt $_max ]];\
    \ then\n                _max=${_arr[$_j]}\n                _max_index=$_j\n  \
    \          fi\n        done\n        _result[$_i]=$_max\n        _arr[$_max_index]=$((-1\
    \ * $_max))\n    done\n    echo ${_result[@]}", "    local arr=\"$1\"\n    local\
    \ k=\"$2\"\n    local max_arr=()\n    local max_num=0\n    local max_idx=0\n \
    \   local i=0\n    local j=0\n    local len=0\n    local tmp=0\n    local result=()\n\
    \    for i in $arr; do\n        max_arr+=(\"$i\")\n    done\n    len=${#max_arr[@]}\n\
    \    for ((i=0; i<k; i++)); do\n        for ((j=i; j<len; j++)); do\n        \
    \    if [[ ${max_arr[j]} -gt $max_num ]]; then\n                max_num=${max_arr[j]}\n\
    \                max_idx=$j\n            fi\n        done\n        tmp=${max_arr[i]}\n\
    \        max_arr[i]=${max_arr[max_idx]}\n        max_arr[max_idx]=$tmp\n     \
    \   max_num=0\n        max_idx=0\n    done\n    for ((i=0; i<k; i++)); do\n  \
    \      result+=(\"\\\"${max_arr[i]}\\\"\")\n    done\n    echo ${result[@]}",
  "    local -n __arr=$1\n    local k=$2\n    local -a arr=(\"${__arr[@]}\")\n   \
    \ local -a res\n    local -a tmp\n    local i\n    local j\n    local len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        tmp[i]=${arr[i]}\n    done\n    for\
    \ ((i=0; i<k; i++)); do\n        for ((j=0; j<len-i-1; j++)); do\n           \
    \ if [[ ${tmp[j]} -lt ${tmp[j+1]} ]]; then\n                tmp[j]=${tmp[j+1]}\n\
    \                tmp[j+1]=${arr[j]}\n            fi\n        done\n        res[i]=${tmp[len-i-1]}\n\
    \    done\n    echo \"${res[@]}\"", "    local arr=\"$1\"\n    local k=\"$2\"\n\
    \    local arr_len=\"$(echo \"$arr\" | wc -w)\"\n    local max_arr=()\n    local\
    \ max_arr_len=0\n    local arr_i=0\n    local max_arr_i=0\n    local max_arr_j=0\n\
    \    local max_arr_k=0\n    local max_arr_k_val=0\n    local max_arr_k_val_i=0\n\
    \    local max_arr_k_val_j=0\n    local max_arr_k_val_k=0\n    local max_arr_k_val_k_val=0\n\
    \    local max_arr_k_val_k_val_i=0\n    local max_arr_k_val_k_val_j=0\n    local\
    \ max_arr_k_val_k_val_k=0\n    local max_arr_k_val_k_val_k_val=0\n    local max_arr_k_val_k_val_k_val_i=0\n\
    \    local max_arr_k_val_k_val_k_val_j=0\n    local max_arr_k_val_k_val_k_val_k=0\n\
    \    local max_arr_k_val_k_val_k_val_k_val=0\n    local max_arr_k_val_k_val_k_val_k_val_i=0\n\
    \    local max_arr_k_val_k_val_k_val_k_val_j=0\n    local max_arr_k_val_k_val_k_val_k_val_k=0\n\
    \    local max_arr_k_val_k_val_k_val_k_val_k_val=0\n    local max_arr_k_val_k_val_k_val_k_val_k_val_i=0\n\
    \    local max_arr_k_val_k_val_k_val_k_val_k_val_j=0\n    local max_arr_k_val_k_val_k_val_k_",
  "    local arr=$1\n    local k=$2\n    local res=()\n    for i in ${arr[@]}; do\n\
    \        res+=($i)\n    done\n    res=($(printf \"%s\\n\" \"${res[@]}\" | sort\
    \ -nr))\n    echo ${res[@]:0:$k}", "    local -n arr=$1\n    local k=$2\n    local\
    \ -a res\n    local i\n    for ((i=0; i<k; i++)); do\n        res[i]=${arr[i]}\n\
    \    done\n    for ((i=k; i<${#arr[@]}; i++)); do\n        local j\n        for\
    \ ((j=0; j<k; j++)); do\n            if [[ ${arr[i]} -gt ${res[j]} ]]; then\n\
    \                local tmp=${res[j]}\n                res[j]=${arr[i]}\n     \
    \           arr[i]=$tmp\n            fi\n        done\n    done\n    echo ${res[@]}",
  "    local -n arr=$1\n    local k=$2\n    local -a result\n    local -a max\n  \
    \  local -a min\n    local -a temp\n    local i\n    local j\n    local n\n  \
    \  local m\n    local t\n    for ((i=0; i<k; i++)); do\n        max[$i]=${arr[$i]}\n\
    \    done\n    for ((i=k; i<${#arr[@]}; i++)); do\n        for ((j=0; j<k; j++));\
    \ do\n            if ((${arr[$i]} > ${max[$j]})); then\n                temp=(\"\
    ${max[@]:$j}\")\n                max[$j]=${arr[$i]}\n                max=(\"${max[@]:0:$j}\"\
    \ \"${temp[@]}\")\n                break\n            fi\n        done\n    done\n\
    \    for ((i=0; i<k; i++)); do\n        min[$i]=${max[$i]}\n    done\n    for\
    \ ((i=k; i<${#max[@]}; i++)); do\n        for ((j=0; j<k; j++)); do\n        \
    \    if ((${max[$i]} < ${min[$j]})); then\n                temp=(\"${min[@]:$j}\"\
    )\n                min[$j]=${max[$i]}\n                min=(\"${min[@]:0:$j}\"\
    \ \"${temp[@]}\")\n                break\n            fi\n        done\n    done\n\
    \    for ((i=0; i<k; i++)); do\n        result[$i]=${min[$i]}\n    done\n    for\
    \ ((i=0; i<${#result[@]}; i++)); do\n        n=${result[$i]}\n        m=$i\n \
    \       for ((j=$i; j<${#result[@]}; j++)); do\n            if ((${result[$j]}\
    \ < $n)); then\n                n=${result[$j]}\n                m=$j\n      \
    \      fi\n        done\n        t=${result[$i]}\n        result[$i]=$n\n    \
    \    result[$m]=$t\n    done", "    local -n arr=$1\n    local k=$2\n    local\
    \ -a res\n    local -a tmp\n    for i in ${arr[@]}; do\n        tmp+=($i)\n  \
    \  done\n    for ((i=0; i<k; i++)); do\n        max=${tmp[0]}\n        for j in\
    \ ${tmp[@]}; do\n            if [[ $j -gt $max ]]; then\n                max=$j\n\
    \            fi\n        done\n        res+=($max)\n        tmp=(${tmp[@]/$max})\n\
    \    done\n    echo ${res[@]}", "    local -n _arr=$1\n    local _k=$2\n    local\
    \ _max_arr=()\n    local _max_arr_len=0\n    local _max_arr_idx=0\n    local _max_arr_idx_tmp=0\n\
    \    local _max_arr_len_tmp=0\n    local _max_arr_tmp=()\n    local _max_arr_tmp_len=0\n\
    \    local _max_arr_tmp_idx=0\n    local _max_arr_tmp_idx_tmp=0\n    local _max_arr_tmp_len_tmp=0\n\
    \    local _max_arr_tmp_tmp=()\n    local _max_arr_tmp_tmp_len=0\n    local _max_arr_tmp_tmp_idx=0\n\
    \    local _max_arr_tmp_tmp_idx_tmp=0\n    local _max_arr_tmp_tmp_len_tmp=0\n\
    \    local _max_arr_tmp_tmp_tmp=()\n    local _max_arr_tmp_tmp_tmp_len=0\n   \
    \ local _max_arr_tmp_tmp_tmp_idx=0\n    local _max_arr_tmp_tmp_tmp_idx_tmp=0\n\
    \    local _max_arr_tmp_tmp_tmp_len_tmp=0\n    local _max_arr_tmp_tmp_tmp_tmp=()\n\
    \    local _max_arr_tmp_tmp_tmp_tmp_len=0\n    local _max_arr_tmp_tmp_tmp_tmp_idx=0\n\
    \    local _max_arr_tmp_tmp_tmp_tmp_idx_tmp=0\n    local _max_arr_tmp_tmp_tmp_tmp_len_tmp=0\n\
    \    local _max_arr_tmp_tmp_tmp_tmp_tmp=()\n    local _max_arr_tmp_tmp_tmp_tmp_tmp_len=0\n\
    \    local _max_arr_tmp_tmp_tmp_tmp_tmp_idx=0\n    local _max_arr_tmp_tmp_tmp_tmp_tmp_idx_tmp=0\n\
    \    local _max_arr_tmp_tmp_tmp_tmp", "    local arr=$1\n    local k=$2\n    local\
    \ -a arr_sorted\n    local -a arr_sorted_k\n    local -a arr_sorted_k_str\n  \
    \  local i\n    local j\n    local len\n    local len_k\n    local temp\n    arr_sorted=($(echo\
    \ $arr | tr ' ' '\\n' | sort -n))\n    len=${#arr_sorted[@]}\n    len_k=$((len\
    \ - k))\n    for ((i=0; i<len_k; i++)); do\n        unset arr_sorted[i]\n    done\n\
    \    arr_sorted_k=(${arr_sorted[@]})\n    len_k=${#arr_sorted_k[@]}\n    for ((i=0;\
    \ i<len_k; i++)); do\n        arr_sorted_k_str[i]=\"\\\"${arr_sorted_k[i]}\\\"\
    \"\n    done\n    echo ${arr_sorted_k_str[@]}", "    local arr=\"$1\"\n    local\
    \ k=\"$2\"\n    local -a arr_sorted\n    local -a arr_max\n    local -i i=0\n\
    \    local -i j=0\n    local -i n=0\n    local -i m=0\n    local -i len=0\n  \
    \  local -i len_max=0\n    local -i len_sorted=0\n    local -i len_arr=0\n   \
    \ local -i len_arr_max=0\n    local -i len_arr_sorted=0\n    local -i len_arr_sorted_max=0\n\
    \    local -i len_arr_sorted_max_max=0\n    local -i len_arr_sorted_max_max_max=0\n\
    \    local -i len_arr_sorted_max_max_max_max=0\n    local -i len_arr_sorted_max_max_max_max_max=0\n\
    \    local -i len_arr_sorted_max_max_max_max_max_max=0\n    local -i len_arr_sorted_max_max_max_max_max_max_max=0\n\
    \    local -i len_arr_sorted_max_max_max_max_max_max_max_max=0\n    local -i len_arr_sorted_max_max_max_max_max_max_max_max_max=0\n\
    \    local -i len_arr_sorted_max_max_max_max_max_max_max_max_max_max=0\n    local\
    \ -i len_arr_sorted_max_max_max_max_max_max_max_max_max_max_max=0\n    local -i\
    \ len_arr_sorted_max_max_max_max_max_max_max_max_max_max_max_max=0\n    local\
    \ -i len_arr_sorted_max_max_max_max_max_max_max_max_max_max_max_max_max=0\n  \
    \  local -i len_arr_sorted_max_max_max_max_max_max_max_max_max_max_", "    local\
    \ -n arr=$1\n    local k=$2\n    local -a res\n    for ((i=0; i<k; i++)); do\n\
    \        local max=-1000\n        local idx=-1\n        for ((j=0; j<${#arr[@]};\
    \ j++)); do\n            if ((arr[j] > max)); then\n                max=${arr[j]}\n\
    \                idx=$j\n            fi\n        done\n        res[i]=$max\n \
    \       unset arr[idx]\n    done\n    echo ${res[@]}", "    local -n arr=$1\n\
    \    local k=$2\n    local -a res\n    local -a max\n    local -a min\n    local\
    \ i\n    local j\n    local len\n    local len_max\n    local len_min\n    local\
    \ tmp\n    local tmp_max\n    local tmp_min\n    local tmp_res\n    local tmp_res_max\n\
    \    local tmp_res_min\n    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]];\
    \ then\n            max+=(\"$i\")\n        else\n            min+=(\"$i\")\n \
    \       fi\n    done\n    len=${#arr[@]}\n    len_max=${#max[@]}\n    len_min=${#min[@]}\n\
    \    if [[ $len_max -eq 0 ]]; then\n        for ((i=0; i<k; i++)); do\n      \
    \      res+=(\"${min[$((len_min-i-1))]}\")\n        done\n    elif [[ $len_min\
    \ -eq 0 ]]; then\n        for ((i=0; i<k; i++)); do\n            res+=(\"${max[$((len_max-i-1))]}\"\
    )\n        done\n    else\n        for ((i=0; i<k; i++)); do\n            tmp_max=${max[$((len_max-i-1))]}\n\
    \            tmp_min=${min[$((len_min-i-1))]}\n            if [[ $tmp_max -gt\
    \ $tmp_min ]]; then\n                res+=(\"$tmp_max\")\n            else\n \
    \               res+=(\"$tmp_min\")\n            fi\n        done\n    fi\n  \
    \  for ((i=0; i<k; i++)); do\n        tmp_res=${res[$i]}\n        for ((j=i+1;\
    \ j<k; j++)); do\n            tmp_res_max=${res[$j]}\n            if [[ $tmp_res\
    \ -lt $tmp_res_max ]]; then\n                res[$i]=$tmp_res_max\n          \
    \      res[$j]=$tmp_res\n                tmp_res=$tmp_res_max\n            fi\n\
    \        done", "    local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=\"\
    $(echo \"$arr\" | wc -w)\"\n    if [[ \"$arr_len\" -lt \"$k\" ]]; then\n     \
    \   echo \"[]\"\n        return\n    fi\n    local max_arr=()\n    local max_arr_len=0\n\
    \    local i=0\n    while [[ \"$i\" -lt \"$arr_len\" ]]; do\n        local num=\"\
    $(echo \"$arr\" | cut -d ' ' -f \"$((i + 1))\")\"\n        if [[ \"$max_arr_len\"\
    \ -lt \"$k\" ]]; then\n            max_arr+=(\"$num\")\n            max_arr_len=\"\
    $((max_arr_len + 1))\"\n        else\n            local j=0\n            while\
    \ [[ \"$j\" -lt \"$max_arr_len\" ]]; do\n                if [[ \"$num\" -gt \"\
    ${max_arr[$j]}\" ]]; then\n                    max_arr[$j]=\"$num\"\n        \
    \            break\n                fi\n                j=\"$((j + 1))\"\n   \
    \         done\n        fi\n        i=\"$((i + 1))\"\n    done\n    echo \"[$(echo\
    \ \"${max_arr[@]}\" | tr ' ' ',')]\"", "    local arr=$1\n    local k=$2\n   \
    \ local -a arr_sorted\n    local -a arr_max\n    local i\n    local j\n    local\
    \ max_index\n    local max_value\n    local len=${#arr[@]}\n    for ((i=0; i<len;\
    \ i++)); do\n        arr_sorted[i]=${arr[i]}\n    done\n    for ((i=0; i<k; i++));\
    \ do\n        max_index=$i\n        max_value=${arr_sorted[i]}\n        for ((j=i+1;\
    \ j<len; j++)); do\n            if [[ ${arr_sorted[j]} -gt $max_value ]]; then\n\
    \                max_index=$j\n                max_value=${arr_sorted[j]}\n  \
    \          fi\n        done\n        arr_sorted[max_index]=${arr_sorted[i]}\n\
    \        arr_sorted[i]=$max_value\n        arr_max[i]=$max_value\n    done\n \
    \   echo ${arr_max[@]}", "    local arr=$1\n    local k=$2\n    local result=()\n\
    \    local max=()\n    local i=0\n    local j=0\n    local len=0\n    local max_len=0\n\
    \    local max_index=0\n    local max_value=0\n    local value=0\n    for i in\
    \ ${arr[@]}; do\n        result[$len]=$i\n        len=$((len+1))\n    done\n \
    \   for ((i=0; i<k; i++)); do\n        max_value=${result[0]}\n        max_index=0\n\
    \        for ((j=1; j<len; j++)); do\n            value=${result[$j]}\n      \
    \      if [[ $value -gt $max_value ]]; then\n                max_value=$value\n\
    \                max_index=$j\n            fi\n        done\n        max[$max_len]=$max_value\n\
    \        max_len=$((max_len+1))\n        unset result[$max_index]\n        len=$((len-1))\n\
    \    done\n    echo ${max[@]}", "    local arr=\"$1\"\n    local k=\"$2\"\n  \
    \  local max_arr=()\n    local max_arr_len=0\n    local arr_len=0\n    local i=0\n\
    \    local j=0\n    local tmp=0\n    for i in $arr; do\n        if [ $max_arr_len\
    \ -lt $k ]; then\n            max_arr[$max_arr_len]=$i\n            max_arr_len=$((max_arr_len+1))\n\
    \        else\n            for j in $(seq 0 $((max_arr_len-1))); do\n        \
    \        if [ $i -gt ${max_arr[$j]} ]; then\n                    tmp=${max_arr[$j]}\n\
    \                    max_arr[$j]=$i\n                    i=$tmp\n            \
    \    fi\n            done\n        fi\n    done\n    echo ${max_arr[@]}", "  \
    \  local -n arr=$1\n    local k=$2\n    local -a result\n    local -a temp\n \
    \   local i\n    local j\n    local max\n    local max_index\n    for ((i=0; i<k;\
    \ i++)); do\n        max=${arr[0]}\n        max_index=0\n        for ((j=1; j<${#arr[@]};\
    \ j++)); do\n            if [[ ${arr[j]} -gt $max ]]; then\n                max=${arr[j]}\n\
    \                max_index=$j\n            fi\n        done\n        result+=($max)\n\
    \        temp=(\"${arr[@]}\")\n        unset temp[$max_index]\n        arr=(\"\
    ${temp[@]}\")\n    done\n    echo \"${result[@]}\"", "    local -n arr=$1\n  \
    \  local k=$2\n    local -a res\n    local -a tmp\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        tmp=(\"${tmp[@]}\" \"${arr[i]}\")\n        for ((j=${#tmp[@]}-1;\
    \ j>0; j--)); do\n            if [[ ${tmp[j]} -gt ${tmp[j-1]} ]]; then\n     \
    \           tmp[j]=${tmp[j-1]}\n                tmp[j-1]=${arr[i]}\n         \
    \   fi\n        done\n    done\n    for ((i=0; i<k; i++)); do\n        res=(\"\
    ${res[@]}\" \"${tmp[i]}\")\n    done\n    echo \"${res[@]}\"", "    local arr=($1)\n\
    \    local k=$2\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local\
    \ tmp=0\n    local result=()\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1;\
    \ j<len; j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n     \
    \           tmp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$tmp\n\
    \            fi\n        done\n    done\n    for ((i=0; i<k; i++)); do\n     \
    \   result[i]=${arr[i]}\n    done\n    echo ${result[@]}", "    local -n arr=$1\n\
    \    local k=$2\n    local -a max_arr=()\n    for i in ${arr[@]}; do\n       \
    \ if [[ ${#max_arr[@]} -lt $k ]]; then\n            max_arr+=($i)\n        else\n\
    \            for j in ${!max_arr[@]}; do\n                if [[ ${max_arr[$j]}\
    \ -lt $i ]]; then\n                    max_arr[$j]=$i\n                    break\n\
    \                fi\n            done\n        fi\n    done\n    echo ${max_arr[@]}\
    \ | tr ' ' '\\n' | sort -nr | tr '\\n' ' '", "    local arr=\"$1\"\n    local\
    \ k=\"$2\"\n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\n    if [[ \"$arr_len\"\
    \ -lt \"$k\" ]]; then\n        echo \"[]\"\n        return\n    fi\n    local\
    \ max_arr=()\n    local max_arr_len=0\n    local arr_i=0\n    while [[ \"$arr_i\"\
    \ -lt \"$arr_len\" ]]; do\n        local curr_num=\"$(echo \"$arr\" | cut -d \"\
    \ \" -f \"$((arr_i + 1))\")\"\n        if [[ \"$max_arr_len\" -lt \"$k\" ]]; then\n\
    \            max_arr+=(\"$curr_num\")\n            max_arr_len=\"$((max_arr_len\
    \ + 1))\"\n        else\n            local max_arr_i=0\n            local min_num=\"\
    $curr_num\"\n            local min_num_i=0\n            while [[ \"$max_arr_i\"\
    \ -lt \"$max_arr_len\" ]]; do\n                local curr_max_num=\"${max_arr[$max_arr_i]}\"\
    \n                if [[ \"$curr_max_num\" -lt \"$min_num\" ]]; then\n        \
    \            min_num=\"$curr_max_num\"\n                    min_num_i=\"$max_arr_i\"\
    \n                fi\n                max_arr_i=\"$((max_arr_i + 1))\"\n     \
    \       done\n            if [[ \"$curr_num\" -gt \"$min_num\" ]]; then\n    \
    \            max_arr[$min_num_i]=\"$curr_num\"\n            fi\n        fi\n \
    \       arr_i=\"$((arr_i + 1))\"\n    done\n    local max_arr_i=0\n    local max_arr_str=\"\
    [\"\n    while [[ \"$max_arr_i\" -lt \"$max_arr_len\" ]]; do\n        local curr_max_num=\"\
    ${max_arr[$max_arr_i]}\"\n        max_arr_str=\"$max_arr_str\\\"$curr_max_num\\\
    \"\"\n        if [[ \"$max_arr_", "    local -n arr=$1\n    local k=$2\n    local\
    \ -a res=()\n    local -a tmp=()\n    for i in ${arr[@]}; do\n        tmp+=($i)\n\
    \    done\n    for ((i=0; i<k; i++)); do\n        local max=${tmp[0]}\n      \
    \  local max_index=0\n        for ((j=1; j<${#tmp[@]}; j++)); do\n           \
    \ if [[ ${tmp[j]} -gt $max ]]; then\n                max=${tmp[j]}\n         \
    \       max_index=$j\n            fi\n        done\n        res+=($max)\n    \
    \    unset tmp[$max_index]\n        tmp=(\"${tmp[@]}\")\n    done\n    echo ${res[@]}",
  "    local arr=\"$1\"\n    local k=\"$2\"\n    local -a arr_max\n    local -a arr_max_sorted\n\
    \    local -a arr_max_sorted_k\n    local -a arr_max_sorted_k_str\n    local i\n\
    \    local j\n    local max\n    local max_index\n    local max_str\n    local\
    \ max_str_index\n    local str\n    local str_index\n    local str_len\n    local\
    \ str_len_index\n    local str_len_max\n    local str_len_max_index\n    local\
    \ str_len_max_str\n    local str_len_max_str_index\n    local str_len_max_str_len\n\
    \    local str_len_max_str_len_index\n    local str_len_max_str_len_max\n    local\
    \ str_len_max_str_len_max_index\n    local str_len_max_str_len_max_str\n    local\
    \ str_len_max_str_len_max_str_index\n    local str_len_max_str_len_max_str_len\n\
    \    local str_len_max_str_len_max_str_len_index\n    local str_len_max_str_len_max_str_len_max\n\
    \    local str_len_max_str_len_max_str_len_max_index\n    local str_len_max_str_len_max_str_len_max_str\n\
    \    local str_len_max_str_len_max_str_len_max_str_index\n    local str_len_max_str_len_max_str_len_max_str_len\n\
    \    local str_len_max_str_len_max_str_len_max_str_len_index\n    local str_len_max_str_len_max_str_len_max_str_len_max\n\
    \    local str_len_max_str_len_max_str_len_max_str_len_max_index\n    local str_len_max_str_len_max_str_len_max_str_len_max_str\n\
    \    local str_", "    local -n arr=$1\n    local k=$2\n    local -a arr_sorted\n\
    \    local -a arr_max\n    arr_sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort\
    \ -nr))\n    arr_max=(${arr_sorted[@]:0:$k})\n    echo \"${arr_max[@]}\"", " \
    \   local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=\"$(echo \"$arr\"\
    \ | wc -w)\"\n    local arr_max=\"$(echo \"$arr\" | sort -nr | head -n \"$k\"\
    )\"\n    local arr_max_len=\"$(echo \"$arr_max\" | wc -w)\"\n    local arr_max_len_diff=\"\
    $((arr_len - arr_max_len))\"\n    local arr_max_len_diff_arr=\"$(echo \"$arr\"\
    \ | sort -n | head -n \"$arr_max_len_diff\")\"\n    local arr_max_len_diff_arr_len=\"\
    $(echo \"$arr_max_len_diff_arr\" | wc -w)\"\n    local arr_max_len_diff_arr_len_diff=\"\
    $((arr_max_len - arr_max_len_diff_arr_len))\"\n    local arr_max_len_diff_arr_len_diff_arr=\"\
    $(echo \"$arr_max_len_diff_arr\" | sort -nr | head -n \"$arr_max_len_diff_arr_len_diff\"\
    )\"\n    local arr_max_len_diff_arr_len_diff_arr_len=\"$(echo \"$arr_max_len_diff_arr_len_diff_arr\"\
    \ | wc -w)\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff=\"$((arr_max_len_diff_arr_len\
    \ - arr_max_len_diff_arr_len_diff_arr_len))\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff_arr=\"\
    $(echo \"$arr_max_len_diff_arr_len_diff_arr\" | sort -n | head -n \"$arr_max_len_diff_arr_len_diff_arr_len_diff\"\
    )\"\n    local arr_max_len_diff_arr_len_diff_arr_len_diff_arr_len=\"$(echo \"\
    $arr_max_len_diff_arr_len_diff_arr_len_diff_arr\" | wc -w)\"\n", "    local arr=${1}\n\
    \    local k=${2}\n    local -a arr_sorted\n    local -a arr_max\n    local -a\
    \ arr_max_sorted\n    local i\n    local j\n    local max\n    local max_index\n\
    \    local len\n    arr_sorted=($(echo \"${arr}\" | tr ' ' '\\n' | sort -n))\n\
    \    len=${#arr_sorted[@]}\n    for ((i=0; i<k; i++)); do\n        max=${arr_sorted[0]}\n\
    \        max_index=0\n        for ((j=1; j<len; j++)); do\n            if [[ ${arr_sorted[j]}\
    \ -gt ${max} ]]; then\n                max=${arr_sorted[j]}\n                max_index=${j}\n\
    \            fi\n        done\n        arr_max+=(${max})\n        arr_sorted[${max_index}]=-1\n\
    \    done\n    arr_max_sorted=($(echo \"${arr_max[@]}\" | tr ' ' '\\n' | sort\
    \ -n))\n    echo \"${arr_max_sorted[@]}\"", "    local -n arr=$1\n    local k=$2\n\
    \    local -a res=()\n    local -a tmp=()\n    for i in ${arr[@]}; do\n      \
    \  tmp+=($i)\n    done\n    for ((i=0; i<k; i++)); do\n        local max=${tmp[0]}\n\
    \        local max_index=0\n        for ((j=1; j<${#tmp[@]}; j++)); do\n     \
    \       if (( ${tmp[j]} > max )); then\n                max=${tmp[j]}\n      \
    \          max_index=$j\n            fi\n        done\n        res+=($max)\n \
    \       unset tmp[$max_index]\n        tmp=(\"${tmp[@]}\")\n    done\n    echo\
    \ ${res[@]}", "    local arr=$1\n    local k=$2\n    local arr_len=$(echo $arr\
    \ | wc -w)\n    local max_arr=()\n    local max_num=0\n    local max_index=0\n\
    \    local i=0\n    local j=0\n    local temp=0\n    local temp_index=0\n    local\
    \ temp_arr=()\n    local temp_arr_len=0\n    local temp_arr_index=0\n    local\
    \ temp_arr_max=0\n    local temp_arr_max_index=0\n    local temp_arr_max_index_arr=()\n\
    \    local temp_arr_max_index_arr_len=0\n    local temp_arr_max_index_arr_index=0\n\
    \    local temp_arr_max_index_arr_max=0\n    local temp_arr_max_index_arr_max_index=0\n\
    \    local temp_arr_max_index_arr_max_index_arr=()\n    local temp_arr_max_index_arr_max_index_arr_len=0\n\
    \    local temp_arr_max_index_arr_max_index_arr_index=0\n    local temp_arr_max_index_arr_max_index_arr_max=0\n\
    \    local temp_arr_max_index_arr_max_index_arr_max_index=0\n    local temp_arr_max_index_arr_max_index_arr_max_index_arr=()\n\
    \    local temp_arr_max_index_arr_max_index_arr_max_index_arr_len=0\n    local\
    \ temp_arr_max_index_arr_max_index_arr_max_index_arr_index=0\n    local temp_arr_max_index_arr_max_index_arr_max_index_arr_max=0\n\
    \    local temp_arr_max_index_arr_max_index_arr_max_index_arr_max_index=0\n  \
    \  local temp_arr_max_index_arr_max_index_arr_max_index_arr_max_index_arr=()\n\
    \    local temp_arr_max_index_arr_max_index_arr_max_", "    local arr=\"$1\"\n\
    \    local k=\"$2\"\n    local -a arr_sorted\n    local -a arr_max\n    local\
    \ -i i\n    local -i j\n    local -i n\n    local -i m\n    local -i max\n   \
    \ local -i max_index\n    local -i max_count\n    local -i arr_len\n    local\
    \ -i arr_max_len\n    local -i arr_max_len_prev\n    local -i arr_max_len_next\n\
    \    local -i arr_max_len_diff\n    local -i arr_max_len_diff_prev\n    local\
    \ -i arr_max_len_diff_next\n    local -i arr_max_len_diff_min\n    local -i arr_max_len_diff_min_index\n\
    \    local -i arr_max_len_diff_min_index_prev\n    local -i arr_max_len_diff_min_index_next\n\
    \    local -i arr_max_len_diff_min_index_diff\n    local -i arr_max_len_diff_min_index_diff_prev\n\
    \    local -i arr_max_len_diff_min_index_diff_next\n    local -i arr_max_len_diff_min_index_diff_min\n\
    \    local -i arr_max_len_diff_min_index_diff_min_index\n    local -i arr_max_len_diff_min_index_diff_min_index_prev\n\
    \    local -i arr_max_len_diff_min_index_diff_min_index_next\n    local -i arr_max_len_diff_min_index_diff_min_index_diff\n\
    \    local -i arr_max_len_diff_min_index_diff_min_index_diff_prev\n    local -i\
    \ arr_max_len_diff_min_index_diff_min_index_diff_next\n    local -i arr_max_len_diff_min_index_diff_min_index_diff_min\n\
    \    local -i arr_max_len_diff_min_index_diff_min_index_diff_min_index\n    local\
    \ -i arr_", "    local -n arr=$1\n    local k=$2\n    local -a maxes=()\n    local\
    \ max\n    for ((i=0; i<k; i++)); do\n        max=${arr[0]}\n        for ((j=1;\
    \ j<${#arr[@]}; j++)); do\n            if [[ ${arr[j]} -gt $max ]]; then\n   \
    \             max=${arr[j]}\n            fi\n        done\n        maxes+=($max)\n\
    \        arr=(${arr[@]/$max})\n    done\n    echo ${maxes[@]}", "    arr=$1\n\
    \    k=$2\n    echo \"[$(echo $arr | tr ' ' '\\n' | sort -nr | head -n $k | tr\
    \ '\\n' ',' | sed 's/,$//')]\"", "    local -n arr=$1\n    local k=$2\n    local\
    \ -a res=()\n    local -a tmp=()\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        tmp[i]=${arr[i]}\n    done\n    for\
    \ ((i=0; i<k; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if\
    \ [[ ${tmp[i]} -lt ${tmp[j]} ]]; then\n                tmp[i]=${tmp[j]}\n    \
    \            tmp[j]=${tmp[i]}\n            fi\n        done\n        res[i]=${tmp[i]}\n\
    \    done\n    echo ${res[@]}", "    local arr=\"$1\"\n    local k=\"$2\"\n  \
    \  local -a arr_sorted\n    local -a arr_max\n    local -i i\n    local -i j\n\
    \    local -i n\n    local -i m\n    local -i arr_len\n    local -i arr_max_len\n\
    \    local -i arr_max_last_index\n    local -i arr_max_last_value\n    local -i\
    \ arr_max_last_value_index\n    local -i arr_max_last_value_index_new\n    local\
    \ -i arr_max_last_value_index_old\n    local -i arr_max_last_value_new\n    local\
    \ -i arr_max_last_value_old\n    local -i arr_sorted_last_index\n    local -i\
    \ arr_sorted_last_value\n    local -i arr_sorted_last_value_index\n    local -i\
    \ arr_sorted_last_value_index_new\n    local -i arr_sorted_last_value_index_old\n\
    \    local -i arr_sorted_last_value_new\n    local -i arr_sorted_last_value_old\n\
    \    local -i arr_sorted_len\n    local -i arr_sorted_max_index\n    local -i\
    \ arr_sorted_max_value\n    local -i arr_sorted_max_value_index\n    local -i\
    \ arr_sorted_max_value_index_new\n    local -i arr_sorted_max_value_index_old\n\
    \    local -i arr_sorted_max_value_new\n    local -i arr_sorted_max_value_old\n\
    \    local -i arr_sorted_max_value_new_index\n    local -i arr_sorted_max_value_old_index\n\
    \    local -i arr_sorted_max_value_new_index_new\n    local -i arr_sorted_max_value_new_index_old\n\
    \    local -i arr_sorted_max_value_old_index_new\n    local -i arr_sorted_max_value_old_index_old\n\
    \    local -i arr_s", "    local -n _arr=$1\n    local k=$2\n    local -a arr=(\"\
    ${_arr[@]}\")\n    local -a max=()\n    local -a res=()\n    for ((i=0; i<k; i++));\
    \ do\n        max[$i]=${arr[$i]}\n    done\n    for ((i=k; i<${#arr[@]}; i++));\
    \ do\n        for ((j=0; j<k; j++)); do\n            if [[ ${arr[$i]} -gt ${max[$j]}\
    \ ]]; then\n                max[$j]=${arr[$i]}\n                break\n      \
    \      fi\n        done\n    done\n    for ((i=0; i<k; i++)); do\n        res[$i]=\"\
    \\\"${max[$i]}\\\"\"\n    done\n    echo \"${res[@]}\"", "    local -n _arr=$1\n\
    \    local _k=$2\n    local _max=()\n    local _i=0\n    local _j=0\n    local\
    \ _len=${#_arr[@]}\n    for ((_i=0; _i<_len; _i++)); do\n        for ((_j=0; _j<_k;\
    \ _j++)); do\n            if [[ ${_arr[_i]} -gt ${_max[_j]} ]]; then\n       \
    \         _max=(${_max[@]:0:_j} ${_arr[_i]} ${_max[@]:_j})\n                break\n\
    \            fi\n        done\n    done\n    echo ${_max[@]:0:_k}", "    local\
    \ arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\
    \n    local max_arr=()\n    local max_arr_len=0\n    local max_arr_idx=0\n   \
    \ local max_arr_idx_len=0\n    local max_arr_idx_len_val=0\n    local max_arr_idx_len_val_idx=0\n\
    \    local max_arr_idx_len_val_idx_len=0\n    local max_arr_idx_len_val_idx_len_val=0\n\
    \    local max_arr_idx_len_val_idx_len_val_idx=0\n    local max_arr_idx_len_val_idx_len_val_idx_len=0\n\
    \    local max_arr_idx_len_val_idx_len_val_idx_len_val=0\n    local max_arr_idx_len_val_idx_len_val_idx_len_val_idx=0\n\
    \    local max_arr_idx_len_val_idx_len_val_idx_len_val_idx_len=0\n    local max_arr_idx_len_val_idx_len_val_idx_len_val_idx_len_val=0\n\
    \    local max_arr_idx_len_val_idx_len_val_idx_len_val_idx_len_val_idx=0\n   \
    \ local max_arr_idx_len_val_idx_len_val_idx_len_val_idx_len_val_idx_len=0\n  \
    \  local max_arr_idx_len_val_idx_len_val_idx_len_val_idx_len_val_idx_len_val=0\n\
    \    local max_arr_idx_len_val_idx_len_val_idx_len_val_idx_len_val_idx_len_val_idx=0\n\
    \    local max_arr_id", "    local arr=\"$1\"\n    local k=\"$2\"\n    local -a\
    \ arr_max\n    local -a arr_max_sorted\n    local -a arr_sorted\n    local -a\
    \ arr_sorted_k\n    local -a arr_sorted_k_str\n    local -a arr_str\n    local\
    \ -a arr_str_k\n    local -a arr_str_k_sorted\n    local -a arr_str_sorted\n \
    \   local -a arr_str_sorted_k\n    local -a arr_str_sorted_k_str\n    local -a\
    \ arr_str_sorted_k_str_sorted\n    local -a arr_str_sorted_k_str_sorted_k\n  \
    \  local -a arr_str_sorted_k_str_sorted_k_str\n    local -a arr_str_sorted_k_str_sorted_k_str_sorted\n\
    \    local -a arr_str_sorted_k_str_sorted_k_str_sorted_k\n    local -a arr_str_sorted_k_str_sorted_k_str_sorted_k_str\n\
    \    local -a arr_str_sorted_k_str_sorted_k_str_sorted_k_str_sorted\n    local\
    \ -a arr_str_sorted_k_str_sorted_k_str_sorted_k_str_sorted_k\n    local -a arr_str_sorted_k_str_sorted_k_str_sorted_k_str_sorted_k_str\n\
    \    local -a arr_str_sorted_k_str_sorted_k_str_sorted_k_str_sorted_k_str_sorted\n\
    \    local -a arr_str_sorted_k_str_sorted_k_str_sorted_k_str_sorted_k_str_sorted_k\n\
    \    local -a arr_str_sorted_k_str_sorted_k_str_sorted_k_str_sorted_k_str_sorted_k_str\n\
    \    local -a arr_str", "    local -n arr=$1\n    local k=$2\n    local -a result=()\n\
    \    local -a temp=()\n    for i in ${arr[@]}; do\n        temp+=($i)\n    done\n\
    \    for ((i=0; i<k; i++)); do\n        local max=${temp[0]}\n        local max_index=0\n\
    \        for ((j=1; j<${#temp[@]}; j++)); do\n            if [[ ${temp[j]} -gt\
    \ $max ]]; then\n                max=${temp[j]}\n                max_index=$j\n\
    \            fi\n        done\n        result+=($max)\n        unset temp[$max_index]\n\
    \        temp=(\"${temp[@]}\")\n    done\n    echo ${result[@]}", "    local arr=\"\
    $1\"\n    local k=\"$2\"\n    local arr_len=\"$(echo \"$arr\" | wc -w)\"\n   \
    \ if [[ \"$arr_len\" -lt \"$k\" ]]; then\n        echo \"Error: array length is\
    \ less than k\"\n        return 1\n    fi\n    local max_arr=()\n    local max_arr_len=0\n\
    \    local max_arr_len_max=\"$k\"\n    local max_arr_len_min=0\n    local max_arr_len_diff=\"\
    $((max_arr_len_max - max_arr_len_min))\"\n    local max_arr_len_mid=\"$((max_arr_len_min\
    \ + max_arr_len_diff / 2))\"\n    local max_arr_len_mid_prev=\"$max_arr_len_mid\"\
    \n    local max_arr_len_mid_next=\"$max_arr_len_mid\"\n    local max_arr_len_mid_prev_prev=\"\
    $max_arr_len_mid\"\n    local max_arr_len_mid_next_next=\"$max_arr_len_mid\"\n\
    \    local max_arr_len_mid_prev_prev_prev=\"$max_arr_len_mid\"\n    local max_arr_len_mid_next_next_next=\"\
    $max_arr_len_mid\"\n    local max_arr_len_mid_prev_prev_prev_prev=\"$max_arr_len_mid\"\
    \n    local max_arr_len_mid_next_next_next_next=\"$max_arr_len_mid\"\n    local\
    \ max_arr_len_mid_prev_prev_prev_prev_prev=\"$max_arr_len_mid\"\n    local max_arr_len_mid_next_next_next_next_next=\"\
    $max_arr_len_mid\"\n    local max_arr_len_mid_prev_prev_prev_prev_prev_prev=\"\
    $max_arr_len_mid\"\n    local max_arr_len_mid_next_next_next_next_next_next=\"\
    $max_arr_len_mid\"\n    local max_arr_len_mid", "    local arr=\"$1\"\n    local\
    \ k=\"$2\"\n    local max_arr=()\n    local max_arr_len=0\n    local i=0\n   \
    \ local j=0\n    local tmp=0\n    local tmp_str=''\n    for i in $arr; do\n  \
    \      if [[ $max_arr_len -lt $k ]]; then\n            max_arr[$max_arr_len]=$i\n\
    \            ((max_arr_len++))\n        else\n            for j in ${!max_arr[@]};\
    \ do\n                if [[ ${max_arr[$j]} -lt $i ]]; then\n                 \
    \   tmp=${max_arr[$j]}\n                    max_arr[$j]=$i\n                 \
    \   i=$tmp\n                fi\n            done\n        fi\n    done\n    for\
    \ i in ${!max_arr[@]}; do\n        tmp_str=\"$tmp_str '\\\"${max_arr[$i]}\\\"\
    '\"\n    done\n    echo \"[$tmp_str]\"", "    local arr=$1\n    local k=$2\n \
    \   local max_arr=()\n    local max_arr_len=0\n    local arr_len=0\n    local\
    \ arr_item=0\n    local i=0\n    local j=0\n    local max_arr_item=0\n    local\
    \ max_arr_item_index=0\n    local max_arr_item_index_tmp=0\n    local max_arr_item_tmp=0\n\
    \    local max_arr_item_index_tmp_2=0\n    local max_arr_item_tmp_2=0\n    local\
    \ max_arr_item_index_tmp_3=0\n    local max_arr_item_tmp_3=0\n    local max_arr_item_index_tmp_4=0\n\
    \    local max_arr_item_tmp_4=0\n    local max_arr_item_index_tmp_5=0\n    local\
    \ max_arr_item_tmp_5=0\n    local max_arr_item_index_tmp_6=0\n    local max_arr_item_tmp_6=0\n\
    \    local max_arr_item_index_tmp_7=0\n    local max_arr_item_tmp_7=0\n    local\
    \ max_arr_item_index_tmp_8=0\n    local max_arr_item_tmp_8=0\n    local max_arr_item_index_tmp_9=0\n\
    \    local max_arr_item_tmp_9=0\n    local max_arr_item_index_tmp_10=0\n    local\
    \ max_arr_item_tmp_10=0\n    local max_arr_item_index_tmp_11=0\n    local max_arr_item_tmp_11=0\n\
    \    local max_arr_item_index_tmp_12=0\n    local max_arr_item_tmp_12=0\n    local\
    \ max_arr_item_index_tmp_13=0\n    local max_arr_item_tmp_13=0\n    local max_arr_item_index_tmp_14=0\n\
    \    local max_arr_item_tmp_14=0\n    local max_arr_item_index_tmp_15=0", "  \
    \  local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=\"$(echo \"$arr\" |\
    \ wc -w)\"\n    local max_arr=()\n    local max_arr_len=0\n    local max_arr_len_max=0\n\
    \    local max_arr_len_min=0\n    local max_arr_len_diff=0\n    local max_arr_len_diff_max=0\n\
    \    local max_arr_len_diff_min=0\n    local max_arr_len_diff_diff=0\n    local\
    \ max_arr_len_diff_diff_max=0\n    local max_arr_len_diff_diff_min=0\n    local\
    \ max_arr_len_diff_diff_diff=0\n    local max_arr_len_diff_diff_diff_max=0\n \
    \   local max_arr_len_diff_diff_diff_min=0\n    local max_arr_len_diff_diff_diff_diff=0\n\
    \    local max_arr_len_diff_diff_diff_diff_max=0\n    local max_arr_len_diff_diff_diff_diff_min=0\n\
    \    local max_arr_len_diff_diff_diff_diff_diff=0\n    local max_arr_len_diff_diff_diff_diff_diff_max=0\n\
    \    local max_arr_len_diff_diff_diff_diff_diff_min=0\n    local max_arr_len_diff_diff_diff_diff_diff_diff=0\n\
    \    local max_arr_len_diff_diff_diff_diff_diff_diff_max=0\n    local max_arr_len_diff_diff_diff_diff_diff_diff_min=0\n\
    \    local max_arr_len_diff_diff_diff_diff_diff_diff_diff=0\n    local max_arr_len_diff_diff_diff_diff_diff_diff_diff_max=0\n\
    \    local max_arr_len_diff_diff_diff_diff_diff_diff_diff_min=0\n    local max_arr_len_diff_diff_diff_diff_diff_diff_diff_diff=0\n\
    \    local", "    local -n arr=$1\n    local k=$2\n    local -a max\n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        if [[ ${#max[@]} -lt $k ]]; then\n        \
    \    max+=(${arr[i]})\n        else\n            for ((j=0; j<${#max[@]}; j++));\
    \ do\n                if [[ ${arr[i]} -gt ${max[j]} ]]; then\n               \
    \     max[j]=${arr[i]}\n                    break\n                fi\n      \
    \      done\n        fi\n    done\n    echo ${max[@]}", "    local arr=\"$1\"\n\
    \    local k=\"$2\"\n    local arr_len=$(echo \"$arr\" | wc -w)\n    local i=0\n\
    \    local j=0\n    local max_index=0\n    local max_value=0\n    local temp=0\n\
    \    local result=\"\"\n    while [ $i -lt $k ]; do\n        max_value=$(echo\
    \ \"$arr\" | cut -d \" \" -f 1)\n        max_index=1\n        j=2\n        while\
    \ [ $j -le $arr_len ]; do\n            temp=$(echo \"$arr\" | cut -d \" \" -f\
    \ $j)\n            if [ $temp -gt $max_value ]; then\n                max_value=$temp\n\
    \                max_index=$j\n            fi\n            j=$((j+1))\n      \
    \  done\n        result=\"$result $max_value\"\n        arr=$(echo \"$arr\" |\
    \ cut -d \" \" -f $max_index --complement)\n        arr_len=$((arr_len-1))\n \
    \       i=$((i+1))\n    done\n    echo \"$result\"", "    local arr=\"$1\"\n \
    \   local k=\"$2\"\n    local i\n    local j\n    local tmp\n    local res=()\n\
    \    for i in $(seq 1 $k); do\n        res[$i]=$(echo \"$arr\" | cut -d' ' -f$i)\n\
    \    done\n    for i in $(seq $k $(echo \"$arr\" | wc -w)); do\n        tmp=$(echo\
    \ \"$arr\" | cut -d' ' -f$i)\n        for j in $(seq 1 $k); do\n            if\
    \ [[ $tmp -gt ${res[$j]} ]]; then\n                res[$j]=$tmp\n            \
    \    break\n            fi\n        done\n    done\n    echo \"${res[@]}\"", " \
    \   local arr=\"$1\"\n    local k=\"$2\"\n    local arr_len=\"$(echo \"$arr\"\
    \ | wc -w)\"\n    local max_arr=()\n    local max_arr_len=0\n    local max_arr_len_max=$((k\
    \ - 1))\n    local max_arr_len_min=$((k - arr_len))\n    local max_arr_len_min_abs=$((-max_arr_len_min))\n\
    \    local max_arr_len_max_abs=$((-max_arr_len_max))\n    local max_arr_len_abs=$((-max_arr_len))\n\
    \    local max_arr_len_abs_max=$((-max_arr_len_max))\n    local max_arr_len_abs_min=$((-max_arr_len_min))\n\
    \    local max_arr_len_abs_min_abs=$((-max_arr_len_min_abs))\n    local max_arr_len_abs_max_abs=$((-max_arr_len_max_abs))\n\
    \    local max_arr_len_abs_max_abs_abs=$((-max_arr_len_abs_max_abs))\n    local\
    \ max_arr_len_abs_min_abs_abs=$((-max_arr_len_abs_min_abs))\n    local max_arr_len_abs_max_abs_abs_abs=$((-max_arr_len_abs_max_abs_abs))\n\
    \    local max_arr_len_abs_min_abs_abs_abs=$((-max_arr_len_abs_min_abs_abs))\n\
    \    local max_arr_len_abs_max_abs_abs_abs_abs=$((-max_arr_len_abs_max_abs_abs_abs))\n\
    \    local max_arr_len_abs_min_abs_abs_abs_abs=$((-max_arr_len_abs_min_abs_abs_abs))\n\
    \    local max_arr_len_abs_max_abs_abs_abs_abs_abs=$((-max_arr_len_abs_max_abs_abs_abs_abs))\n\
    \    local max_arr_"]
stop_tokens:
- "\n}"

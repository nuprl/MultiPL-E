name: HumanEval_130_tri
language: sh
prompt: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply by\
  \ mathematicians in \n# the last couple centuries. However, what people don't know\
  \ is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
  # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
  \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
  # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
  \ given a non-negative integer number n, you have to a return a list of the \n#\
  \ first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"3\"\
  )\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\ntri() {\n"
tests: "}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
  \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2\
  \ 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
  \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15\
  \ 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63\
  \ 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
  \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
completions: ['  # your code here', "    local n=$1\n    local res=\"[\\\"1\\\"\"\n\
    \    local a=1\n    local b=3\n    local c=2\n    local d=0\n    for ((i=1; i<=n;\
    \ i++)); do\n        if ((i%2==0)); then\n            d=$((i/2))\n        else\n\
    \            d=$((a+b+c))\n            a=$b\n            b=$c\n            c=$d\n\
    \        fi\n        res=\"$res, \\\"$d\\\"\"\n    done\n    echo \"$res]\"",
  "    local n=$1\n    local i=1\n    local a=3\n    local b=1\n    local c=2\n  \
    \  local d=0\n    local result=\"\"\n    while [ $i -le $n ]; do\n        result=\"\
    $result $a\"\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n\
    \        else\n            d=$((a + b + c))\n        fi\n        a=$b\n      \
    \  b=$c\n        c=$d\n        i=$((i + 1))\n    done\n    echo $result", "  \
    \  local n=$1\n    local i=0\n    local res=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            res+=(1)\n        elif [ $i -eq 1\
    \ ]; then\n            res+=(3)\n        elif [ $i -eq 2 ]; then\n           \
    \ res+=(2)\n        else\n            local a=${res[$((i - 1))]}\n           \
    \ local b=${res[$((i - 2))]}\n            local c=${res[$((i - 3))]}\n       \
    \     if [ $((i % 2)) -eq 0 ]; then\n                res+=($((1 + i / 2)))\n \
    \           else\n                res+=($((a + b + c)))\n            fi\n    \
    \    fi\n        i=$((i + 1))\n    done\n    echo ${res[@]}", "    local n=$1\n\
    \    local result=()\n    local i=0\n    while [ $i -le $n ]; do\n        if [\
    \ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq 1 ]; then\n\
    \            result[$i]=3\n        elif [ $i -eq 2 ]; then\n            result[$i]=2\n\
    \        else\n            result[$i]=$(( ${result[$(( $i - 1 ))]} + ${result[$((\
    \ $i - 2 ))]} + ${result[$(( $i - 3 ))]} ))\n        fi\n        i=$(( $i + 1\
    \ ))\n    done\n    echo ${result[@]}", "    local n=$1\n    local i=1\n    local\
    \ result=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n    \
    \        result[$i]=3\n        elif [ $((i % 2)) -eq 0 ]; then\n            result[$i]=$((i\
    \ / 2))\n        else\n            result[$i]=$((result[$((i - 1))] + result[$((i\
    \ - 2))] + result[$((i + 1))]))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo ${result[@]}", "    local n=$1\n    local seq=()\n    local i=0\n  \
    \  local a=1\n    local b=3\n    local c=2\n    local d=0\n    while [ $i -le\
    \ $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n\
    \        else\n            d=$((a + b + c))\n            a=$b\n            b=$c\n\
    \            c=$d\n        fi\n        seq+=($d)\n        i=$((i + 1))\n    done\n\
    \    echo ${seq[@]}", "    local n=$1\n    local res=\"['\\\"1\\\"'\"\n    local\
    \ a=1\n    local b=3\n    local c=2\n    local d=0\n    for ((i=2; i<=n; i++));\
    \ do\n        if ((i%2==0)); then\n            d=$((i/2))\n        else\n    \
    \        d=$((a+b+c))\n            a=$b\n            b=$c\n            c=$d\n\
    \        fi\n        res=\"$res, '\\\"$d\\\"'\"\n    done\n    echo \"$res]\"",
  "    local n=$1\n    local result=()\n    local i=0\n    local tri_n=0\n    local\
    \ tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq\
    \ 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2 ]; then\n          \
    \  tri_n=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n        \
    \        tri_n=$((i / 2))\n            else\n                tri_n=$((tri_n_1\
    \ + tri_n_2 + tri_n_3))\n            fi\n        fi\n        result+=($tri_n)\n\
    \        tri_n_3=$tri_n_2\n        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n\
    \        i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local n=$1\n\
    \    local result=\"['\\\"1\\\"'\"\n    local a=1\n    local b=3\n    local c=2\n\
    \    for ((i=2; i<=n; i++)); do\n        if ((i % 2 == 0)); then\n           \
    \ result=\"$result, '\\\"$((i / 2))\\\"'\"\n        else\n            result=\"\
    $result, '\\\"$((a + b + c))\\\"'\"\n            a=$b\n            b=$c\n    \
    \        c=$((a + b + c))\n        fi\n    done\n    echo \"$result]\"", "   \
    \ local n=$1\n    local i=1\n    local j=3\n    local k=2\n    local l=8\n   \
    \ local result=()\n    while [ $i -le $n ]; do\n        result+=($j)\n       \
    \ j=$k\n        k=$l\n        l=$((j + k + l))\n        ((i++))\n    done\n  \
    \  echo \"${result[@]}\"", "    local n=$1\n    local i=1\n    local a=1\n   \
    \ local b=3\n    local c=2\n    local d=0\n    local result=()\n    while [ $i\
    \ -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n\
    \        else\n            d=$((a + b + c))\n            a=$b\n            b=$c\n\
    \            c=$d\n        fi\n        result+=($d)\n        i=$((i + 1))\n  \
    \  done\n    echo \"${result[@]}\"", "    local n=\"$1\"\n    local i=0\n    local\
    \ a=3\n    local b=2\n    local c=1\n    local d=0\n    local result=\"\"\n  \
    \  while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n          \
    \  d=$((i / 2))\n        else\n            d=$((a + b + c))\n            a=$b\n\
    \            b=$c\n            c=$d\n        fi\n        result=\"$result $d\"\
    \n        i=$((i + 1))\n    done\n    echo $result", "    local n=$1\n    local\
    \ res=()\n    local i=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ];\
    \ then\n            res+=(1)\n        elif [ $i -eq 1 ]; then\n            res+=(3)\n\
    \        elif [ $i -eq 2 ]; then\n            res+=(2)\n        else\n       \
    \     local a=${res[$((i - 1))]}\n            local b=${res[$((i - 2))]}\n   \
    \         local c=${res[$((i - 3))]}\n            res+=($((a + b + c)))\n    \
    \    fi\n        i=$((i + 1))\n    done\n    echo ${res[@]}", "    local n=$1\n\
    \    local result=()\n    local i=0\n    local tri_n=0\n    local tri_n_1=0\n\
    \    local tri_n_2=0\n    local tri_n_3=0\n    while [ $i -le $n ]; do\n     \
    \   if [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq 1 ]; then\n\
    \            tri_n=3\n        elif [ $i -eq 2 ]; then\n            tri_n=2\n \
    \       else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n\
    \            fi\n        fi\n        result+=($tri_n)\n        tri_n_3=$tri_n_2\n\
    \        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n\
    \    echo \"${result[@]}\"", "    local n=$1\n    local i=1\n    local a=1\n \
    \   local b=3\n    local c=2\n    local d=0\n    local result=()\n    while [\
    \ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i /\
    \ 2))\n        else\n            d=$((a + b + c))\n            a=$b\n        \
    \    b=$c\n            c=$d\n        fi\n        result+=($d)\n        i=$((i\
    \ + 1))\n    done\n    echo ${result[@]}", "    local n=$1\n    local i=1\n  \
    \  local tri_n=3\n    local tri_n_1=3\n    local tri_n_2=1\n    local tri_n_3=1\n\
    \    local tri_n_4=0\n    local tri_n_5=0\n    local tri_n_6=0\n    local tri_n_7=0\n\
    \    local tri_n_8=0\n    local tri_n_9=0\n    local tri_n_10=0\n    local tri_n_11=0\n\
    \    local tri_n_12=0\n    local tri_n_13=0\n    local tri_n_14=0\n    local tri_n_15=0\n\
    \    local tri_n_16=0\n    local tri_n_17=0\n    local tri_n_18=0\n    local tri_n_19=0\n\
    \    local tri_n_20=0\n    local tri_n_21=0\n    local tri_n_22=0\n    local tri_n_23=0\n\
    \    local tri_n_24=0\n    local tri_n_25=0\n    local tri_n_26=0\n    local tri_n_27=0\n\
    \    local tri_n_28=0\n    local tri_n_29=0\n    local tri_n_30=0\n    local tri_n_31=0\n\
    \    local tri_n_32=0\n    local tri_n_33=0\n    local tri_n_34=0\n    local tri_n_35=0\n\
    \    local tri_n_36=0\n    local tri_n_37=0\n    local tri_n_38=0\n    local tri_n_39=0\n\
    \    local tri_n_40=0\n    local tri_n_41=0\n    local tri_n_42=0\n    local tri_n_43=0\n\
    \    local tri_n_44=0\n    local tri_n_45=0\n    local tri_n_46=0\n    local tri_n_47=0\n\
    \    local tri_n_48=0\n    local tri_n_49=0\n   ", "    local n=$1\n    local\
    \ result=()\n    if [[ $n -eq 0 ]]; then\n        result+=(\"1\")\n    else\n\
    \        result+=(\"3\")\n        if [[ $n -eq 1 ]]; then\n            result+=(\"\
    2\")\n        else\n            result+=(\"2\")\n            if [[ $n -eq 2 ]];\
    \ then\n                result+=(\"8\")\n            else\n                result+=(\"\
    8\")\n                for ((i = 3; i < n; i++)); do\n                    if [[\
    \ $((i % 2)) -eq 0 ]]; then\n                        result+=(\"$((1 + i / 2))\"\
    )\n                    else\n                        result+=(\"$((result[i -\
    \ 1] + result[i - 2] + result[i + 1]))\")\n                    fi\n          \
    \      done\n            fi\n        fi\n    fi\n    echo \"${result[@]}\"", " \
    \   local n=$1\n    local result=()\n    local i=0\n    local tri_n=0\n    local\
    \ tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq\
    \ 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2 ]; then\n          \
    \  tri_n=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n        \
    \        tri_n=$((i / 2))\n            else\n                tri_n=$((tri_n_1\
    \ + tri_n_2 + tri_n_3))\n            fi\n        fi\n        result+=(\"$tri_n\"\
    )\n        tri_n_3=$tri_n_2\n        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n\
    \        i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local n=$1\n\
    \    local i=0\n    local res=()\n    while [ $i -le $n ]; do\n        if [ $i\
    \ -eq 0 ]; then\n            res[$i]=1\n        elif [ $i -eq 1 ]; then\n    \
    \        res[$i]=3\n        elif [ $i -eq 2 ]; then\n            res[$i]=2\n \
    \       else\n            if [ $((i % 2)) -eq 0 ]; then\n                res[$i]=$((i\
    \ / 2))\n            else\n                res[$i]=$((res[$((i - 1))] + res[$((i\
    \ - 2))] + res[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo ${res[@]}", "    local n=$1\n    local result=()\n    local\
    \ i=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n          \
    \  result[$i]=1\n        elif [ $i -eq 1 ]; then\n            result[$i]=3\n \
    \       elif [ $i -eq 2 ]; then\n            result[$i]=2\n        else\n    \
    \        if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n\
    \            else\n                result[$i]=$((result[$((i - 1))] + result[$((i\
    \ - 2))] + result[$((i + 1))]))\n            fi\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo \"${result[@]}\"", "    local n=$1\n    local i=1\n\
    \    local a=1\n    local b=3\n    local c=2\n    local d=0\n    local result=\"\
    \"\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n     \
    \       d=$((i / 2))\n        else\n            d=$((a + b + c))\n           \
    \ a=$b\n            b=$c\n            c=$d\n        fi\n        result=\"$result\
    \ \\\"$d\\\"\"\n        i=$((i + 1))\n    done\n    echo \"[$result]\"", "  if\
    \ [[ $1 -eq 1 ]]; then\n    echo '\"3\"'\n  elif [[ $1 -eq 2 ]]; then\n    echo\
    \ '\"1\" \"3\" \"2\"'\n  else\n    echo '\"1\" \"3\" \"2\"'\n    for ((i = 3;\
    \ i <= $1; i++)); do\n      if [[ $((i % 2)) -eq 0 ]]; then\n        echo '\"\
    1\"'\n      else\n        echo '\"3\"'\n      fi\n    done\n  fi", "    local\
    \ n=\"$1\"\n    local result=\"[\\\"1\\\"\"\n    local a=1\n    local b=3\n  \
    \  local c=2\n    local d=8\n    for ((i=2; i<=n; i++)); do\n        result=\"\
    $result, \\\"$d\\\"\"\n        a=$b\n        b=$c\n        c=$d\n        d=$((a\
    \ + b + c))\n    done\n    echo \"$result]\"", "  local n=$1\n  local i=1\n  local\
    \ tri_n=3\n  local tri_n_1=3\n  local tri_n_2=1\n  local tri_n_3=1\n  local result=()\n\
    \  while [ $i -le $n ]; do\n    if [ $((i % 2)) -eq 0 ]; then\n      tri_n=$((i\
    \ / 2 + 1))\n    else\n      tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n      tri_n_3=$tri_n_2\n\
    \      tri_n_2=$tri_n_1\n      tri_n_1=$tri_n\n    fi\n    result+=($tri_n)\n\
    \    i=$((i + 1))\n  done\n  echo ${result[@]}", "    local n=$1\n    local i=0\n\
    \    local a=1\n    local b=3\n    local c=2\n    local d=0\n    local result=()\n\
    \    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n        \
    \    d=$((i / 2))\n        else\n            d=$((a + b + c))\n            a=$b\n\
    \            b=$c\n            c=$d\n        fi\n        result+=(\"$d\")\n  \
    \      i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local n=\"$1\"\
    \n    local i=0\n    local a=1\n    local b=3\n    local c=2\n    local d=0\n\
    \    local result=\"\"\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq\
    \ 0 ]; then\n            d=$((i / 2))\n        else\n            d=$((a + b +\
    \ c))\n            a=$b\n            b=$c\n            c=$d\n        fi\n    \
    \    result=\"$result $d\"\n        i=$((i + 1))\n    done\n    echo $result",
  "    local n=\"$1\"\n    local i=0\n    local tri_arr=()\n    while [ $i -le $n\
    \ ]; do\n        if [ $i -eq 0 ]; then\n            tri_arr+=(\"1\")\n       \
    \ elif [ $i -eq 1 ]; then\n            tri_arr+=(\"3\")\n        elif [ $i -eq\
    \ 2 ]; then\n            tri_arr+=(\"2\")\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                tri_arr+=(\"$((i / 2 + 1))\")\n       \
    \     else\n                tri_arr+=(\"$((tri_arr[i - 1] + tri_arr[i - 2] + tri_arr[i\
    \ - 3]))\")\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ \"${tri_arr[@]}\"", "    local n=$1\n    local a=1\n    local b=3\n    local\
    \ c=2\n    local d=0\n    local i=0\n    local result=\"\"\n    while [ $i -le\
    \ $n ]; do\n        if [ $i -eq 0 ]; then\n            result=\"$result$a\"\n\
    \        elif [ $i -eq 1 ]; then\n            result=\"$result $b\"\n        elif\
    \ [ $i -eq 2 ]; then\n            result=\"$result $c\"\n        else\n      \
    \      if [ $((i % 2)) -eq 0 ]; then\n                d=$((i / 2))\n         \
    \   else\n                d=$((a + b + c))\n            fi\n            result=\"\
    $result $d\"\n            a=$b\n            b=$c\n            c=$d\n        fi\n\
    \        i=$((i + 1))\n    done\n    echo $result", "    local n=$1\n    local\
    \ a=1\n    local b=3\n    local c=2\n    local d=0\n    local result=()\n    for\
    \ ((i=0; i<=n; i++)); do\n        if ((i == 0)); then\n            result[i]=$a\n\
    \        elif ((i == 1)); then\n            result[i]=$b\n        elif ((i ==\
    \ 2)); then\n            result[i]=$c\n        else\n            if ((i % 2 ==\
    \ 0)); then\n                d=$((i / 2))\n            else\n                d=$((a\
    \ + b + c))\n                a=$b\n                b=$c\n                c=$d\n\
    \            fi\n            result[i]=$d\n        fi\n    done\n    echo ${result[@]}",
  "\tlocal n=$1\n\tlocal i=0\n\tlocal a=1\n\tlocal b=3\n\tlocal c=2\n\tlocal d=0\n\
    \tlocal res=()\n\twhile [ $i -le $n ]; do\n\t\tif [ $((i % 2)) -eq 0 ]; then\n\
    \t\t\td=$((i / 2))\n\t\telse\n\t\t\td=$((a + b + c))\n\t\t\ta=$b\n\t\t\tb=$c\n\
    \t\t\tc=$d\n\t\tfi\n\t\tres+=(\"$d\")\n\t\ti=$((i + 1))\n\tdone\n\techo \"${res[@]}\"",
  "    local n=$1\n    local i=0\n    local result=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq\
    \ 1 ]; then\n            result[$i]=3\n        elif [ $i -eq 2 ]; then\n     \
    \       result[$i]=2\n        else\n            result[$i]=$((result[$((i-1))]\
    \ + result[$((i-2))] + result[$((i-3))]))\n        fi\n        i=$((i+1))\n  \
    \  done\n    echo ${result[@]}", "    local n=$1\n    local result=()\n    local\
    \ i=0\n    local tri_1=3\n    local tri_2=2\n    local tri_3=1\n    local tri_n=0\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result+=(\"\
    1\")\n        elif [ $i -eq 1 ]; then\n            result+=(\"3\")\n        elif\
    \ [ $i -eq 2 ]; then\n            result+=(\"2\")\n        else\n            if\
    \ [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i / 2))\n            else\n\
    \                tri_n=$((tri_1 + tri_2 + tri_3))\n                tri_1=$tri_2\n\
    \                tri_2=$tri_3\n                tri_3=$tri_n\n            fi\n\
    \            result+=(\"$tri_n\")\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"${result[@]}\"", "    local n=\"$1\"\n    local a=3\n    local b=1\n\
    \    local c=2\n    local d\n    local i\n    echo \"[\\\"1\\\", \\\"3\\\", \\\
    \"2\\\"\"\n    for ((i = 3; i <= n; i++)); do\n        if ((i % 2 == 0)); then\n\
    \            d=$((i / 2))\n        else\n            d=$((a + b + c))\n      \
    \      a=$b\n            b=$c\n            c=$d\n        fi\n        echo \",\
    \ \\\"$d\\\"\"\n    done\n    echo \"]\"", "    local -a arr\n    arr[0]=1\n \
    \   arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0));\
    \ then\n            arr[i]=$((i/2))\n        else\n            arr[i]=$((arr[i-1]+arr[i-2]+arr[i+1]))\n\
    \        fi\n    done\n    echo ${arr[@]}", "    local n=$1\n    local -a arr\n\
    \    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=n; i++)); do\n  \
    \      if ((i % 2 == 0)); then\n            arr[i]=$((1 + i / 2))\n        else\n\
    \            arr[i]=$((arr[i-1] + arr[i-2] + arr[i+1]))\n        fi\n    done\n\
    \    echo ${arr[@]}", "    local n=$1\n    local i=1\n    local j=3\n    local\
    \ k=2\n    local l=8\n    local result=\"[\\\"1\\\", \\\"3\\\", \\\"2\\\", \\\"\
    8\\\"\"\n    while [ $i -lt $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            result=\"$result, \\\"$((i / 2))\\\"\"\n        else\n          \
    \  result=\"$result, \\\"$((j + k + l))\\\"\"\n            j=$k\n            k=$l\n\
    \            l=$((j + k + l))\n        fi\n        i=$((i + 1))\n    done\n  \
    \  echo \"$result]\"", "    local n=$1\n    local a=1\n    local b=3\n    local\
    \ c=2\n    local d\n    local res\n    for ((i=0; i<=n; i++)); do\n        if\
    \ ((i == 0)); then\n            res=\"$res $a\"\n        elif ((i == 1)); then\n\
    \            res=\"$res $b\"\n        elif ((i == 2)); then\n            res=\"\
    $res $c\"\n        else\n            if ((i % 2 == 0)); then\n               \
    \ d=$((i / 2))\n            else\n                d=$((a + b + c))\n         \
    \       a=$b\n                b=$c\n                c=$d\n            fi\n   \
    \         res=\"$res $d\"\n        fi\n    done\n    echo $res", "    if [[ $1\
    \ -eq 1 ]]; then\n        echo 3\n    elif [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n    elif [[ $1 -eq 3 ]]; then\n        echo 2\n    else\n        echo $(($(tri\
    \ $(( $1 - 1 ))) + $(tri $(( $1 - 2 ))) + $(tri $(( $1 - 3 ))) ))\n    fi", " \
    \   local n=$1\n    local i=0\n    local result=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq\
    \ 1 ]; then\n            result[$i]=3\n        elif [ $i -eq 2 ]; then\n     \
    \       result[$i]=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n\
    \                result[$i]=$((i / 2))\n            else\n                result[$i]=$((result[$((i\
    \ - 1))] + result[$((i - 2))] + result[$((i + 1))]))\n            fi\n       \
    \ fi\n        i=$((i + 1))\n    done\n    echo ${result[@]}", "    local n=\"\
    $1\"\n    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3;\
    \ i<=n; i++)); do\n        if ((i % 2 == 0)); then\n            arr[i]=$((i /\
    \ 2))\n        else\n            arr[i]=$((arr[i-1] + arr[i-2] + arr[i+1]))\n\
    \        fi\n    done\n    echo \"${arr[@]}\"", "    local n=$1\n    local i=0\n\
    \    local res=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            res[$i]=1\n        elif [ $i -eq 1 ]; then\n            res[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            res[$i]=2\n        else\n      \
    \      if [ $((i % 2)) -eq 0 ]; then\n                res[$i]=$((i / 2))\n   \
    \         else\n                res[$i]=$((res[$((i - 1))] + res[$((i - 2))] +\
    \ res[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"${res[@]}\"", "    local n=$1\n    local result=()\n    local i=0\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result+=(\"\
    1\")\n        elif [ $i -eq 1 ]; then\n            result+=(\"3\")\n        elif\
    \ [ $i -eq 2 ]; then\n            result+=(\"2\")\n        else\n            if\
    \ [ $((i % 2)) -eq 0 ]; then\n                result+=(\"$((i / 2 + 1))\")\n \
    \           else\n                result+=(\"$((result[i - 1] + result[i - 2]\
    \ + result[i - 3]))\")\n            fi\n        fi\n        i=$((i + 1))\n   \
    \ done\n    echo \"${result[@]}\"", "    local n=\"$1\"\n    local -a a=(1 3 2)\n\
    \    local i=3\n    while [ $i -le $n ]; do\n        a[$i]=$((a[$((i-1))]+a[$((i-2))]+a[$((i-3))]))\n\
    \        i=$((i+1))\n    done\n    echo \"${a[@]}\"", "    local n=\"$1\"\n  \
    \  local result=()\n    local i=0\n    local tri_n=0\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq\
    \ 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2 ]; then\n          \
    \  tri_n=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n        \
    \        tri_n=$((i / 2))\n            else\n                tri_n=$((result[i\
    \ - 1] + result[i - 2] + result[i - 3]))\n            fi\n        fi\n       \
    \ result[$i]=$tri_n\n        i=$((i + 1))\n    done\n    echo ${result[@]}", " \
    \   local n=$1\n    local i=0\n    local result=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq\
    \ 1 ]; then\n            result[$i]=3\n        elif [ $i -eq 2 ]; then\n     \
    \       result[$i]=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n\
    \                result[$i]=$((i / 2))\n            else\n                result[$i]=$((result[$((i\
    \ - 1))] + result[$((i - 2))] + result[$((i + 1))]))\n            fi\n       \
    \ fi\n        i=$((i + 1))\n    done\n    echo ${result[@]}", "    local n=$1\n\
    \    local i=0\n    local a=3\n    local b=1\n    local c=2\n    local d=0\n \
    \   local result=()\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq\
    \ 0 ]; then\n            d=$((i / 2))\n        else\n            d=$((a + b +\
    \ c))\n            a=$b\n            b=$c\n            c=$d\n        fi\n    \
    \    result+=(\"$d\")\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"",
  "    local n=\"$1\"\n    local a=1\n    local b=3\n    local c=2\n    local d=0\n\
    \    local i=0\n    local result=()\n    while [ $i -le $n ]; do\n        if [\
    \ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n        else\n         \
    \   d=$((a + b + c))\n            a=$b\n            b=$c\n            c=$d\n \
    \       fi\n        result+=(\"$d\")\n        i=$((i + 1))\n    done\n    echo\
    \ \"${result[@]}\"", "    local n=$1\n    local result=()\n    local i=0\n   \
    \ local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n\
    \        elif [ $i -eq 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2\
    \ ]; then\n            tri_n=2\n        else\n            if [ $((i % 2)) -eq\
    \ 0 ]; then\n                tri_n=$((i / 2))\n            else\n            \
    \    tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n            fi\n        fi\n    \
    \    result+=(\"$tri_n\")\n        tri_n_3=$tri_n_2\n        tri_n_2=$tri_n_1\n\
    \        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"",
  "  local n=\"$1\"\n  local arr=()\n  local i=0\n  local a=0\n  local b=1\n  local\
    \ c=3\n  local d=0\n  while [ $i -le $n ]; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      d=$((i / 2))\n    else\n      d=$((a + b + c))\n      a=$b\n      b=$c\n\
    \      c=$d\n    fi\n    arr[$i]=$d\n    i=$((i + 1))\n  done\n  echo \"${arr[@]}\"",
  "    local n=$1\n    local res=()\n    local i=0\n    local tri_1=3\n    local tri_2=1\n\
    \    local tri_3=1\n    local tri_n=0\n    while [ $i -le $n ]; do\n        if\
    \ [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq 1 ]; then\n \
    \           tri_n=$tri_1\n        elif [ $i -eq 2 ]; then\n            tri_n=$tri_2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((tri_1 + tri_2 + tri_3))\n\
    \                tri_1=$tri_2\n                tri_2=$tri_3\n                tri_3=$tri_n\n\
    \            fi\n        fi\n        res+=($tri_n)\n        i=$((i + 1))\n   \
    \ done\n    echo ${res[@]}", "    local n=$1\n    local result=()\n    local i=0\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n\
    \                result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${result[@]}", "    local n=$1\n    local tri_seq=()\n    local tri_seq_len=0\n\
    \    local i=0\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n\
    \    local tri_n_3=0\n    local tri_n_4=0\n    local tri_n_5=0\n    local tri_n_6=0\n\
    \    local tri_n_7=0\n    local tri_n_8=0\n    local tri_n_9=0\n    local tri_n_10=0\n\
    \    local tri_n_11=0\n    local tri_n_12=0\n    local tri_n_13=0\n    local tri_n_14=0\n\
    \    local tri_n_15=0\n    local tri_n_16=0\n    local tri_n_17=0\n    local tri_n_18=0\n\
    \    local tri_n_19=0\n    local tri_n_20=0\n    local tri_n_21=0\n    local tri_n_22=0\n\
    \    local tri_n_23=0\n    local tri_n_24=0\n    local tri_n_25=0\n    local tri_n_26=0\n\
    \    local tri_n_27=0\n    local tri_n_28=0\n    local tri_n_29=0\n    local tri_n_30=0\n\
    \    local tri_n_31=0\n    local tri_n_32=0\n    local tri_n_33=0\n    local tri_n_34=0\n\
    \    local tri_n_35=0\n    local tri_n_36=0\n    local tri_n_37=0\n    local tri_n_38=0\n\
    \    local tri_n_39=0\n    local tri_n_40=0\n    local tri_n_41=0\n    local tri_n_42=0\n\
    \    local tri_n_43=0\n    local tri_n_44=0\n    local tri_n_45=0\n    local tri_n_46=0\n\
    \    local tri_n_47=0\n    local tri", "    local n=$1\n    local -a arr\n   \
    \ arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=n; i++)); do\n     \
    \   if ((i%2==0)); then\n            arr[i]=$((1 + i / 2))\n        else\n   \
    \         arr[i]=$((arr[i-1] + arr[i-2] + arr[i+1]))\n        fi\n    done\n \
    \   echo \"${arr[@]}\"", "    local -i n=$1\n    local -a arr\n    arr[0]=1\n\
    \    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=n; i++)); do\n        if ((i %\
    \ 2 == 0)); then\n            arr[i]=$((i / 2))\n        else\n            arr[i]=$((arr[i-1]\
    \ + arr[i-2] + arr[i+1]))\n        fi\n    done\n    echo ${arr[@]}", "    local\
    \ n=$1\n    local i=1\n    local res=()\n    while [ $i -le $n ]; do\n       \
    \ if [ $i -eq 1 ]; then\n            res+=(3)\n        elif [ $((i % 2)) -eq 0\
    \ ]; then\n            res+=($((i / 2 + 1)))\n        else\n            res+=($((res[i\
    \ - 2] + res[i - 1] + res[i])))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"${res[@]}\"", "    if [[ $1 -eq 1 ]]; then\n        echo '\"3\"'\n\
    \    elif [[ $1 -eq 2 ]]; then\n        echo '\"1\"'\n        echo '\"3\"'\n \
    \       echo '\"2\"'\n    else\n        echo '\"1\"'\n        echo '\"3\"'\n \
    \       echo '\"2\"'\n        echo '\"8\"'\n        for ((i = 3; i < $1; i++));\
    \ do\n            if [[ $((i % 2)) -eq 0 ]]; then\n                echo '\"'$((i\
    \ + 1))'\"'\n            else\n                echo '\"'$((8 + 2 + 3))'\"'\n \
    \           fi\n        done\n    fi", "    local n=\"$1\"\n    local i=1\n  \
    \  local j=3\n    local k=2\n    local l=8\n    local result=()\n    result+=(\"\
    $i\")\n    result+=(\"$j\")\n    result+=(\"$k\")\n    result+=(\"$l\")\n    for\
    \ (( c=4; c<=n; c++ ))\n    do\n        if (( c % 2 == 0 ))\n        then\n  \
    \          result+=(\"$(( c / 2 ))\")\n        else\n            result+=(\"$((\
    \ i + j + k ))\")\n            i=\"$j\"\n            j=\"$k\"\n            k=\"\
    $l\"\n            l=\"${result[-1]}\"\n        fi\n    done\n    echo \"${result[@]}\"",
  "    local n=$1\n    local i=0\n    local tri=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            tri[$i]=1\n        elif [ $i -eq 1\
    \ ]; then\n            tri[$i]=3\n        elif [ $i -eq 2 ]; then\n          \
    \  tri[$i]=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n      \
    \          tri[$i]=$((i / 2))\n            else\n                tri[$i]=$((tri[$((i\
    \ - 1))] + tri[$((i - 2))] + tri[$((i + 1))]))\n            fi\n        fi\n \
    \       i=$((i + 1))\n    done\n    echo ${tri[@]}", "  local n=$1\n  local result=()\n\
    \  local i=0\n  while [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n      result[$i]=1\n\
    \    elif [ $i -eq 1 ]; then\n      result[$i]=3\n    elif [ $i -eq 2 ]; then\n\
    \      result[$i]=2\n    else\n      if [ $((i % 2)) -eq 0 ]; then\n        result[$i]=$((i\
    \ / 2))\n      else\n        result[$i]=$((result[$((i - 1))] + result[$((i -\
    \ 2))] + result[$((i + 1))]))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ ${result[@]}", "    local n=$1\n    local -a arr\n    arr[0]=1\n    arr[1]=3\n\
    \    arr[2]=2\n    for ((i=3; i<=n; i++)); do\n        if (( i % 2 == 0 )); then\n\
    \            arr[i]=$(( 1 + i / 2 ))\n        else\n            arr[i]=$(( arr[i-1]\
    \ + arr[i-2] + arr[i+1] ))\n        fi\n    done\n    echo ${arr[@]}", "    local\
    \ n=$1\n    local result=()\n    local i=0\n    local tri_n=0\n    local tri_n_1=0\n\
    \    local tri_n_2=0\n    local tri_n_3=0\n    while [[ $i -le $n ]]; do\n   \
    \     if [[ $i -eq 0 ]]; then\n            tri_n=1\n        elif [[ $i -eq 1 ]];\
    \ then\n            tri_n=3\n        elif [[ $i -eq 2 ]]; then\n            tri_n=2\n\
    \        else\n            if [[ $((i % 2)) -eq 0 ]]; then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n\
    \            fi\n        fi\n        result+=(\"$tri_n\")\n        tri_n_3=$tri_n_2\n\
    \        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n\
    \    echo \"${result[@]}\"", "    local n=$1\n    local i=1\n    local tri_n=3\n\
    \    local tri_n_1=3\n    local tri_n_2=1\n    local tri_n_3=1\n    local tri_n_4=1\n\
    \    local tri_n_5=1\n    local tri_n_6=1\n    local tri_n_7=1\n    local tri_n_8=1\n\
    \    local tri_n_9=1\n    local tri_n_10=1\n    local tri_n_11=1\n    local tri_n_12=1\n\
    \    local tri_n_13=1\n    local tri_n_14=1\n    local tri_n_15=1\n    local tri_n_16=1\n\
    \    local tri_n_17=1\n    local tri_n_18=1\n    local tri_n_19=1\n    local tri_n_20=1\n\
    \    local tri_n_21=1\n    local tri_n_22=1\n    local tri_n_23=1\n    local tri_n_24=1\n\
    \    local tri_n_25=1\n    local tri_n_26=1\n    local tri_n_27=1\n    local tri_n_28=1\n\
    \    local tri_n_29=1\n    local tri_n_30=1\n    local tri_n_31=1\n    local tri_n_32=1\n\
    \    local tri_n_33=1\n    local tri_n_34=1\n    local tri_n_35=1\n    local tri_n_36=1\n\
    \    local tri_n_37=1\n    local tri_n_38=1\n    local tri_n_39=1\n    local tri_n_40=1\n\
    \    local tri_n_41=1\n    local tri_n_42=1\n    local tri_n_43=1\n    local tri_n_44=1\n\
    \    local tri_n_45=1\n    local tri_n_46=1\n    local tri_n_47=1\n    local tri_n_48=1\n\
    \    local tri_n_49=1\n   ", "    local n=$1\n    local i=0\n    local arr=()\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            arr[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            arr[$i]=3\n        elif [ $i -eq\
    \ 2 ]; then\n            arr[$i]=2\n        else\n            if [ $((i % 2))\
    \ -eq 0 ]; then\n                arr[$i]=$((i / 2))\n            else\n      \
    \          arr[$i]=$((arr[$((i - 1))] + arr[$((i - 2))] + arr[$((i + 1))]))\n\
    \            fi\n        fi\n        i=$((i + 1))\n    done\n    echo ${arr[@]}",
  "    local n=$1\n    local res=()\n    local i=0\n    local t1=3\n    local t2=1\n\
    \    local t3=2\n    local t4=0\n    while [ $i -le $n ]; do\n        if [ $i\
    \ -eq 0 ]; then\n            res[$i]=1\n        elif [ $i -eq 1 ]; then\n    \
    \        res[$i]=3\n        elif [ $i -eq 2 ]; then\n            res[$i]=2\n \
    \       else\n            if [ $((i % 2)) -eq 0 ]; then\n                t4=$((i\
    \ / 2))\n            else\n                t4=$((t1 + t2 + t3))\n            \
    \    t1=$t2\n                t2=$t3\n                t3=$t4\n            fi\n\
    \            res[$i]=$t4\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ \"${res[@]}\"", "    local n=$1\n    local i=0\n    local tri_list=()\n    while\
    \ [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            tri_list+=(1)\n\
    \        elif [ $i -eq 1 ]; then\n            tri_list+=(3)\n        elif [ $i\
    \ -eq 2 ]; then\n            tri_list+=(2)\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                tri_list+=($((i / 2)))\n            else\n\
    \                tri_list+=($((tri_list[i - 1] + tri_list[i - 2] + tri_list[i\
    \ - 3])))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ \"${tri_list[@]}\"", "    local n=$1\n    local i=0\n    local a=1\n    local\
    \ b=3\n    local c=2\n    local d=0\n    while [ $i -le $n ]; do\n        if [\
    \ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n        else\n         \
    \   d=$((a + b + c))\n            a=$b\n            b=$c\n            c=$d\n \
    \       fi\n        echo -n \"\\\"$d\\\" \"\n        i=$((i + 1))\n    done",
  "\tlocal n=\"$1\"\n\tlocal i=1\n\tlocal a=3\n\tlocal b=1\n\tlocal c=2\n\tlocal d=0\n\
    \tlocal result=\"\"\n\twhile [ $i -le $n ]; do\n\t\tif [ $((i % 2)) -eq 0 ]; then\n\
    \t\t\tresult=\"$result $((1 + i / 2))\"\n\t\telse\n\t\t\td=$((a + b + c))\n\t\t\
    \tresult=\"$result $d\"\n\t\t\ta=$b\n\t\t\tb=$c\n\t\t\tc=$d\n\t\tfi\n\t\ti=$((i\
    \ + 1))\n\tdone\n\techo \"[$result]\"", "    local n=$1\n    local i=1\n    local\
    \ res=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n       \
    \     res+=(3)\n        elif [ $((i % 2)) -eq 0 ]; then\n            res+=($((i\
    \ / 2 + 1)))\n        else\n            res+=($((res[i - 2] + res[i - 1] + res[i])))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo ${res[@]}", "    local n=$1\n\
    \    local result=()\n    local i=0\n    local tri_n=0\n    local tri_n_1=0\n\
    \    local tri_n_2=0\n    local tri_n_3=0\n    local tri_n_4=0\n    local tri_n_5=0\n\
    \    local tri_n_6=0\n    local tri_n_7=0\n    local tri_n_8=0\n    local tri_n_9=0\n\
    \    local tri_n_10=0\n    local tri_n_11=0\n    local tri_n_12=0\n    local tri_n_13=0\n\
    \    local tri_n_14=0\n    local tri_n_15=0\n    local tri_n_16=0\n    local tri_n_17=0\n\
    \    local tri_n_18=0\n    local tri_n_19=0\n    local tri_n_20=0\n    local tri_n_21=0\n\
    \    local tri_n_22=0\n    local tri_n_23=0\n    local tri_n_24=0\n    local tri_n_25=0\n\
    \    local tri_n_26=0\n    local tri_n_27=0\n    local tri_n_28=0\n    local tri_n_29=0\n\
    \    local tri_n_30=0\n    local tri_n_31=0\n    local tri_n_32=0\n    local tri_n_33=0\n\
    \    local tri_n_34=0\n    local tri_n_35=0\n    local tri_n_36=0\n    local tri_n_37=0\n\
    \    local tri_n_38=0\n    local tri_n_39=0\n    local tri_n_40=0\n    local tri_n_41=0\n\
    \    local tri_n_42=0\n    local tri_n_43=0\n    local tri_n_44=0\n    local tri_n_45=0\n\
    \    local tri_n_46=0\n    local tri_n_47=0\n    local tri_n_48=0\n    local tri_n",
  "    local n=$1\n    local result=()\n    local i=0\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            result+=(1)\n        elif [ $i -eq\
    \ 1 ]; then\n            result+=(3)\n        elif [ $i -eq 2 ]; then\n      \
    \      result+=(2)\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n\
    \                result+=($((i / 2 + 1)))\n            else\n                result+=($((result[$((i\
    \ - 1))] + result[$((i - 2))] + result[$((i + 1))])))\n            fi\n      \
    \  fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local\
    \ n=$1\n    local result=\"\"\n    local i=1\n    local tri1=3\n    local tri2=1\n\
    \    local tri3=2\n    local tri4=0\n    while [ $i -le $n ]; do\n        if [\
    \ $((i % 2)) -eq 0 ]; then\n            tri4=$((i / 2))\n        else\n      \
    \      tri4=$((tri1 + tri2 + tri3))\n            tri1=$tri2\n            tri2=$tri3\n\
    \            tri3=$tri4\n        fi\n        result=\"$result $tri4\"\n      \
    \  i=$((i + 1))\n    done\n    echo $result", "    local n=\"$1\"\n    local i=0\n\
    \    local tri_n=1\n    local tri_n_1=3\n    local tri_n_2=1\n    local tri_n_3=0\n\
    \    local result=()\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq\
    \ 0 ]; then\n            tri_n=$((i / 2))\n        else\n            tri_n=$((tri_n_1\
    \ + tri_n_2 + tri_n_3))\n        fi\n        result+=(\"$tri_n\")\n        tri_n_3=$tri_n_2\n\
    \        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n\
    \    echo \"${result[@]}\"", "    local -a tri\n    tri[0]=1\n    tri[1]=3\n \
    \   tri[2]=2\n    for ((i=3; i<=$1; i++)); do\n        if ((i % 2 == 0)); then\n\
    \            tri[i]=$((i / 2))\n        else\n            tri[i]=$((tri[i-1] +\
    \ tri[i-2] + tri[i+1]))\n        fi\n    done\n    echo \"${tri[@]}\"", "    local\
    \ n=$1\n    local i=1\n    local res=()\n    while [ $i -le $n ]; do\n       \
    \ if [ $i -eq 1 ]; then\n            res+=(3)\n        elif [ $((i % 2)) -eq 0\
    \ ]; then\n            res+=($((i / 2)))\n        else\n            res+=($((res[i\
    \ - 2] + res[i - 1] + res[i])))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"${res[@]}\"", "    local n=$1\n    local i=1\n    local tri=3\n  \
    \  local arr=()\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ];\
    \ then\n            tri=$((1 + i / 2))\n        else\n            tri=$((tri +\
    \ arr[i - 1] + arr[i - 2]))\n        fi\n        arr[i]=$tri\n        i=$((i +\
    \ 1))\n    done\n    echo ${arr[@]}", "  local n=\"$1\"\n  local i=0\n  local\
    \ j=1\n  local k=2\n  local l=3\n  local m=4\n  local o=5\n  local p=6\n  local\
    \ q=7\n  local r=8\n  local s=9\n  local t=10\n  local u=11\n  local v=12\n  local\
    \ w=13\n  local x=14\n  local y=15\n  local z=16\n  local aa=17\n  local bb=18\n\
    \  local cc=19\n  local dd=20\n  local ee=21\n  local ff=22\n  local gg=23\n \
    \ local hh=24\n  local ii=25\n  local jj=26\n  local kk=27\n  local ll=28\n  local\
    \ mm=29\n  local nn=30\n  local oo=31\n  local pp=32\n  local qq=33\n  local rr=34\n\
    \  local ss=35\n  local tt=36\n  local uu=37\n  local vv=38\n  local ww=39\n \
    \ local xx=40\n  local yy=41\n  local zz=42\n  local aaa=43\n  local bbb=44\n\
    \  local ccc=45\n  local ddd=46\n  local eee=47\n  local fff=48\n  local ggg=49\n\
    \  local hhh=50\n  local iii=51\n  local jjj=52\n  local kkk=53\n  local lll=54\n\
    \  local mmm=55\n  local nnn=56\n  local ooo=57\n  local ppp=58\n  local qqq=59\n\
    \  local rrr=60\n  local sss=61\n  local ttt=62\n  local uuu=63\n  local vvv=64\n\
    \  local www=65\n  local xxx=66\n  local yyy=67\n  local zzz=68\n  local aaaa=69\n\
    \  local bbbb=70\n  local cccc=71\n  local dddd=72\n  local eeee=73\n  local ffff=74\n\
    \  local", "    local -a seq\n    seq[0]=1\n    seq[1]=3\n    seq[2]=2\n    for\
    \ ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n            seq[i]=$((1\
    \ + i / 2))\n        else\n            seq[i]=$((seq[i-1] + seq[i-2] + seq[i+1]))\n\
    \        fi\n    done\n    echo ${seq[@]}", "    if [[ $1 -eq 1 ]]; then\n   \
    \     echo 3\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    elif [[ $1 -eq\
    \ 3 ]]; then\n        echo 2\n    else\n        echo $(($(tri $(($1 - 1))) + $(tri\
    \ $(($1 - 2))) + $(tri $(($1 + 1)))))\n    fi", "    local n=$1\n    local i=1\n\
    \    local result=()\n    while [[ $i -le $n ]]; do\n        if [[ $i -eq 1 ]];\
    \ then\n            result+=(3)\n        elif [[ $((i % 2)) -eq 0 ]]; then\n \
    \           result+=($((i / 2)))\n        else\n            result+=($((result[i\
    \ - 1] + result[i - 2] + result[i - 3])))\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo \"${result[@]}\"", "    local n=$1\n    local i=0\n    local\
    \ tri_list=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n  \
    \          tri_list[$i]=1\n        elif [ $i -eq 1 ]; then\n            tri_list[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            tri_list[$i]=2\n        else\n \
    \           if [ $((i % 2)) -eq 0 ]; then\n                tri_list[$i]=$((i /\
    \ 2))\n            else\n                tri_list[$i]=$((tri_list[$((i - 1))]\
    \ + tri_list[$((i - 2))] + tri_list[$((i + 1))]))\n            fi\n        fi\n\
    \        i=$((i + 1))\n    done\n    echo ${tri_list[@]}", "    local n=$1\n \
    \   local result=()\n    local tri_1=3\n    local tri_2=2\n    local tri_3=1\n\
    \    local tri_n=0\n    for ((i=1; i<=n; i++)); do\n        if ((i == 1)); then\n\
    \            tri_n=$tri_1\n        elif ((i == 2)); then\n            tri_n=$tri_2\n\
    \        elif ((i == 3)); then\n            tri_n=$tri_3\n        else\n     \
    \       if ((i % 2 == 0)); then\n                tri_n=$((i / 2))\n          \
    \  else\n                tri_n=$((tri_1 + tri_2 + tri_3))\n                tri_1=$tri_2\n\
    \                tri_2=$tri_3\n                tri_3=$tri_n\n            fi\n\
    \        fi\n        result+=($tri_n)\n    done\n    echo ${result[@]}", "  local\
    \ n=$1\n  local i=1\n  local a=1\n  local b=3\n  local c=2\n  local d=0\n  local\
    \ result=()\n  while [ $i -le $n ]; do\n    if [ $((i % 2)) -eq 0 ]; then\n  \
    \    d=$((i / 2))\n    else\n      d=$((a + b + c))\n      a=$b\n      b=$c\n\
    \      c=$d\n    fi\n    result+=(\"$d\")\n    i=$((i + 1))\n  done\n  echo \"\
    ${result[@]}\"", "    local n=$1\n    local a=1\n    local b=3\n    local c=2\n\
    \    local d=0\n    local i=0\n    local arr=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            arr[$i]=$a\n        elif [ $i -eq\
    \ 1 ]; then\n            arr[$i]=$b\n        elif [ $i -eq 2 ]; then\n       \
    \     arr[$i]=$c\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n  \
    \              d=$((i / 2))\n            else\n                d=$((a + b + c))\n\
    \                a=$b\n                b=$c\n                c=$d\n          \
    \  fi\n            arr[$i]=$d\n        fi\n        i=$((i + 1))\n    done\n  \
    \  echo ${arr[@]}", "    local n=\"$1\"\n    local i=0\n    local a=3\n    local\
    \ b=1\n    local c=2\n    local d=0\n    local result=\"$a\"\n    while [ $i -lt\
    \ $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n\
    \        else\n            d=$((a + b + c))\n        fi\n        result=\"$result\
    \ $d\"\n        a=$b\n        b=$c\n        c=$d\n        i=$((i + 1))\n    done\n\
    \    echo $result", "    # Write your code here\n    # To print results to the\
    \ standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo\
    \ \"Hello world\"", "    local n=$1\n    local result=()\n    for ((i=1; i<=n;\
    \ i++)); do\n        if ((i == 1)); then\n            result+=(\"3\")\n      \
    \  elif ((i == 2)); then\n            result+=(\"1\")\n        elif ((i == 3));\
    \ then\n            result+=(\"2\")\n        elif ((i % 2 == 0)); then\n     \
    \       result+=(\"$((i / 2))\")\n        else\n            result+=(\"$((result[i-1]\
    \ + result[i-2] + result[i-3]))\")\n        fi\n    done\n    echo \"${result[@]}\"",
  "    local n=$1\n    local i=1\n    local seq=\"\"\n    while [[ $i -le $n ]]; do\n\
    \        if [[ $i -eq 1 ]]; then\n            seq=\"$seq 3\"\n        elif [[\
    \ $((i % 2)) -eq 0 ]]; then\n            seq=\"$seq $((i / 2 + 1))\"\n       \
    \ else\n            local prev1=$(echo $seq | cut -d \" \" -f $((i - 1)))\n  \
    \          local prev2=$(echo $seq | cut -d \" \" -f $((i - 2)))\n           \
    \ local prev3=$(echo $seq | cut -d \" \" -f $((i + 1)))\n            seq=\"$seq\
    \ $((prev1 + prev2 + prev3))\"\n        fi\n        i=$((i + 1))\n    done\n \
    \   echo $seq", "    local n=$1\n    local i=1\n    local a=3\n    local b=1\n\
    \    local c=2\n    local d=0\n    local result=()\n    while [ $i -le $n ]; do\n\
    \        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n        else\n\
    \            d=$((a + b + c))\n            a=$b\n            b=$c\n          \
    \  c=$d\n        fi\n        result+=($d)\n        i=$((i + 1))\n    done\n  \
    \  echo \"${result[@]}\"", "    local n=$1\n    local result=()\n    local i=0\n\
    \    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n\
    \        elif [ $i -eq 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2\
    \ ]; then\n            tri_n=2\n        else\n            if [ $((i % 2)) -eq\
    \ 0 ]; then\n                tri_n=$((1 + i / 2))\n            else\n        \
    \        tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n            fi\n        fi\n\
    \        result+=(\"$tri_n\")\n        tri_n_3=$tri_n_2\n        tri_n_2=$tri_n_1\n\
    \        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"",
  "    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=$1;\
    \ i++)); do\n        if ((i%2==0)); then\n            arr[i]=$((i/2))\n      \
    \  else\n            arr[i]=$((arr[i-1]+arr[i-2]+arr[i+1]))\n        fi\n    done\n\
    \    echo ${arr[@]}", "    local n=$1\n    local res=\"1\"\n    local i=1\n  \
    \  while [ $i -lt $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n          \
    \  res=\"$res $(($i / 2 + 1))\"\n        else\n            res=\"$res $(($(tri\
    \ $((i - 1))) + $(tri $((i - 2))) + $(tri $((i + 1)))))\"\n        fi\n      \
    \  i=$((i + 1))\n    done\n    echo $res", "    local n=\"$1\"\n    local tri_n=\"\
    3\"\n    local tri_n_1=\"3\"\n    local tri_n_2=\"1\"\n    local tri_n_3=\"0\"\
    \n    local i\n    for ((i = 1; i <= n; i++)); do\n        if ((i == 1)); then\n\
    \            echo \"$tri_n\"\n        elif ((i == 2)); then\n            echo\
    \ \"$tri_n_1\"\n        elif ((i == 3)); then\n            echo \"$tri_n_2\"\n\
    \        else\n            if ((i % 2 == 0)); then\n                tri_n=\"$((i\
    \ / 2 + 1))\"\n            else\n                tri_n=\"$((tri_n_1 + tri_n_2\
    \ + tri_n_3))\"\n            fi\n            tri_n_3=\"$tri_n_2\"\n          \
    \  tri_n_2=\"$tri_n_1\"\n            tri_n_1=\"$tri_n\"\n            echo \"$tri_n\"\
    \n        fi\n    done", "    local n=$1\n    local i=1\n    local tri_list=()\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n            tri_list+=(3)\n\
    \        elif [ $((i % 2)) -eq 0 ]; then\n            tri_list+=($((i / 2 + 1)))\n\
    \        else\n            tri_list+=($((tri_list[i - 2] + tri_list[i - 3] + tri_list[i\
    \ - 1])))\n        fi\n        i=$((i + 1))\n    done\n    echo ${tri_list[@]}",
  "    local n=$1\n    local i=0\n    local tri_array=()\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            tri_array[$i]=1\n        elif\
    \ [ $i -eq 1 ]; then\n            tri_array[$i]=3\n        elif [ $i -eq 2 ];\
    \ then\n            tri_array[$i]=2\n        else\n            if [ $((i % 2))\
    \ -eq 0 ]; then\n                tri_array[$i]=$((i / 2))\n            else\n\
    \                tri_array[$i]=$((tri_array[$((i - 1))] + tri_array[$((i - 2))]\
    \ + tri_array[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo ${tri_array[@]}", "    local n=$1\n    local result=()\n \
    \   local tri_n=3\n    local tri_n_1=3\n    local tri_n_2=1\n    local tri_n_3=0\n\
    \    for ((i = 0; i <= n; i++)); do\n        if ((i == 0)); then\n           \
    \ result+=(\"1\")\n        elif ((i == 1)); then\n            result+=(\"3\")\n\
    \        elif ((i == 2)); then\n            result+=(\"2\")\n        else\n  \
    \          if ((i % 2 == 0)); then\n                tri_n=$((i / 2))\n       \
    \     else\n                tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n         \
    \   fi\n            result+=(\"$tri_n\")\n            tri_n_3=$tri_n_2\n     \
    \       tri_n_2=$tri_n_1\n            tri_n_1=$tri_n\n        fi\n    done\n \
    \   echo \"${result[@]}\"", "  local n=$1\n  local i=0\n  local result=()\n  while\
    \ [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n      result+=(\"1\")\n    elif\
    \ [ $i -eq 1 ]; then\n      result+=(\"3\")\n    elif [ $i -eq 2 ]; then\n   \
    \   result+=(\"2\")\n    else\n      result+=(\"$((${result[$(($i - 1))]} + ${result[$(($i\
    \ - 2))]} + ${result[$(($i - 3))]}))\")\n    fi\n    i=$(($i + 1))\n  done\n \
    \ echo \"${result[@]}\"", "    local n=$1\n    local i=1\n    local a=1\n    local\
    \ b=3\n    local c=2\n    local d=0\n    local result=()\n    while [ $i -le $n\
    \ ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n   \
    \     else\n            d=$((a + b + c))\n            a=$b\n            b=$c\n\
    \            c=$d\n        fi\n        result+=($d)\n        i=$((i + 1))\n  \
    \  done\n    echo ${result[@]}", "    local n=\"$1\"\n    local -a arr\n    arr[0]=1\n\
    \    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=n; i++)); do\n        if ((i%2==0));\
    \ then\n            arr[i]=$((i/2))\n        else\n            arr[i]=$((arr[i-1]+arr[i-2]+arr[i+1]))\n\
    \        fi\n    done\n    echo \"${arr[@]}\"", "    local n=$1\n    local i=0\n\
    \    local a=1\n    local b=3\n    local c=2\n    local d=0\n    local res=()\n\
    \    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n        \
    \    d=$((i / 2))\n        else\n            d=$((a + b + c))\n            a=$b\n\
    \            b=$c\n            c=$d\n        fi\n        res+=(\"$d\")\n     \
    \   i=$((i + 1))\n    done\n    echo \"${res[@]}\"", "\tlocal n=$1\n\tlocal i=0\n\
    \tlocal res=()\n\twhile [ $i -le $n ]; do\n\t\tif [ $i -eq 0 ]; then\n\t\t\tres[$i]=1\n\
    \t\telif [ $i -eq 1 ]; then\n\t\t\tres[$i]=3\n\t\telif [ $i -eq 2 ]; then\n\t\t\
    \tres[$i]=2\n\t\telse\n\t\t\tif [ $((i % 2)) -eq 0 ]; then\n\t\t\t\tres[$i]=$((i\
    \ / 2))\n\t\t\telse\n\t\t\t\tres[$i]=$((res[$((i - 1))] + res[$((i - 2))] + res[$((i\
    \ + 1))]))\n\t\t\tfi\n\t\tfi\n\t\ti=$((i + 1))\n\tdone\n\techo ${res[@]}", " \
    \   local n=$1\n    local a=3\n    local b=1\n    local c=2\n    local d=0\n \
    \   local i=0\n    local res=()\n    while [ $i -le $n ]; do\n        if [ $((i\
    \ % 2)) -eq 0 ]; then\n            res+=($((a + i / 2)))\n        else\n     \
    \       res+=($((a + b + c)))\n            d=$c\n            c=$b\n          \
    \  b=$a\n            a=$d\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${res[@]}", "  local -a tri_array\n  tri_array[0]=1\n  tri_array[1]=3\n  tri_array[2]=2\n\
    \  for ((i=3; i<=$1; i++)); do\n    if ((i%2==0)); then\n      tri_array[$i]=$((i/2))\n\
    \    else\n      tri_array[$i]=$((tri_array[$i-1]+tri_array[$i-2]+tri_array[$i+1]))\n\
    \    fi\n  done\n  echo ${tri_array[@]}", "    local n=$1\n    local i=1\n   \
    \ local result=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n\
    \            result+=(3)\n        elif [ $((i % 2)) -eq 0 ]; then\n          \
    \  result+=($((i / 2)))\n        else\n            result+=($((result[i - 2] +\
    \ result[i - 1] + result[i])))\n        fi\n        i=$((i + 1))\n    done\n \
    \   echo ${result[@]}", "    local n=$1\n    local i=0\n    local result=()\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n\
    \                result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${result[@]}", "    local n=$1\n    local a=3\n    local b=1\n    local c=2\n\
    \    local d=0\n    local i=1\n    local arr=()\n    while [ $i -le $n ]; do\n\
    \        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n        else\n\
    \            d=$((a + b + c))\n            a=$b\n            b=$c\n          \
    \  c=$d\n        fi\n        arr+=($d)\n        i=$((i + 1))\n    done\n    echo\
    \ ${arr[@]}", "    local n=$1\n    local result=()\n    local tri_1=3\n    local\
    \ tri_2=1\n    local tri_3=3\n    local tri_n=0\n    for ((i=1; i<=n; i++)); do\n\
    \        if ((i == 1)); then\n            tri_n=3\n        elif ((i == 2)); then\n\
    \            tri_n=1\n        elif ((i == 3)); then\n            tri_n=3\n   \
    \     else\n            if ((i % 2 == 0)); then\n                tri_n=$((i /\
    \ 2))\n            else\n                tri_n=$((tri_1 + tri_2 + tri_3))\n  \
    \          fi\n        fi\n        result+=(\"$tri_n\")\n        tri_1=$tri_2\n\
    \        tri_2=$tri_3\n        tri_3=$tri_n\n    done\n    echo \"${result[@]}\"",
  "    local n=$1\n    local result=()\n    local i=0\n    while [[ $i -le $n ]];\
    \ do\n        if [[ $i -eq 0 ]]; then\n            result+=(1)\n        elif [[\
    \ $i -eq 1 ]]; then\n            result+=(3)\n        elif [[ $i -eq 2 ]]; then\n\
    \            result+=(2)\n        else\n            local n_1=${result[$((i -\
    \ 1))]}\n            local n_2=${result[$((i - 2))]}\n            local n_3=${result[$((i\
    \ - 3))]}\n            if [[ $((i % 2)) -eq 0 ]]; then\n                result+=($((1\
    \ + i / 2)))\n            else\n                result+=($((n_1 + n_2 + n_3)))\n\
    \            fi\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"",
  "    local n=\"$1\"\n    local i=0\n    local a=1\n    local b=3\n    local c=2\n\
    \    local d=0\n    local result=()\n    while [ $i -le $n ]; do\n        if [\
    \ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n        else\n         \
    \   d=$((a + b + c))\n            a=$b\n            b=$c\n            c=$d\n \
    \       fi\n        result+=($d)\n        i=$((i + 1))\n    done\n    echo \"\
    ${result[@]}\"", "    if [[ $1 -eq 1 ]]; then\n        echo \"3\"\n    elif [[\
    \ $1 -eq 2 ]]; then\n        echo \"1 3 2\"\n    else\n        echo \"1 3 2\"\n\
    \        for (( i = 3; i <= $1; i++ )); do\n            if [[ $(( i % 2 )) -eq\
    \ 0 ]]; then\n                echo $(( 1 + i / 2 ))\n            else\n      \
    \          echo $(( $(tri $(( i - 1 ))) + $(tri $(( i - 2 ))) + $(tri $(( i +\
    \ 1 ))) ))\n            fi\n        done\n    fi", "    local n=$1\n    local\
    \ i=0\n    local a=3\n    local b=1\n    local c=0\n    local d=0\n    local result=\"\
    \"\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n     \
    \       d=$((a + i / 2))\n        else\n            d=$((a + b + c))\n       \
    \ fi\n        result=\"$result $d\"\n        a=$b\n        b=$c\n        c=$d\n\
    \        i=$((i + 1))\n    done\n    echo $result", "  local n=$1\n  local i=1\n\
    \  local j=3\n  local k=2\n  local l=8\n  local res=()\n  res+=(\"$i\")\n  res+=(\"\
    $j\")\n  res+=(\"$k\")\n  res+=(\"$l\")\n  for ((i=4; i<=n; i++)); do\n    local\
    \ tmp=$((i % 2))\n    if [ \"$tmp\" -eq 0 ]; then\n      res+=(\"$((i / 2))\"\
    )\n    else\n      res+=(\"$((j + k + l))\")\n      j=$k\n      k=$l\n      l=${res[-1]}\n\
    \    fi\n  done\n  echo \"${res[@]}\"", "    local n=$1\n    local i=1\n    local\
    \ j=3\n    local k=2\n    local l=8\n    local result=\"[\\\"1\\\", \\\"3\\\"\
    , \\\"2\\\", \\\"8\\\"\"\n    while [ $i -lt $n ]; do\n        if [ $((i % 2))\
    \ -eq 0 ]; then\n            j=$((i / 2))\n        else\n            j=$((k +\
    \ l + j))\n            k=$l\n            l=$j\n        fi\n        result=\"$result,\
    \ \\\"$j\\\"\"\n        i=$((i + 1))\n    done\n    echo \"$result]\"", "    local\
    \ n=$1\n    local result=\"['\\\"1\\\"'\"\n    local a=1\n    local b=3\n    local\
    \ c=2\n    local d=0\n    for ((i=2; i<=n; i++)); do\n        if ((i % 2 == 0));\
    \ then\n            d=$((i / 2))\n        else\n            d=$((a + b + c))\n\
    \            a=$b\n            b=$c\n            c=$d\n        fi\n        result=\"\
    $result, '\\\"$d\\\"'\"\n    done\n    echo \"$result]\"", "    local n=$1\n \
    \   local a=3\n    local b=1\n    local c=2\n    local d=0\n    local i=0\n  \
    \  local res=()\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ];\
    \ then\n            d=$((a + i / 2))\n        else\n            d=$((a + b + c))\n\
    \            a=$b\n            b=$c\n            c=$d\n        fi\n        res+=(\"\
    $d\")\n        i=$((i + 1))\n    done\n    echo \"${res[@]}\"", "\tlocal n=$1\n\
    \tlocal res=()\n\tlocal i=1\n\twhile [ $i -le $n ]; do\n\t\tif [ $i -eq 1 ]; then\n\
    \t\t\tres+=(3)\n\t\telif [ $((i % 2)) -eq 0 ]; then\n\t\t\tres+=($((i / 2 + 1)))\n\
    \t\telse\n\t\t\tres+=($((res[i - 2] + res[i - 3] + res[i - 1])))\n\t\tfi\n\t\t\
    i=$((i + 1))\n\tdone\n\techo \"${res[@]}\"", "    local n=$1\n    local i=0\n\
    \    local tri_arr=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            tri_arr[$i]=1\n        elif [ $i -eq 1 ]; then\n            tri_arr[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            tri_arr[$i]=2\n        else\n  \
    \          local prev_1=${tri_arr[$((i - 1))]}\n            local prev_2=${tri_arr[$((i\
    \ - 2))]}\n            local prev_3=${tri_arr[$((i - 3))]}\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                tri_arr[$i]=$((1 + i / 2))\n          \
    \  else\n                tri_arr[$i]=$((prev_1 + prev_2 + prev_3))\n         \
    \   fi\n        fi\n        i=$((i + 1))\n    done\n    echo ${tri_arr[@]}", " \
    \   local n=$1\n    local i=1\n    local a=1\n    local b=3\n    local c=2\n \
    \   local d\n    local result=\"[\\\"1\\\", \\\"3\\\", \\\"2\\\"\"\n    while\
    \ [ $i -lt $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i\
    \ / 2))\n        else\n            d=$((a + b + c))\n            a=$b\n      \
    \      b=$c\n            c=$d\n        fi\n        result=\"$result, \\\"$d\\\"\
    \"\n        i=$((i + 1))\n    done\n    echo \"$result]\"", "    local n=\"$1\"\
    \n    local i=1\n    local result=\"1\"\n    while [ $i -lt $n ]; do\n       \
    \ let i++\n        if [ $((i % 2)) -eq 0 ]; then\n            result=\"$result\
    \ $(($i / 2))\"\n        else\n            result=\"$result $(($(tri $(($i - 1)))\
    \ + $(tri $(($i - 2))) + $(tri $(($i + 1))))))\"\n        fi\n    done\n    echo\
    \ \"$result\"", "\tlocal -i n=$1\n\tlocal -a tri=(1 3 2)\n\tlocal -i i=3\n\twhile\
    \ ((i <= n)); do\n\t\tif ((i % 2 == 0)); then\n\t\t\ttri[i]=$((1 + i / 2))\n\t\
    \telse\n\t\t\ttri[i]=$((tri[i - 1] + tri[i - 2] + tri[i + 1]))\n\t\tfi\n\t\t((i++))\n\
    \tdone\n\techo ${tri[@]}", "    local n=$1\n    local i=1\n    local a=1\n   \
    \ local b=3\n    local c=2\n    local d=0\n    local result=\"\"\n    while [\
    \ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i /\
    \ 2))\n        else\n            d=$((a + b + c))\n            a=$b\n        \
    \    b=$c\n            c=$d\n        fi\n        result=\"$result $d\"\n     \
    \   i=$((i + 1))\n    done\n    echo $result", "    local n=$1\n    local i=1\n\
    \    local result=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n\
    \            result+=(\"3\")\n        elif [ $((i % 2)) -eq 0 ]; then\n      \
    \      result+=(\"$((i / 2))\")\n        else\n            result+=(\"$((result[i\
    \ - 2] + result[i - 1] + result[i]))\")\n        fi\n        i=$((i + 1))\n  \
    \  done\n    echo \"${result[@]}\"", "    local n=$1\n    local i=1\n    local\
    \ res=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n       \
    \     res+=(3)\n        elif [ $((i % 2)) -eq 0 ]; then\n            res+=($((i\
    \ / 2)))\n        else\n            res+=($((res[-1] + res[-2] + res[-3])))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"${res[@]}\"", "    local\
    \ n=$1\n    local result=()\n    local i=0\n    local tri_n=0\n    local tri_n_1=0\n\
    \    local tri_n_2=0\n    local tri_n_3=0\n    while [ $i -le $n ]; do\n     \
    \   if [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq 1 ]; then\n\
    \            tri_n=3\n        elif [ $i -eq 2 ]; then\n            tri_n=2\n \
    \       else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((1\
    \ + i / 2))\n            else\n                tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n\
    \            fi\n        fi\n        result+=(\"$tri_n\")\n        tri_n_3=$tri_n_2\n\
    \        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n\
    \    echo \"${result[@]}\"", "    local n=$1\n    local i=1\n    local tri_n=3\n\
    \    local tri_n_1=3\n    local tri_n_2=1\n    local tri_n_3=0\n    local result=()\n\
    \    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n        \
    \    tri_n=$((i / 2 + 1))\n        else\n            tri_n=$((tri_n_1 + tri_n_2\
    \ + tri_n_3))\n        fi\n        result+=($tri_n)\n        tri_n_3=$tri_n_2\n\
    \        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n\
    \    echo \"${result[@]}\"", "\tlocal n=$1\n\tlocal i=0\n\tlocal arr=()\n\twhile\
    \ [ $i -le $n ]; do\n\t\tif [ $i -eq 1 ]; then\n\t\t\tarr[$i]=3\n\t\telif [ $((i\
    \ % 2)) -eq 0 ]; then\n\t\t\tarr[$i]=$((1 + i / 2))\n\t\telse\n\t\t\tarr[$i]=$((arr[$((i\
    \ - 1))] + arr[$((i - 2))] + arr[$((i + 1))]))\n\t\tfi\n\t\ti=$((i + 1))\n\tdone\n\
    \techo ${arr[@]}", "    local n=$1\n    local result=()\n    local i=0\n    while\
    \ [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result+=(1)\n\
    \        elif [ $i -eq 1 ]; then\n            result+=(3)\n        elif [ $i -eq\
    \ 2 ]; then\n            result+=(2)\n        else\n            if [ $((i % 2))\
    \ -eq 0 ]; then\n                result+=($((i / 2 + 1)))\n            else\n\
    \                result+=($((result[i - 1] + result[i - 2] + result[i - 3])))\n\
    \            fi\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"",
  "    local n=$1\n    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n  \
    \  for ((i=3; i<=n; i++)); do\n        if ((i%2==0)); then\n            arr[i]=$((i/2))\n\
    \        else\n            arr[i]=$((arr[i-1]+arr[i-2]+arr[i+1]))\n        fi\n\
    \    done\n    echo ${arr[@]}", "    local n=$1\n    local i=1\n    local result=()\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n            result+=(3)\n\
    \        elif [ $((i % 2)) -eq 0 ]; then\n            result+=($((i / 2)))\n \
    \       else\n            result+=($((result[i - 2] + result[i - 1] + result[i])))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo ${result[@]}", "    local\
    \ n=$1\n    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3;\
    \ i<=n; i++)); do\n        if ((i % 2 == 0)); then\n            arr[i]=$((1 +\
    \ i / 2))\n        else\n            arr[i]=$((arr[i-1] + arr[i-2] + arr[i+1]))\n\
    \        fi\n    done\n    echo \"${arr[@]}\"", "    local n=\"$1\"\n    local\
    \ i=0\n    local result=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0\
    \ ]; then\n            result[$i]=1\n        elif [ $i -eq 1 ]; then\n       \
    \     result[$i]=3\n        elif [ $i -eq 2 ]; then\n            result[$i]=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i\
    \ / 2))\n            else\n                result[$i]=$((result[$((i - 1))] +\
    \ result[$((i - 2))] + result[$((i + 1))]))\n            fi\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local -i n=$1\n\
    \    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=n;\
    \ i++)); do\n        if ((i%2==0)); then\n            arr[i]=$((i/2))\n      \
    \  else\n            arr[i]=$((arr[i-1]+arr[i-2]+arr[i+1]))\n        fi\n    done\n\
    \    echo \"${arr[@]}\"", "    local n=$1\n    local i=0\n    local a=1\n    local\
    \ b=3\n    local c=2\n    local d=8\n    local result=()\n    while [ $i -le $n\
    \ ]; do\n        result[$i]=$a\n        a=$b\n        b=$c\n        c=$d\n   \
    \     d=$((a + b + c))\n        i=$((i + 1))\n    done\n    echo ${result[@]}",
  "    local n=$1\n    local i=1\n    local res=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 1 ]; then\n            res+=(3)\n        elif [ $((i % 2))\
    \ -eq 0 ]; then\n            res+=($((i / 2)))\n        else\n            res+=($((res[-1]\
    \ + res[-2] + res[-3])))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${res[@]}", "    local n=$1\n    local result=()\n    local i=0\n    while [\
    \ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result+=(\"1\")\n\
    \        elif [ $i -eq 1 ]; then\n            result+=(\"3\")\n        elif [\
    \ $i -eq 2 ]; then\n            result+=(\"2\")\n        else\n            if\
    \ [ $((i % 2)) -eq 0 ]; then\n                result+=(\"$((i / 2 + 1))\")\n \
    \           else\n                result+=(\"$((result[i - 1] + result[i - 2]\
    \ + result[i - 3]))\")\n            fi\n        fi\n        i=$((i + 1))\n   \
    \ done\n    echo \"${result[@]}\"", "    local n=$1\n    local result=()\n   \
    \ local i=0\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n   \
    \ local tri_n_3=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            tri_n=1\n        elif [ $i -eq 1 ]; then\n            tri_n=3\n \
    \       elif [ $i -eq 2 ]; then\n            tri_n=2\n        else\n         \
    \   if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i / 2))\n        \
    \    else\n                tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n          \
    \  fi\n        fi\n        result+=($tri_n)\n        tri_n_3=$tri_n_2\n      \
    \  tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n\
    \    echo ${result[@]}", "    local n=$1\n    local result=()\n    local i=0\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n\
    \                result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${result[@]}", "    local n=\"$1\"\n    local tri_n=\"3\"\n    local tri_n_1=\"\
    3\"\n    local tri_n_2=\"1\"\n    local tri_n_3=\"1\"\n    local i=\"1\"\n   \
    \ local result=\"[\\\"1\\\", \\\"3\\\"\"\n    while [ \"$i\" -lt \"$n\" ]; do\n\
    \        if [ \"$((i % 2))\" -eq \"0\" ]; then\n            tri_n=\"$((i / 2 +\
    \ 1))\"\n        else\n            tri_n=\"$((tri_n_1 + tri_n_2 + tri_n_3))\"\n\
    \            tri_n_3=\"$tri_n_2\"\n            tri_n_2=\"$tri_n_1\"\n        \
    \    tri_n_1=\"$tri_n\"\n        fi\n        result=\"$result, \\\"$tri_n\\\"\"\
    \n        i=\"$((i + 1))\"\n    done\n    echo \"$result]\"", "    local n=\"\
    $1\"\n    local tri_n=\"$(tri_n \"$n\")\"\n    echo \"[$(join_by \", \" $(seq\
    \ 1 \"$tri_n\"))]\"", "    local n=$1\n    local i=0\n    local a=3\n    local\
    \ b=1\n    local c=2\n    local d=0\n    local result=\"\"\n    while [ $i -le\
    \ $n ]; do\n        if [ $i -eq 0 ]; then\n            result=\"$result \\\"$a\\\
    \"\"\n        elif [ $i -eq 1 ]; then\n            result=\"$result \\\"$b\\\"\
    \"\n        elif [ $i -eq 2 ]; then\n            result=\"$result \\\"$c\\\"\"\
    \n        else\n            if [ $((i % 2)) -eq 0 ]; then\n                d=$((i\
    \ / 2))\n            else\n                d=$((a + b + c))\n                a=$b\n\
    \                b=$c\n                c=$d\n            fi\n            result=\"\
    $result \\\"$d\\\"\"\n        fi\n        i=$((i + 1))\n    done\n    echo \"\
    [$result]\"", "    local n=$1\n    local i=1\n    local res=()\n    while [ $i\
    \ -le $n ]; do\n        if [ $i -eq 1 ]; then\n            res+=(3)\n        elif\
    \ [ $((i % 2)) -eq 0 ]; then\n            res+=($((i / 2 + 1)))\n        else\n\
    \            res+=($((res[i - 1] + res[i - 2] + res[i - 3])))\n        fi\n  \
    \      i=$((i + 1))\n    done\n    echo ${res[@]}", "    local n=$1\n    local\
    \ i=1\n    local tri_n=3\n    local tri_n_1=3\n    local tri_n_2=1\n    local\
    \ tri_n_3=0\n    local result=\"\"\n    while [ $i -le $n ]; do\n        if [\
    \ $((i % 2)) -eq 0 ]; then\n            tri_n=$((i / 2 + 1))\n        else\n \
    \           tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n            tri_n_3=$tri_n_2\n\
    \            tri_n_2=$tri_n_1\n            tri_n_1=$tri_n\n        fi\n      \
    \  result=\"$result $tri_n\"\n        i=$((i + 1))\n    done\n    echo $result",
  "    local n=$1\n    local result=()\n    local i=0\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq\
    \ 1 ]; then\n            result[$i]=3\n        elif [ $i -eq 2 ]; then\n     \
    \       result[$i]=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n\
    \                result[$i]=$((i / 2))\n            else\n                result[$i]=$((result[$((i\
    \ - 1))] + result[$((i - 2))] + result[$((i + 1))]))\n            fi\n       \
    \ fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local n=\"\
    $1\"\n    local i=1\n    local tri_n=3\n    local tri_n_1=3\n    local tri_n_2=1\n\
    \    local tri_n_3=1\n    local result=\"[\\\"1\\\", \\\"3\\\"\"\n    while [\
    \ \"$i\" -lt \"$n\" ]; do\n        if [ \"$((i % 2))\" -eq 0 ]; then\n       \
    \     tri_n=$((i / 2 + 1))\n        else\n            tri_n=$((tri_n_1 + tri_n_2\
    \ + tri_n_3))\n        fi\n        result=\"$result, \\\"$tri_n\\\"\"\n      \
    \  tri_n_3=$tri_n_2\n        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n      \
    \  i=$((i + 1))\n    done\n    echo \"$result]\"", "    local n=\"$1\"\n    local\
    \ -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=n; i++));\
    \ do\n        if ((i%2==0)); then\n            arr[i]=$((i/2))\n        else\n\
    \            arr[i]=$((arr[i-1]+arr[i-2]+arr[i+1]))\n        fi\n    done\n  \
    \  echo \"${arr[@]}\"", "    local n=$1\n    local i=1\n    local a=1\n    local\
    \ b=3\n    local c=2\n    local d=0\n    local res=()\n    while [ $i -le $n ];\
    \ do\n        if [ $((i % 2)) -eq 0 ]; then\n            res+=(\"$((i / 2))\"\
    )\n        else\n            d=$((a + b + c))\n            a=$b\n            b=$c\n\
    \            c=$d\n            res+=(\"$d\")\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo \"${res[@]}\"", "    local n=$1\n    local i=0\n    local\
    \ tri_list=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n  \
    \          tri_list[$i]=1\n        elif [ $i -eq 1 ]; then\n            tri_list[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            tri_list[$i]=2\n        else\n \
    \           if [ $((i % 2)) -eq 0 ]; then\n                tri_list[$i]=$((i /\
    \ 2))\n            else\n                tri_list[$i]=$((tri_list[$((i - 1))]\
    \ + tri_list[$((i - 2))] + tri_list[$((i + 1))]))\n            fi\n        fi\n\
    \        i=$((i + 1))\n    done\n    echo \"${tri_list[@]}\"", "    local n=$1\n\
    \    local result=()\n    local i=0\n    local a=1\n    local b=3\n    local c=2\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n\
    \                result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ \"${result[@]}\"", "    local n=$1\n    local i=1\n    local a=1\n    local\
    \ b=3\n    local c=2\n    local d=0\n    local result=()\n    while [ $i -le $n\
    \ ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n   \
    \     else\n            d=$((a + b + c))\n            a=$b\n            b=$c\n\
    \            c=$d\n        fi\n        result+=($d)\n        i=$((i + 1))\n  \
    \  done\n    echo \"${result[@]}\"", "    local n=$1\n    local arr=(1 3 2)\n\
    \    for (( i = 3; i <= n; i++ )); do\n        if (( i % 2 == 0 )); then\n   \
    \         arr[$i]=$(( 1 + i / 2 ))\n        else\n            arr[$i]=$(( arr[$((\
    \ i - 1 ))] + arr[$(( i - 2 ))] + arr[$(( i + 1 ))] ))\n        fi\n    done\n\
    \    echo \"${arr[@]}\"", "    local n=$1\n    local i=1\n    local res=()\n \
    \   while [ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n            res+=(3)\n\
    \        elif [ $((i % 2)) -eq 0 ]; then\n            res+=($((i / 2 + 1)))\n\
    \        else\n            res+=($((res[i - 1] + res[i - 2] + res[i - 3])))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo ${res[@]}", "    local n=$1\n\
    \    local i=0\n    local res=()\n    while [ $i -le $n ]; do\n        if [ $i\
    \ -eq 0 ]; then\n            res[$i]=1\n        elif [ $i -eq 1 ]; then\n    \
    \        res[$i]=3\n        elif [ $i -eq 2 ]; then\n            res[$i]=2\n \
    \       else\n            if [ $((i % 2)) -eq 0 ]; then\n                res[$i]=$((i\
    \ / 2))\n            else\n                res[$i]=$((res[$((i - 1))] + res[$((i\
    \ - 2))] + res[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo ${res[@]}", "    local n=$1\n    local i=0\n    local result=\"\
    \"\n    while [ $i -le $n ]; do\n        result=\"$result $(tri_n $i)\"\n    \
    \    i=$((i + 1))\n    done\n    echo $result", "    local n=$1\n    local i=0\n\
    \    local tri=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            tri[$i]=1\n        elif [ $i -eq 1 ]; then\n            tri[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            tri[$i]=2\n        else\n      \
    \      if [ $((i % 2)) -eq 0 ]; then\n                tri[$i]=$((i / 2))\n   \
    \         else\n                tri[$i]=$((tri[$((i - 1))] + tri[$((i - 2))] +\
    \ tri[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo ${tri[@]}", "    # Write your code here\n    # To print results to the\
    \ standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo\
    \ \"Hello world\"", "    local n=$1\n    local i=0\n    local arr=()\n    while\
    \ [[ $i -le $n ]]; do\n        if [[ $i -eq 0 ]]; then\n            arr[$i]=1\n\
    \        elif [[ $i -eq 1 ]]; then\n            arr[$i]=3\n        elif [[ $i\
    \ -eq 2 ]]; then\n            arr[$i]=2\n        else\n            if [[ $((i\
    \ % 2)) -eq 0 ]]; then\n                arr[$i]=$((i / 2))\n            else\n\
    \                arr[$i]=$((arr[$((i - 1))] + arr[$((i - 2))] + arr[$((i + 1))]))\n\
    \            fi\n        fi\n        i=$((i + 1))\n    done\n    echo ${arr[@]}",
  "    local n=$1\n    local i=0\n    local a=1\n    local b=3\n    local c=2\n  \
    \  local d\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            d=$((a + i / 2))\n        else\n            d=$((a + b + c))\n  \
    \          a=$b\n            b=$c\n            c=$d\n        fi\n        echo\
    \ -n \"\\\"$d\\\" \"\n        i=$((i + 1))\n    done", "    local n=$1\n    local\
    \ i=1\n    local result=()\n    while [[ $i -le $n ]]; do\n        if [[ $i -eq\
    \ 1 ]]; then\n            result+=(\"3\")\n        elif [[ $((i % 2)) -eq 0 ]];\
    \ then\n            result+=(\"$((i / 2))\")\n        else\n            result+=(\"\
    $((result[i - 1] + result[i - 2] + result[i - 3]))\")\n        fi\n        ((i++))\n\
    \    done\n    echo \"${result[@]}\"", "  local n=$1\n  local i=1\n  local tri_array=()\n\
    \  while [ $i -le $n ]; do\n    if [ $i -eq 1 ]; then\n      tri_array+=(3)\n\
    \    elif [ $((i % 2)) -eq 0 ]; then\n      tri_array+=($((i / 2 + 1)))\n    else\n\
    \      tri_array+=($((tri_array[$((i - 1))] + tri_array[$((i - 2))] + tri_array[$((i\
    \ + 1))])))\n    fi\n    i=$((i + 1))\n  done\n  echo \"${tri_array[@]}\"", " \
    \ local n=$1\n  local result=()\n  local i=0\n  while [ $i -le $n ]; do\n    if\
    \ [ $i -eq 0 ]; then\n      result[$i]=1\n    elif [ $i -eq 1 ]; then\n      result[$i]=3\n\
    \    elif [ $i -eq 2 ]; then\n      result[$i]=2\n    else\n      local n_minus_1=${result[$((i\
    \ - 1))]}\n      local n_minus_2=${result[$((i - 2))]}\n      local n_minus_3=${result[$((i\
    \ - 3))]}\n      result[$i]=$((n_minus_1 + n_minus_2 + n_minus_3))\n    fi\n \
    \   i=$((i + 1))\n  done\n  echo \"${result[@]}\"", "    local n=$1\n    local\
    \ i=0\n    local tri1=1\n    local tri2=3\n    local tri3=2\n    local tri4=0\n\
    \    local result=\"\"\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ];\
    \ then\n            result=\"$result \\\"$tri1\\\"\"\n        elif [ $i -eq 1\
    \ ]; then\n            result=\"$result \\\"$tri2\\\"\"\n        elif [ $i -eq\
    \ 2 ]; then\n            result=\"$result \\\"$tri3\\\"\"\n        else\n    \
    \        if [ $((i % 2)) -eq 0 ]; then\n                tri4=$((i / 2))\n    \
    \        else\n                tri4=$((tri1 + tri2 + tri3))\n            fi\n\
    \            result=\"$result \\\"$tri4\\\"\"\n            tri1=$tri2\n      \
    \      tri2=$tri3\n            tri3=$tri4\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo \"[$result]\"", "  local n=$1\n  local i=1\n  local result=\"\
    \"\n  while [ $i -le $n ]; do\n    if [ $i -eq 1 ]; then\n      result=\"$result\
    \ 3\"\n    elif [ $((i % 2)) -eq 0 ]; then\n      result=\"$result $((i / 2 +\
    \ 1))\"\n    else\n      result=\"$result $((result[$((i - 1))] + result[$((i\
    \ - 2))] + result[$((i + 1))]))\"\n    fi\n    i=$((i + 1))\n  done\n  echo $result",
  "    local n=$1\n    local i=0\n    local tri_list=()\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            tri_list+=(1)\n        elif [\
    \ $i -eq 1 ]; then\n            tri_list+=(3)\n        elif [ $i -eq 2 ]; then\n\
    \            tri_list+=(2)\n        else\n            if [ $((i % 2)) -eq 0 ];\
    \ then\n                tri_list+=($((i / 2)))\n            else\n           \
    \     tri_list+=($((tri_list[$((i - 1))] + tri_list[$((i - 2))] + tri_list[$((i\
    \ + 1))])))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${tri_list[@]}", "    local n=$1\n    local i=1\n    local j=3\n    local k=2\n\
    \    local l=8\n    local result=(\"$i\" \"$j\" \"$k\" \"$l\")\n    while [ $n\
    \ -gt 3 ]; do\n        i=$j\n        j=$k\n        k=$l\n        l=$((i + j +\
    \ k))\n        result+=(\"$l\")\n        n=$((n - 1))\n    done\n    echo \"${result[@]}\"",
  "    local n=$1\n    local i=1\n    local a=1\n    local b=3\n    local c=2\n  \
    \  local d=0\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n\
    \            d=$((i / 2))\n        else\n            d=$((a + b + c))\n      \
    \      a=$b\n            b=$c\n            c=$d\n        fi\n        echo -n \"\
    \\\"$d\\\" \"\n        i=$((i + 1))\n    done", "    local n=$1\n    local i=0\n\
    \    local res=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            res[$i]=1\n        elif [ $i -eq 1 ]; then\n            res[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            res[$i]=2\n        else\n      \
    \      if [ $((i % 2)) -eq 0 ]; then\n                res[$i]=$((i / 2))\n   \
    \         else\n                res[$i]=$((res[$((i - 1))] + res[$((i - 2))] +\
    \ res[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"${res[@]}\"", "    local n=$1\n    local result=\"['\\\"1\\\"'\"\n\
    \    local a=1\n    local b=3\n    local c=2\n    for (( i=2; i<=n; i++ )); do\n\
    \        if (( i % 2 == 0 )); then\n            result=\"$result, '\\\"$((i/2))\\\
    \"'\"\n        else\n            result=\"$result, '\\\"$((a+b+c))\\\"'\"\n  \
    \          a=$b\n            b=$c\n            c=$((a+b+c))\n        fi\n    done\n\
    \    echo \"$result]\"", "    local n=$1\n    local i=0\n    local j=1\n    local\
    \ k=2\n    local l=3\n    local m=4\n    local res=()\n    res[0]=1\n    res[1]=3\n\
    \    res[2]=2\n    res[3]=8\n    while [ $m -le $n ]; do\n        if [ $((m %\
    \ 2)) -eq 0 ]; then\n            res[$m]=$((m / 2 + 1))\n        else\n      \
    \      res[$m]=$((res[$i] + res[$j] + res[$k]))\n        fi\n        i=$((i +\
    \ 1))\n        j=$((j + 1))\n        k=$((k + 1))\n        l=$((l + 1))\n    \
    \    m=$((m + 1))\n    done\n    echo ${res[@]}", "  local n=\"$1\"\n  local -a\
    \ arr\n  arr[0]=1\n  arr[1]=3\n  arr[2]=2\n  for ((i=3; i<=n; i++)); do\n    if\
    \ ((i % 2 == 0)); then\n      arr[i]=$((1 + i / 2))\n    else\n      arr[i]=$((arr[i-1]\
    \ + arr[i-2] + arr[i+1]))\n    fi\n  done\n  echo \"${arr[@]}\"", "    local n=$1\n\
    \    local seq=(1 3 2)\n    local i=3\n    while [ $i -le $n ]; do\n        if\
    \ [ $((i % 2)) -eq 0 ]; then\n            seq[$i]=$((1 + i / 2))\n        else\n\
    \            seq[$i]=$((seq[$((i - 1))] + seq[$((i - 2))] + seq[$((i + 1))]))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo ${seq[@]}", "    local n=$1\n\
    \    local result=()\n    local i=0\n    while [ $i -le $n ]; do\n        if [\
    \ $i -eq 0 ]; then\n            result+=(\"1\")\n        elif [ $i -eq 1 ]; then\n\
    \            result+=(\"3\")\n        elif [ $i -eq 2 ]; then\n            result+=(\"\
    2\")\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n              \
    \  result+=(\"$((i / 2 + 1))\")\n            else\n                result+=(\"\
    $((result[i - 1] + result[i - 2] + result[i - 3]))\")\n            fi\n      \
    \  fi\n        i=$((i + 1))\n    done\n    echo ${result[@]}", "    local n=$1\n\
    \    local i=1\n    local j=3\n    local k=2\n    local l=8\n    local res=\"\
    ['\\\"1\\\"', '\\\"3\\\"', '\\\"2\\\"', '\\\"8\\\"'\"\n    while [ $i -lt $n ];\
    \ do\n        res=\"$res, '\\\"$j\\\"', '\\\"$k\\\"', '\\\"$l\\\"'\"\n       \
    \ j=$((j + k + l))\n        k=$((k + l))\n        l=$((l + j))\n        i=$((i\
    \ + 1))\n    done\n    echo \"$res]\"", "\tlocal n=$1\n\tlocal a=1\n\tlocal b=3\n\
    \tlocal c=2\n\tlocal d=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\
    \tlocal m=0\n\tlocal o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\tlocal s=0\n\
    \tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\tlocal y=0\n\
    \tlocal z=0\n\tlocal aa=0\n\tlocal bb=0\n\tlocal cc=0\n\tlocal dd=0\n\tlocal ee=0\n\
    \tlocal ff=0\n\tlocal gg=0\n\tlocal hh=0\n\tlocal ii=0\n\tlocal jj=0\n\tlocal\
    \ kk=0\n\tlocal ll=0\n\tlocal mm=0\n\tlocal nn=0\n\tlocal oo=0\n\tlocal pp=0\n\
    \tlocal qq=0\n\tlocal rr=0\n\tlocal ss=0\n\tlocal tt=0\n\tlocal uu=0\n\tlocal\
    \ vv=0\n\tlocal ww=0\n\tlocal xx=0\n\tlocal yy=0\n\tlocal zz=0\n\tlocal aaa=0\n\
    \tlocal bbb=0\n\tlocal ccc=0\n\tlocal ddd=0\n\tlocal eee=0\n\tlocal fff=0\n\t\
    local ggg=0\n\tlocal hhh=0\n\tlocal iii=0\n\tlocal jjj=0\n\tlocal kkk=0\n\tlocal\
    \ lll=0\n\tlocal mmm=0\n\tlocal nnn=0\n\tlocal ooo=0\n\tlocal ppp=0\n\tlocal qqq=0\n\
    \tlocal rrr=0\n\tlocal sss=0\n\tlocal ttt=0\n\tlocal uuu=0\n\tlocal vvv=0\n\t\
    local www=0\n\tlocal xxx=0\n\tlocal yyy=0\n\tlocal zzz=0\n\tlocal aaaa=0\n\tlocal\
    \ bbbb=0\n\tlocal cccc=0\n\tlocal d", "    local n=$1\n    local a=1\n    local\
    \ b=3\n    local c=2\n    local d\n    local i=0\n    local result=()\n    while\
    \ [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i\
    \ / 2))\n        else\n            d=$((a + b + c))\n            a=$b\n      \
    \      b=$c\n            c=$d\n        fi\n        result+=(\"$d\")\n        i=$((i\
    \ + 1))\n    done\n    echo \"${result[@]}\"", "  local n=$1\n  local i=1\n  local\
    \ tri_list=()\n  local tri_list_str=\"\"\n  while [ $i -le $n ]; do\n    if [\
    \ $i -eq 1 ]; then\n      tri_list[$i]=3\n    elif [ $((i % 2)) -eq 0 ]; then\n\
    \      tri_list[$i]=$((i / 2))\n    else\n      tri_list[$i]=$((tri_list[$((i\
    \ - 1))] + tri_list[$((i - 2))] + tri_list[$((i + 1))]))\n    fi\n    i=$((i +\
    \ 1))\n  done\n  for i in ${tri_list[@]}; do\n    tri_list_str=\"$tri_list_str\
    \ \\\"$i\\\"\"\n  done\n  echo \"[$tri_list_str]\"", "    local n=$1\n    local\
    \ seq=()\n    local i=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ];\
    \ then\n            seq[$i]=1\n        elif [ $i -eq 1 ]; then\n            seq[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            seq[$i]=2\n        else\n      \
    \      if [ $((i % 2)) -eq 0 ]; then\n                seq[$i]=$((i / 2))\n   \
    \         else\n                seq[$i]=$((seq[$((i - 1))] + seq[$((i - 2))] +\
    \ seq[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"${seq[@]}\"", "    local n=$1\n    local i=1\n    local res=()\n \
    \   while [ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n            res+=(3)\n\
    \        elif [ $((i % 2)) -eq 0 ]; then\n            res+=($((i / 2)))\n    \
    \    else\n            res+=($((res[i - 2] + res[i - 1] + res[i])))\n        fi\n\
    \        i=$((i + 1))\n    done\n    echo \"${res[@]}\"", "    local n=$1\n  \
    \  local i=1\n    local a=1\n    local b=3\n    local c=2\n    local d=0\n   \
    \ local result=\"\"\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq\
    \ 0 ]; then\n            d=$((i / 2))\n        else\n            d=$((a + b +\
    \ c))\n            a=$b\n            b=$c\n            c=$d\n        fi\n    \
    \    result=\"$result $d\"\n        i=$((i + 1))\n    done\n    echo $result",
  "    local n=\"$1\"\n    local i=0\n    local result=()\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            result+=(\"1\")\n        elif\
    \ [ $i -eq 1 ]; then\n            result+=(\"3\")\n        elif [ $i -eq 2 ];\
    \ then\n            result+=(\"2\")\n        else\n            if [ $((i % 2))\
    \ -eq 0 ]; then\n                result+=(\"$((i / 2 + 1))\")\n            else\n\
    \                result+=(\"$((result[i - 1] + result[i - 2] + result[i - 3]))\"\
    )\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"",
  "    local n=$1\n    local result=()\n    local i=0\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq\
    \ 1 ]; then\n            result[$i]=3\n        elif [ $i -eq 2 ]; then\n     \
    \       result[$i]=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n\
    \                result[$i]=$((i / 2))\n            else\n                result[$i]=$((result[$((i\
    \ - 1))] + result[$((i - 2))] + result[$((i + 1))]))\n            fi\n       \
    \ fi\n        i=$((i + 1))\n    done\n    echo ${result[@]}", "    local n=$1\n\
    \    local result=()\n    local i=0\n    while [ $i -le $n ]; do\n        if [\
    \ $i -eq 0 ]; then\n            result+=(\"1\")\n        elif [ $i -eq 1 ]; then\n\
    \            result+=(\"3\")\n        elif [ $i -eq 2 ]; then\n            result+=(\"\
    2\")\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n              \
    \  result+=(\"$((i / 2 + 1))\")\n            else\n                result+=(\"\
    $((result[i - 1] + result[i - 2] + result[i - 3]))\")\n            fi\n      \
    \  fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local\
    \ n=$1\n    local result=()\n    local i=0\n    while [ $i -le $n ]; do\n    \
    \    if [ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq 1\
    \ ]; then\n            result[$i]=3\n        elif [ $i -eq 2 ]; then\n       \
    \     result[$i]=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n\
    \                result[$i]=$((i / 2))\n            else\n                result[$i]=$((result[$((i\
    \ - 1))] + result[$((i - 2))] + result[$((i + 1))]))\n            fi\n       \
    \ fi\n        i=$((i + 1))\n    done\n    echo ${result[@]}", "    local n=\"\
    $1\"\n    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3;\
    \ i<=n; i++)); do\n        if ((i % 2 == 0)); then\n            arr[i]=$((i /\
    \ 2))\n        else\n            arr[i]=$((arr[i-1] + arr[i-2] + arr[i+1]))\n\
    \        fi\n    done\n    echo ${arr[@]}", "    local n=$1\n    local i=1\n \
    \   local a=1\n    local b=3\n    local c=2\n    local d=0\n    local result=\"\
    \"\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n     \
    \       d=$((i / 2))\n        else\n            d=$((a + b + c))\n           \
    \ a=$b\n            b=$c\n            c=$d\n        fi\n        result=\"$result\
    \ $d\"\n        i=$((i + 1))\n    done\n    echo $result", "    local n=$1\n \
    \   local i=1\n    local a=1\n    local b=3\n    local c=2\n    local d=0\n  \
    \  local result=\"\"\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq\
    \ 0 ]; then\n            d=$((i / 2))\n        else\n            d=$((a + b +\
    \ c))\n            a=$b\n            b=$c\n            c=$d\n        fi\n    \
    \    result=\"$result \\\"$d\\\"\"\n        i=$((i + 1))\n    done\n    echo \"\
    [$result]\"", "  local n=\"$1\"\n  local i=1\n  local a=1\n  local b=3\n  local\
    \ c=2\n  local d=0\n  local result=()\n  while [ \"$i\" -le \"$n\" ]; do\n   \
    \ if [ \"$i\" -eq \"1\" ]; then\n      result+=(\"$a\")\n    elif [ \"$i\" -eq\
    \ \"2\" ]; then\n      result+=(\"$b\")\n    elif [ \"$i\" -eq \"3\" ]; then\n\
    \      result+=(\"$c\")\n    else\n      if [ \"$((i % 2))\" -eq \"0\" ]; then\n\
    \        d=$((i / 2))\n      else\n        d=$((a + b + c))\n      fi\n      result+=(\"\
    $d\")\n      a=\"$b\"\n      b=\"$c\"\n      c=\"$d\"\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo \"${result[@]}\"", "    local n=$1\n    local -a arr\n    arr[0]=1\n\
    \    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=n; i++)); do\n        if ((i %\
    \ 2 == 0)); then\n            arr[i]=$((i / 2))\n        else\n            arr[i]=$((arr[i-1]\
    \ + arr[i-2] + arr[i+1]))\n        fi\n    done\n    echo \"${arr[@]}\"", "  \
    \  local n=$1\n    local result=\"[\\\"1\\\"\"\n    local i=1\n    local a=1\n\
    \    local b=3\n    local c=2\n    while [ $i -lt $n ]; do\n        if [ $((i\
    \ % 2)) -eq 0 ]; then\n            result=\"$result, \\\"$((i / 2))\\\"\"\n  \
    \      else\n            result=\"$result, \\\"$((a + b + c))\\\"\"\n        \
    \    a=$b\n            b=$c\n            c=$((a + b + c))\n        fi\n      \
    \  i=$((i + 1))\n    done\n    echo \"$result]\"", "    local n=$1\n    local\
    \ i=1\n    local arr=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 1 ];\
    \ then\n            arr+=(\"3\")\n        elif [ $((i % 2)) -eq 0 ]; then\n  \
    \          arr+=(\"$((i / 2))\")\n        else\n            arr+=(\"$((arr[i -\
    \ 2] + arr[i - 1] + arr[i]))\")\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo ${arr[@]}", "    local -i n=$1\n    local -a arr\n    arr[0]=1\n   \
    \ arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=n; i++)); do\n        if ((i % 2 ==\
    \ 0)); then\n            arr[i]=$((i / 2))\n        else\n            arr[i]=$((arr[i-1]\
    \ + arr[i-2] + arr[i+1]))\n        fi\n    done\n    echo \"${arr[@]}\"", "  \
    \  local n=\"$1\"\n    local a=3\n    local b=1\n    local c=2\n    local d=0\n\
    \    local i=0\n    local result=()\n    while [ $i -le $n ]; do\n        if [\
    \ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n        else\n         \
    \   d=$((a + b + c))\n            a=$b\n            b=$c\n            c=$d\n \
    \       fi\n        result[$i]=$d\n        i=$((i + 1))\n    done\n    echo \"\
    ${result[@]}\"", "    local n=$1\n    local i=1\n    local a=1\n    local b=3\n\
    \    local c=2\n    local d=0\n    local res=()\n    while [ $i -le $n ]; do\n\
    \        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n        else\n\
    \            d=$((a + b + c))\n            a=$b\n            b=$c\n          \
    \  c=$d\n        fi\n        res+=($d)\n        i=$((i + 1))\n    done\n    echo\
    \ ${res[@]}", "    local n=\"$1\"\n    local a=3\n    local b=1\n    local c=2\n\
    \    local d=0\n    local i=0\n    local result=\"\"\n    while [ $i -le $n ];\
    \ do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n      \
    \  else\n            d=$((a + b + c))\n            a=$b\n            b=$c\n  \
    \          c=$d\n        fi\n        result=\"$result $d\"\n        i=$((i + 1))\n\
    \    done\n    echo $result", "    local n=$1\n    local i=0\n    local result=()\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n\
    \                result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${result[@]}", "    local n=$1\n    local result=()\n    local i=0\n    local\
    \ tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n   \
    \ while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n\
    \        elif [ $i -eq 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2\
    \ ]; then\n            tri_n=2\n        else\n            if [ $((i % 2)) -eq\
    \ 0 ]; then\n                tri_n=$((1 + i / 2))\n            else\n        \
    \        tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n            fi\n        fi\n\
    \        result+=($tri_n)\n        tri_n_3=$tri_n_2\n        tri_n_2=$tri_n_1\n\
    \        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"",
  "    local n=$1\n    local i=0\n    local a=1\n    local b=3\n    local c=2\n  \
    \  local d=0\n    local arr=()\n    while [ $i -le $n ]; do\n        if [ $i -eq\
    \ 0 ]; then\n            arr+=(\"$a\")\n        elif [ $i -eq 1 ]; then\n    \
    \        arr+=(\"$b\")\n        elif [ $i -eq 2 ]; then\n            arr+=(\"\
    $c\")\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n             \
    \   d=$((i / 2))\n            else\n                d=$((a + b + c))\n       \
    \         a=$b\n                b=$c\n                c=$d\n            fi\n \
    \           arr+=(\"$d\")\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ \"${arr[@]}\"", "    local n=$1\n    local res=()\n    local i=0\n    local\
    \ tri_n=1\n    local tri_n_1=3\n    local tri_n_2=2\n    while [ $i -le $n ];\
    \ do\n        res+=(\"$tri_n\")\n        if [ $((i % 2)) -eq 0 ]; then\n     \
    \       tri_n=$((1 + i / 2))\n        else\n            tri_n=$((tri_n_1 + tri_n_2\
    \ + tri_n))\n            tri_n_2=$tri_n_1\n            tri_n_1=$tri_n\n      \
    \  fi\n        i=$((i + 1))\n    done\n    echo ${res[@]}", "    local n=$1\n\
    \    local i=1\n    local a=1\n    local b=3\n    local c=2\n    local d=0\n \
    \   local res=\"\"\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0\
    \ ]; then\n            d=$((i / 2))\n        else\n            d=$((a + b + c))\n\
    \            a=$b\n            b=$c\n            c=$d\n        fi\n        res=\"\
    $res $d\"\n        i=$((i + 1))\n    done\n    echo $res", "    local n=\"$1\"\
    \n    local i=1\n    local a=1\n    local b=3\n    local c=2\n    local d=0\n\
    \    local result=\"\"\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq\
    \ 0 ]; then\n            d=$((i / 2))\n        else\n            d=$((a + b +\
    \ c))\n            a=$b\n            b=$c\n            c=$d\n        fi\n    \
    \    result=\"$result $d\"\n        i=$((i + 1))\n    done\n    echo $result",
  "    local n=$1\n    local result=()\n    local tri_1=3\n    local tri_2=1\n   \
    \ local tri_3=3\n    local tri_n=0\n    for ((i=1; i<=n; i++)); do\n        if\
    \ ((i == 1)); then\n            tri_n=$tri_1\n        elif ((i == 2)); then\n\
    \            tri_n=$tri_2\n        elif ((i == 3)); then\n            tri_n=$tri_3\n\
    \        else\n            if ((i % 2 == 0)); then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((tri_1 + tri_2 + tri_3))\n\
    \                tri_1=$tri_2\n                tri_2=$tri_3\n                tri_3=$tri_n\n\
    \            fi\n        fi\n        result+=($tri_n)\n    done\n    echo \"${result[@]}\""]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_124_valid_date
results:
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local pattern=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $pattern ]]; then\n    local month=${BASH_REMATCH[1]}\n   \
    \ local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif [[\
    \ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n   \
    \     if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n    \
    \    else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      fi\n    else\n   \
    \   echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local pattern=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $pattern ]]; then\n    local month=${BASH_REMATCH[1]}\n   \
    \ local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]]; then\n       \
    \ if [[ $((year % 4)) -eq 0 ]]; then\n          if [[ $day -gt 0 && $day -lt 30\
    \ ]]; then\n            echo \"true\"\n          else\n            echo \"false\"\
    \n          fi\n        else\n          if [[ $day -gt 0 && $day -lt 29 ]]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      else\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $day -gt 0 && $day\
    \ -lt 32 ]]; then\n        if [[ $month -eq 1 || $month -eq 3 || $month -eq 5\
    \ || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n\
    \          if [[ $day -lt 32 ]]; then\n            echo \"true\"\n          else\n\
    \            echo \"false\"\n          fi\n        elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n          if [[ $day -lt 31\
    \ ]]; then\n            echo \"true\"\n          else\n            echo \"false\"\
    \n          fi\n        elif [[ $month -eq 2 ]]; then\n          if [[ $day -lt\
    \ 30 ]]; then\n            echo \"true\"\n          else\n            echo \"\
    false\"\n          fi\n        fi\n      else\n        echo \"false\"\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1 | cut -d- -f2)\n   \
    \ local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -le 12 && $month -ge 1\
    \ ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -le 31 && $day -ge 1 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -le 30 && $day\
    \ -ge 1 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -le 29 &&\
    \ $day -ge 1 ]]; then\n          echo \"true\"\n        else\n          echo \"\
    false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  if [[ $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $date | cut -d- -f1)\n    local day=$(echo\
    \ $date | cut -d- -f2)\n    local year=$(echo $date | cut -d- -f3)\n    if [[\
    \ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2\
    \ ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      fi\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print to stdout\n\
    \  # Example: echo \"Hello world\"\n  # echo \"Hello world\"\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    if [[ $1 =~ ^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-[0-9]{4}$ ]];\
    \ then\n      if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n        if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n          if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n            if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n              if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n                if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n                  if [[ $1 =~ ^(0[1-\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmphrngep_t.sh: line 32: unexpected EOF while looking for matching
    `)''\n/tmp/tmphrngep_t.sh: line 60: unexpected argument to conditional binary
    operator\n/tmp/tmphrngep_t.sh: line 60: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  if [[ $date =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local month=$(echo $date | cut -d'-' -f1)\n\
    \  local day=$(echo $date | cut -d'-' -f2)\n  local year=$(echo $date | cut -d'-'\
    \ -f3)\n  local is_leap_year=false\n  if [[ $month -eq 2 && $day -eq 29 ]]; then\n\
    \    if [[ $(($year % 4)) -eq 0 && $(($year % 100)) -ne 0 ]] || [[ $(($year %\
    \ 400)) -eq 0 ]]; then\n      is_leap_year=true\n    fi\n  fi\n  if [[ $month\
    \ -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt 1 || $day -gt 31 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day\
    \ -gt 30 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif [[ $month\
    \ -eq 2 ]]; then\n    if [[ $is_leap_year == false && $day -gt 28 ]]; then\n \
    \     echo \"false\"\n      return\n    elif [[ $is_leap_year == true && $day\
    \ -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  if [[ $month\
    \ -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n  fi\n  echo\
    \ \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    if [[ ${BASH_REMATCH[1]} -eq 2 ]]; then\n      if [[ ${BASH_REMATCH[2]}\
    \ -gt 29 ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n\
    \      fi\n    elif [[ ${BASH_REMATCH[1]} -eq 4 || ${BASH_REMATCH[1]} -eq 6 ||\
    \ ${BASH_REMATCH[1]} -eq 9 || ${BASH_REMATCH[1]} -eq 11 ]]; then\n      if [[\
    \ ${BASH_REMATCH[2]} -gt 30 ]]; then\n        echo \"false\"\n      else\n   \
    \     echo \"true\"\n      fi\n    else\n      echo \"true\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local\
    \ day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 2 ]]; then\n       \
    \ if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      else\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n \
    \         echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n \
    \ fi\n  date=$1\n  IFS='-' read -ra date_arr <<< \"$date\"\n  if [ ${#date_arr[@]}\
    \ -ne 3 ]; then\n    echo \"false\"\n    return\n  fi\n  month=${date_arr[0]}\n\
    \  day=${date_arr[1]}\n  year=${date_arr[2]}\n  if [ $month -lt 1 ] || [ $month\
    \ -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n  if [ $month -eq 1 ]\
    \ || [ $month -eq 3 ] || [ $month -eq 5 ] || [ $month -eq 7 ] || [ $month -eq\
    \ 8 ] || [ $month -eq 10 ] || [ $month -eq 12 ]; then\n    if [ $day -lt 1 ] ||\
    \ [ $day -gt 31 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [\
    \ $month -eq 4 ] || [ $month -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ];\
    \ then\n    if [ $day -lt 1 ] || [ $day -gt 30 ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  elif [ $month -eq 2 ]; then\n    if [ $day -lt 1 ] ||\
    \ [ $day -gt 29 ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  if\
    \ [ $year -lt 1 ]; then\n    echo \"false\"\n    return\n  fi\n  echo \"true\"\
    \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n \
    \ fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  IFS='-' read -r -a date <<< \"$1\"\n  month=\"${date[0]}\"\
    \n  day=\"${date[1]}\"\n  year=\"${date[2]}\"\n  if [ \"$month\" -lt 1 ] || [\
    \ \"$month\" -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n  if [ \"$month\"\
    \ -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n    \
    \  echo \"false\"\n      return\n    fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\"\
    \ -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"\
    $day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  else\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n    \
    \  echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print to stdout\n\
    \  # Use echo \"false\" to print false\n  # Use echo \"true\" to print true\n\
    \  # Use read to read from stdin\n  # Use read var_name to read into a variable\n\
    \  # Use read -a var_name to read into an array\n  # Use read -p \"prompt\" var_name\
    \ to prompt the user for input\n  # Use read -sp \"prompt\" var_name to prompt\
    \ the user for input and hide the input\n  # Use read -n 1 -r -p \"prompt\" var_name\
    \ to prompt the user for input and only accept one character\n  # Use read -t\
    \ 10 -p \"prompt\" var_name to prompt the user for input and only accept input\
    \ for 10 seconds\n  # Use read -d ',' var_name to read until a comma\n  # Use\
    \ read -s var_name to read into a variable and hide the input\n  # Use read -a\
    \ var_name to read into an array\n  # Use read -A var_name to read into an associative\
    \ array\n  # Use read -N 1 var_name to read only one character\n  # Use read -n\
    \ 2 var_name to read only two characters\n  # Use read -t 10 var_name to read\
    \ until 10 seconds have passed\n  # Use read -d ',' var_name to read until a comma\n\
    \  # Use read -s var_name to read into a variable and hide the input\n  # Use\
    \ read -a var_name to read into an array\n  # Use read -A var_name to read into\
    \ an associative array\n  # Use read -N 1 var_name to read only one character\n\
    \  # Use read -n 2 var_name to read only two characters\n  # Use read -t 10 var_name\
    \ to read until 10 seconds have passed\n  # Use read -d ',' var_name to read until\
    \ a comma\n  # Use read -s var_name to read into a variable and hide the input\n\
    \  # Use read -a var_name to read into an array\n  # Use read -A var_name to read\
    \ into an associative array\n  # Use read -N 1 var_name to read only one character\n\
    \  # Use read -n 2 var_name\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[\
    \ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp83l20yfz.sh: line 51: syntax error near unexpected token `}''\n/tmp/tmp83l20yfz.sh:
    line 51: `}''\n"'
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  date=$1\n  if [[ $date =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n \
    \ fi\n  if [[ \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local month=$(echo\
    \ \"$1\" | cut -d- -f1)\n    local day=$(echo \"$1\" | cut -d- -f2)\n    local\
    \ year=$(echo \"$1\" | cut -d- -f3)\n    if [ \"$month\" -lt 1 ] || [ \"$month\"\
    \ -gt 12 ]; then\n      echo \"false\"\n      return\n    fi\n    if [ \"$month\"\
    \ -eq 2 ]; then\n      if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n  \
    \      echo \"false\"\n        return\n      fi\n    elif [ \"$month\" -eq 4 ]\
    \ || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n\
    \      if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n        echo \"false\"\
    \n        return\n      fi\n    else\n      if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 31 ]; then\n        echo \"false\"\n        return\n      fi\n    fi\n \
    \   echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    local date=$1\n    local month=$(echo $date | cut -d '-'\
    \ -f 1)\n    local day=$(echo $date | cut -d '-' -f 2)\n    local year=$(echo\
    \ $date | cut -d '-' -f 3)\n    local max_days=31\n    local valid_month=false\n\
    \    local valid_day=false\n    local valid_year=false\n    local valid_format=false\n\
    \    local valid_date=false\n\n    if [[ $month =~ ^[0-9]+$ ]] && [[ $month -ge\
    \ 1 ]] && [[ $month -le 12 ]]; then\n        valid_month=true\n    fi\n\n    if\
    \ [[ $day =~ ^[0-9]+$ ]] && [[ $day -ge 1 ]] && [[ $day -le 31 ]]; then\n    \
    \    valid_day=true\n    fi\n\n    if [[ $year =~ ^[0-9]+$ ]] && [[ $year -ge\
    \ 1 ]] && [[ $year -le 9999 ]]; then\n        valid_year=true\n    fi\n\n    if\
    \ [[ $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n        valid_format=true\n\
    \    fi\n\n    if [[ $valid_month == true ]] && [[ $valid_day == true ]] && [[\
    \ $valid_year == true ]] && [[ $valid_format == true ]]; then\n        valid_date=true\n\
    \    fi\n\n    if [[ $valid_date == true ]]; then\n        if [[ $month == 2 ]];\
    \ then\n            max_days=29\n        elif [[ $month == 4 ]] || [[ $month ==\
    \ 6 ]] || [[ $month == 9 ]] || [[ $month == 11 ]]; then\n            max_days=30\n\
    \        fi\n\n        if [[ $day -gt $max_days ]]; then\n            valid_date=false\n\
    \        fi\n    fi\n\n    if [[ $valid_date == true ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    if [[ $1 =~ ^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-[0-9]{4}$ ]];\
    \ then\n      if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n        if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n          if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n            if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n              if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n                if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n                  if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpx2nuuorp.sh: line 29: unexpected EOF while looking for matching
    `)''\n/tmp/tmpx2nuuorp.sh: line 57: unexpected argument to conditional binary
    operator\n/tmp/tmpx2nuuorp.sh: line 57: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      else\n        if [[ $day -le 31 && $day\
    \ -ge 1 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  date=$1\n  if [[ $date =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local\
    \ year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]]; then\n\
    \      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [ $month -eq 2 ]; then\n      if [ $((year % 4)) -eq 0 ] && [ $((year\
    \ % 100)) -ne 0 ] || [ $((year % 400)) -eq 0 ]; then\n        if [ $day -le 29\
    \ ] && [ $day -ge 1 ]; then\n          echo \"true\"\n        else\n         \
    \ echo \"false\"\n        fi\n      else\n        if [ $day -le 28 ] && [ $day\
    \ -ge 1 ]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    elif [ $month -eq 1 ] || [ $month -eq 3 ] || [ $month\
    \ -eq 5 ] || [ $month -eq 7 ] || [ $month -eq 8 ] || [ $month -eq 10 ] || [ $month\
    \ -eq 12 ]; then\n      if [ $day -le 31 ] && [ $day -ge 1 ]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [ $month -eq\
    \ 4 ] || [ $month -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n   \
    \   if [ $day -le 30 ] && [ $day -ge 1 ]; then\n        echo \"true\"\n      else\n\
    \        echo \"false\"\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    date=$1\n    if [[ $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        month=$(echo $date | cut -d'-' -f1)\n        day=$(echo $date\
    \ | cut -d'-' -f2)\n        year=$(echo $date | cut -d'-' -f3)\n        if [[\
    \ $month -gt 0 && $month -lt 13 ]]; then\n            if [[ $month -eq 1 || $month\
    \ -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n                if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \                    echo \"true\"\n                else\n                   \
    \ echo \"false\"\n                fi\n            elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n                if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n                    echo \"true\"\n         \
    \       else\n                    echo \"false\"\n                fi\n       \
    \     elif [[ $month -eq 2 ]]; then\n                if [[ $day -gt 0 && $day\
    \ -lt 30 ]]; then\n                    echo \"true\"\n                else\n \
    \                   echo \"false\"\n                fi\n            fi\n     \
    \   else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    if [ -z \"$1\" ]; then\n        echo \"false\"\n       \
    \ return\n    fi\n    IFS='-' read -r -a array <<< \"$1\"\n    if [ \"${#array[@]}\"\
    \ -ne 3 ]; then\n        echo \"false\"\n        return\n    fi\n    if [ \"${array[0]}\"\
    \ -lt 1 ] || [ \"${array[0]}\" -gt 12 ]; then\n        echo \"false\"\n      \
    \  return\n    fi\n    if [ \"${array[0]}\" -eq 1 ] || [ \"${array[0]}\" -eq 3\
    \ ] || [ \"${array[0]}\" -eq 5 ] || [ \"${array[0]}\" -eq 7 ] || [ \"${array[0]}\"\
    \ -eq 8 ] || [ \"${array[0]}\" -eq 10 ] || [ \"${array[0]}\" -eq 12 ]; then\n\
    \        if [ \"${array[1]}\" -lt 1 ] || [ \"${array[1]}\" -gt 31 ]; then\n  \
    \          echo \"false\"\n            return\n        fi\n    elif [ \"${array[0]}\"\
    \ -eq 4 ] || [ \"${array[0]}\" -eq 6 ] || [ \"${array[0]}\" -eq 9 ] || [ \"${array[0]}\"\
    \ -eq 11 ]; then\n        if [ \"${array[1]}\" -lt 1 ] || [ \"${array[1]}\" -gt\
    \ 30 ]; then\n            echo \"false\"\n            return\n        fi\n   \
    \ elif [ \"${array[0]}\" -eq 2 ]; then\n        if [ \"${array[1]}\" -lt 1 ] ||\
    \ [ \"${array[1]}\" -gt 29 ]; then\n            echo \"false\"\n            return\n\
    \        fi\n    fi\n    if [ \"${array[2]}\" -lt 1 ] || [ \"${array[2]}\" -gt\
    \ 9999 ]; then\n        echo \"false\"\n        return\n    fi\n    echo \"true\"\
    \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n        year=${BASH_REMATCH[3]}\n\
    \        if [[ $month -gt 0 && $month -lt 13 ]]; then\n            if [[ $month\
    \ -eq 2 ]]; then\n                if [[ $day -gt 0 && $day -lt 30 ]]; then\n \
    \                   echo \"true\"\n                else\n                    echo\
    \ \"false\"\n                fi\n            elif [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n                if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \                    echo \"true\"\n                else\n                   \
    \ echo \"false\"\n                fi\n            elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n                if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n                    echo \"true\"\n         \
    \       else\n                    echo \"false\"\n                fi\n       \
    \     fi\n        else\n            echo \"false\"\n        fi\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[\
    \ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  local date=$1\n  local month=$(echo $date | cut -d'-' -f1)\n  local day=$(echo\
    \ $date | cut -d'-' -f2)\n  local year=$(echo $date | cut -d'-' -f3)\n  if [[\
    \ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt 1 || $day\
    \ -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif [[ $month\
    \ -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day\
    \ -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print to stdout\n\
    \  # Use echo -e to print to stderr\n  # Use return to return a value\n  # Use\
    \ exit to exit the script\n  # Use read to read a value\n  # Use $1, $2, $3, $4,\
    \ $5, $6, $7, $8, $9 to access the arguments passed to the script\n  # Use $#\
    \ to access the number of arguments passed to the script\n  # Use $@ to access\
    \ all the arguments passed to the script\n  # Use $? to access the exit status\
    \ of the last command executed\n  # Use $$ to access the process ID of the current\
    \ shell\n  # Use $USER to access the username of the user running the script\n\
    \  # Use $HOSTNAME to access the hostname of the machine the script is running\
    \ on\n  # Use $SECONDS to access the number of seconds since the script was started\n\
    \  # Use $RANDOM to generate a random number\n  # Use $LINENO to access the current\
    \ line number in the Bash script\n  # Use $0 to access the name of the Bash script\n\
    \  # Use $IFS to access the Internal Field Separator\n  # Use $FUNCNAME to access\
    \ the name of the current function\n  # Use $DIRSTACK to access the directory\
    \ stack\n  # Use $EUID to access the effective user ID of the current user\n \
    \ # Use $UID to access the user ID of the current user\n  # Use $GROUPS to access\
    \ the groups the current user is part of\n  # Use $BASH_VERSION to access the\
    \ version of the current instance of Bash\n  # Use $BASH_VERSINFO to access the\
    \ version info of the current instance of Bash\n  # Use $BASH_SOURCE to access\
    \ the name of the Bash script\n  # Use $BASH_SUBSHELL to access the subshell level\
    \ of the current shell\n  # Use $BASH_LINENO to access the current line number\
    \ in the Bash script\n  # Use $BASH_EXECUTION_STRING to access the command argument\
    \ to the -c option\n  # Use $BASH_REMATCH to access the Bash regular expression\
    \ match\n  # Use $BASH_ARGC to access the number of arguments passed to the Bash\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpp58j12gk.sh: line 51: syntax error near unexpected token `}''\n/tmp/tmpp58j12gk.sh:
    line 51: `}''\n"'
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -gt\
    \ 12 || $month -lt 1 ]]; then\n      echo \"false\"\n      return\n    fi\n  \
    \  if [[ $month == 2 ]]; then\n      if [[ $((year % 4)) -eq 0 ]]; then\n    \
    \    if [[ $day -gt 29 || $day -lt 1 ]]; then\n          echo \"false\"\n    \
    \      return\n        fi\n      else\n        if [[ $day -gt 28 || $day -lt 1\
    \ ]]; then\n          echo \"false\"\n          return\n        fi\n      fi\n\
    \    elif [[ $month == 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n\
    \      if [[ $day -gt 30 || $day -lt 1 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    else\n      if [[ $day -gt 31 || $day -lt 1 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    fi\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    if [[ ${BASH_REMATCH[1]} -le 12 ]]; then\n      if [[ ${BASH_REMATCH[1]}\
    \ -eq 1 || ${BASH_REMATCH[1]} -eq 3 || ${BASH_REMATCH[1]} -eq 5 || ${BASH_REMATCH[1]}\
    \ -eq 7 || ${BASH_REMATCH[1]} -eq 8 || ${BASH_REMATCH[1]} -eq 10 || ${BASH_REMATCH[1]}\
    \ -eq 12 ]]; then\n        if [[ ${BASH_REMATCH[2]} -le 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ ${BASH_REMATCH[1]} -eq 4 || ${BASH_REMATCH[1]} -eq 6 || ${BASH_REMATCH[1]}\
    \ -eq 9 || ${BASH_REMATCH[1]} -eq 11 ]]; then\n        if [[ ${BASH_REMATCH[2]}\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ ${BASH_REMATCH[1]} -eq 2 ]]; then\n        if [[ ${BASH_REMATCH[2]}\
    \ -le 29 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n    month=$(echo $1 | cut -d'-' -f1)\n    day=$(echo $1 | cut -d'-'\
    \ -f2)\n    year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month -eq 1 || $month\
    \ -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n      if [[ $day -ge 1 && $day -le 31 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n        echo \"true\"\n      else\n        echo\
    \ \"false\"\n      fi\n    elif [[ $month -eq 2 ]]; then\n      if [[ $day -ge\
    \ 1 && $day -le 29 ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $((year % 4)) -eq 0 && $((year % 100)) -ne 0 || $((year\
    \ % 400)) -eq 0 ]]; then\n          if [[ $day -gt 0 && $day -lt 30 ]]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        else\n          if [[ $day -gt 0 && $day -lt 29 ]]; then\n \
    \           echo \"true\"\n          else\n            echo \"false\"\n      \
    \    fi\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      else\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=\"$1\"\n  local month=$(echo \"$date\" | cut -d-\
    \ -f1)\n  local day=$(echo \"$date\" | cut -d- -f2)\n  local year=$(echo \"$date\"\
    \ | cut -d- -f3)\n  local max_days=31\n  if [[ $month == \"02\" ]]; then\n   \
    \ max_days=29\n  elif [[ $month == \"04\" || $month == \"06\" || $month == \"\
    09\" || $month == \"11\" ]]; then\n    max_days=30\n  fi\n  if [[ -z $date ]];\
    \ then\n    echo \"false\"\n  elif [[ $day -lt 1 || $day -gt $max_days ]]; then\n\
    \    echo \"false\"\n  elif [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo\
    \ \"false\"\n  elif [[ $year -lt 1 ]]; then\n    echo \"false\"\n  else\n    echo\
    \ \"true\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n        year=${BASH_REMATCH[3]}\n\
    \        if [[ $month -ge 1 && $month -le 12 ]]; then\n            if [[ $month\
    \ -eq 2 ]]; then\n                if [[ $((year % 4)) -eq 0 && $((year % 100))\
    \ -ne 0 || $((year % 400)) -eq 0 ]]; then\n                    if [[ $day -ge\
    \ 1 && $day -le 29 ]]; then\n                        echo \"true\"\n         \
    \           else\n                        echo \"false\"\n                   \
    \ fi\n                else\n                    if [[ $day -ge 1 && $day -le 28\
    \ ]]; then\n                        echo \"true\"\n                    else\n\
    \                        echo \"false\"\n                    fi\n            \
    \    fi\n            elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n                if [[ $day -ge 1 && $day -le 30 ]]; then\n\
    \                    echo \"true\"\n                else\n                   \
    \ echo \"false\"\n                fi\n            else\n                if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n                    echo \"true\"\n    \
    \            else\n                    echo \"false\"\n                fi\n  \
    \          fi\n        else\n            echo \"false\"\n        fi\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -ge 1 &&\
    \ $day -le 31 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -ge 1 && $day -le 30 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -ge 1 && $day -le 29 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local\
    \ year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]]; then\n\
    \      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local\
    \ year=${BASH_REMATCH[3]}\n    if [[ $month -eq 2 ]]; then\n      if [[ $((year\
    \ % 4)) -eq 0 ]]; then\n        if [[ $day -gt 29 ]]; then\n          echo \"\
    false\"\n          return\n        fi\n      else\n        if [[ $day -gt 28 ]];\
    \ then\n          echo \"false\"\n          return\n        fi\n      fi\n   \
    \ elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \      if [[ $day -gt 30 ]]; then\n        echo \"false\"\n        return\n  \
    \    fi\n    elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day\
    \ -gt 31 ]]; then\n        echo \"false\"\n        return\n      fi\n    else\n\
    \      echo \"false\"\n      return\n    fi\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  month=$(echo $1 | cut -d- -f1)\n  day=$(echo $1 | cut -d-\
    \ -f2)\n  year=$(echo $1 | cut -d- -f3)\n  if [[ $month -lt 1 || $month -gt 12\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[ $month -eq 1 || $month\
    \ -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n    if [[ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [[ $month -eq 2 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 29 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print result\n  #echo\
    \ \"true\"\n  #echo \"false\"\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $((year % 4)) -eq 0 && $((year % 100)) -ne 0 || $((year\
    \ % 400)) -eq 0 ]]; then\n          if [[ $day -ge 1 && $day -le 29 ]]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        else\n          if [[ $day -ge 1 && $day -le 28 ]]; then\n \
    \           echo \"true\"\n          else\n            echo \"false\"\n      \
    \    fi\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      else\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n        year=${BASH_REMATCH[3]}\n\
    \        if [[ $month -gt 0 && $month -lt 13 ]]; then\n            if [[ $month\
    \ -eq 2 ]]; then\n                if [[ $((year % 4)) -eq 0 ]]; then\n       \
    \             if [[ $day -gt 0 && $day -lt 30 ]]; then\n                     \
    \   echo \"true\"\n                    else\n                        echo \"false\"\
    \n                    fi\n                else\n                    if [[ $day\
    \ -gt 0 && $day -lt 29 ]]; then\n                        echo \"true\"\n     \
    \               else\n                        echo \"false\"\n               \
    \     fi\n                fi\n            elif [[ $month -eq 4 || $month -eq 6\
    \ || $month -eq 9 || $month -eq 11 ]]; then\n                if [[ $day -gt 0\
    \ && $day -lt 31 ]]; then\n                    echo \"true\"\n               \
    \ else\n                    echo \"false\"\n                fi\n            else\n\
    \                if [[ $day -gt 0 && $day -lt 32 ]]; then\n                  \
    \  echo \"true\"\n                else\n                    echo \"false\"\n \
    \               fi\n            fi\n        else\n            echo \"false\"\n\
    \        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n  \
    \  valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  if [[ -z $date ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local month=$(echo $date | cut -d '-' -f 1)\n  local day=$(echo\
    \ $date | cut -d '-' -f 2)\n  local year=$(echo $date | cut -d '-' -f 3)\n  if\
    \ [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 ||\
    \ $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt\
    \ 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  if [[ $year -lt\
    \ 1 ]]; then\n    echo \"false\"\n    return\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -ge 1 &&\
    \ $day -le 31 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -ge 1 && $day -le 30 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -ge 1 && $day -le 29 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -lt\
    \ 1 || $month -gt 12 ]]; then\n      echo \"false\"\n      return\n    fi\n  \
    \  if [[ $month -eq 2 ]]; then\n      if [[ $((year % 4)) -eq 0 && $((year % 100))\
    \ -ne 0 || $((year % 400)) -eq 0 ]]; then\n        if [[ $day -lt 1 || $day -gt\
    \ 29 ]]; then\n          echo \"false\"\n          return\n        fi\n      else\n\
    \        if [[ $day -lt 1 || $day -gt 28 ]]; then\n          echo \"false\"\n\
    \          return\n        fi\n      fi\n    elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -lt 1 || $day\
    \ -gt 30 ]]; then\n        echo \"false\"\n        return\n      fi\n    else\n\
    \      if [[ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -lt\
    \ 1 || $month -gt 12 ]]; then\n      echo \"false\"\n      return\n    fi\n  \
    \  if [[ $month == 1 || $month == 3 || $month == 5 || $month == 7 || $month ==\
    \ 8 || $month == 10 || $month == 12 ]]; then\n      if [[ $day -lt 1 || $day -gt\
    \ 31 ]]; then\n        echo \"false\"\n        return\n      fi\n    elif [[ $month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n      if [[ $day\
    \ -lt 1 || $day -gt 30 ]]; then\n        echo \"false\"\n        return\n    \
    \  fi\n    elif [[ $month == 2 ]]; then\n      if [[ $day -lt 1 || $day -gt 29\
    \ ]]; then\n        echo \"false\"\n        return\n      fi\n    fi\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n \
    \ fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local month=\"$(echo \"$1\" | cut -d '-' -f 1)\"\n  local\
    \ day=\"$(echo \"$1\" | cut -d '-' -f 2)\"\n  local year=\"$(echo \"$1\" | cut\
    \ -d '-' -f 3)\"\n  if [[ \"$month\" -lt 1 || \"$month\" -gt 12 ]]; then\n   \
    \ echo \"false\"\n    return\n  fi\n  if [[ \"$month\" -eq 1 || \"$month\" -eq\
    \ 3 || \"$month\" -eq 5 || \"$month\" -eq 7 || \"$month\" -eq 8 || \"$month\"\
    \ -eq 10 || \"$month\" -eq 12 ]]; then\n    if [[ \"$day\" -lt 1 || \"$day\" -gt\
    \ 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif [[ \"$month\"\
    \ -eq 4 || \"$month\" -eq 6 || \"$month\" -eq 9 || \"$month\" -eq 11 ]]; then\n\
    \    if [[ \"$day\" -lt 1 || \"$day\" -gt 30 ]]; then\n      echo \"false\"\n\
    \      return\n    fi\n  elif [[ \"$month\" -eq 2 ]]; then\n    if [[ \"$day\"\
    \ -lt 1 || \"$day\" -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  date=$1\n  if [[ -z $date ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  if [[ ! $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n \
    \   echo \"false\"\n    return\n  fi\n  month=$(echo $date | cut -d '-' -f 1)\n\
    \  day=$(echo $date | cut -d '-' -f 2)\n  year=$(echo $date | cut -d '-' -f 3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 ||\
    \ $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt\
    \ 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local pattern=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $pattern ]]; then\n    local month=${BASH_REMATCH[1]}\n   \
    \ local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif [[\
    \ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n   \
    \     if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n    \
    \    else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      fi\n    else\n   \
    \   echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local month=$(echo $date | cut -d'-' -f1)\n\
    \  local day=$(echo $date | cut -d'-' -f2)\n  local year=$(echo $date | cut -d'-'\
    \ -f3)\n  local leap_year=$((year % 4))\n  local valid_date=false\n  if [[ $date\
    \ =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    if [[ $month -ge 1 && $month -le\
    \ 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -ge 1 && $day -le 31 ]]; then\n          valid_date=true\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          valid_date=true\n\
    \        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $leap_year -eq\
    \ 0 ]]; then\n          if [[ $day -ge 1 && $day -le 29 ]]; then\n           \
    \ valid_date=true\n          fi\n        else\n          if [[ $day -ge 1 && $day\
    \ -le 28 ]]; then\n            valid_date=true\n          fi\n        fi\n   \
    \   fi\n    fi\n  fi\n  echo $valid_date\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local month=$(echo $date | cut -d'-' -f1)\n\
    \  local day=$(echo $date | cut -d'-' -f2)\n  local year=$(echo $date | cut -d'-'\
    \ -f3)\n  local is_valid=true\n  if [[ -z $date ]]; then\n    is_valid=false\n\
    \  elif [[ $month -lt 1 || $month -gt 12 ]]; then\n    is_valid=false\n  elif\
    \ [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq\
    \ 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt 1 || $day -gt\
    \ 31 ]]; then\n      is_valid=false\n    fi\n  elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day\
    \ -gt 30 ]]; then\n      is_valid=false\n    fi\n  elif [[ $month -eq 2 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 29 ]]; then\n      is_valid=false\n    fi\n\
    \  fi\n  echo $is_valid\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    date=$1\n\
    \    IFS='-' read -r -a date_array <<< \"$date\"\n    month=${date_array[0]}\n\
    \    day=${date_array[1]}\n    year=${date_array[2]}\n    if [[ $month -gt 0 &&\
    \ $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq\
    \ 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 4\
    \ || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    # Write your code here\n    # Use echo to print result\n\
    \    #echo \"true\"\n    #echo \"false\"\n    if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        if [[ $1 =~ ^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n            if [[ $1 =~ ^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n                if [[ $1 =~ ^(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n                    echo \"true\"\n                else\n        \
    \            echo \"false\"\n                fi\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n        year=${BASH_REMATCH[3]}\n\
    \        if [[ $month -gt 0 && $month -lt 13 ]]; then\n            if [[ $month\
    \ -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n                if [[ $day -gt 0 && $day -lt\
    \ 32 ]]; then\n                    echo \"true\"\n                else\n     \
    \               echo \"false\"\n                fi\n            elif [[ $month\
    \ -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n          \
    \      if [[ $day -gt 0 && $day -lt 31 ]]; then\n                    echo \"true\"\
    \n                else\n                    echo \"false\"\n                fi\n\
    \            elif [[ $month -eq 2 ]]; then\n                if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n                    echo \"true\"\n                else\n\
    \                    echo \"false\"\n                fi\n            fi\n    \
    \    else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  if [ -z \"$1\" ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  IFS='-' read -ra arr <<< \"$1\"\n  if [ ${#arr[@]}\
    \ -ne 3 ]; then\n    echo \"false\"\n    return\n  fi\n  if [[ ${arr[0]} -lt 1\
    \ || ${arr[0]} -gt 12 ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[\
    \ ${arr[0]} -eq 1 || ${arr[0]} -eq 3 || ${arr[0]} -eq 5 || ${arr[0]} -eq 7 ||\
    \ ${arr[0]} -eq 8 || ${arr[0]} -eq 10 || ${arr[0]} -eq 12 ]]; then\n    if [[\
    \ ${arr[1]} -lt 1 || ${arr[1]} -gt 31 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [[ ${arr[0]} -eq 4 || ${arr[0]} -eq 6 || ${arr[0]} -eq 9 || ${arr[0]}\
    \ -eq 11 ]]; then\n    if [[ ${arr[1]} -lt 1 || ${arr[1]} -gt 30 ]]; then\n  \
    \    echo \"false\"\n      return\n    fi\n  elif [[ ${arr[0]} -eq 2 ]]; then\n\
    \    if [[ ${arr[1]} -lt 1 || ${arr[1]} -gt 29 ]]; then\n      echo \"false\"\n\
    \      return\n    fi\n  fi\n  if [[ ${arr[2]} -lt 1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local month=$(echo $date | cut -d'-' -f1)\n\
    \  local day=$(echo $date | cut -d'-' -f2)\n  local year=$(echo $date | cut -d'-'\
    \ -f3)\n  if [[ $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    if [[ $month\
    \ -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif [[\
    \ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n   \
    \     if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n    \
    \    else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      fi\n    else\n   \
    \   echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ ! $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local month=${BASH_REMATCH[1]}\n  local day=${BASH_REMATCH[2]}\n\
    \  local year=${BASH_REMATCH[3]}\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n    if [[ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9\
    \ || $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n  \
    \    echo \"false\"\n      return\n    fi\n  elif [[ $month -eq 2 ]]; then\n \
    \   if [[ $day -lt 1 || $day -gt 29 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  date=$1\n  if [[ -z $date ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  if [[ ! $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n \
    \   echo \"false\"\n    return\n  fi\n  month=$(echo $date | cut -d \"-\" -f 1)\n\
    \  day=$(echo $date | cut -d \"-\" -f 2)\n  year=$(echo $date | cut -d \"-\" -f\
    \ 3)\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n   \
    \ return\n  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[\
    \ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n   \
    \ fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11\
    \ ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1\
    \ || $day -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n \
    \ fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  IFS='-' read -r -a array <<< \"$1\"\n  month=${array[0]}\n\
    \  day=${array[1]}\n  year=${array[2]}\n  if [ \"$month\" -lt 1 ] || [ \"$month\"\
    \ -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n  if [ \"$month\" -eq\
    \ 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq 5 ] || [ \"$month\" -eq 7 ]\
    \ || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ] || [ \"$month\" -eq 12 ]; then\n\
    \    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] ||\
    \ [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1\
    \ ] || [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  elif [ \"$month\" -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt\
    \ 29 ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\
    \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if (( year > 0 )); then\n      if (( month > 0 && month < 13 )); then\n \
    \       if (( month == 1 || month == 3 || month == 5 || month == 7 || month ==\
    \ 8 || month == 10 || month == 12 )); then\n          if (( day > 0 && day < 32\
    \ )); then\n            echo \"true\"\n          else\n            echo \"false\"\
    \n          fi\n        elif (( month == 4 || month == 6 || month == 9 || month\
    \ == 11 )); then\n          if (( day > 0 && day < 31 )); then\n            echo\
    \ \"true\"\n          else\n            echo \"false\"\n          fi\n       \
    \ elif (( month == 2 )); then\n          if (( year % 4 == 0 && year % 100 !=\
    \ 0 || year % 400 == 0 )); then\n            if (( day > 0 && day < 30 )); then\n\
    \              echo \"true\"\n            else\n              echo \"false\"\n\
    \            fi\n          else\n            if (( day > 0 && day < 29 )); then\n\
    \              echo \"true\"\n            else\n              echo \"false\"\n\
    \            fi\n          fi\n        fi\n      else\n        echo \"false\"\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n        year=${BASH_REMATCH[3]}\n\
    \        if [[ $month -eq 2 ]]; then\n            if [[ $((year % 4)) -eq 0 ]];\
    \ then\n                if [[ $day -gt 29 ]]; then\n                    echo \"\
    false\"\n                    return\n                fi\n            else\n  \
    \              if [[ $day -gt 28 ]]; then\n                    echo \"false\"\n\
    \                    return\n                fi\n            fi\n        elif\
    \ [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq\
    \ 8 || $month -eq 10 || $month -eq 12 ]]; then\n            if [[ $day -gt 31\
    \ ]]; then\n                echo \"false\"\n                return\n         \
    \   fi\n        elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n            if [[ $day -gt 30 ]]; then\n                echo\
    \ \"false\"\n                return\n            fi\n        else\n          \
    \  echo \"false\"\n            return\n        fi\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -lt\
    \ 1 || $month -gt 12 ]]; then\n      echo \"false\"\n      return\n    fi\n  \
    \  if [[ $month -eq 2 ]]; then\n      if [[ $day -lt 1 || $day -gt 29 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -lt\
    \ 1 || $day -gt 30 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    else\n      if [[ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 2 ]]; then\n      if [[ $((year % 4)) -eq 0 ]]; then\n \
    \       if [[ $day -gt 29 ]]; then\n          echo \"false\"\n          return\n\
    \        fi\n      else\n        if [[ $day -gt 28 ]]; then\n          echo \"\
    false\"\n          return\n        fi\n      fi\n    elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -gt 30 ]];\
    \ then\n        echo \"false\"\n        return\n      fi\n    elif [[ $day -gt\
    \ 31 ]]; then\n      echo \"false\"\n      return\n    fi\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local\
    \ day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]]; then\n       \
    \ if [[ $((year % 4)) -eq 0 ]]; then\n          if [[ $day -gt 0 && $day -lt 30\
    \ ]]; then\n            echo \"true\"\n          else\n            echo \"false\"\
    \n          fi\n        else\n          if [[ $day -gt 0 && $day -lt 29 ]]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      else\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    month=$(echo\
    \ $1 | cut -d- -f1)\n    day=$(echo $1 | cut -d- -f2)\n    year=$(echo $1 | cut\
    \ -d- -f3)\n    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month\
    \ -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $((year % 4)) -eq 0 && $((year % 100)) -ne 0 || $((year\
    \ % 400)) -eq 0 ]]; then\n          if [[ $day -gt 0 && $day -lt 30 ]]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        else\n          if [[ $day -gt 0 && $day -lt 29 ]]; then\n \
    \           echo \"true\"\n          else\n            echo \"false\"\n      \
    \    fi\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      else\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print to stdout\n\
    \  # Use echo \"false\" to print false\n  # Use echo \"true\" to print true\n\
    \  # Use read to read from stdin\n  # Use read var to read from stdin and store\
    \ in var\n  # Use read -a var to read from stdin and store in array var\n  # Use\
    \ read -p \"prompt\" var to print prompt and read from stdin and store in var\n\
    \  # Use read -sp \"prompt\" var to print prompt and read from stdin and store\
    \ in var and not echo input\n  # Use read -a -p \"prompt\" var to print prompt\
    \ and read from stdin and store in array var\n  # Use read -a -sp \"prompt\" var\
    \ to print prompt and read from stdin and store in array var and not echo input\n\
    \  # Use read -n1 -p \"prompt\" var to print prompt and read from stdin and store\
    \ in var and only read 1 character\n  # Use read -n1 -sp \"prompt\" var to print\
    \ prompt and read from stdin and store in var and only read 1 character and not\
    \ echo input\n  # Use read -N2 -p \"prompt\" var to print prompt and read from\
    \ stdin and store in var and only read 2 characters\n  # Use read -N2 -sp \"prompt\"\
    \ var to print prompt and read from stdin and store in var and only read 2 characters\
    \ and not echo input\n  # Use read -N2 -a -p \"prompt\" var to print prompt and\
    \ read from stdin and store in array var and only read 2 characters\n  # Use read\
    \ -N2 -a -sp \"prompt\" var to print prompt and read from stdin and store in array\
    \ var and only read 2 characters and not echo input\n  # Use read -t5 -p \"prompt\"\
    \ var to print prompt and read from stdin and store in var and only read for 5\
    \ seconds\n  # Use read -t5 -sp \"prompt\" var to print prompt and read from stdin\
    \ and store in var and only read for 5 seconds and not echo input\n  # Use read\
    \ -t5 -a -p \"prompt\" var to print prompt and read from stdin and store in array\
    \ var and only read for 5 seconds\n  # Use\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp7u88wm73.sh: line 41: syntax error near unexpected token `}''\n/tmp/tmp7u88wm73.sh:
    line 41: `}''\n"'
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local\
    \ year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]]; then\n\
    \      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    month=$(echo $1 | cut -d- -f1)\n    day=$(echo $1 | cut -d- -f2)\n\
    \    year=$(echo $1 | cut -d- -f3)\n    if [[ $month -lt 1 || $month -gt 12 ]];\
    \ then\n      echo \"false\"\n    elif [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n      if [[ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\
    \n      else\n        echo \"true\"\n      fi\n    elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -lt 1 || $day\
    \ -gt 30 ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n\
    \      fi\n    elif [[ $month -eq 2 ]]; then\n      if [[ $day -lt 1 || $day -gt\
    \ 29 ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n   \
    \   fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1 | cut -d'-' -f2)\n\
    \    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month -ge 1 && $month -le\
    \ 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local\
    \ year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]]; then\n\
    \      if [[ $month -eq 2 ]]; then\n        if [[ $((year % 4)) -eq 0 && $((year\
    \ % 100)) -ne 0 || $((year % 400)) -eq 0 ]]; then\n          if [[ $day -ge 1\
    \ && $day -le 29 ]]; then\n            echo \"true\"\n          else\n       \
    \     echo \"false\"\n          fi\n        else\n          if [[ $day -ge 1 &&\
    \ $day -le 28 ]]; then\n            echo \"true\"\n          else\n          \
    \  echo \"false\"\n          fi\n        fi\n      elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      else\n        if [[ $day -ge 1 && $day -le 31 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  date=$1\n  if [[ -z $date ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  if [[ ! $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n \
    \   echo \"false\"\n    return\n  fi\n  month=$(echo $date | cut -d- -f1)\n  day=$(echo\
    \ $date | cut -d- -f2)\n  year=$(echo $date | cut -d- -f3)\n  if [[ $month -lt\
    \ 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[ $month\
    \ -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt 1 || $day -gt 31 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day\
    \ -gt 30 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif [[ $month\
    \ -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29 ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n   \
    \ valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1 | cut -d- -f2)\n   \
    \ local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -eq 1 || $month -eq 3\
    \ || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n      if [[ $day -ge 1 && $day -le 31 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq 4\
    \ || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n        echo \"true\"\n      else\n        echo\
    \ \"false\"\n      fi\n    elif [[ $month -eq 2 ]]; then\n      if [[ $day -ge\
    \ 1 && $day -le 29 ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -ge 1 &&\
    \ $day -le 31 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -ge 1 && $day -le 30 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -ge 1 && $day -le 29 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([1][9][0-9][0-9]|[2][0][0-9][0-9])$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -ge 1 &&\
    \ $day -le 31 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -ge 1 && $day -le 30 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -ge 1 && $day -le 29 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $((year % 4)) -eq 0 && $((year % 100)) -ne 0 || $((year\
    \ % 400)) -eq 0 ]]; then\n          if [[ $day -gt 0 && $day -lt 30 ]]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        else\n          if [[ $day -gt 0 && $day -lt 29 ]]; then\n \
    \           echo \"true\"\n          else\n            echo \"false\"\n      \
    \    fi\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      else\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $((year % 4)) -eq 0 && $((year % 100)) -ne 0 || $((year\
    \ % 400)) -eq 0 ]]; then\n          if [[ $day -gt 0 && $day -lt 30 ]]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        else\n          if [[ $day -gt 0 && $day -lt 29 ]]; then\n \
    \           echo \"true\"\n          else\n            echo \"false\"\n      \
    \    fi\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      else\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1 | cut -d'-' -f2)\n\
    \    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month -gt 0 && $month -lt\
    \ 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -gt 0 && $day -lt 31 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -gt 0 && $day -lt 30 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1 | cut -d'-' -f2)\n\
    \    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month -gt 0 && $month -lt\
    \ 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    local date=$1\n    local pattern=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n    if [[ $date =~ $pattern ]]; then\n        local month=${BASH_REMATCH[1]}\n\
    \        local day=${BASH_REMATCH[2]}\n        local year=${BASH_REMATCH[3]}\n\
    \        if [[ $month -le 12 && $month -ge 1 ]]; then\n            if [[ $month\
    \ -eq 2 ]]; then\n                if [[ $day -le 29 && $day -ge 1 ]]; then\n \
    \                   echo \"true\"\n                else\n                    echo\
    \ \"false\"\n                fi\n            elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n                if [[ $day -le\
    \ 30 && $day -ge 1 ]]; then\n                    echo \"true\"\n             \
    \   else\n                    echo \"false\"\n                fi\n           \
    \ else\n                if [[ $day -le 31 && $day -ge 1 ]]; then\n           \
    \         echo \"true\"\n                else\n                    echo \"false\"\
    \n                fi\n            fi\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print to stdout\n\
    \  # Use echo -e to print to stderr\n  # Use return to return a value\n  # Use\
    \ exit to exit the program\n  # Use read to read from stdin\n  # Use $1, $2, $3,\
    \ etc to access the arguments\n  # Use $# to access the number of arguments\n\
    \  # Use $@ to access all the arguments\n  # Use $0 to access the name of the\
    \ script\n  # Use $? to access the return value of the last command\n  # Use $$\
    \ to access the process id of the script\n  # Use $! to access the process id\
    \ of the last command\n  # Use $USER to access the username of the user running\
    \ the script\n  # Use $HOSTNAME to access the hostname of the machine the script\
    \ is running on\n  # Use $SECONDS to access the number of seconds since the script\
    \ was started\n  # Use $RANDOM to get a random number\n  # Use $LINENO to get\
    \ the current line number\n  # Use $FUNCNAME to get the name of the current function\n\
    \  # Use $BASH_VERSION to get the version of bash running the script\n  # Use\
    \ $BASH_SOURCE to get the name of the script being sourced\n  # Use $BASH_LINENO\
    \ to get the line number in the script being sourced\n  # Use $BASH_SOURCE to\
    \ get the name of the script being sourced\n  # Use $BASH_LINENO to get the line\
    \ number in the script being sourced\n  # Use $BASH_SOURCE to get the name of\
    \ the script being sourced\n  # Use $BASH_LINENO to get the line number in the\
    \ script being sourced\n  # Use $BASH_SOURCE to get the name of the script being\
    \ sourced\n  # Use $BASH_LINENO to get the line number in the script being sourced\n\
    \  # Use $BASH_SOURCE to get the name of the script being sourced\n  # Use $BASH_LINENO\
    \ to get the line number in the script being sourced\n  # Use $BASH_SOURCE to\
    \ get the name of the script being sourced\n  # Use $BASH_LINENO to get the line\
    \ number in the script being sourced\n  # Use $B\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp9rhai5f0.sh: line 53: syntax error near unexpected token `}''\n/tmp/tmp9rhai5f0.sh:
    line 53: `}''\n"'
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local pattern=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $pattern ]]; then\n    local month=${BASH_REMATCH[1]}\n   \
    \ local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif [[\
    \ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n   \
    \     if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n    \
    \    else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      fi\n    else\n   \
    \   echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local\
    \ year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]]; then\n\
    \      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n\tif [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\t\
    \tmonth=${BASH_REMATCH[1]}\n\t\tday=${BASH_REMATCH[2]}\n\t\tyear=${BASH_REMATCH[3]}\n\
    \t\tif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n\t\t\tif [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n\t\t\t\techo \"true\"\n\t\t\telse\n\t\t\t\techo \"false\"\
    \n\t\t\tfi\n\t\telif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n\t\t\tif [[ $day -gt 0 && $day -lt 31 ]]; then\n\t\t\t\techo\
    \ \"true\"\n\t\t\telse\n\t\t\t\techo \"false\"\n\t\t\tfi\n\t\telif [[ $month -eq\
    \ 2 ]]; then\n\t\t\tif [[ $day -gt 0 && $day -lt 30 ]]; then\n\t\t\t\techo \"\
    true\"\n\t\t\telse\n\t\t\t\techo \"false\"\n\t\t\tfi\n\t\telse\n\t\t\techo \"\
    false\"\n\t\tfi\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1 | cut -d- -f2)\n   \
    \ local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -gt 0 && $month -lt 13\
    \ ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month == 2 ]];\
    \ then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n        if [[ $day\
    \ -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      else\n        if [[ $day -le 31 && $day\
    \ -ge 1 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -ge 1 &&\
    \ $day -le 31 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -ge 1 && $day -le 30 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -ge 1 && $day -le 29 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    month=$(echo\
    \ $1 | cut -d'-' -f1)\n    day=$(echo $1 | cut -d'-' -f2)\n    year=$(echo $1\
    \ | cut -d'-' -f3)\n    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if\
    \ [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq\
    \ 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 32 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local month=$(echo $date | cut -d '-' -f\
    \ 1)\n  local day=$(echo $date | cut -d '-' -f 2)\n  local year=$(echo $date |\
    \ cut -d '-' -f 3)\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1\
    \ || $day -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  else\n    if [[ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  fi\n  if [[ $year -lt 1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  date=$1\n  if [[ -z $date ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  IFS='-' read -r -a date_array <<< \"$date\"\n  if [[ ${#date_array[@]}\
    \ -ne 3 ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[ ${date_array[0]}\
    \ -lt 1 || ${date_array[0]} -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ ${date_array[0]} -eq 1 || ${date_array[0]} -eq 3 || ${date_array[0]}\
    \ -eq 5 || ${date_array[0]} -eq 7 || ${date_array[0]} -eq 8 || ${date_array[0]}\
    \ -eq 10 || ${date_array[0]} -eq 12 ]]; then\n    if [[ ${date_array[1]} -lt 1\
    \ || ${date_array[1]} -gt 31 ]]; then\n      echo \"false\"\n      return\n  \
    \  fi\n  elif [[ ${date_array[0]} -eq 4 || ${date_array[0]} -eq 6 || ${date_array[0]}\
    \ -eq 9 || ${date_array[0]} -eq 11 ]]; then\n    if [[ ${date_array[1]} -lt 1\
    \ || ${date_array[1]} -gt 30 ]]; then\n      echo \"false\"\n      return\n  \
    \  fi\n  elif [[ ${date_array[0]} -eq 2 ]]; then\n    if [[ ${date_array[1]} -lt\
    \ 1 || ${date_array[1]} -gt 29 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  if [[ ${date_array[2]} -lt 1 ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  date=$1\n  if [[ $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]];\
    \ then\n    month=$(echo $date | cut -d'-' -f1)\n    day=$(echo $date | cut -d'-'\
    \ -f2)\n    year=$(echo $date | cut -d'-' -f3)\n    if [[ $month -ge 1 && $month\
    \ -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 ||\
    \ $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n  \
    \      if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n   \
    \     else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge\
    \ 1 && $day -le 30 ]]; then\n          echo \"true\"\n        else\n         \
    \ echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n        if\
    \ [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ \"$1\" =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    local month=\"${BASH_REMATCH[1]}\"\n    local day=\"${BASH_REMATCH[2]}\"\n\
    \    local year=\"${BASH_REMATCH[3]}\"\n    if [[ $month -gt 0 && $month -lt 13\
    \ ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    month=$(echo\
    \ $1 | cut -d- -f1)\n    day=$(echo $1 | cut -d- -f2)\n    year=$(echo $1 | cut\
    \ -d- -f3)\n    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month\
    \ -eq 2 ]]; then\n        if [[ $((year % 4)) -eq 0 ]]; then\n          if [[\
    \ $day -gt 0 && $day -lt 30 ]]; then\n            echo \"true\"\n          else\n\
    \            echo \"false\"\n          fi\n        else\n          if [[ $day\
    \ -gt 0 && $day -lt 29 ]]; then\n            echo \"true\"\n          else\n \
    \           echo \"false\"\n          fi\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      else\n        if [[ $day -gt 0 && $day\
    \ -lt 32 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local\
    \ day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]]; then\n       \
    \ if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      else\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n \
    \         echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n \
    \ fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local month=$(echo \"$1\" | cut -d- -f1)\n  local day=$(echo\
    \ \"$1\" | cut -d- -f2)\n  local year=$(echo \"$1\" | cut -d- -f3)\n  if [ \"\
    $month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq 5\
    \ ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ] ||\
    \ [ \"$month\" -eq 12 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\" -eq\
    \ 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ];\
    \ then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n      echo \"\
    false\"\n      return\n    fi\n  elif [ \"$month\" -eq 2 ]; then\n    if [ \"\
    $day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local pattern=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $pattern ]]; then\n    local month=${BASH_REMATCH[1]}\n   \
    \ local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -eq 2 ]]; then\n      if [[ $((year % 4)) -eq 0 ]] && [[ $((year % 100)) -ne\
    \ 0 ]] || [[ $((year % 400)) -eq 0 ]]; then\n        if [[ $day -ge 1 ]] && [[\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      else\n        if [[ $day -ge 1 ]] && [[ $day -le\
    \ 28 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    elif [[ $month -eq 1 ]] || [[ $month -eq 3 ]] || [[\
    \ $month -eq 5 ]] || [[ $month -eq 7 ]] || [[ $month -eq 8 ]] || [[ $month -eq\
    \ 10 ]] || [[ $month -eq 12 ]]; then\n      if [[ $day -ge 1 ]] && [[ $day -le\
    \ 31 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\n   \
    \   fi\n    elif [[ $month -eq 4 ]] || [[ $month -eq 6 ]] || [[ $month -eq 9 ]]\
    \ || [[ $month -eq 11 ]]; then\n      if [[ $day -ge 1 ]] && [[ $day -le 30 ]];\
    \ then\n        echo \"true\"\n      else\n        echo \"false\"\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local pattern=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $pattern ]]; then\n    local month=${BASH_REMATCH[1]}\n   \
    \ local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]]; then\n       \
    \ if [[ $((year % 4)) -eq 0 ]]; then\n          if [[ $day -gt 0 && $day -lt 30\
    \ ]]; then\n            echo \"true\"\n          else\n            echo \"false\"\
    \n          fi\n        else\n          if [[ $day -gt 0 && $day -lt 29 ]]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      else\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n        year=${BASH_REMATCH[3]}\n\
    \        if [[ $month -gt 0 && $month -lt 13 ]]; then\n            if [[ $month\
    \ -eq 2 ]]; then\n                if [[ $((year % 4)) -eq 0 ]]; then\n       \
    \             if [[ $day -gt 0 && $day -lt 30 ]]; then\n                     \
    \   echo \"true\"\n                    else\n                        echo \"false\"\
    \n                    fi\n                else\n                    if [[ $day\
    \ -gt 0 && $day -lt 29 ]]; then\n                        echo \"true\"\n     \
    \               else\n                        echo \"false\"\n               \
    \     fi\n                fi\n            elif [[ $month -eq 4 || $month -eq 6\
    \ || $month -eq 9 || $month -eq 11 ]]; then\n                if [[ $day -gt 0\
    \ && $day -lt 31 ]]; then\n                    echo \"true\"\n               \
    \ else\n                    echo \"false\"\n                fi\n            else\n\
    \                if [[ $day -gt 0 && $day -lt 32 ]]; then\n                  \
    \  echo \"true\"\n                else\n                    echo \"false\"\n \
    \               fi\n            fi\n        else\n            echo \"false\"\n\
    \        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n  \
    \  valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local month=$(echo $date | cut -d'-' -f1)\n\
    \  local day=$(echo $date | cut -d'-' -f2)\n  local year=$(echo $date | cut -d'-'\
    \ -f3)\n  local max_day=31\n  if [[ $month -eq 2 ]]; then\n    max_day=29\n  elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \    max_day=30\n  fi\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo\
    \ \"false\"\n  elif [[ $day -lt 1 || $day -gt $max_day ]]; then\n    echo \"false\"\
    \n  elif [[ $year -lt 1 ]]; then\n    echo \"false\"\n  else\n    echo \"true\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1 | cut -d- -f2)\n   \
    \ local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -ge 1 && $month -le 12\
    \ ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print to stdout\n\
    \  # Use $1 to get the first argument passed\n  # Use $2 to get the second argument\
    \ passed\n  # Use $# to get the number of arguments passed\n  # Use $@ to get\
    \ all the arguments passed\n  # Use $? to get the exit status of the last command\
    \ executed\n  # Use $$ to get the process id of the current shell\n  # Use $USER\
    \ to get the username of the user running the script\n  # Use $HOSTNAME to get\
    \ the hostname of the machine the script is running on\n  # Use $SECONDS to get\
    \ the number of seconds since the shell was started\n  # Use $RANDOM to get a\
    \ random number\n  # Use $LINENO to get the current line number in the executing\
    \ script\n  # Use $0 to get the name of the executing script\n  # Use $FUNCNAME\
    \ to get the name of the currently executing function\n  # Use $DIRSTACK to get\
    \ the list of currently remembered directories\n  # Use $PIPESTATUS to get the\
    \ exit status of the last command in the pipe\n  # Use $MACHTYPE to get the system\
    \ type of the machine the script is running on\n  # Use $HISTCMD to get the history\
    \ number of the current command\n  # Use $BASH_VERSION to get the version of bash\n\
    \  # Use $BASH_VERSINFO to get the version of bash\n  # Use $BASH_SUBSHELL to\
    \ get the current subshell level\n  # Use $BASH_SOURCE to get the name of the\
    \ file the current function or script is executing from\n  # Use $BASH_LINENO\
    \ to get the current line number in the executing script\n  # Use $BASH_COMMAND\
    \ to get the command currently being executed\n  # Use $BASH_REMATCH to get the\
    \ portion of the string matched by the last regular expression\n  # Use $BASH_SUBSHELL\
    \ to get the current subshell level\n  # Use $BASH_SOURCE to get the name of the\
    \ file the current function or script is executing from\n  # Use $BASH_LINENO\
    \ to get the current line number in the executing script\n  # Use $BASH_COMMAND\
    \ to get the command currently being executed\n \n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpsfnw59yd.sh: line 51: syntax error near unexpected token `}''\n/tmp/tmpsfnw59yd.sh:
    line 51: `}''\n"'
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # your code here\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1\
    \ | cut -d- -f2)\n    local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -ge\
    \ 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -gt 0 && $day -lt 31 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -gt 0 && $day -lt 30 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    local date=$1\n    local month=${date:0:2}\n    local day=${date:3:2}\n\
    \    local year=${date:6:4}\n    local date_format=${date:2:1}${date:5:1}\n  \
    \  local valid_format=\"--\"\n    local valid_month=\"1|3|5|7|8|10|12\"\n    local\
    \ valid_month_31=\"1|3|5|7|8|10|12\"\n    local valid_month_30=\"4|6|9|11\"\n\
    \    local valid_month_29=\"2\"\n    local valid_day_31=\"[1-9]|[12][0-9]|3[01]\"\
    \n    local valid_day_30=\"[1-9]|[12][0-9]|30\"\n    local valid_day_29=\"[1-9]|2[0-9]\"\
    \n    local valid_year=\"[0-9]{4}\"\n    if [[ $date =~ ^$valid_month-$valid_day_31-$valid_year$\
    \ ]] && [[ $month =~ ^($valid_month_31)$ ]]; then\n        echo \"true\"\n   \
    \ elif [[ $date =~ ^$valid_month-$valid_day_30-$valid_year$ ]] && [[ $month =~\
    \ ^($valid_month_30)$ ]]; then\n        echo \"true\"\n    elif [[ $date =~ ^$valid_month-$valid_day_29-$valid_year$\
    \ ]] && [[ $month =~ ^($valid_month_29)$ ]]; then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    month=$(echo\
    \ $1 | cut -d- -f1)\n    day=$(echo $1 | cut -d- -f2)\n    year=$(echo $1 | cut\
    \ -d- -f3)\n    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month\
    \ -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local pattern=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $pattern ]]; then\n    local month=${BASH_REMATCH[1]}\n   \
    \ local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif [[\
    \ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n   \
    \     if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n    \
    \    else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      fi\n    else\n   \
    \   echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    date_array=(${1//-/\
    \ })\n    month=${date_array[0]}\n    day=${date_array[1]}\n    year=${date_array[2]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ ! $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  month=${BASH_REMATCH[1]}\n  day=${BASH_REMATCH[2]}\n  year=${BASH_REMATCH[3]}\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12 ]]; then\n    if [[ $day -lt 1 || $day\
    \ -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif [[ $month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n    if [[ $day\
    \ -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \  elif [[ $month == 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print result\n  #echo\
    \ \"true\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"true\"\n  #echo \"\
    false\"\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    month=$(echo\
    \ $1 | cut -d'-' -f1)\n    day=$(echo $1 | cut -d'-' -f2)\n    year=$(echo $1\
    \ | cut -d'-' -f3)\n    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if\
    \ [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq\
    \ 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -lt 1 ||\
    \ $day -gt 31 ]]; then\n        echo \"false\"\n        return\n      fi\n   \
    \ elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \      if [[ $day -lt 1 || $day -gt 30 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    elif [[ $month -eq 2 ]]; then\n      if [[ $day -lt\
    \ 1 || $day -gt 29 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    else\n      echo \"false\"\n      return\n    fi\n    if [[ $month -lt 1\
    \ || $month -gt 12 ]]; then\n      echo \"false\"\n      return\n    fi\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    month=$(echo $1 | cut -d'-' -f1)\n    day=$(echo $1 | cut -d'-'\
    \ -f2)\n    year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month -ge 1 && $month\
    \ -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 ||\
    \ $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n  \
    \      if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n   \
    \     else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge\
    \ 1 && $day -le 30 ]]; then\n          echo \"true\"\n        else\n         \
    \ echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n        if\
    \ [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n        year=${BASH_REMATCH[3]}\n\
    \        if [[ $month -le 12 && $month -ge 1 ]]; then\n            if [[ $month\
    \ -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n                if [[ $day -le 31 && $day\
    \ -ge 1 ]]; then\n                    echo \"true\"\n                else\n  \
    \                  echo \"false\"\n                fi\n            elif [[ $month\
    \ -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n          \
    \      if [[ $day -le 30 && $day -ge 1 ]]; then\n                    echo \"true\"\
    \n                else\n                    echo \"false\"\n                fi\n\
    \            elif [[ $month -eq 2 ]]; then\n                if [[ $day -le 29\
    \ && $day -ge 1 ]]; then\n                    echo \"true\"\n                else\n\
    \                    echo \"false\"\n                fi\n            fi\n    \
    \    else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local\
    \ year=${BASH_REMATCH[3]}\n    if (( year > 0 )); then\n      if (( month > 0\
    \ && month < 13 )); then\n        if (( month == 1 || month == 3 || month == 5\
    \ || month == 7 || month == 8 || month == 10 || month == 12 )); then\n       \
    \   if (( day > 0 && day < 32 )); then\n            echo \"true\"\n          else\n\
    \            echo \"false\"\n          fi\n        elif (( month == 4 || month\
    \ == 6 || month == 9 || month == 11 )); then\n          if (( day > 0 && day <\
    \ 31 )); then\n            echo \"true\"\n          else\n            echo \"\
    false\"\n          fi\n        elif (( month == 2 )); then\n          if (( day\
    \ > 0 && day < 30 )); then\n            echo \"true\"\n          else\n      \
    \      echo \"false\"\n          fi\n        fi\n      else\n        echo \"false\"\
    \n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -gt\
    \ 12 || $month -lt 1 ]]; then\n      echo \"false\"\n      return\n    fi\n  \
    \  if [[ $month -eq 2 ]]; then\n      if [[ $day -gt 29 || $day -lt 1 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -gt\
    \ 30 || $day -lt 1 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    else\n      if [[ $day -gt 31 || $day -lt 1 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    date=$1\n\
    \    IFS='-' read -r -a array <<< \"$date\"\n    month=${array[0]}\n    day=${array[1]}\n\
    \    year=${array[2]}\n    if [[ $month -lt 1 || $month -gt 12 ]]; then\n    \
    \  echo \"false\"\n    elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 ||\
    \ $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n  \
    \    if [[ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\n      else\n\
    \        echo \"true\"\n      fi\n    elif [[ $month -eq 4 || $month -eq 6 ||\
    \ $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -lt 1 || $day -gt 30\
    \ ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n      fi\n\
    \    elif [[ $month -eq 2 ]]; then\n      if [[ $day -lt 1 || $day -gt 29 ]];\
    \ then\n        echo \"false\"\n      else\n        echo \"true\"\n      fi\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -ge 1 &&\
    \ $day -le 31 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -ge 1 && $day -le 30 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -ge 1 && $day -le 29 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \        local month=${BASH_REMATCH[1]}\n        local day=${BASH_REMATCH[2]}\n\
    \        local year=${BASH_REMATCH[3]}\n        if [[ $month -ge 1 && $month -le\
    \ 12 ]]; then\n            if [[ $month -eq 1 || $month -eq 3 || $month -eq 5\
    \ || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n\
    \                if [[ $day -ge 1 && $day -le 31 ]]; then\n                  \
    \  echo \"true\"\n                else\n                    echo \"false\"\n \
    \               fi\n            elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n                if [[ $day -ge 1 && $day -le\
    \ 30 ]]; then\n                    echo \"true\"\n                else\n     \
    \               echo \"false\"\n                fi\n            elif [[ $month\
    \ -eq 2 ]]; then\n                if [[ $day -ge 1 && $day -le 29 ]]; then\n \
    \                   echo \"true\"\n                else\n                    echo\
    \ \"false\"\n                fi\n            fi\n        else\n            echo\
    \ \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local\
    \ day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -lt 1 || $month -gt 12 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \    if [[ $month == 2 ]]; then\n      if [[ $day -lt 1 || $day -gt 29 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11 ]]; then\n      if [[ $day -lt 1\
    \ || $day -gt 30 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    else\n      if [[ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n \
    \ fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  IFS='-' read -r -a date <<< \"$1\"\n  if [ \"${date[0]}\"\
    \ -lt 1 ] || [ \"${date[0]}\" -gt 12 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [ \"${date[0]}\" -eq 1 ] || [ \"${date[0]}\" -eq 3 ] || [ \"${date[0]}\"\
    \ -eq 5 ] || [ \"${date[0]}\" -eq 7 ] || [ \"${date[0]}\" -eq 8 ] || [ \"${date[0]}\"\
    \ -eq 10 ] || [ \"${date[0]}\" -eq 12 ]; then\n    if [ \"${date[1]}\" -lt 1 ]\
    \ || [ \"${date[1]}\" -gt 31 ]; then\n      echo \"false\"\n      return\n   \
    \ fi\n  elif [ \"${date[0]}\" -eq 4 ] || [ \"${date[0]}\" -eq 6 ] || [ \"${date[0]}\"\
    \ -eq 9 ] || [ \"${date[0]}\" -eq 11 ]; then\n    if [ \"${date[1]}\" -lt 1 ]\
    \ || [ \"${date[1]}\" -gt 30 ]; then\n      echo \"false\"\n      return\n   \
    \ fi\n  elif [ \"${date[0]}\" -eq 2 ]; then\n    if [ \"${date[1]}\" -lt 1 ] ||\
    \ [ \"${date[1]}\" -gt 29 ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    local date=$1\n    local month=$(echo $date | cut -d'-'\
    \ -f1)\n    local day=$(echo $date | cut -d'-' -f2)\n    local year=$(echo $date\
    \ | cut -d'-' -f3)\n    local month_31=\"1 3 5 7 8 10 12\"\n    local month_30=\"\
    4 6 9 11\"\n    local month_29=\"2\"\n    local month_28=\"2\"\n    local date_format=\"\
    ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\"\n    if [[ $date =~ $date_format ]]; then\n   \
    \     if [[ $month -lt 1 || $month -gt 12 ]]; then\n            echo \"false\"\
    \n        elif [[ $day -lt 1 || $day -gt 31 ]]; then\n            echo \"false\"\
    \n        elif [[ $year -lt 1 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $month_31 =~ $month && $day -gt 31 ]]; then\n            echo \"false\"\n\
    \        elif [[ $month_30 =~ $month && $day -gt 30 ]]; then\n            echo\
    \ \"false\"\n        elif [[ $month_29 =~ $month && $day -gt 29 ]]; then\n   \
    \         echo \"false\"\n        elif [[ $month_28 =~ $month && $day -gt 28 ]];\
    \ then\n            echo \"false\"\n        else\n            echo \"true\"\n\
    \        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n  \
    \  valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print to stdout\n\
    \  # Use echo -n to print without newline\n  # Use read to read from stdin\n \
    \ # Use return to return a value\n  if [[ -z $1 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n   \
    \ echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d \"-\" -f\
    \ 1)\n  local day=$(echo $1 | cut -d \"-\" -f 2)\n  local year=$(echo $1 | cut\
    \ -d \"-\" -f 3)\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq\
    \ 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq\
    \ 11 ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1\
    \ || $day -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  date=\"$1\"\n  if [[ -z \"$date\" ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$date\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  month=$(echo \"$date\" | cut -d '-' -f\
    \ 1)\n  day=$(echo \"$date\" | cut -d '-' -f 2)\n  year=$(echo \"$date\" | cut\
    \ -d '-' -f 3)\n  if [[ \"$month\" -lt 1 || \"$month\" -gt 12 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  if [[ \"$month\" -eq 1 || \"$month\" -eq 3 ||\
    \ \"$month\" -eq 5 || \"$month\" -eq 7 || \"$month\" -eq 8 || \"$month\" -eq 10\
    \ || \"$month\" -eq 12 ]]; then\n    if [[ \"$day\" -lt 1 || \"$day\" -gt 31 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n  elif [[ \"$month\" -eq 4\
    \ || \"$month\" -eq 6 || \"$month\" -eq 9 || \"$month\" -eq 11 ]]; then\n    if\
    \ [[ \"$day\" -lt 1 || \"$day\" -gt 30 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [[ \"$month\" -eq 2 ]]; then\n    if [[ \"$day\" -lt 1 || \"$day\"\
    \ -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1 | cut -d'-' -f2)\n\
    \    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n      if [[ $day -lt 1 || $day -gt 31 ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -lt 1 || $day\
    \ -gt 30 ]]; then\n        echo \"false\"\n        return\n      fi\n    elif\
    \ [[ $month -eq 2 ]]; then\n      if [[ $day -lt 1 || $day -gt 29 ]]; then\n \
    \       echo \"false\"\n        return\n      fi\n    fi\n    if [[ $month -lt\
    \ 1 || $month -gt 12 ]]; then\n      echo \"false\"\n      return\n    fi\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n        year=${BASH_REMATCH[3]}\n\
    \        if [[ $month -ge 1 && $month -le 12 ]]; then\n            if [[ $month\
    \ -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n                if [[ $day -ge 1 && $day -le\
    \ 31 ]]; then\n                    echo \"true\"\n                else\n     \
    \               echo \"false\"\n                fi\n            elif [[ $month\
    \ -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n          \
    \      if [[ $day -ge 1 && $day -le 30 ]]; then\n                    echo \"true\"\
    \n                else\n                    echo \"false\"\n                fi\n\
    \            elif [[ $month -eq 2 ]]; then\n                if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n                    echo \"true\"\n                else\n\
    \                    echo \"false\"\n                fi\n            fi\n    \
    \    else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 2 ]]; then\n      if [[ $((year % 4)) -eq 0 ]]; then\n \
    \       if [[ $day -gt 29 ]]; then\n          echo \"false\"\n          return\n\
    \        fi\n      else\n        if [[ $day -gt 28 ]]; then\n          echo \"\
    false\"\n          return\n        fi\n      fi\n    elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -gt 30 ]];\
    \ then\n        echo \"false\"\n        return\n      fi\n    elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -gt 31 ]]; then\n       \
    \ echo \"false\"\n        return\n      fi\n    else\n      echo \"false\"\n \
    \     return\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  date=$1\n  if [[ $date =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -lt 1 ||\
    \ $day -gt 31 ]]; then\n        echo \"false\"\n        return\n      fi\n   \
    \ elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \      if [[ $day -lt 1 || $day -gt 30 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    elif [[ $month -eq 2 ]]; then\n      if [[ $day -lt\
    \ 1 || $day -gt 29 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n \
    \ fi\n  local date_regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\n  if [[ $1 =~\
    \ $date_regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [ $month -lt 1 ] || [ $month -gt 12\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n    if [ $month -eq 1 ]\
    \ || [ $month -eq 3 ] || [ $month -eq 5 ] || [ $month -eq 7 ] || [ $month -eq\
    \ 8 ] || [ $month -eq 10 ] || [ $month -eq 12 ]; then\n      if [ $day -lt 1 ]\
    \ || [ $day -gt 31 ]; then\n        echo \"false\"\n        return\n      fi\n\
    \    elif [ $month -eq 4 ] || [ $month -eq 6 ] || [ $month -eq 9 ] || [ $month\
    \ -eq 11 ]; then\n      if [ $day -lt 1 ] || [ $day -gt 30 ]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    elif [ $month -eq 2 ]; then\n     \
    \ if [ $day -lt 1 ] || [ $day -gt 29 ]; then\n        echo \"false\"\n       \
    \ return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # $1 is the first argument passed\
    \ to the function\n  # $2 is the second argument passed to the function\n  # $#\
    \ is the total number of arguments passed to the function\n  # $@ is the list\
    \ of all arguments passed to the function\n  # $* is the list of all arguments\
    \ passed to the function\n  # $? is the exit status of the last command executed\n\
    \  # $$ is the process ID of the current shell\n  # $! is the process ID of the\
    \ last background command\n  # $0 is the name of the shell or shell script\n \
    \ # $- is the current option flags set for the shell\n  # $_ is the last argument\
    \ of the previous command\n  # $IFS is the Internal Field Separator that is used\
    \ for word splitting after expansion and to split lines into words with the read\
    \ builtin command. The default value is <space><tab><newline>.\n  # $UID is the\
    \ user ID of the current user\n  # $PS1 is the primary prompt string\n  # $PS2\
    \ is the secondary prompt string\n  # $PS3 is the prompt string for select command\n\
    \  # $PS4 is the prompt string for execution trace\n  # $LINENO is the line number\
    \ in the script\n  # $SECONDS is the number of seconds since the shell was started\n\
    \  # $RANDOM returns a different random number each time is it referred\n  # $TMOUT\
    \ is the number of seconds after which the shell will exit if input is not received\n\
    \  # $HOSTNAME is the name of the computer\n  # $HISTSIZE is the number of commands\
    \ to remember in the command history\n  # $HISTFILE is the name of the file in\
    \ which the command history is saved\n  # $HISTCMD is the history number of the\
    \ current command\n  # $HISTFILESIZE is the maximum number of lines contained\
    \ in the history file\n  # $HISTCONTROL is the value of the history control variable\n\
    \  # $IFS is the Internal Field Separator that is used for word splitting after\
    \ expansion and to split lines into words with the read builtin command. The default\
    \ value is <space><tab><newline>.\n  # $UID is the user ID of the current user\n\
    \  # $PS1 is the primary prompt string\n\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp7czn1p8q.sh: line 52: syntax error near unexpected token `}''\n/tmp/tmp7czn1p8q.sh:
    line 52: `}''\n"'
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1 | cut -d'-' -f2)\n\
    \    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month -gt 0 && $month -lt\
    \ 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local month=$(echo $date | cut -d'-' -f1)\n\
    \  local day=$(echo $date | cut -d'-' -f2)\n  local year=$(echo $date | cut -d'-'\
    \ -f3)\n  local month_31=\"1 3 5 7 8 10 12\"\n  local month_30=\"4 6 9 11\"\n\
    \  local month_29=\"2\"\n  local month_28=\"2\"\n  local valid_date_format=\"\
    ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\"\n  if [[ $date =~ $valid_date_format ]]; then\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month_31 =~ $month\
    \ ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      elif [[ $month_30\
    \ =~ $month ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n     \
    \     echo \"true\"\n        else\n          echo \"false\"\n        fi\n    \
    \  elif [[ $month_29 =~ $month ]]; then\n        if [[ $year%4 -eq 0 ]]; then\n\
    \          if [[ $day -gt 0 && $day -lt 30 ]]; then\n            echo \"true\"\
    \n          else\n            echo \"false\"\n          fi\n        else\n   \
    \       if [[ $day -gt 0 && $day -lt 29 ]]; then\n            echo \"true\"\n\
    \          else\n            echo \"false\"\n          fi\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print to stdout\n\
    \  # Use echo -n to print without newline\n  # Use read to read from stdin\n \
    \ # Use return to return a value\n  # Use exit to exit the script\n  # Use set\
    \ -x to debug your script\n  # Use set +x to disable debugging\n  # Use $# to\
    \ get the number of arguments\n  # Use $@ to get all the arguments\n  # Use $1,\
    \ $2, $3, ... to get the arguments one by one\n  # Use $0 to get the name of the\
    \ script\n  # Use $? to get the exit code of the last command\n  # Use $! to get\
    \ the PID of the last command\n  # Use $$ to get the PID of the current script\n\
    \  # Use $USER to get the username\n  # Use $HOSTNAME to get the hostname\n  #\
    \ Use $SECONDS to get the number of seconds since the script started\n  # Use\
    \ $RANDOM to get a random number\n  # Use $LINENO to get the current line number\n\
    \  # Use $DIRSTACK to get the directories in the directory stack\n  # Use $EUID\
    \ to get the effective user ID\n  # Use $UID to get the real user ID\n  # Use\
    \ $GROUPS to get the groups the user belongs to\n  # Use $SHELL to get the shell\n\
    \  # Use $BASH_VERSION to get the version of bash\n  # Use $PWD to get the current\
    \ directory\n  # Use $OLDPWD to get the previous directory\n  # Use $IFS to get\
    \ the internal field separator\n  # Use $PATH to get the path\n  # Use $PS1 to\
    \ get the primary prompt string\n  # Use $PS2 to get the secondary prompt string\n\
    \  # Use $PS3 to get the select prompt string\n  # Use $PS4 to get the debug prompt\
    \ string\n  # Use $TMOUT to get the timeout for the select command\n  # Use $TMPDIR\
    \ to get the temporary directory\n  # Use $HISTSIZE to get the number of commands\
    \ to remember in the history list\n  # Use $HISTFILE to get the name of the file\
    \ in which to save the command history\n  # Use $HISTFILESIZE to get\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpf_2ct2dm.sh: line 59: syntax error near unexpected token `}''\n/tmp/tmpf_2ct2dm.sh:
    line 59: `}''\n"'
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print to stdout\n\
    \  # Use echo \"false\" to print false\n  # Use echo \"true\" to print true\n\
    \  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -gt\
    \ 12 || $month -lt 1 ]]; then\n      echo \"false\"\n    elif [[ $month -eq 2\
    \ ]]; then\n      if [[ $((year % 4)) -eq 0 ]]; then\n        if [[ $day -gt 29\
    \ || $day -lt 1 ]]; then\n          echo \"false\"\n        else\n          echo\
    \ \"true\"\n        fi\n      else\n        if [[ $day -gt 28 || $day -lt 1 ]];\
    \ then\n          echo \"false\"\n        else\n          echo \"true\"\n    \
    \    fi\n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 ||\
    \ $month -eq 11 ]]; then\n      if [[ $day -gt 30 || $day -lt 1 ]]; then\n   \
    \     echo \"false\"\n      else\n        echo \"true\"\n      fi\n    else\n\
    \      if [[ $day -gt 31 || $day -lt 1 ]]; then\n        echo \"false\"\n    \
    \  else\n        echo \"true\"\n      fi\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local month=$(echo $date | cut -d \"-\" -f\
    \ 1)\n  local day=$(echo $date | cut -d \"-\" -f 2)\n  local year=$(echo $date\
    \ | cut -d \"-\" -f 3)\n  local days_in_month=0\n  local valid_date=false\n  if\
    \ [[ $month -ge 1 && $month -le 12 ]]; then\n    if [[ $month -eq 1 || $month\
    \ -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n      days_in_month=31\n    elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      days_in_month=30\n  \
    \  else\n      days_in_month=29\n    fi\n    if [[ $day -ge 1 && $day -le $days_in_month\
    \ ]]; then\n      if [[ $year -ge 1 ]]; then\n        valid_date=true\n      fi\n\
    \    fi\n  fi\n  echo $valid_date\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local\
    \ year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]]; then\n\
    \      if [[ $month -eq 2 ]]; then\n        if [[ $((year % 4)) -eq 0 ]]; then\n\
    \          if [[ $day -gt 0 && $day -lt 30 ]]; then\n            echo \"true\"\
    \n          else\n            echo \"false\"\n          fi\n        else\n   \
    \       if [[ $day -gt 0 && $day -lt 29 ]]; then\n            echo \"true\"\n\
    \          else\n            echo \"false\"\n          fi\n        fi\n      elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      else\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  if [[ \"$1\" =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if (( month > 0 && month < 13 )); then\n      if (( month == 2 )); then\n\
    \        if (( (year % 4 == 0 && year % 100 != 0) || year % 400 == 0 )); then\n\
    \          if (( day > 0 && day < 30 )); then\n            echo \"true\"\n   \
    \       else\n            echo \"false\"\n          fi\n        else\n       \
    \   if (( day > 0 && day < 29 )); then\n            echo \"true\"\n          else\n\
    \            echo \"false\"\n          fi\n        fi\n      elif (( month ==\
    \ 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||\
    \ month == 12 )); then\n        if (( day > 0 && day < 32 )); then\n         \
    \ echo \"true\"\n        else\n          echo \"false\"\n        fi\n      else\n\
    \        if (( day > 0 && day < 31 )); then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      else\n        if [[ $day -le 31 && $day\
    \ -ge 1 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  local month=$(echo $1 | cut -d'-' -f1)\n  local day=$(echo\
    \ $1 | cut -d'-' -f2)\n  local year=$(echo $1 | cut -d'-' -f3)\n  if [[ $month\
    \ -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n  fi\n  if\
    \ [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq\
    \ 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt 1 || $day -gt\
    \ 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day\
    \ -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -gt\
    \ 12 || $month -lt 1 ]]; then\n      echo \"false\"\n      return\n    fi\n  \
    \  if [[ $month == 2 ]]; then\n      if [[ $day -gt 29 || $day -lt 1 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11 ]]; then\n      if [[ $day -gt 30\
    \ || $day -lt 1 ]]; then\n        echo \"false\"\n        return\n      fi\n \
    \   else\n      if [[ $day -gt 31 || $day -lt 1 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local month=$(echo $date | cut -d'-' -f1)\n\
    \  local day=$(echo $date | cut -d'-' -f2)\n  local year=$(echo $date | cut -d'-'\
    \ -f3)\n  local date_format=$(echo $date | grep -E '^([0-9]{2})-([0-9]{2})-([0-9]{4})$')\n\
    \  local valid_month=$(echo $month | grep -E '^([1-9]|1[0-2])$')\n  local valid_day=$(echo\
    \ $day | grep -E '^([1-9]|[1-2][0-9]|3[0-1])$')\n  local valid_year=$(echo $year\
    \ | grep -E '^[0-9]{4}$')\n  local valid_date_format=$(echo $date | grep -E '^([0-9]{2})-([0-9]{2})-([0-9]{4})$')\n\
    \  if [[ -z $date ]]; then\n    echo \"false\"\n  elif [[ -z $valid_date_format\
    \ ]]; then\n    echo \"false\"\n  elif [[ -z $valid_month ]]; then\n    echo \"\
    false\"\n  elif [[ -z $valid_day ]]; then\n    echo \"false\"\n  elif [[ -z $valid_year\
    \ ]]; then\n    echo \"false\"\n  elif [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]] &&\
    \ [[ $day -gt 31 ]]; then\n    echo \"false\"\n  elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]] && [[ $day -gt 30 ]]; then\n    echo\
    \ \"false\"\n  elif [[ $month -eq 2 ]] && [[ $day -gt 29 ]]; then\n    echo \"\
    false\"\n  else\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 2 ]]; then\n      if [[ $((year % 4)) -eq 0 ]]; then\n \
    \       if [[ $day -gt 29 ]]; then\n          echo \"false\"\n          return\n\
    \        fi\n      else\n        if [[ $day -gt 28 ]]; then\n          echo \"\
    false\"\n          return\n        fi\n      fi\n    elif [[ $month -eq 1 || $month\
    \ -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n      if [[ $day -gt 31 ]]; then\n        echo \"false\"\n\
    \        return\n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -gt 30 ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    else\n      echo \"false\"\n      return\n\
    \    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  local date=$1\n  local regex=\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    \n  if [[ $date =~ $regex ]]; then\n    local month=${date:0:2}\n    local day=${date:3:2}\n\
    \    if [[ $month -eq 2 ]]; then\n      if [[ $day -gt 29 ]]; then\n        echo\
    \ \"false\"\n      else\n        echo \"true\"\n      fi\n    elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day\
    \ -gt 30 ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n\
    \      fi\n    else\n      if [[ $day -gt 31 ]]; then\n        echo \"false\"\n\
    \      else\n        echo \"true\"\n      fi\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  # Write your code here\n  # Use echo to print to stdout\n\
    \  # Use echo -n to print without newline\n  # Use read to read from stdin\n \
    \ # Use return to return a value\n  # Use exit to exit the program\n  # Use set\
    \ -x to debug\n  # Use set +x to stop debugging\n  # Use set -e to exit on error\n\
    \  # Use set +e to ignore error\n  # Use set -o pipefail to exit on pipe error\n\
    \  # Use set +o pipefail to ignore pipe error\n  # Use trap to catch signals\n\
    \  # Use set -u to exit on undefined variable\n  # Use set +u to ignore undefined\
    \ variable\n  # Use set -f to disable globbing\n  # Use set +f to enable globbing\n\
    \  # Use set -C to disable noclobber\n  # Use set +C to enable noclobber\n  #\
    \ Use set -B to enable brace expansion\n  # Use set +B to disable brace expansion\n\
    \  # Use set -o noglob to disable globbing\n  # Use set +o noglob to enable globbing\n\
    \  # Use set -o nounset to exit on undefined variable\n  # Use set +o nounset\
    \ to ignore undefined variable\n  # Use set -o errexit to exit on error\n  # Use\
    \ set +o errexit to ignore error\n  # Use set -o pipefail to exit on pipe error\n\
    \  # Use set +o pipefail to ignore pipe error\n  # Use set -o noclobber to disable\
    \ noclobber\n  # Use set +o noclobber to enable noclobber\n  # Use set -o xtrace\
    \ to debug\n  # Use set +o xtrace to stop debugging\n  # Use set -o posix to enable\
    \ posix mode\n  # Use set +o posix to disable posix mode\n  # Use set -o braceexpand\
    \ to enable brace expansion\n  # Use set +o braceexpand to disable brace expansion\n\
    \  # Use set -o monitor to enable job control\n  # Use set +o monitor to disable\
    \ job control\n  # Use set -o notify to enable job control\n  # Use set +o notify\
    \ to disable job control\n  # Use set -o verbose to enable verbose mode\n\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp6yi3nzl3.sh: line 63: syntax error near unexpected token `}''\n/tmp/tmp6yi3nzl3.sh:
    line 63: `}''\n"'
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1 | cut -d- -f2)\n   \
    \ local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -ge 1 && $month -le 12\
    \ ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    if [[ ${BASH_REMATCH[1]} -eq 2 ]]; then\n      if [[ ${BASH_REMATCH[2]}\
    \ -gt 29 ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n\
    \      fi\n    elif [[ ${BASH_REMATCH[1]} -eq 4 || ${BASH_REMATCH[1]} -eq 6 ||\
    \ ${BASH_REMATCH[1]} -eq 9 || ${BASH_REMATCH[1]} -eq 11 ]]; then\n      if [[\
    \ ${BASH_REMATCH[2]} -gt 30 ]]; then\n        echo \"false\"\n      else\n   \
    \     echo \"true\"\n      fi\n    else\n      echo \"true\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -lt\
    \ 1 || $month -gt 12 ]]; then\n      echo \"false\"\n      return\n    fi\n  \
    \  if [[ $month -eq 2 ]]; then\n      if [[ $day -lt 1 || $day -gt 29 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -lt\
    \ 1 || $day -gt 30 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    else\n      if [[ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342873

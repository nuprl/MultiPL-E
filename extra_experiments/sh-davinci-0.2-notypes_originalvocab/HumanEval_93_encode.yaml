name: HumanEval_93_encode
language: sh
prompt: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
  \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the message\
  \ with the letter that appears 2 places ahead of that \n# vowel in the english alphabet.\
  \ \n# Assume only letters. \n# Examples:\n# >>> $(encode \"test\")\n# \"TGST\"\n\
  # >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\nencode() {\n"
tests: "}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n  \
  \  [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
  ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\")\
  \ = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
completions: ["    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr\
    \ '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    local msg=$1\n    local\
    \ encoded=\"\"\n    for (( i=0; i<${#msg}; i++ )); do\n        local char=${msg:$i:1}\n\
    \        local lower=$(echo $char | tr '[:upper:]' '[:lower:]')\n        if [[\
    \ $lower == [aeiou] ]]; then\n            local next=$(echo $lower | tr 'aeiou'\
    \ 'efjko')\n            encoded+=$(echo $next | tr '[:lower:]' '[:upper:]')\n\
    \        else\n            encoded+=$(echo $char | tr '[:lower:]' '[:upper:]')\n\
    \        fi\n    done\n    echo $encoded", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRVX'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[a-z]' '[c-za-b]'\
    \ | tr '[aeiou]' '[eoiu]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEGIOU' 'CFLRVY' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'EGIOA'", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRVY'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU'\
    \ 'CFLRVX'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRTX'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOA' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "\techo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'", "  echo \"$1\" | tr\
    \ '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOA'", "  echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRTX' | tr '[:upper:]' '[:lower:]'",
  "  echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'A-Z' 'C-ZA-B' | tr 'AEIOU' 'EIOUA'", "  \
    \  echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'A-Z' 'C-ZA-B' | tr 'AEIOU' 'EIOUA'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CFKPV' | tr '[:upper:]'\
    \ '[:lower:]'", "\techo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'EGIOA' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1 |\
    \ tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGKOS' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr 'a-zA-Z' 'n-za-mN-ZA-M' | tr 'aeiou' 'cegik'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "\techo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "    echo \"\
    $1\" | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgkos'", "    echo $1 | tr '[a-z]'\
    \ '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'EGIOA' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'", "    local\
    \ message=$1\n    local encoded=\"\"\n    local vowels=\"aeiou\"\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyz\"\n    local alphabet_len=${#alphabet}\n    local i=0\n\
    \    local char=\"\"\n    local char_pos=0\n    local char_pos_new=0\n    local\
    \ char_new=\"\"\n    local char_case=\"\"\n    local char_case_new=\"\"\n    for\
    \ (( i=0; i<${#message}; i++ )); do\n        char=${message:$i:1}\n        char_case=${char,,}\n\
    \        char_pos=`expr index \"$alphabet\" \"$char_case\"`\n        char_pos_new=`expr\
    \ $char_pos + 2`\n        if [ $char_pos_new -gt $alphabet_len ]; then\n     \
    \       char_pos_new=`expr $char_pos_new - $alphabet_len`\n        fi\n      \
    \  char_new=${alphabet:$char_pos_new-1:1}\n        char_case_new=${char_new^^}\n\
    \        if [ \"$char\" = \"$char_case\" ]; then\n            encoded=$encoded$char_new\n\
    \        else\n            encoded=$encoded$char_case_new\n        fi\n    done\n\
    \    echo $encoded", "\techo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'EGIOV'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP'", "    echo \"$1\" | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgjkr'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOA' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'",
  "    echo \"$1\" | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "    local message=$1\n\
    \    local encoded=\"\"\n    local i=0\n    local char\n    local ascii\n    local\
    \ ascii_lower\n    local ascii_upper\n    local ascii_lower_new\n    local ascii_upper_new\n\
    \    local char_new\n    local vowels=\"aeiou\"\n    local vowels_new=\"cfilor\"\
    \n    local vowel_index\n    local vowel_index_new\n    for (( i=0; i<${#message};\
    \ i++ )); do\n        char=${message:$i:1}\n        ascii=$(printf \"%d\" \"'$char\"\
    )\n        ascii_lower=$(printf \"%d\" \"'a\")\n        ascii_upper=$(printf \"\
    %d\" \"'A\")\n        if [[ $ascii -ge $ascii_lower && $ascii -le $ascii_lower+25\
    \ ]]; then\n            ascii_lower_new=$((ascii_lower+25))\n            ascii_upper_new=$((ascii_upper+25))\n\
    \            if [[ $ascii -ge $ascii_lower_new ]]; then\n                ascii=$((ascii-26))\n\
    \            fi\n            char_new=$(printf \\\\$(printf '%03o' $((ascii+1))))\n\
    \        elif [[ $ascii -ge $ascii_upper && $ascii -le $ascii_upper+25 ]]; then\n\
    \            ascii_lower_new=$((ascii_lower+25))\n            ascii_upper_new=$((ascii_upper+25))\n\
    \            if [[ $ascii -ge $ascii_upper_new ]]; then\n                ascii=$((ascii-26))\n\
    \            fi\n            char_new=$(printf \\\\$(printf '%03o' $((ascii+1))))\n\
    \        else\n            char_new=$char\n        fi\n        vowel_index=$(expr\
    \ index \"$vowels\" \"$char_new\")\n        if [[ $vowel_index -gt 0 ]]; then\n\
    \            vowel_index_new=$((vowel_", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP'", '    echo $1 | tr a-zA-Z n-za-mN-ZA-M | tr aeiouAEIOU
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ', "\techo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'CDEFGHIJKLMNOPQRSTUVWXYZAB' | tr 'AEIOU'\
    \ 'EGIKO'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'A-Z' 'C-ZA-B'\
    \ | tr 'AEIOU' 'EIOUA'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP'", "  echo \"$1\" | tr 'a-zA-Z' 'b-zaB-ZA' | tr 'aeiou' 'cgkos'", " \
    \   echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFJKPV' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr\
    \ '[:upper:]' '[:lower:]' | tr '[aeiou]' '[cdfghjkl]'", "    echo \"$1\" | tr\
    \ 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgkos'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRTX' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | sed 's/[AEIOU]/\\U&/g' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'CDEFGHIJKLMNOPQRSTUVWXYZAB'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'", "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'",
  "    echo \"$1\" | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgkos'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr\
    \ '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRTX' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "\t#echo \"$1\" |\
    \ tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRTZ'\n\techo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRTZ' | tr '[:upper:]' '[:lower:]'", "  echo $1\
    \ | tr 'a-zA-Z' 'b-zaB-ZA' | tr 'aeiou' 'cgjkr'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOV' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgjkr'", "  echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "\techo $1 | tr\
    \ 'a-zA-Z' 'n-za-mN-ZA-M' | tr 'aeiou' 'cdfgjk'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "  echo $1 |\
    \ tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'", "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]'\
    \ '[:lower:]'", "    local message=$1\n    local encoded=\"\"\n    local vowels=\"\
    aeiou\"\n    local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\n    local alphabet_len=${#alphabet}\n\
    \    local i=0\n    local char=\"\"\n    local char_index=0\n    local char_index_new=0\n\
    \    local char_new=\"\"\n    local char_new_index=0\n    local char_new_index_new=0\n\
    \    local char_new_new=\"\"\n    local char_new_new_index=0\n    local char_new_new_index_new=0\n\
    \    local char_new_new_new=\"\"\n    local char_new_new_new_index=0\n    local\
    \ char_new_new_new_index_new=0\n    local char_new_new_new_new=\"\"\n    local\
    \ char_new_new_new_new_index=0\n    local char_new_new_new_new_index_new=0\n \
    \   local char_new_new_new_new_new=\"\"\n    local char_new_new_new_new_new_index=0\n\
    \    local char_new_new_new_new_new_index_new=0\n    local char_new_new_new_new_new_new=\"\
    \"\n    local char_new_new_new_new_new_new_index=0\n    local char_new_new_new_new_new_new_index_new=0\n\
    \    local char_new_new_new_new_new_new_new=\"\"\n    local char_new_new_new_new_new_new_new_index=0\n\
    \    local char_new_new_new_new_new_new_new_index_new=0\n    local char_new_new_new_new_new_new_new_new=\"\
    \"\n    local char_new_new_new_new_new_new_new_new_index=0\n    local char_new_new_new_new_new_new_new_new_index_new=0\n\
    \    local char_new_new_new_new_new_new_new_new_new=\"\"\n    local char_new_",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'",
  "  echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    local message=$1\n\
    \    local encoded=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n        local\
    \ char=${message:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            encoded+=$(echo\
    \ $char | tr '[A-Z]' '[a-z]')\n        elif [[ $char =~ [a-z] ]]; then\n     \
    \       encoded+=$(echo $char | tr '[a-z]' '[A-Z]')\n        else\n          \
    \  encoded+=$char\n        fi\n    done\n    echo $encoded", "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRVY'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | sed\
    \ 's/[AEIOU]/\\U&/g' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'CDEFGHIJKLMNOPQRSTUVWXYZAB'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRVX'", "\techo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'A-Z'\
    \ 'C-ZA-B' | tr 'AEIOU' 'EIOUA'", "    echo $1 | tr '[:lower:]' '[:upper:]' |\
    \ tr 'AEIOU' 'CGFKP'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'A-Z' 'C-ZA-B' | tr 'AEIOU' 'EIOUA'", "    echo \"$1\" | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEIOU' 'CGFKP'", "    echo \"$1\" | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou'\
    \ 'cgjkr'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", '    echo "$1" | tr "[:lower:]" "[:upper:]" |
    tr "AEIOU" "EGIOA"', "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU'\
    \ 'CFLORT' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CEGKQY' | tr '[:upper:]' '[:lower:]'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CFKPV' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr '[:upper:]' '[:lower:]' | tr 'aeiou' 'cegik'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    local message=$1\n\
    \    local encoded=\"\"\n    local vowels=\"aeiou\"\n    local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    local i=0\n    local letter=\"\"\n    local index=0\n    local new_index=0\n\
    \    local new_letter=\"\"\n    for (( i=0; i<${#message}; i++ )); do\n      \
    \  letter=${message:$i:1}\n        index=$(echo $alphabet | grep -b -o $letter\
    \ | cut -d: -f1)\n        new_index=$(( index + 2 ))\n        if [[ $new_index\
    \ -gt 25 ]]; then\n            new_index=$(( new_index - 26 ))\n        fi\n \
    \       new_letter=${alphabet:$new_index:1}\n        if [[ $vowels =~ $letter\
    \ ]]; then\n            encoded=$encoded$new_letter\n        else\n          \
    \  encoded=$encoded$letter\n        fi\n    done\n    echo $encoded", "    echo\
    \ $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'",
  "    local msg=\"$1\"\n    local encoded=\"\"\n    local vowels=\"aeiou\"\n    local\
    \ vowels_encoded=\"cgjkr\"\n    local i=0\n    local c=\"\"\n    local v=\"\"\n\
    \    local e=\"\"\n    local pos=0\n    for ((i=0; i<${#msg}; i++)); do\n    \
    \    c=\"${msg:$i:1}\"\n        v=\"${vowels%${c}*}\"\n        if [ \"$v\" !=\
    \ \"$vowels\" ]; then\n            pos=$(( ${#v} + 1 ))\n            e=\"${vowels_encoded:$pos:1}\"\
    \n            encoded=\"${encoded}${e}\"\n        else\n            encoded=\"\
    ${encoded}${c}\"\n        fi\n    done\n    echo \"${encoded^^}\"", "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgkos'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGKOS' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'",
  "    local message=$1\n    local encoded=\"\"\n    for (( i=0; i<${#message}; i++\
    \ )); do\n        local char=${message:$i:1}\n        if [[ $char =~ [a-z] ]];\
    \ then\n            encoded+=$(echo $char | tr '[a-z]' '[A-Z]')\n        elif\
    \ [[ $char =~ [A-Z] ]]; then\n            encoded+=$(echo $char | tr '[A-Z]' '[a-z]')\n\
    \        else\n            encoded+=$char\n        fi\n    done\n    echo $encoded",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    # Write\
    \ your code here\n    echo \"Write your code here\"", "    echo \"$1\" | tr 'a-zA-Z'\
    \ 'b-zaB-ZA' | tr 'aeiou' 'cgjkr'", "  echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRVY' | tr '[:upper:]' '[:lower:]'", '    echo "$1" | tr "[:lower:]"
    "[:upper:]" | tr "AEIOU" "EGIOA" | tr "[:upper:]" "[:lower:]"', "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'EGIOA' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVY'", "    echo \"$1\" |\
    \ tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cdfgjk'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRVX'", "\techo $1 | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRVX'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr\
    \ 'AEIOU' 'CFKPV'", "  echo \"$1\" | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'ECIGA'", "    echo \"\
    $1\" | tr '[:lower:]' '[:upper:]' | tr 'A-Z' 'C-ZA-B' | tr 'AEIOU' 'EIOUA' | tr\
    \ 'aeiou' 'eioua'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU'\
    \ 'CGFKP'", "    # TODO: Write your code here\n    echo \"TODO\"", "    echo $1\
    \ | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'cgkos'", "\techo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'", "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    # your\
    \ code here\n    echo \"$1\" | tr 'a-zA-Z' 'c-za-bC-ZA-B' | tr 'aeiou' 'eouai'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRVX' | tr '[:upper:]' '[:lower:]'", "    local message=$1\n\
    \    local encoded=\"\"\n    local vowels=\"aeiou\"\n    local vowel_index=0\n\
    \    local char\n    local char_index=0\n    local char_ascii\n    local char_ascii_new\n\
    \    local char_new\n\n    for (( i=0; i<${#message}; i++ )); do\n        char=${message:$i:1}\n\
    \        char_ascii=$(printf \"%d\" \"'$char\")\n        char_ascii_new=$char_ascii\n\
    \        char_new=$char\n\n        if [[ $char =~ [A-Z] ]]; then\n           \
    \ char_ascii_new=$(( char_ascii + 32 ))\n            char_new=$(printf \\\\$(printf\
    \ '%03o' $char_ascii_new))\n        elif [[ $char =~ [a-z] ]]; then\n        \
    \    char_ascii_new=$(( char_ascii - 32 ))\n            char_new=$(printf \\\\\
    $(printf '%03o' $char_ascii_new))\n        fi\n\n        if [[ $vowels =~ $char\
    \ ]]; then\n            vowel_index=$(expr index \"$vowels\" \"$char\")\n    \
    \        char_ascii_new=$(( char_ascii + 2 ))\n            char_new=$(printf \\\
    \\$(printf '%03o' $char_ascii_new))\n        fi\n\n        encoded+=$char_new\n\
    \    done\n\n    echo $encoded", "    echo $1 | tr '[a-z]' '[c-za-b]' | tr '[aeiou]'\
    \ '[eoiu]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVX'",
  "    local message=$1\n    local encoded=\"\"\n    local i=0\n    local char=\"\"\
    \n    local ascii=\"\"\n    local new_ascii=\"\"\n    local new_char=\"\"\n  \
    \  local vowels=\"aeiouAEIOU\"\n    local vowels_shifted=\"cgkosCgkos\"\n    local\
    \ is_vowel=0\n    local is_upper=0\n    local is_lower=0\n    local is_letter=0\n\
    \    local is_space=0\n    local is_punct=0\n    local is_digit=0\n    local is_other=0\n\
    \    local is_newline=0\n    local is_tab=0\n    local is_backspace=0\n    local\
    \ is_carriage=0\n    local is_formfeed=0\n    local is_return=0\n    local is_escape=0\n\
    \    local is_null=0\n    local is_alert=0\n    local is_backslash=0\n    local\
    \ is_question=0\n    local is_underscore=0\n    local is_vertical=0\n    local\
    \ is_tilde=0\n    local is_exclamation=0\n    local is_at=0\n    local is_hash=0\n\
    \    local is_dollar=0\n    local is_percent=0\n    local is_caret=0\n    local\
    \ is_ampersand=0\n    local is_asterisk=0\n    local is_open_paren=0\n    local\
    \ is_close_paren=0\n    local is_hyphen=0\n    local is_plus=0\n    local is_equals=0\n\
    \    local is_open_bracket=0\n    local is_close_bracket=0\n    local is_open_brace=0\n\
    \    local is_close_brace=0\n    local is_semicolon=0\n    local is_colon=0\n\
    \    local is_quote=0\n    local is_comma=0\n    local is_period=0\n    local\
    \ is_less_than=0\n    local is_greater_than=0\n    local is_slash=0\n    local\
    \ is_backtick=0\n    local is_bar=0\n   ", '    # TODO: Implement me', "    echo\
    \ \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'\
    \ | tr '[:upper:]' '[:lower:]'", "    echo \"$1\" | tr '[:lower:]' '[:upper:]'\
    \ | tr 'AEGIOU' 'CFLRTX' | tr '[:upper:]' '[:lower:]'", "    local message=$1\n\
    \    local encoded=\"\"\n    local char=\"\"\n    local char_code=\"\"\n    local\
    \ char_code_new=\"\"\n    local char_new=\"\"\n    local vowels=\"aeiou\"\n  \
    \  local vowels_new=\"cgjkq\"\n    local i=0\n    local j=0\n    local k=0\n \
    \   local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n  \
    \  local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n   \
    \ local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local\
    \ a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n\
    \    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n \
    \   local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n  \
    \  local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n   \
    \ local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local\
    \ A=0\n    local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n\
    \    local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n \
    \   local L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n  \
    \  local Q=0\n    local R=0\n    local S=0\n    local T=0\n    local U=0\n   \
    \ local V=0\n    local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    for\
    \ ((i=0; i<${#message}; i++)); do\n        char=${message:$i:1", "    echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEGIOU' 'CFLRVY'", "  echo $1 |\
    \ tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo \"$1\" | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'ECGTA' | tr '[:upper:]'\
    \ '[:lower:]'", "    echo $1 | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'",
  "    echo $1 | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP'", "    echo $1 | tr '[:lower:]'\
    \ '[:upper:]' | tr 'AEGIOU' 'CFLRTX' | tr '[:upper:]' '[:lower:]'", "  echo $1\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGFKP' | tr '[:upper:]' '[:lower:]'",
  "    echo $1 | tr '[a-z]' '[c-za-b]' | tr '[aeiou]' '[eoiu]'", "    echo \"$1\"\
    \ | tr '[:lower:]' '[:upper:]' | tr 'AEIOU' 'CGKOS'"]
stop_tokens:
- "\n}"

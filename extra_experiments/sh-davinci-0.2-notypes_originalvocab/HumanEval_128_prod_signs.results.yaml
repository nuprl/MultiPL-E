language: sh
name: HumanEval_128_prod_signs
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmph7r4gy0_.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmph7r4gy0_.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmph7r4gy0_.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmprctty3uj.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn_ssfmpy.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpn_ssfmpy.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpn_ssfmpy.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=$@\n    local sum=0\n    local prod=1\n    local sign=0\n \
    \   for i in $arr; do\n        if [[ $i -lt 0 ]]; then\n            sign=-1\n\
    \        elif [[ $i -gt 0 ]]; then\n            sign=1\n        else\n       \
    \     sign=0\n        fi\n        sum=$((sum + i))\n        prod=$((prod * sign))\n\
    \    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n  \
    \      echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ sign=0\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n\
    \            sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1aah_rus.sh: line 19: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp1aah_rus.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp1aah_rus.sh: line 27: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvbvtsb6k.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpvbvtsb6k.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpvbvtsb6k.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $prod -eq\
    \ 0 ]]; then\n        echo \"0\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa8m33acz.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa8m33acz.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa8m33acz.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    local sign\n\
    \    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | awk '{if ($1 > 0)\
    \ print 1; else if ($1 < 0) print -1; else print 0}')\n        sum=$((sum + i))\n\
    \        prod=$((prod * sign))\n    done\n    if [ \"$sum\" -eq 0 ]; then\n  \
    \      echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp99fnkwgc.sh: line 20: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjhdjd6uh.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpjhdjd6uh.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpjhdjd6uh.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\
    \n  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7ar86wrh.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp7ar86wrh.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp7ar86wrh.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmprctty3uj.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\
    \n  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7ar86wrh.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp7ar86wrh.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp7ar86wrh.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89e88mf5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        local\
    \ sum=0\n        local prod=1\n        for i in $@; do\n            if [ $i -gt\
    \ 0 ]; then\n                sum=$((sum + i))\n                prod=$((prod *\
    \ 1))\n            elif [ $i -lt 0 ]; then\n                sum=$((sum + i * -1))\n\
    \                prod=$((prod * -1))\n            fi\n        done\n        echo\
    \ $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu19fj80z.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpu19fj80z.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpu19fj80z.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89e88mf5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((prod * sum))\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmptf8aonum.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmptf8aonum.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmptf8aonum.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum *\
    \ prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjhdjd6uh.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpjhdjd6uh.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpjhdjd6uh.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in \"\
    ${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n\
    \        elif [ $i -eq 0 ]; then\n            prod=0\n            break\n    \
    \    fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbms7bgtn.sh: line 22: [: too many arguments\n/tmp/tmpbms7bgtn.sh:
    line 24: [: too many arguments\n/tmp/tmpbms7bgtn.sh: line 28: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89e88mf5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        local\
    \ sum=0\n        local prod=1\n        for i in $@; do\n            if [ $i -lt\
    \ 0 ]; then\n                prod=$((prod * -1))\n            elif [ $i -gt 0\
    \ ]; then\n                prod=$((prod * 1))\n            else\n            \
    \    prod=0\n            fi\n            sum=$((sum + i))\n        done\n    \
    \    echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        prod=$((prod * (i < 0 ? -1 : 1)))\n        sum=$((sum\
    \ + (i < 0 ? -i : i)))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo\
    \ \"0\"\n    else\n        echo \"$((prod * sum))\"\n    fi\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxdcsk2xr.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpxdcsk2xr.sh: line 22: 1 2 2 -4: syntax error
    in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            sum=$((sum + i))\n\
    \            prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n         \
    \   sum=$((sum + i * -1))\n            prod=$((prod * -1))\n        fi\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy4etg027.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpy4etg027.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -eq 0 ]; then\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [ $sum -eq 0 ]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            ((prod *= -1))\n        fi\n \
    \       ((sum += i))\n    done\n    ((sum *= prod))\n    if [[ $sum -eq 0 ]];\
    \ then\n        echo \"None\"\n    else\n        echo $sum\n    fi\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local i\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]} -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ ${arr[$i]} -lt 0 ]]; then\n\
    \            prod=$((prod * -1))\n        fi\n        sum=$((sum + ${arr[$i]}))\n\
    \    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    else\n    \
    \    echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6gkrrog.sh: line 19: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpf6gkrrog.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpf6gkrrog.sh: line 25: sum
    + 1 2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"\
    None\"\n  else\n    echo \"$((sum * prod))\"\n  fi\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnhxn311f.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpnhxn311f.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpnhxn311f.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn52pibwy.sh: line 22: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpn52pibwy.sh: line 24: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpn52pibwy.sh: line 29: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmprctty3uj.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  else\n    echo \"$((sum * prod))\"\
    \n  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n        return\n\
    \    fi\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n   \
    \         sign=1\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n   \
    \     else\n            sign=0\n        fi\n        prod=$((prod * sign))\n  \
    \      sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpov6noqpn.sh: line 23: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpov6noqpn.sh: line 25: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpov6noqpn.sh: line 31: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [ \"${#arr[@]}\"\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in \"\
    ${arr[@]}\"; do\n        if [ \"$i\" -lt 0 ]; then\n            prod=$((prod *\
    \ -1))\n        elif [ \"$i\" -gt 0 ]; then\n            prod=$((prod * 1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpusiqaw82.sh: line 22: [: 1 2 2 -4: integer expression expected\n/tmp/tmpusiqaw82.sh:
    line 24: [: 1 2 2 -4: integer expression expected\n/tmp/tmpusiqaw82.sh: line 29:
    1 2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum *\
    \ prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89e88mf5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmprctty3uj.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  elif [[ $sum -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpafnaij3f.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpafnaij3f.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpafnaij3f.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((sum * prod))\n}\n\ncandidate() {\n  \
    \  prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89e88mf5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      ((prod *= -1))\n    fi\n    ((sum += i))\n  done\n  echo \"\
    $((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1qks61wm.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp1qks61wm.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp1qks61wm.sh: line 24: ((:
    1 2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjhdjd6uh.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpjhdjd6uh.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpjhdjd6uh.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  else\n    echo \"$((sum * prod))\"\
    \n  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmph7r4gy0_.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmph7r4gy0_.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmph7r4gy0_.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -eq 0 ]]; then\n            prod=0\n            break\n  \
    \      fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  elif [[ $sum -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpafnaij3f.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpafnaij3f.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpafnaij3f.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 0
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local -a arr\n  local -i sum=0\n  local -i prod=1\n  local -i i=0\n  local\
    \ -i len=0\n  local -i abs=0\n  local -i sign=0\n  arr=($@)\n  len=${#arr[@]}\n\
    \  if [[ $len -eq 0 ]]; then\n    echo \"None\"\n    return\n  fi\n  for ((i=0;\
    \ i<len; i++)); do\n    abs=${arr[i]}\n    if [[ $abs -lt 0 ]]; then\n      sign=-1\n\
    \      abs=$((-1 * abs))\n    elif [[ $abs -gt 0 ]]; then\n      sign=1\n    else\n\
    \      sign=0\n    fi\n    sum=$((sum + abs))\n    prod=$((prod * sign))\n  done\n\
    \  echo \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpotde_4cr.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpotde_4cr.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpotde_4cr.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  if [ ${#arr[@]} -eq\
    \ 0 ]; then\n    echo \"None\"\n    return\n  fi\n  for i in \"${arr[@]}\"; do\n\
    \    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -eq 0 ];\
    \ then\n      prod=0\n      break\n    fi\n    sum=$((sum + i))\n  done\n  echo\
    \ \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbvzb9c3p.sh: line 22: [: too many arguments\n/tmp/tmpbvzb9c3p.sh:
    line 24: [: too many arguments\n/tmp/tmpbvzb9c3p.sh: line 28: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89e88mf5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum *\
    \ prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn_ssfmpy.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpn_ssfmpy.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpn_ssfmpy.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  local sign\n  for\
    \ num in \"${arr[@]}\"; do\n    if [[ $num -eq 0 ]]; then\n      prod=0\n    \
    \  break\n    fi\n    sign=$((num < 0 ? -1 : 1))\n    prod=$((prod * sign))\n\
    \    sum=$((sum + sign * num))\n  done\n  echo $((prod * sum))\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe_v86f78.sh: line 19: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpe_v86f78.sh: line 23: 1 2 2 -4: syntax error
    in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmprctty3uj.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $prod -eq\
    \ 0 ]]; then\n        echo \"0\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa8m33acz.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa8m33acz.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa8m33acz.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n            sign=1\n\
    \        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n      \
    \      sign=0\n        fi\n        prod=$((prod * sign))\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i == 0 ]]; then\n            prod=0\n        \
    \    break\n        fi\n        prod=$((prod * (i < 0 ? -1 : 1)))\n        sum=$((sum\
    \ + i))\n    done\n    echo $((prod * sum))\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmu3h6zc5.sh: line 22: 1 2 2 -4: syntax error in expression (error
    token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    local i\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        local num=${arr[$i]}\n      \
    \  if [[ $num -gt 0 ]]; then\n            sum=$((sum + num))\n            prod=$((prod\
    \ * 1))\n        elif [[ $num -lt 0 ]]; then\n            sum=$((sum + num * -1))\n\
    \            prod=$((prod * -1))\n        fi\n    done\n    if [[ $sum -eq 0 ]];\
    \ then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n  \
    \  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuqn_ja4s.sh: line 20: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpuqn_ja4s.sh: line 23: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -eq 0 ]; then\n            prod=0\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [ $sum -eq 0 ]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvel_2gr8.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpvel_2gr8.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpvel_2gr8.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmphhek0ata.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmphhek0ata.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmphhek0ata.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((prod * sum))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmprctty3uj.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmprctty3uj.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            sign=0\n\
    \        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n      \
    \      sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum *\
    \ prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo $((sum * prod))\n  \
    \  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaxcki4k7.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpaxcki4k7.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpaxcki4k7.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=$@\n    local sum=0\n    local prod=1\n    for i in $arr; do\n\
    \        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n    \
    \    elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp74oeq498.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89e88mf5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[\
    \ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n\
    \  done\n  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  else\n    echo \"$((prod\
    \ * sum))\"\n  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo_nv5jbw.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpo_nv5jbw.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpo_nv5jbw.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    local i=0\n  \
    \  local len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n        echo \"None\"\n\
    \        return\n    fi\n    while [ $i -lt $len ]; do\n        local num=${arr[$i]}\n\
    \        if [ $num -gt 0 ]; then\n            prod=$((prod * 1))\n        elif\
    \ [ $num -lt 0 ]; then\n            prod=$((prod * -1))\n        else\n      \
    \      prod=0\n        fi\n        sum=$((sum + num))\n        i=$((i + 1))\n\
    \    done\n    echo $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ ${arr[@]}; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((prod * sum))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdaiesve5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpdaiesve5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpdaiesve5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -eq 0 ]; then\n            prod=0\n            break\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $prod -eq\
    \ 0 ]]; then\n        echo \"0\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa8m33acz.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa8m33acz.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa8m33acz.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum *\
    \ prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    local i\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        else\n            prod=0\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in \"\
    ${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n\
    \        elif [ $i -eq 0 ]; then\n            prod=0\n            break\n    \
    \    fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbms7bgtn.sh: line 22: [: too many arguments\n/tmp/tmpbms7bgtn.sh:
    line 24: [: too many arguments\n/tmp/tmpbms7bgtn.sh: line 28: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            sign=0\n\
    \        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n      \
    \      sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    local i=0\n  \
    \  local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        if [[ ${arr[$i]}\
    \ == 0 ]]; then\n            prod=0\n            break\n        elif [[ ${arr[$i]}\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + ${arr[$i]}))\n    done\n    if [[ $sum == 0 ]]; then\n        echo \"None\"\
    \n    else\n        echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=$1\n    local prod=1\n    local sum=0\n    for i in $arr; do\n\
    \        if [[ $i -eq 0 ]]; then\n            prod=0\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    local sign\n \
    \   for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n\
    \            break\n        fi\n        sign=$(echo \"$i < 0\" | bc)\n       \
    \ if [[ $sign -eq 1 ]]; then\n            prod=$((prod * -1))\n        fi\n  \
    \      sum=$((sum + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo\
    \ \"0\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo $((sum * prod))\n    fi\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmph7r4gy0_.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmph7r4gy0_.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmph7r4gy0_.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum *\
    \ prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in ${arr[@]};\
    \ do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n       \
    \ elif [ $i -eq 0 ]; then\n            prod=0\n            break\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  elif [[ $sum -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpafnaij3f.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpafnaij3f.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpafnaij3f.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    if [[ $# -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n\
    \    local prod=1\n    local sum=0\n    for i in \"$@\"; do\n        if [[ $i\
    \ -lt 0 ]]; then\n            prod=$((prod * -1))\n        elif [[ $i -gt 0 ]];\
    \ then\n            prod=$((prod * 1))\n        else\n            prod=0\n   \
    \     fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\n\
    candidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb3grj5yp.sh: line 21: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpb3grj5yp.sh: line 23: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpb3grj5yp.sh: line 28: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in \"\
    ${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n\
    \        elif [ $i -eq 0 ]; then\n            prod=0\n            break\n    \
    \    fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbms7bgtn.sh: line 22: [: too many arguments\n/tmp/tmpbms7bgtn.sh:
    line 24: [: too many arguments\n/tmp/tmpbms7bgtn.sh: line 28: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo $((sum * prod))\n\
    \  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmppipzdphm.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmppipzdphm.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmppipzdphm.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n    else\n      \
    \  echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuidm066l.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpuidm066l.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpuidm066l.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp74oeq498.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    local len=${#arr[@]}\n\
    \    if [ $len -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n\
    \    for i in ${arr[@]}; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod\
    \ * -1))\n        elif [ $i -eq 0 ]; then\n            prod=0\n            break\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((prod * sum))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdaiesve5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpdaiesve5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpdaiesve5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  local sign=0\n  for\
    \ i in \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n      sign=1\n    elif\
    \ [[ $i -lt 0 ]]; then\n      sign=-1\n    else\n      sign=0\n    fi\n    sum=$((sum\
    \ + i))\n    prod=$((prod * sign))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo\
    \ \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi\n}\n\ncandidate() {\n \
    \   prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\"\
    ) = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1\
    \ 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[\
    \ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\"\
    ) = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqobcq3ye.sh: line 19: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpqobcq3ye.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpqobcq3ye.sh: line 26: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo\
    \ \"0\"\n    elif [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n  \
    \      echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[ $i\
    \ -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  else\n    echo \"$((sum * prod))\"\
    \n  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89e88mf5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    if [[ -z \"$1\" ]]; then\n        echo \"None\"\n    else\n        local\
    \ prod=1\n        local sum=0\n        for i in $@; do\n            if [[ $i -gt\
    \ 0 ]]; then\n                prod=$((prod * 1))\n                sum=$((sum +\
    \ i))\n            elif [[ $i -lt 0 ]]; then\n                prod=$((prod * -1))\n\
    \                sum=$((sum + i * -1))\n            fi\n        done\n       \
    \ echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        elif [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl2qz5xc2.sh: line 22: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpl2qz5xc2.sh: line 24: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpl2qz5xc2.sh: line 28: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if (( i > 0 )); then\n            prod=$(( prod * 1 ))\n\
    \        elif (( i < 0 )); then\n            prod=$(( prod * -1 ))\n        else\n\
    \            prod=0\n        fi\n        sum=$(( sum + i ))\n    done\n    if\
    \ (( prod == 0 )); then\n        echo \"None\"\n    else\n        echo \"$(( sum\
    \ * prod ))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt18cml8t.sh: line 18: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpt18cml8t.sh: line 20: ((: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpt18cml8t.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=$1\n    local prod=1\n    local sum=0\n    for i in $arr; do\n\
    \        if [[ $i -eq 0 ]]; then\n            prod=0\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=\"$1\"\n    local prod=1\n    local sum=0\n    for i in $arr;\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in \"\
    ${arr[@]}\"; do\n        if [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n\
    \        elif [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgp5nh70r.sh: line 22: [: too many arguments\n/tmp/tmpgp5nh70r.sh:
    line 24: [: too many arguments\n/tmp/tmpgp5nh70r.sh: line 29: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n   \
    \         break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum *\
    \ prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmptef4j4ig.sh: line 22: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmptef4j4ig.sh: line 26: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmptef4j4ig.sh: line 29: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\
    \n  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7ar86wrh.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp7ar86wrh.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp7ar86wrh.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            sum=$((sum + i))\n        \
    \    prod=$((prod * 1))\n        elif [[ $i -lt 0 ]]; then\n            sum=$((sum\
    \ + i * -1))\n            prod=$((prod * -1))\n        fi\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum *\
    \ prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n\
    \  else\n    echo $((sum * prod))\n  fi\n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[\
    \ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo \"$((prod * sum))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsk1uz5do.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpsk1uz5do.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpsk1uz5do.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp74oeq498.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=$@\n    local sum=0\n    local prod=1\n    for i in $arr; do\n\
    \        if [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        elif\
    \ [ $i -eq 0 ]; then\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    if [ $sum -eq 0 ]; then\n        echo \"None\"\n    else\n    \
    \    echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    if [[ $# -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n\
    \    local sum=0\n    local prod=1\n    for i in $@; do\n        if [[ $i -gt\
    \ 0 ]]; then\n            sum=$((sum + i))\n            prod=$((prod * 1))\n \
    \       elif [[ $i -lt 0 ]]; then\n            sum=$((sum + i * -1))\n       \
    \     prod=$((prod * -1))\n        fi\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ \"$i\" -eq 0 ]]; then\n       \
    \     sign=0\n        elif [[ \"$i\" -gt 0 ]]; then\n            sign=1\n    \
    \    else\n            sign=-1\n        fi\n        prod=$((prod * sign))\n  \
    \      sum=$((sum + i))\n    done\n    if [[ \"$prod\" -eq 0 ]]; then\n      \
    \  echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfu_5dky3.sh: line 19: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpfu_5dky3.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpfu_5dky3.sh: line 27: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp74oeq498.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local sum=0\n    local prod=1\n    local n=${#arr[@]}\n\
    \    if [ $n -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n  \
    \  for i in \"${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n            prod=$((prod\
    \ * -1))\n        elif [ $i -eq 0 ]; then\n            prod=0\n            break\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmplx_jk9cm.sh: line 23: [: too many arguments\n/tmp/tmplx_jk9cm.sh:
    line 25: [: too many arguments\n/tmp/tmplx_jk9cm.sh: line 29: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvel_2gr8.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpvel_2gr8.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpvel_2gr8.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n   \
    \         break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum *\
    \ prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmptef4j4ig.sh: line 22: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmptef4j4ig.sh: line 26: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmptef4j4ig.sh: line 29: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        prod=$((prod * (i < 0 ? -1 : 1)))\n        sum=$((sum\
    \ + (i < 0 ? -i : i)))\n    done\n    echo \"$((prod * sum))\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpojg8ydwe.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpojg8ydwe.sh: line 22: 1 2 2 -4: syntax error
    in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($1)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        sum=$((sum + i))\n        prod=$((prod * (i / abs(i))))\n\
    \    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"None\"\n    else\n \
    \       echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpt33nspq0.sh: line 23: prod * (i / abs(i)): division by 0 (error
    token is "abs(i))")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local sum=0\n    local prod=1\n    for i in ${arr[@]};\
    \ do\n        if [ $i -eq 0 ]; then\n            prod=0\n            break\n \
    \       fi\n        sum=$((sum + i))\n        prod=$((prod * i / abs(i)))\n  \
    \  done\n    if [ $prod -eq 0 ]; then\n        echo \"None\"\n    else\n     \
    \   echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp5vr_x6mr.sh: line 23: prod * i / abs(i): division by 0 (error
    token is "abs(i)")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            sign=0\n\
    \        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n      \
    \      sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum +\
    \ i))\n    done\n    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n\
    \    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfwu6_u_q.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpfwu6_u_q.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpfwu6_u_q.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr\n    read -ra arr <<< \"$1\"\n    local prod=1\n    local sum=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n  \
    \      echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp74oeq498.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 0
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  arr=($@)\n  if [ ${#arr[@]} -eq 0 ]; then\n    echo \"None\"\n    return\n\
    \  fi\n  sum=0\n  prod=1\n  for i in ${arr[@]}; do\n    if [ $i -gt 0 ]; then\n\
    \      sum=$((sum + i))\n      prod=$((prod * 1))\n    elif [ $i -lt 0 ]; then\n\
    \      sum=$((sum + i * -1))\n      prod=$((prod * -1))\n    else\n      prod=0\n\
    \    fi\n  done\n  echo $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo $((sum * prod))\n\
    \  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n     \
    \   elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum\
    \ * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -eq 0 ]]; then\n            prod=0\n            break\n  \
    \      fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n   \
    \         break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod *\
    \ -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\
    \n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n\
    \    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\"\
    ) = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
    \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n  \
    \  [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp59a3ehk.sh: line 22: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpp59a3ehk.sh: line 25: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpp59a3ehk.sh: line 28: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((prod *\
    \ sum))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkbrpvsrz.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpkbrpvsrz.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpkbrpvsrz.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ ${arr[@]}; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -eq 0 ]]; then\n            prod=0\n            break\n  \
    \      fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    if [ ${#arr[@]}\
    \ -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    for i in \"\
    ${arr[@]}\"; do\n        if [ $i -gt 0 ]; then\n            prod=$((prod * 1))\n\
    \        elif [ $i -lt 0 ]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    echo\
    \ \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgp5nh70r.sh: line 22: [: too many arguments\n/tmp/tmpgp5nh70r.sh:
    line 24: [: too many arguments\n/tmp/tmpgp5nh70r.sh: line 29: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [ \"$i\" -eq 0 ]; then\n         \
    \   sign=0\n        elif [ \"$i\" -gt 0 ]; then\n            sign=1\n        else\n\
    \            sign=-1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum\
    \ + i))\n    done\n    if [ \"$sum\" -eq 0 ]; then\n        echo \"None\"\n  \
    \  else\n        echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp92cysnsi.sh: line 19: [: 1 2 2 -4: integer expression expected\n/tmp/tmp92cysnsi.sh:
    line 21: [: 1 2 2 -4: integer expression expected\n/tmp/tmp92cysnsi.sh: line 27:
    1 2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    local num=0\n    for i in \"${arr[@]}\"; do\n        num=$(echo \"$i\" |\
    \ sed 's/-//g')\n        sign=$(echo \"$i\" | sed 's/[0-9]//g')\n        if [[\
    \ \"$sign\" == \"-\" ]]; then\n            sign=-1\n        elif [[ \"$sign\"\
    \ == \"\" ]]; then\n            sign=1\n        else\n            sign=0\n   \
    \     fi\n        prod=$((prod * sign))\n        sum=$((sum + num))\n    done\n\
    \    if [[ \"$sum\" == \"0\" ]]; then\n        echo \"None\"\n    else\n     \
    \   echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp22rnrjr9.sh: line 30: 1 2 2 4: syntax error in expression (error
    token is "2 2 4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    if [[ ${#arr[@]} -eq 0 ]]; then\n        echo \"None\"\n        return\n\
    \    fi\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n   \
    \         sign=0\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n   \
    \     else\n            sign=1\n        fi\n        prod=$((prod * sign))\n  \
    \      sum=$((sum + i))\n    done\n    echo \"$((prod * sum))\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxlb68z76.sh: line 23: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpxlb68z76.sh: line 25: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpxlb68z76.sh: line 31: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpotde_4cr.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpotde_4cr.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpotde_4cr.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local prod=1\n  local sum=0\n  if [[ ${#arr[@]} -eq 0\
    \ ]]; then\n    echo \"None\"\n    return\n  fi\n  for i in ${arr[@]}; do\n  \
    \  if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo\
    \ \"0\"\n    elif [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n  \
    \      echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\"\
    ) = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ sign=0\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n\
    \            sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1aah_rus.sh: line 19: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp1aah_rus.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp1aah_rus.sh: line 27: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfwu6_u_q.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpfwu6_u_q.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpfwu6_u_q.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjhdjd6uh.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpjhdjd6uh.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpjhdjd6uh.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    if [[ ${#arr[@]}\
    \ -eq 0 ]]; then\n        echo \"None\"\n        return\n    fi\n    for i in\
    \ ${arr[@]}; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89e88mf5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if (( i > 0 )); then\n      prod=$(( prod * 1 ))\n    elif (( i < 0\
    \ )); then\n      prod=$(( prod * -1 ))\n    else\n      prod=0\n    fi\n    sum=$((\
    \ sum + i ))\n  done\n  if (( sum == 0 )); then\n    echo \"None\"\n  else\n \
    \   echo \"$(( sum * prod ))\"\n  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8o5k1euu.sh: line 18: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp8o5k1euu.sh: line 20: ((: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp8o5k1euu.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=$1\n    local sum=0\n    local prod=1\n    local sign=0\n \
    \   for i in $arr; do\n        if [ $i -gt 0 ]; then\n            sign=1\n   \
    \     elif [ $i -lt 0 ]; then\n            sign=-1\n        else\n           \
    \ sign=0\n        fi\n        sum=$((sum + i))\n        prod=$((prod * sign))\n\
    \    done\n    if [ $sum -eq 0 ]; then\n        echo \"None\"\n    else\n    \
    \    echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[\
    \ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"\
    -10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2\
    \ -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[\
    \ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"\
    0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn_ssfmpy.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpn_ssfmpy.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpn_ssfmpy.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  if [[ $prod -eq 0 ]]; then\n    echo \"0\"\n  elif [[ $sum -eq 0 ]]; then\n\
    \    echo \"None\"\n  else\n    echo \"$((sum * prod))\"\n  fi\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpafnaij3f.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpafnaij3f.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpafnaij3f.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local sign=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ sign=0\n        elif [[ $i -lt 0 ]]; then\n            sign=-1\n        else\n\
    \            sign=1\n        fi\n        prod=$((prod * sign))\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1aah_rus.sh: line 19: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp1aah_rus.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp1aah_rus.sh: line 27: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  local sign=0\n  for\
    \ i in \"${arr[@]}\"; do\n    if [ \"$i\" -eq 0 ]; then\n      sign=0\n    elif\
    \ [ \"$i\" -lt 0 ]; then\n      sign=-1\n    else\n      sign=1\n    fi\n    prod=$((prod\
    \ * sign))\n    sum=$((sum + i))\n  done\n  echo \"$((prod * sum))\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcxigib9b.sh: line 19: [: 1 2 2 -4: integer expression expected\n/tmp/tmpcxigib9b.sh:
    line 21: [: 1 2 2 -4: integer expression expected\n/tmp/tmpcxigib9b.sh: line 27:
    1 2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((prod * sum))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((prod * sum))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdaiesve5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpdaiesve5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpdaiesve5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum *\
    \ prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1ejfdxal.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp1ejfdxal.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp1ejfdxal.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  if [[ $sum -eq 0 ]]; then\n    echo \"None\"\n\
    \  else\n    echo \"$((sum * prod))\"\n  fi\n}\n\ncandidate() {\n    prod_signs\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1\
    \ 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate\
    \ \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1\
    \ 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ $((sum * prod))\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n      \
    \  elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo $((sum * prod))\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if (( i > 0 )); then\n            prod=$(( prod * 1 ))\n\
    \        elif (( i < 0 )); then\n            prod=$(( prod * -1 ))\n        else\n\
    \            prod=0\n        fi\n        sum=$(( sum + i ))\n    done\n    if\
    \ (( sum == 0 )); then\n        echo \"None\"\n    else\n        echo \"$(( sum\
    \ * prod ))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg5zpho85.sh: line 18: ((: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpg5zpho85.sh: line 20: ((: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpg5zpho85.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        local\
    \ prod=1\n        local sum=0\n        for i in $@; do\n            if [ $i -lt\
    \ 0 ]; then\n                prod=$((prod * -1))\n            elif [ $i -gt 0\
    \ ]; then\n                prod=$((prod * 1))\n            fi\n            sum=$((sum\
    \ + i))\n        done\n        echo $((sum * prod))\n    fi\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa77ojmyk.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpa77ojmyk.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        fi\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo $((prod * sum))\n\
    }\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmptf8aonum.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmptf8aonum.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmptf8aonum.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp74oeq498.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        fi\n        prod=$((prod * i / abs(i)))\n        sum=$((sum + abs(i)))\n\
    \    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"0\"\n    else\n    \
    \    echo \"$((prod * sum))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmprkt50qpy.sh: line 22: prod * i / abs(i): division by 0 (error
    token is "abs(i)")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=($@)\n    local prod=1\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\ncandidate()\
    \ {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  if [[ -z \"$1\" ]]; then\n    echo \"None\"\n  else\n    local prod=1\n\
    \    local sum=0\n    for i in $@; do\n      if [[ $i -lt 0 ]]; then\n       \
    \ prod=$((prod * -1))\n      elif [[ $i -eq 0 ]]; then\n        prod=0\n     \
    \ fi\n      sum=$((sum + i))\n    done\n    echo \"$((sum * prod))\"\n  fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$@\" | tr ' ' '\\n' | awk '{\n            if ($1 > 0) {\n                sign\
    \ = 1\n            } else if ($1 < 0) {\n                sign = -1\n         \
    \   } else {\n                sign = 0\n            }\n            prod *= sign\n\
    \            sum += abs($1)\n        } END {\n            print prod * sum\n \
    \       }'\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"awk: cmd. line:10: (FILENAME=- FNR=1) fatal: function `abs'' not defined\n"'
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        local\
    \ prod=1\n        local sum=0\n        for i in $@; do\n            if [ $i -lt\
    \ 0 ]; then\n                prod=$((prod * -1))\n            elif [ $i -gt 0\
    \ ]; then\n                prod=$((prod * 1))\n            else\n            \
    \    prod=0\n            fi\n            sum=$((sum + i))\n        done\n    \
    \    echo \"$((sum * prod))\"\n    fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n  \
    \  [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\")\
    \ = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"\
    2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n\
    \    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    echo $((sum * prod))\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp74oeq498.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp74oeq498.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=($@)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + ${i#-}))\n  done\n  echo $((prod * sum))\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo \"$((sum * prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjhdjd6uh.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpjhdjd6uh.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpjhdjd6uh.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    local i\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n           \
    \ prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    echo \"$((sum *\
    \ prod))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\"\
    ) = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf6rv4rid.sh: line 19: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpf6rv4rid.sh: line 22: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpf6rv4rid.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89e88mf5.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmp89e88mf5.sh: line 24: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341370
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=$((prod * 0))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    echo \"$((prod * sum))\"\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n \
    \   [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\"\
    ) = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzyxxwnx0.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpzyxxwnx0.sh: line 20: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpzyxxwnx0.sh: line 25: 1
    2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    if [ $# -eq 0 ]; then\n        echo \"None\"\n    else\n        local\
    \ prod=1\n        local sum=0\n        for i in $@; do\n            if [ $i -eq\
    \ 0 ]; then\n                prod=0\n                break\n            elif [\
    \ $i -lt 0 ]; then\n                prod=$((prod * -1))\n            fi\n    \
    \        sum=$((sum + i))\n        done\n        echo \"$((sum * prod))\"\n  \
    \  fi\n}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate\
    \ \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n \
    \   [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    if [[ -z \"$1\" ]]; then\n        echo \"None\"\n    else\n        local\
    \ prod=1\n        local sum=0\n        for i in $@; do\n            if [[ $i -lt\
    \ 0 ]]; then\n                prod=$((prod * -1))\n            elif [[ $i -eq\
    \ 0 ]]; then\n                prod=0\n            fi\n            sum=$((sum +\
    \ i))\n        done\n        echo $((sum * prod))\n    fi\n}\n\ncandidate() {\n\
    \    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2\
    \ -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341371
- exit_code: 1
  program: "#!/bin/bash\n# You are given an array arr of integers and you need to\
    \ return\n# sum of magnitudes of integers multiplied by product of all signs\n\
    # of each number in the array, represented by 1, -1 or 0.\n# Note: return None\
    \ for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>>\
    \ $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\nprod_signs()\
    \ {\n    local arr=(\"$@\")\n    local prod=1\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n       \
    \     break\n        elif [[ $i -lt 0 ]]; then\n            (( prod *= -1 ))\n\
    \        fi\n        (( sum += i ))\n    done\n    if [[ $prod -eq 0 ]]; then\n\
    \        echo \"0\"\n    else\n        echo \"$(( prod * sum ))\"\n    fi\n}\n\
    \ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n \
    \   [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1\
    \ -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj45kw072.sh: line 18: [[: 1 2 2 -4: syntax error in expression
    (error token is "2 2 -4")\n/tmp/tmpj45kw072.sh: line 21: [[: 1 2 2 -4: syntax
    error in expression (error token is "2 2 -4")\n/tmp/tmpj45kw072.sh: line 24: ((:
    1 2 2 -4: syntax error in expression (error token is "2 2 -4")\n'''
  stdout: b''
  timestamp: 1660341371

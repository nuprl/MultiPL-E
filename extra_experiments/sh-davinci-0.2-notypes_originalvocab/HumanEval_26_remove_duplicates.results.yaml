language: sh
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local element=\"\"\n    local index=\"\"\n\
    \    local element_index=\"\"\n    local duplicates_index=\"\"\n    for element\
    \ in \"${array[@]}\"; do\n        index=\"$(index_of \"$element\" \"${unique_array[@]}\"\
    )\"\n        if [ \"$index\" -eq \"-1\" ]; then\n            unique_array+=(\"\
    $element\")\n        else\n            duplicates_array+=(\"$element\")\n    \
    \    fi\n    done\n    for element in \"${array[@]}\"; do\n        element_index=\"\
    $(index_of \"$element\" \"${unique_array[@]}\")\"\n        duplicates_index=\"\
    $(index_of \"$element\" \"${duplicates_array[@]}\")\"\n        if [ \"$element_index\"\
    \ -ne \"-1\" ] && [ \"$duplicates_index\" -eq \"-1\" ]; then\n            result_array+=(\"\
    $element\")\n        fi\n    done\n    echo \"${result_array[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpkvc9vg11.sh: line 16: index_of: command not found\n/tmp/tmpkvc9vg11.sh:
    line 17: [: : integer expression expected\n/tmp/tmpkvc9vg11.sh: line 24: index_of:
    command not found\n/tmp/tmpkvc9vg11.sh: line 25: index_of: command not found\n/tmp/tmpkvc9vg11.sh:
    line 26: [: : integer expression expected\n/tmp/tmpkvc9vg11.sh: line 16: index_of:
    command not found\n/tmp/tmpkvc9vg11.sh: line 17: [: : integer expression expected\n/tmp/tmpkvc9vg11.sh:
    line 24: index_of: command not found\n/tmp/tmpkvc9vg11.sh: line 25: index_of:
    command not found\n/tmp/tmpkvc9vg11.sh: line 26: [: : integer expression expected\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  local -a result=()\n  for element in \"${array[@]}\"; do\n    if [[ \" ${unique[*]}\
    \ \" == *\" $element \"* ]]; then\n      duplicates+=(\"$element\")\n    else\n\
    \      unique+=(\"$element\")\n    fi\n  done\n  for element in \"${array[@]}\"\
    ; do\n    if [[ \" ${duplicates[*]} \" != *\" $element \"* ]]; then\n      result+=(\"\
    $element\")\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique\n  for i in \"${array[@]}\"\
    ; do\n    if ! contains \"$i\" \"${unique[@]}\"; then\n      unique+=(\"$i\")\n\
    \    fi\n  done\n  echo \"${unique[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpq6hb765i.sh: line 10: contains: command not found\n/tmp/tmpq6hb765i.sh:
    line 10: contains: command not found\n/tmp/tmpq6hb765i.sh: line 10: contains:
    command not found\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  local -a result=()\n  for i in \"${array[@]}\"; do\n    if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n      duplicates+=(\"$i\")\n    else\n      unique+=(\"\
    $i\")\n    fi\n  done\n  for i in \"${array[@]}\"; do\n    if [[ \" ${duplicates[*]}\
    \ \" != *\" $i \"* ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ n=${#array[@]}\n    local m=0\n    local l=0\n    for ((i=0; i<n; i++)); do\n\
    \        for ((j=i+1; j<n; j++)); do\n            if [[ \"${array[i]}\" == \"\
    ${array[j]}\" ]]; then\n                duplicates[m]=\"${array[i]}\"\n      \
    \          ((m++))\n                break\n            fi\n        done\n    done\n\
    \    n=${#duplicates[@]}\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1;\
    \ j<n; j++)); do\n            if [[ \"${duplicates[i]}\" == \"${duplicates[j]}\"\
    \ ]]; then\n                duplicates[j]=\"\"\n            fi\n        done\n\
    \    done\n    n=${#array[@]}\n    for ((i=0; i<n; i++)); do\n        for ((j=0;\
    \ j<n; j++)); do\n            if [[ \"${array[i]}\" == \"${duplicates[j]}\" ]];\
    \ then\n                break\n            fi\n        done\n        if [[ \"\
    ${array[i]}\" != \"${duplicates[j]}\" ]]; then\n            result[k]=\"${array[i]}\"\
    \n            ((k++))\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a new_array=()\n  local -a seen=()\n\
    \  for i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]];\
    \ then\n      new_array+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo\
    \ \"${new_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=\"\"\n  local seen=\"\"\n  for i in\
    \ $input; do\n    if [[ -z \"$(echo \"$seen\" | grep \"^$i$\")\" ]]; then\n  \
    \    output=\"$output $i\"\n      seen=\"$seen $i\"\n    fi\n  done\n  echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a final_array=()\n    local i=0\n    local j=0\n    local k=0\n  \
    \  for i in \"${array[@]}\"; do\n        if [[ \" ${unique_array[@]} \" =~ \"\
    \ ${i} \" ]]; then\n            duplicates_array[$j]=$i\n            j=$((j+1))\n\
    \        else\n            unique_array[$j]=$i\n            j=$((j+1))\n     \
    \   fi\n    done\n    for i in \"${array[@]}\"; do\n        if [[ \" ${duplicates_array[@]}\
    \ \" =~ \" ${i} \" ]]; then\n            continue\n        else\n            final_array[$k]=$i\n\
    \            k=$((k+1))\n        fi\n    done\n    echo \"${final_array[@]}\"\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique_array=()\n  local -a duplicates_array=()\n\
    \  local -a result_array=()\n  local element\n  for element in \"${array[@]}\"\
    ; do\n    if [[ \" ${unique_array[*]} \" == *\" $element \"* ]]; then\n      duplicates_array+=(\"\
    $element\")\n    else\n      unique_array+=(\"$element\")\n    fi\n  done\n  for\
    \ element in \"${array[@]}\"; do\n    if [[ \" ${duplicates_array[*]} \" != *\"\
    \ $element \"* ]]; then\n      result_array+=(\"$element\")\n    fi\n  done\n\
    \  echo \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=\"\"\n    local seen=\"\"\n    for i\
    \ in $input; do\n        if [[ $seen != *\"$i\"* ]]; then\n            output+=\"\
    $i \"\n            seen+=\"$i \"\n        fi\n    done\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=$(echo $input | tr ' ' '\\n' | awk '!x[$0]++')\n\
    \  echo $output\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique_array=()\n  local -a duplicates_array=()\n\
    \  local -a result_array=()\n  local element\n  local i\n  for element in \"${array[@]}\"\
    ; do\n    if [[ \" ${unique_array[*]} \" == *\" $element \"* ]]; then\n      duplicates_array+=(\"\
    $element\")\n    else\n      unique_array+=(\"$element\")\n    fi\n  done\n  for\
    \ element in \"${array[@]}\"; do\n    if [[ \" ${duplicates_array[*]} \" == *\"\
    \ $element \"* ]]; then\n      continue\n    else\n      result_array+=(\"$element\"\
    )\n    fi\n  done\n  for i in \"${result_array[@]}\"; do\n    echo -n \"\\\"$i\\\
    \" \"\n  done\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -n arr=$1\n    local -a seen\n    local -a result\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n\
    \            result+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpevj1hza2.sh: line 7: local: `'': not a valid identifier\n/tmp/tmpevj1hza2.sh:
    line 7: local: `1 2 3 4'': invalid variable name for name reference\n"'
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a res=()\n    local i\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ \" ${res[*]} \" != *\" $i \"* ]]; then\n  \
    \          res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input_array=(\"$@\")\n  local output_array=()\n  local seen=()\n\
    \  for i in \"${input_array[@]}\"; do\n    if [[ ! \" ${seen[*]} \" =~ \" ${i}\
    \ \" ]]; then\n      output_array+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n\
    \  echo \"${output_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  for element in \"${array[@]}\"; do\n    if [[ ! \" ${unique[@]} \" =~ \" ${element}\
    \ \" ]]; then\n      unique+=(\"$element\")\n    else\n      duplicates+=(\"$element\"\
    )\n    fi\n  done\n  for element in \"${duplicates[@]}\"; do\n    array=(${array[@]/$element})\n\
    \  done\n  echo \"${array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a seen=()\n  local -a result=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      seen+=(\"$i\")\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a unique_arr=()\n  local -a duplicates_arr=()\n\
    \  local -a result_arr=()\n  for i in \"${arr[@]}\"; do\n    if [[ \" ${unique_arr[@]}\
    \ \" =~ \" ${i} \" ]]; then\n      duplicates_arr+=(\"$i\")\n    else\n      unique_arr+=(\"\
    $i\")\n    fi\n  done\n  for i in \"${arr[@]}\"; do\n    if [[ \" ${duplicates_arr[@]}\
    \ \" =~ \" ${i} \" ]]; then\n      continue\n    else\n      result_arr+=(\"$i\"\
    )\n    fi\n  done\n  echo \"${result_arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a uniq_array\n    local -a duplicates\n\
    \    local -a result\n    local i\n    local j\n    local k\n    local n\n   \
    \ local m\n    local is_duplicate\n\n    n=${#array[@]}\n    for ((i=0; i<n; i++));\
    \ do\n        is_duplicate=0\n        for ((j=0; j<i; j++)); do\n            if\
    \ [[ \"${array[$i]}\" == \"${array[$j]}\" ]]; then\n                is_duplicate=1\n\
    \                break\n            fi\n        done\n        if [[ $is_duplicate\
    \ -eq 0 ]]; then\n            uniq_array+=(\"${array[$i]}\")\n        else\n \
    \           duplicates+=(\"${array[$i]}\")\n        fi\n    done\n\n    n=${#uniq_array[@]}\n\
    \    m=${#duplicates[@]}\n    for ((i=0; i<n; i++)); do\n        for ((j=0; j<m;\
    \ j++)); do\n            if [[ \"${uniq_array[$i]}\" == \"${duplicates[$j]}\"\
    \ ]]; then\n                uniq_array[$i]=\"\"\n                break\n     \
    \       fi\n        done\n    done\n\n    for i in \"${uniq_array[@]}\"; do\n\
    \        if [[ -n \"$i\" ]]; then\n            result+=(\"$i\")\n        fi\n\
    \    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a output=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a list=(\"$@\")\n  local -a uniq=()\n  for i in \"${list[@]}\";\
    \ do\n    if [[ ! \" ${uniq[@]} \" =~ \" ${i} \" ]]; then\n      uniq+=(\"$i\"\
    )\n    fi\n  done\n  echo \"${uniq[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        output+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    local seen=()\n    for i in\
    \ $input; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      \
    \      output+=($i)\n            seen+=($i)\n        fi\n    done\n    echo \"\
    ${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a seen=()\n    local -a result=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            seen+=(\"$i\")\n            result+=(\"$i\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -A seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n\
    \            result+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmphjqx6jlt.sh: line 11: seen: bad array subscript\n/tmp/tmphjqx6jlt.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a unique\n    local -a duplicates\n\
    \    local -a result\n    for i in \"${arr[@]}\"; do\n        if [[ \" ${unique[@]}\
    \ \" =~ \" ${i} \" ]]; then\n            duplicates+=(\"$i\")\n        else\n\
    \            unique+=(\"$i\")\n        fi\n    done\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ \" ${duplicates[@]} \" =~ \" ${i} \" ]]; then\n          \
    \  continue\n        else\n            result+=(\"$i\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a seen=()\n    local -a result=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ \" ${seen[*]} \" == *\" $i \"*\
    \ ]]; then\n            continue\n        fi\n        seen+=(\"$i\")\n       \
    \ result+=(\"$i\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ -z \"${seen[$i]}\" ]]; then\n      output+=($i)\n      seen[$i]=1\n\
    \    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  echo \"$@\" | tr ' ' '\\n' | awk '!seen[$0]++'\n}\n\ncandidate() {\n  \
    \  remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=\"\"\n    for i in $input; do\n    \
    \    if ! [[ $output =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n      \
    \      output=\"$output $i\"\n        fi\n    done\n    echo \"$output\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    for i in \"${array[@]}\"; do\n        if [[\
    \ ! \" ${unique_array[@]} \" =~ \" ${i} \" ]]; then\n            unique_array+=($i)\n\
    \        else\n            duplicates_array+=($i)\n        fi\n    done\n    for\
    \ i in \"${array[@]}\"; do\n        if [[ ! \" ${duplicates_array[@]} \" =~ \"\
    \ ${i} \" ]]; then\n            result_array+=($i)\n        fi\n    done\n   \
    \ echo \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local seen=\"\"\n    for\
    \ i in $input; do\n        if [[ \"$seen\" != *\"$i\"* ]]; then\n            output=\"\
    $output $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($1)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local seen=\"\"\n    for\
    \ i in $input; do\n        if [[ \"$seen\" != *\"$i\"* ]]; then\n            output=\"\
    $output $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    for element in \"${array[@]}\"; do\n        if [[\
    \ \" ${unique[@]} \" =~ \" ${element} \" ]]; then\n            duplicates+=(\"\
    $element\")\n        else\n            unique+=(\"$element\")\n        fi\n  \
    \  done\n    for element in \"${array[@]}\"; do\n        if [[ \" ${duplicates[@]}\
    \ \" =~ \" ${element} \" ]]; then\n            continue\n        else\n      \
    \      result+=(\"$element\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  for i in \"${array[@]}\"\
    ; do\n    if [[ ! \" ${result[@]} \" =~ \" ${i} \" ]]; then\n      result+=(\"\
    $i\")\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=\"\"\n  local seen=\"\"\n  for i in $input;\
    \ do\n    if [[ ! $seen =~ $i ]]; then\n      output=\"$output $i\"\n      seen=\"\
    $seen $i\"\n    fi\n  done\n  echo $output\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=(\"$@\")\n    local output=()\n    local seen=()\n    for\
    \ i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]];\
    \ then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a result=()\n    local -A map=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ -z \"${map[$i]}\" ]]; then\n  \
    \          result+=(\"$i\")\n            map[$i]=1\n        fi\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpc_itj9sv.sh: line 11: map: bad array subscript\n/tmp/tmpc_itj9sv.sh:
    line 13: map[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    for i in \"${array[@]}\"; do\n        if [[\
    \ ! \" ${unique_array[@]} \" =~ \" ${i} \" ]]; then\n            unique_array+=(\"\
    $i\")\n        else\n            duplicates_array+=(\"$i\")\n        fi\n    done\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${duplicates_array[@]} \"\
    \ =~ \" ${i} \" ]]; then\n            result_array+=(\"$i\")\n        fi\n   \
    \ done\n    echo \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        output+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local arr=(\"$@\")\n    local seen=()\n    local result=()\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n\
    \            seen+=(\"$i\")\n            result+=(\"$i\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique_array=()\n  local -a unique_array_index=()\n\
    \  local -a duplicate_array=()\n  local -a duplicate_array_index=()\n  local -a\
    \ result_array=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local i\n    local j\n    local k\n    local\
    \ duplicate_found\n    local unique_array_length\n    local duplicates_array_length\n\
    \    local array_length\n\n    array_length=${#array[@]}\n    for ((i=0; i<array_length;\
    \ i++)); do\n        duplicate_found=0\n        for ((j=0; j<${#unique_array[@]};\
    \ j++)); do\n            if [[ \"${array[$i]}\" == \"${unique_array[$j]}\" ]];\
    \ then\n                duplicate_found=1\n                break\n           \
    \ fi\n        done\n        if [[ $duplicate_found -eq 0 ]]; then\n          \
    \  unique_array+=(${array[$i]})\n        else\n            duplicates_array+=(${array[$i]})\n\
    \        fi\n    done\n\n    unique_array_length=${#unique_array[@]}\n    duplicates_array_length=${#duplicates_array[@]}\n\
    \    for ((i=0; i<unique_array_length; i++)); do\n        duplicate_found=0\n\
    \        for ((j=0; j<duplicates_array_length; j++)); do\n            if [[ \"\
    ${unique_array[$i]}\" == \"${duplicates_array[$j]}\" ]]; then\n              \
    \  duplicate_found=1\n                break\n            fi\n        done\n  \
    \      if [[ $duplicate_found -eq 0 ]]; then\n            result_array+=(${unique_array[$i]})\n\
    \        fi\n    done\n\n    echo \"${result_array[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=(\"$@\")\n    local -a output=()\n    for i in \"${input[@]}\"\
    ; do\n        if [[ ! \" ${output[@]} \" =~ \" ${i} \" ]]; then\n            output+=(\"\
    $i\")\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for element in \"${array[@]}\"; do\n        if ! contains \"${element}\"\
    \ \"${seen[@]}\"; then\n            result+=(\"${element}\")\n            seen+=(\"\
    ${element}\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp7a1f96c7.sh: line 11: contains: command not found\n/tmp/tmp7a1f96c7.sh:
    line 11: contains: command not found\n/tmp/tmp7a1f96c7.sh: line 11: contains:
    command not found\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        output+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=\"\"\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      output=\"$output\
    \ $i\"\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 0
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo $(echo $@ | tr ' ' '\\n' | sort | uniq -u)\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a new_array=()\n    local i\n   \
    \ for i in \"${array[@]}\"; do\n        if [[ ! \" ${new_array[*]} \" =~ \" ${i}\
    \ \" ]]; then\n            new_array+=(\"$i\")\n        fi\n    done\n    echo\
    \ \"${new_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique_array=()\n  local -a duplicates_array=()\n\
    \  local -a result_array=()\n  local i=0\n  local j=0\n  local k=0\n  local n=${#array[@]}\n\
    \  local m=0\n  local is_duplicate=0\n  for ((i=0; i<n; i++)); do\n    is_duplicate=0\n\
    \    for ((j=0; j<m; j++)); do\n      if [[ \"${array[i]}\" == \"${unique_array[j]}\"\
    \ ]]; then\n        is_duplicate=1\n        break\n      fi\n    done\n    if\
    \ [[ $is_duplicate -eq 0 ]]; then\n      unique_array[m]=${array[i]}\n      m=$((m+1))\n\
    \    else\n      duplicates_array[k]=${array[i]}\n      k=$((k+1))\n    fi\n \
    \ done\n  for ((i=0; i<n; i++)); do\n    is_duplicate=0\n    for ((j=0; j<k; j++));\
    \ do\n      if [[ \"${array[i]}\" == \"${duplicates_array[j]}\" ]]; then\n   \
    \     is_duplicate=1\n        break\n      fi\n    done\n    if [[ $is_duplicate\
    \ -eq 0 ]]; then\n      result_array[i]=${array[i]}\n    fi\n  done\n  echo \"\
    ${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$1\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique_array=()\n  local -a duplicates_array=()\n\
    \  local -a result_array=()\n  for i in \"${array[@]}\"; do\n    if [[ \" ${unique_array[@]}\
    \ \" =~ \" ${i} \" ]]; then\n      duplicates_array+=(\"$i\")\n    else\n    \
    \  unique_array+=(\"$i\")\n    fi\n  done\n  for i in \"${array[@]}\"; do\n  \
    \  if [[ \" ${duplicates_array[@]} \" =~ \" ${i} \" ]]; then\n      continue\n\
    \    else\n      result_array+=(\"$i\")\n    fi\n  done\n  echo \"${result_array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=(\"$@\")\n    local output=()\n    local seen=()\n    for\
    \ i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]];\
    \ then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    for i in \"${array[@]}\"; do\n        if [[ ! \"\
    \ ${unique[@]} \" =~ \" ${i} \" ]]; then\n            unique+=(\"$i\")\n     \
    \   else\n            duplicates+=(\"$i\")\n        fi\n    done\n    for i in\
    \ \"${array[@]}\"; do\n        if [[ ! \" ${duplicates[@]} \" =~ \" ${i} \" ]];\
    \ then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    for i in $input; do\n      \
    \  if [[ ! \" ${output[@]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n\
    \        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=\"\"\n    local seen=\"\"\n    for i\
    \ in $input; do\n        if [[ $seen != *\"$i\"* ]]; then\n            output=\"\
    $output $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo $output\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=\"\"\n    local seen=\"\"\n    for i\
    \ in $input; do\n        if [[ \"$seen\" == *\"$i\"* ]]; then\n            continue\n\
    \        fi\n        seen+=\" $i\"\n        output+=\" $i\"\n    done\n    echo\
    \ \"$output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=(\"$@\")\n    local output=()\n    for i in \"${input[@]}\"\
    ; do\n        if [[ ! \" ${output[*]} \" =~ \" ${i} \" ]]; then\n            output+=(\"\
    $i\")\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=()\n    local seen=()\n    for i in\
    \ $input; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n      \
    \      output+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n    done\n  \
    \  echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input\n    input=($@)\n    local -a output\n    local -a seen\n\
    \    for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a uniq_array=()\n    local -a dup_array=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ \" ${uniq_array[*]} \" == *\"\
    \ $i \"* ]]; then\n            dup_array+=(\"$i\")\n        else\n           \
    \ uniq_array+=(\"$i\")\n        fi\n    done\n    for i in \"${dup_array[@]}\"\
    ; do\n        uniq_array=(${uniq_array[@]/$i})\n    done\n    echo \"${uniq_array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    for i in \"${array[@]}\"; do\n        if [[\
    \ \" ${unique_array[@]} \" =~ \" ${i} \" ]]; then\n            duplicates_array+=(\"\
    $i\")\n        else\n            unique_array+=(\"$i\")\n        fi\n    done\n\
    \    for i in \"${array[@]}\"; do\n        if [[ \" ${duplicates_array[@]} \"\
    \ =~ \" ${i} \" ]]; then\n            :\n        else\n            result_array+=(\"\
    $i\")\n        fi\n    done\n    echo \"${result_array[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  for i in \"${array[@]}\"; do\n    if [[ ! \" ${unique[@]} \" =~ \" ${i} \"\
    \ ]]; then\n      unique+=( \"$i\" )\n    else\n      duplicates+=( \"$i\" )\n\
    \    fi\n  done\n  for i in \"${duplicates[@]}\"; do\n    array=( \"${array[@]/$i}\"\
    \ )\n  done\n  echo \"${array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=($@)\n  local output=()\n  for i in \"${input[@]}\"; do\n \
    \   if [[ ! \" ${output[@]} \" =~ \" ${i} \" ]]; then\n      output+=($i)\n  \
    \  fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 0
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=($@)\n  local -a unique=()\n  local -a duplicates=()\n \
    \ local -a result=()\n  for i in \"${array[@]}\"; do\n    if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n      duplicates+=(\"$i\")\n    else\n      unique+=(\"\
    $i\")\n    fi\n  done\n  for i in \"${array[@]}\"; do\n    if [[ \" ${duplicates[*]}\
    \ \" != *\" $i \"* ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local element\n    for element in \"${array[@]}\"\
    ; do\n        if [[ \" ${unique_array[*]} \" == *\" $element \"* ]]; then\n  \
    \          duplicates_array+=(\"$element\")\n        else\n            unique_array+=(\"\
    $element\")\n        fi\n    done\n    for element in \"${array[@]}\"; do\n  \
    \      if [[ \" ${duplicates_array[*]} \" != *\" $element \"* ]]; then\n     \
    \       result_array+=(\"$element\")\n        fi\n    done\n    echo \"${result_array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a res=()\n    local -a seen=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            res+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=(\"$@\")\n  local output=()\n  local seen=()\n  for i in \"\
    ${input[@]}\"; do\n    if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n     \
    \ output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=$(echo \"$input\" | tr ' ' '\\n' | sort\
    \ | uniq -u | tr '\\n' ' ')\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    for i in \"${array[@]}\"; do\n        if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n            duplicates+=(\"$i\")\n        else\n\
    \            unique+=(\"$i\")\n        fi\n    done\n    for i in \"${array[@]}\"\
    ; do\n        if [[ \" ${duplicates[*]} \" != *\" $i \"* ]]; then\n          \
    \  result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      continue\n    fi\n    output+=(\"$i\")\n    seen+=(\"$i\")\n  done\n  echo\
    \ \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a unique_arr=()\n    local -a duplicates_arr=()\n\
    \    local -a result_arr=()\n    for i in \"${arr[@]}\"; do\n        if [[ \"\
    \ ${unique_arr[@]} \" =~ \" ${i} \" ]]; then\n            duplicates_arr+=(\"\
    $i\")\n        else\n            unique_arr+=(\"$i\")\n        fi\n    done\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ \" ${duplicates_arr[@]} \" =~ \"\
    \ ${i} \" ]]; then\n            :\n        else\n            result_arr+=(\"$i\"\
    )\n        fi\n    done\n    echo \"${result_arr[@]}\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a seen=()\n  local -a result=()\n  for\
    \ i in \"${arr[@]}\"; do\n    if ! contains \"$i\" \"${seen[@]}\"; then\n    \
    \  result+=(\"$i\")\n    fi\n    seen+=(\"$i\")\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp_wzrje9n.sh: line 11: contains: command not found\n/tmp/tmp_wzrje9n.sh:
    line 11: contains: command not found\n/tmp/tmp_wzrje9n.sh: line 11: contains:
    command not found\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=(\"$@\")\n    local output=()\n    for i in \"${input[@]}\"\
    ; do\n        if [[ ! \" ${output[*]} \" =~ \" ${i} \" ]]; then\n            output+=(\"\
    $i\")\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  local -a result=()\n  for i in \"${array[@]}\"; do\n    if [[ \" ${unique[*]}\
    \ \" == *\" $i \"* ]]; then\n      duplicates+=(\"$i\")\n    else\n      unique+=(\"\
    $i\")\n    fi\n  done\n  for i in \"${array[@]}\"; do\n    if [[ \" ${duplicates[*]}\
    \ \" != *\" $i \"* ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a new_array=()\n  local -a duplicates=()\n\
    \  local -a unique_array=()\n  local -a unique_array_sorted=()\n  local -a unique_array_sorted_uniq=()\n\
    \  local -a unique_array_sorted_uniq_sorted=()\n  local -a unique_array_sorted_uniq_sorted_uniq=()\n\
    \  local -a unique_array_sorted_uniq_sorted_uniq_sorted=()\n  local -a unique_array_sorted_uniq_sorted_uniq_sorted_uniq=()\n\
    \  local -a unique_array_sorted_uniq_sorted_uniq_sorted_uniq_sorted=()\n  local\
    \ -a unique_array_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq=()\n  local\
    \ -a unique_array_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted=()\n\
    \  local -a unique_array_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq=()\n\
    \  local -a unique_array_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted=()\n\
    \  local -a unique_array_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq=()\n\
    \  local -a unique_array_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted=()\n\
    \  local -a unique_array_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq=()\n\
    \  local -a unique_array_sorted_uniq_sorted\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local array=(\"$@\")\n    local new_array=()\n    local seen=()\n   \
    \ for element in \"${array[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${element}\
    \ \" ]]; then\n            new_array+=($element)\n            seen+=($element)\n\
    \        fi\n    done\n    echo \"${new_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local -i i=0\n    local -i j=0\n    local -i\
    \ k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n  \
    \  local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n  \
    \  local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n  \
    \  local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
    \  local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n  \
    \  local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n  \
    \  local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n  \
    \  local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n\
    \    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n\
    \    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo $@ | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=()\n  local seen=()\n  for i in $input;\
    \ do\n    if [[ \" ${seen[*]} \" =~ \" $i \" ]]; then\n      continue\n    fi\n\
    \    seen+=($i)\n    output+=($i)\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  for i in \"${array[@]}\"; do\n    if [[ ! \" ${unique[@]} \" =~ \" ${i} \"\
    \ ]]; then\n      unique+=(\"$i\")\n    else\n      duplicates+=(\"$i\")\n   \
    \ fi\n  done\n  for i in \"${duplicates[@]}\"; do\n    array=(${array[@]/$i})\n\
    \  done\n  echo \"${array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local element\n    local index\n    for element\
    \ in \"${array[@]}\"; do\n        index=$(index_of \"$element\" \"${unique_array[@]}\"\
    )\n        if [ \"$index\" == \"-1\" ]; then\n            unique_array+=(\"$element\"\
    )\n        else\n            duplicates_array+=(\"$element\")\n        fi\n  \
    \  done\n    for element in \"${array[@]}\"; do\n        index=$(index_of \"$element\"\
    \ \"${duplicates_array[@]}\")\n        if [ \"$index\" == \"-1\" ]; then\n   \
    \         result_array+=(\"$element\")\n        fi\n    done\n    echo \"${result_array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpjshb5iho.sh: line 14: index_of: command not found\n/tmp/tmpjshb5iho.sh:
    line 22: index_of: command not found\n/tmp/tmpjshb5iho.sh: line 14: index_of:
    command not found\n/tmp/tmpjshb5iho.sh: line 22: index_of: command not found\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique\n  for i in \"${array[@]}\"\
    ; do\n    if [[ ! \" ${unique[*]} \" =~ \" ${i} \" ]]; then\n      unique+=(\"\
    $i\")\n    fi\n  done\n  echo \"${unique[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a unique\n  local -a duplicates\n  local\
    \ i\n  for i in \"${arr[@]}\"; do\n    if [[ \" ${unique[*]} \" == *\" $i \"*\
    \ ]]; then\n      duplicates+=(\"$i\")\n    else\n      unique+=(\"$i\")\n   \
    \ fi\n  done\n  for i in \"${duplicates[@]}\"; do\n    arr=(\"${arr[@]/$i}\")\n\
    \  done\n  echo \"${arr[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local list=$1\n    local -a unique_list\n    local -a seen\n    for item\
    \ in $list; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${item} \" ]]; then\n \
    \           unique_list+=($item)\n            seen+=($item)\n        fi\n    done\n\
    \    echo ${unique_list[@]}\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=(\"$@\")\n    local -a output=()\n    local -a seen=()\n\
    \    for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local array=($input)\n\
    \    local seen=()\n    local n=${#array[@]}\n    local i=0\n    local j=0\n \
    \   for ((i=0; i<n; i++)); do\n        for ((j=0; j<i; j++)); do\n           \
    \ if [[ \"${array[i]}\" == \"${array[j]}\" ]]; then\n                break\n \
    \           fi\n        done\n        if [[ $i -eq $j ]]; then\n            seen+=(\"\
    ${array[i]}\")\n        fi\n    done\n    for ((i=0; i<${#seen[@]}; i++)); do\n\
    \        output+=\"${seen[i]} \"\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique=()\n  local -a duplicates=()\n\
    \  local -a result=()\n  local element\n  for element in \"${array[@]}\"; do\n\
    \    if [[ \" ${unique[*]} \" == *\" $element \"* ]]; then\n      duplicates+=($element)\n\
    \    else\n      unique+=($element)\n    fi\n  done\n  for element in \"${array[@]}\"\
    ; do\n    if [[ \" ${duplicates[*]} \" != *\" $element \"* ]]; then\n      result+=($element)\n\
    \    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input_array=(\"$@\")\n  local output_array=()\n  local seen=()\n\
    \  for i in \"${input_array[@]}\"; do\n    if [[ ! \" ${seen[*]} \" =~ \" ${i}\
    \ \" ]]; then\n      output_array+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n\
    \  echo \"${output_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a seen=()\n  local -a result=()\n  for\
    \ i in \"${arr[@]}\"; do\n    if [[ \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n\
    \      continue\n    fi\n    seen+=(\"$i\")\n    result+=(\"$i\")\n  done\n  echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a out=()\n    local -a seen=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            out+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${out[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=$(echo \"$input\" | tr ' ' '\\n' | sort\
    \ | uniq -u | tr '\\n' ' ')\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=\"\"\n  local seen=\"\"\n  for i in\
    \ $input; do\n    if [[ -z \"${seen[$i]}\" ]]; then\n      seen[$i]=1\n      output=\"\
    $output $i\"\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    # TODO: implement\n    echo $@ | tr ' ' '\\n' | sort | uniq -u | tr '\\\
    n' ' '\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a res=()\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ ! \" ${res[@]} \" =~ \" ${i} \" ]]; then\n            res+=(\"\
    $i\")\n        fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicate_array=()\n\
    \    local -a result_array=()\n    local i=0\n    local j=0\n    local k=0\n \
    \   local n=${#array[@]}\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1;\
    \ j<n; j++)); do\n            if [[ \"${array[i]}\" == \"${array[j]}\" ]]; then\n\
    \                duplicate_array[k]=${array[i]}\n                ((k++))\n   \
    \             break\n            fi\n        done\n    done\n    for ((i=0; i<n;\
    \ i++)); do\n        if [[ ! \"${array[i]}\" =~ \"${duplicate_array[@]}\" ]];\
    \ then\n            unique_array[j]=${array[i]}\n            ((j++))\n       \
    \ fi\n    done\n    for ((i=0; i<j; i++)); do\n        result_array[i]=\"\\\"\
    ${unique_array[i]}\\\"\"\n    done\n    echo \"${result_array[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=\"\"\n  local seen=\"\"\n  for i in $input;\
    \ do\n    if [[ -z $(echo $seen | grep -o $i) ]]; then\n      output=\"$output\
    \ $i\"\n      seen=\"$seen $i\"\n    fi\n  done\n  echo $output\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a uniq\n    local -A seen\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n        \
    \    uniq+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n    echo \"\
    ${uniq[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'b''/tmp/tmp_52jjely.sh: line 11: seen: bad array subscript\n/tmp/tmp_52jjely.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a unique\n    local -a duplicates\n\
    \    local i\n    for i in \"${arr[@]}\"; do\n        if [[ \" ${unique[*]} \"\
    \ == *\" $i \"* ]]; then\n            duplicates+=(\"$i\")\n        else\n   \
    \         unique+=(\"$i\")\n        fi\n    done\n    for i in \"${duplicates[@]}\"\
    ; do\n        arr=(\"${arr[@]/$i}\")\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if ! contains \"$i\" \"${seen[@]}\"; then\n    \
    \  output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpcolb0cq5.sh: line 11: contains: command not found\n/tmp/tmpcolb0cq5.sh:
    line 11: contains: command not found\n/tmp/tmpcolb0cq5.sh: line 11: contains:
    command not found\n/tmp/tmpcolb0cq5.sh: line 11: contains: command not found\n/tmp/tmpcolb0cq5.sh:
    line 11: contains: command not found\n/tmp/tmpcolb0cq5.sh: line 11: contains:
    command not found\n/tmp/tmpcolb0cq5.sh: line 11: contains: command not found\n/tmp/tmpcolb0cq5.sh:
    line 11: contains: command not found\n/tmp/tmpcolb0cq5.sh: line 11: contains:
    command not found\n/tmp/tmpcolb0cq5.sh: line 11: contains: command not found\n/tmp/tmpcolb0cq5.sh:
    line 11: contains: command not found\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$1\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a result=()\n  local -A seen=()\n  for\
    \ i in \"${arr[@]}\"; do\n    if [[ -z \"${seen[$i]}\" ]]; then\n      result+=(\"\
    $i\")\n      seen[$i]=1\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmploojqgna.sh: line 11: seen: bad array subscript\n/tmp/tmploojqgna.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        output+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$1\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$1\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local seen=\"\"\n    for\
    \ i in $input; do\n        if [[ \"$seen\" != *\"$i\"* ]]; then\n            output=\"\
    $output $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=\"\"\n  for i in $input; do\n    if [[ $output\
    \ != *\"$i\"* ]]; then\n      output=\"$output $i\"\n    fi\n  done\n  echo $output\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=$1\n    local output=$(echo \"$input\" | tr ' ' '\\n' | sort\
    \ | uniq -u | tr '\\n' ' ')\n    echo \"$output\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a unique_array=()\n  local -a duplicates_array=()\n\
    \  local -a result_array=()\n  local element\n  local index\n  for element in\
    \ \"${array[@]}\"; do\n    index=$(index_of \"$element\" \"${unique_array[@]}\"\
    )\n    if [[ \"$index\" == \"-1\" ]]; then\n      unique_array+=(\"$element\"\
    )\n    else\n      duplicates_array+=(\"$element\")\n    fi\n  done\n  for element\
    \ in \"${array[@]}\"; do\n    index=$(index_of \"$element\" \"${duplicates_array[@]}\"\
    )\n    if [[ \"$index\" == \"-1\" ]]; then\n      result_array+=(\"$element\"\
    )\n    fi\n  done\n  echo \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpr2swq_1k.sh: line 14: index_of: command not found\n/tmp/tmpr2swq_1k.sh:
    line 22: index_of: command not found\n/tmp/tmpr2swq_1k.sh: line 14: index_of:
    command not found\n/tmp/tmpr2swq_1k.sh: line 22: index_of: command not found\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    for i in \"${input[@]}\"\
    ; do\n        if [[ ! \" ${output[@]} \" =~ \" ${i} \" ]]; then\n            output+=(\"\
    $i\")\n        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n \
    \   remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=()\n  local seen=()\n  local element\n\
    \  for element in $input; do\n    if [[ ! \" ${seen[*]} \" =~ \" ${element} \"\
    \ ]]; then\n      output+=($element)\n      seen+=($element)\n    fi\n  done\n\
    \  echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ \" ${seen[*]} \" != *\" $i \"\
    * ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local list=\"$1\"\n    local -a array=($list)\n    local -a unique_array=()\n\
    \    local -a duplicates=()\n    local -a unique_array_no_duplicates=()\n    local\
    \ -a unique_array_no_duplicates_sorted=()\n    local -a unique_array_no_duplicates_sorted_filtered=()\n\
    \    local -a unique_array_no_duplicates_sorted_filtered_final=()\n    local -a\
    \ unique_array_no_duplicates_sorted_filtered_final_sorted=()\n    local -a unique_array_no_duplicates_sorted_filtered_final_sorted_filtered=()\n\
    \    local -a unique_array_no_duplicates_sorted_filtered_final_sorted_filtered_final=()\n\
    \    local -a unique_array_no_duplicates_sorted_filtered_final_sorted_filtered_final_sorted=()\n\
    \    local -a unique_array_no_duplicates_sorted_filtered_final_sorted_filtered_final_sorted_filtered=()\n\
    \    local -a unique_array_no_duplicates_sorted_filtered_final_sorted_filtered_final_sorted_filtered_final=()\n\
    \    local -a unique_array_no_duplicates_sorted_filtered_final_sorted_filtered_final_sorted_filtered_final_sorted=()\n\
    \    local -a unique_array_no_duplicates_sorted_filtered_final_sorted_filtered_final_sorted_filtered_final_sorted_filtered=()\n\
    \    local -a unique_array_no_duplicates_sorted_filtered_final_sorted_filtered_final_sorted_filtered_final_sorted_filtered_final=()\n\
    \    local -a unique_array_no_duplicates_sorted_filtered_final_sorted_filtered_final_sorted_filtered_final_sorted_filtered_final_sorted=()\n\
    \    local -\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      continue\n    fi\n    output+=(\"$i\")\n    seen+=(\"$i\")\n  done\n  echo\
    \ \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=($@)\n    local output=()\n    local seen=()\n    for i in\
    \ \"${input[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \" ${i} \" ]]; then\n\
    \            output+=($i)\n            seen+=($i)\n        fi\n    done\n    echo\
    \ \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=($i)\n            seen+=($i)\n        fi\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local element\n    for element in \"${array[@]}\"\
    ; do\n        if [[ \" ${unique_array[*]} \" == *\" $element \"* ]]; then\n  \
    \          duplicates_array+=(\"$element\")\n        else\n            unique_array+=(\"\
    $element\")\n        fi\n    done\n    for element in \"${array[@]}\"; do\n  \
    \      if [[ \" ${duplicates_array[*]} \" != *\" $element \"* ]]; then\n     \
    \       result_array+=(\"$element\")\n        fi\n    done\n    echo \"${result_array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a seen=()\n  local -a result=()\n  for\
    \ i in \"${arr[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      seen+=(\"$i\")\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        result+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if ! contains \"$i\" \"${seen[@]}\"; then\n  \
    \    result+=(\"$i\")\n    fi\n    seen+=(\"$i\")\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp1_jebys0.sh: line 11: contains: command not found\n/tmp/tmp1_jebys0.sh:
    line 11: contains: command not found\n/tmp/tmp1_jebys0.sh: line 11: contains:
    command not found\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=(\"$@\")\n    local -a output=()\n    local -a seen=()\n\
    \    for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  for i in \"${input[@]}\";\
    \ do\n    if [[ \" ${output[*]} \" != *\" $i \"* ]]; then\n      output+=($i)\n\
    \    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a out=()\n    local -a seen=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            out+=(\"$i\")\n            seen+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${out[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input_array=(\"$@\")\n    local output_array=()\n    local seen=()\n\
    \    for i in \"${input_array[@]}\"; do\n        if [[ ! \" ${seen[*]} \" =~ \"\
    \ ${i} \" ]]; then\n            output_array+=(\"$i\")\n            seen+=(\"\
    $i\")\n        fi\n    done\n    echo \"${output_array[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$1\" | tr ' ' '\\n' | awk '!a[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=(\"$@\")\n    local -a output=()\n    local -A seen=()\n\
    \    for i in \"${input[@]}\"; do\n        if [[ -z \"${seen[$i]}\" ]]; then\n\
    \            output+=(\"$i\")\n            seen[$i]=1\n        fi\n    done\n\
    \    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpkidtn591.sh: line 11: seen: bad array subscript\n/tmp/tmpkidtn591.sh:
    line 13: seen[$i]: bad array subscript\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local element\n    for element in \"${array[@]}\"; do\n        if [[ \" ${unique[*]}\
    \ \" == *\" $element \"* ]]; then\n            duplicates+=(\"$element\")\n  \
    \      else\n            unique+=(\"$element\")\n        fi\n    done\n    local\
    \ -a result=()\n    for element in \"${array[@]}\"; do\n        if [[ \" ${duplicates[*]}\
    \ \" != *\" $element \"* ]]; then\n            result+=(\"$element\")\n      \
    \  fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=$1\n  local output=\"\"\n  for i in $input; do\n    if [[ $output\
    \ != *\"$i\"* ]]; then\n      output=\"$output $i\"\n    fi\n  done\n  echo $output\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array\n    local -a result\n    local -a seen\n    array=($@)\n\
    \    for i in \"${array[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            result+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo \"$@\" | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n   \
    \ remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a out=()\n    local -a seen=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ \" ${seen[*]} \" == *\" $i \"* ]];\
    \ then\n            continue\n        fi\n        seen+=(\"$i\")\n        out+=(\"\
    $i\")\n    done\n    echo \"${out[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if ! contains \"$i\" \"${seen[@]}\"; then\n  \
    \    result+=(\"$i\")\n    fi\n    seen+=(\"$i\")\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp1_jebys0.sh: line 11: contains: command not found\n/tmp/tmp1_jebys0.sh:
    line 11: contains: command not found\n/tmp/tmp1_jebys0.sh: line 11: contains:
    command not found\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        result+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ element in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${element}\
    \ \" ]]; then\n      result+=(\"$element\")\n      seen+=(\"$element\")\n    fi\n\
    \  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=($@)\n  local -a unique_array=()\n  local -a duplicates=()\n\
    \  local -a unique_array_indexes=()\n  local -a duplicates_indexes=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local element\n    for element in \"${array[@]}\"\
    ; do\n        if [[ \" ${unique_array[*]} \" == *\" $element \"* ]]; then\n  \
    \          duplicates_array+=(\"$element\")\n        else\n            unique_array+=(\"\
    $element\")\n        fi\n    done\n    for element in \"${array[@]}\"; do\n  \
    \      if [[ \" ${duplicates_array[*]} \" != *\" $element \"* ]]; then\n     \
    \       result_array+=(\"$element\")\n        fi\n    done\n    echo \"${result_array[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -a seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      output+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a array=(\"$@\")\n  local -a result=()\n  local -a seen=()\n  for\
    \ i in \"${array[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n\
    \      result+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    local i\n    for i in \"${array[@]}\"; do\n     \
    \   if [[ \" ${unique[*]} \" == *\" $i \"* ]]; then\n            duplicates+=(\"\
    $i\")\n        else\n            unique+=(\"$i\")\n        fi\n    done\n    for\
    \ i in \"${array[@]}\"; do\n        if [[ \" ${duplicates[*]} \" != *\" $i \"\
    * ]]; then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  echo \"$@\" | tr ' ' '\\n' | awk '!a[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a unique_array=()\n    local -a duplicates_array=()\n\
    \    local -a result_array=()\n    local i=0\n    local j=0\n    local k=0\n \
    \   local found=0\n    local length=${#array[@]}\n    for ((i=0; i<length; i++));\
    \ do\n        found=0\n        for ((j=0; j<${#unique_array[@]}; j++)); do\n \
    \           if [[ \"${array[$i]}\" == \"${unique_array[$j]}\" ]]; then\n     \
    \           found=1\n                break\n            fi\n        done\n   \
    \     if [[ $found -eq 0 ]]; then\n            unique_array+=(\"${array[$i]}\"\
    )\n        else\n            duplicates_array+=(\"${array[$i]}\")\n        fi\n\
    \    done\n    for ((i=0; i<length; i++)); do\n        found=0\n        for ((j=0;\
    \ j<${#duplicates_array[@]}; j++)); do\n            if [[ \"${array[$i]}\" ==\
    \ \"${duplicates_array[$j]}\" ]]; then\n                found=1\n            \
    \    break\n            fi\n        done\n        if [[ $found -eq 0 ]]; then\n\
    \            result_array+=(\"${array[$i]}\")\n        fi\n    done\n    echo\
    \ \"${result_array[@]}\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4\
    \ 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    for i in \"${input[@]}\"\
    ; do\n        if [[ ! \" ${output[@]} \" =~ \" ${i} \" ]]; then\n            output+=($i)\n\
    \        fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 0
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo $(echo \"$1\" | tr ' ' '\\n' | sort | uniq -u | tr '\\n' ' ')\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a arr=(\"$@\")\n    local -a unique\n    local -a duplicates\n\
    \    local i\n    for i in \"${arr[@]}\"; do\n        if [[ \" ${unique[*]} \"\
    \ == *\" $i \"* ]]; then\n            duplicates+=(\"$i\")\n        else\n   \
    \         unique+=(\"$i\")\n        fi\n    done\n    for i in \"${duplicates[@]}\"\
    ; do\n        arr=(\"${arr[@]/$i}\")\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a arr=(\"$@\")\n  local -a res=()\n  local -a seen=()\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ ! \" ${seen[@]} \" =~ \" ${i} \" ]]; then\n   \
    \   res+=(\"$i\")\n      seen+=(\"$i\")\n    fi\n  done\n  echo \"${res[@]}\"\n\
    }\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ ! \" ${seen[@]} \" =~ \" ${i}\
    \ \" ]]; then\n            output+=(\"$i\")\n            seen+=(\"$i\")\n    \
    \    fi\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a list=(\"$@\")\n    local -a unique_list=()\n    local -a duplicates=()\n\
    \    local -a result=()\n    for i in \"${list[@]}\"; do\n        if [[ ! \" ${unique_list[@]}\
    \ \" =~ \" ${i} \" ]]; then\n            unique_list+=(\"$i\")\n        else\n\
    \            duplicates+=(\"$i\")\n        fi\n    done\n    for i in \"${list[@]}\"\
    ; do\n        if [[ ! \" ${duplicates[@]} \" =~ \" ${i} \" ]]; then\n        \
    \    result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local input=\"$1\"\n    local output=\"\"\n    local seen=\"\"\n    for\
    \ i in $input; do\n        if [[ ! \"$seen\" =~ \"$i\" ]]; then\n            output=\"\
    $output $i\"\n            seen=\"$seen $i\"\n        fi\n    done\n    echo \"\
    $output\"\n}\n\ncandidate() {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    echo $@ | tr ' ' '\\n' | awk '!x[$0]++'\n}\n\ncandidate() {\n    remove_duplicates\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"1 2 3 2 4 3\
    \ 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    local -a seen=()\n\
    \    for element in \"${array[@]}\"; do\n        if ! contains \"${element}\"\
    \ \"${seen[@]}\"; then\n            result+=(\"${element}\")\n            seen+=(\"\
    ${element}\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp7a1f96c7.sh: line 11: contains: command not found\n/tmp/tmp7a1f96c7.sh:
    line 11: contains: command not found\n/tmp/tmp7a1f96c7.sh: line 11: contains:
    command not found\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a input=($@)\n    local -a output=()\n    local -a seen=()\n \
    \   for i in \"${input[@]}\"; do\n        if [[ \" ${seen[@]} \" =~ \" ${i} \"\
    \ ]]; then\n            continue\n        fi\n        output+=(\"$i\")\n     \
    \   seen+=(\"$i\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n\
    \    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n    local -a array=(\"$@\")\n    local -a result=()\n    for i in \"${array[@]}\"\
    ; do\n        if ! contains \"$i\" \"${result[@]}\"; then\n            result+=(\"\
    $i\")\n        fi\n    done\n    printf '%s\\n' \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpv3rqwm3x.sh: line 10: contains: command not found\n/tmp/tmpv3rqwm3x.sh:
    line 10: contains: command not found\n/tmp/tmpv3rqwm3x.sh: line 10: contains:
    command not found\n'''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local input=\"$1\"\n  local output=\"\"\n  local seen=\"\"\n  for i in\
    \ $input; do\n    if [[ $seen != *\"$i\"* ]]; then\n      output=\"$output $i\"\
    \n      seen=\"$seen $i\"\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428
- exit_code: 1
  program: "#!/bin/bash\n# From a list of integers, remove all elements that occur\
    \ more than once.\n# Keep order of elements left the same as in the input.\n#\
    \ >>> $(remove_duplicates \"1 2 3 2 4\")\n# ['\"1\"', '\"3\"', '\"4\"']\nremove_duplicates()\
    \ {\n  local -a input=($@)\n  local -a output=()\n  local -A seen=()\n  for i\
    \ in \"${input[@]}\"; do\n    if [[ -z \"${seen[$i]}\" ]]; then\n      output+=(\"\
    $i\")\n      seen[$i]=1\n    fi\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    remove_duplicates \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 4 3 5\") = \"1 4 5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342428

name: HumanEval_16_count_distinct_characters
language: sh
prompt: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
  \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n#\
  \ \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\ncount_distinct_characters()\
  \ {\n"
tests: "}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
  \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
  ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
completions: ["    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq\
    \ | wc -l", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq\
    \ | wc -l", "  echo \"$1\" | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]' |\
    \ fold -w1 | sort | uniq | wc -l", "  echo \"$1\" | tr -d '[:space:]' | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo \"$1\" | tr -d -c '[:alnum:]'\
    \ | tr '[:upper:]' '[:lower:]' | sort | uniq | wc -l", "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo \"$1\" | tr -d -c \"\
    [:alnum:]\" | tr '[:upper:]' '[:lower:]' | sort | uniq | wc -l", '    echo "${1,,}"
    | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | fold -w1 | sort | uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq
    | wc -l', '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", '    echo
    "${1,,}" | fold -w1 | sort | uniq | wc -l', "  echo \"$1\" | tr -d '\\n' | tr\
    \ '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", '  echo "${1,,}"
    | fold -w1 | sort | uniq | wc -l', '    echo "${1,,}" | fold -w1 | sort | uniq
    | wc -l', "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq\
    \ | wc -l", '    echo "$1" | tr -d -c "a-zA-Z" | wc -c', '    echo "${1,,}" |
    fold -w1 | sort | uniq | wc -l', "  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ fold -w1 | sort | uniq | wc -l", "  echo \"$1\" | tr -d '[:space:]' | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "  echo \"$1\" | tr -d '[:space:]'\
    \ | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", '    echo "${1,,}"
    | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr -d '\\n' | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "  echo \"$1\" | grep -o -i -E\
    \ '[a-z]' | sort | uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq
    | wc -l', "  echo \"$1\" | grep -o -i -E '[a-z]' | sort | uniq | wc -l", "   \
    \ echo \"$1\" | grep -o -i -E '[a-z]' | sort | uniq | wc -l", "    local input=\"\
    $1\"\n    local count=0\n    local char_array=()\n    for (( i=0; i<${#input};\
    \ i++ )); do\n        local char=${input:$i:1}\n        if [[ ! \" ${char_array[@]}\
    \ \" =~ \" ${char^^} \" ]]; then\n            char_array+=(${char^^})\n      \
    \      ((count++))\n        fi\n    done\n    echo $count", "    echo \"$1\" |\
    \ tr -d '\\n' | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l",
  "  echo -n \"$1\" | tr -d '\\n' | tr -s '[:upper:]' '[:lower:]' | fold -w1 | sort\
    \ | uniq | wc -l", '  echo "${1,,}" | fold -w1 | sort | uniq | wc -l', '    echo
    "${1,,}" | grep -o . | sort | uniq | wc -l', '  echo "$1" | grep -o -i -E "[a-z]"
    | sort | uniq | wc -l', "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1\
    \ | sort | uniq | wc -l", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1\
    \ | sort | uniq | wc -l", '  echo "${1,,}" | fold -w1 | sort | uniq | wc -l',
  '  echo "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr -d '[:space:]'\
    \ | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo \"\
    $1\" | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq\
    \ | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', '    echo "${1,,}"
    | fold -w1 | sort | uniq | wc -l', "    echo $1 | grep -o -i -E '[a-z]' | sort\
    \ | uniq | wc -l", '    echo "$1" | grep -o -i "[a-z]" | sort | uniq | wc -l',
  '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr -d '\\\
    n' | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", '    echo "${1,,}"
    | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr -cd '[:alnum:]' | wc\
    \ -c", '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo \"$1\"\
    \ | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq |\
    \ wc -l", "  echo \"$1\" | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]' | fold\
    \ -w1 | sort | uniq | wc -l", '  echo "${1,,}" | fold -w1 | sort | uniq | wc -l',
  "  echo \"$1\" | tr -d '[:space:]' | tr -s '[:upper:]' '[:lower:]' | fold -w1 |\
    \ sort | uniq | wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1\
    \ | sort | uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l',
  "    echo \"$1\" | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]' | fold -w1 | sort\
    \ | uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', '    echo
    "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr -d '\\n' | tr\
    \ '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo \"$1\"\
    \ | tr -d -c 'a-zA-Z' | wc -c", "\tlocal str=$1\n\tlocal count=0\n\tfor (( i=0;\
    \ i<${#str}; i++ )); do\n\t\tlocal char=${str:$i:1}\n\t\tif [[ $char =~ [a-zA-Z]\
    \ ]]; then\n\t\t\tcount=$((count+1))\n\t\tfi\n\tdone\n\techo $count", '    echo
    "$1" | grep -o -i . | sort | uniq | wc -l', '  echo "${1,,}" | fold -w1 | sort
    | uniq | wc -l', "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort\
    \ | uniq | wc -l", '  echo "$1" | grep -o -i "[a-z]" | sort | uniq | wc -l', " \
    \   echo \"$1\" | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]' | fold -w1 |\
    \ sort | uniq | wc -l", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1\
    \ | sort | uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l',
  '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr -d '\\\
    n' | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo \"\
    $1\" | tr -d -c 'a-zA-Z' | wc -c", '    echo "${1,,}" | fold -w1 | sort | uniq
    | wc -l', "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq\
    \ | wc -l", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq\
    \ | wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort |\
    \ uniq | wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort\
    \ | uniq | wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 |\
    \ sort | uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l',
  "    echo \"$1\" | grep -o -i -E '[a-z]' | sort | uniq | wc -l", "  local str=\"\
    $1\"\n  local str_lower=$(echo \"$str\" | tr '[:upper:]' '[:lower:]')\n  echo\
    \ \"$str_lower\" | fold -w1 | sort | uniq | wc -l", '  echo "${1,,}" | fold -w1
    | sort | uniq | wc -l', "    echo \"$1\" | tr -d '\\n' | tr '[:upper:]' '[:lower:]'\
    \ | fold -w1 | sort | uniq | wc -l", '  echo "$1" | grep -o -i "[a-z]" | sort
    | uniq | wc -l', '  echo "${1,,}" | fold -w1 | sort | uniq | wc -l', '    echo
    "${1,,}" | fold -w1 | sort | uniq | wc -l', '    echo "${1,,}" | fold -w1 | sort
    | uniq | wc -l', "    echo $1 | tr -d '\\n' | tr -s '[:upper:]' '[:lower:]' |\
    \ fold -w1 | sort | uniq | wc -l", "    echo $1 | tr -d -c 'a-zA-Z' | wc -c",
  "    local str=\"$1\"\n    echo \"${str,,}\" | fold -w1 | sort | uniq | wc -l",
  "    local str=\"$1\"\n    echo \"${str,,}\" | fold -w1 | sort | uniq | wc -l",
  "    local str=\"$1\"\n    local str_lower=$(echo \"$str\" | tr '[:upper:]' '[:lower:]')\n\
    \    local str_upper=$(echo \"$str\" | tr '[:lower:]' '[:upper:]')\n    local\
    \ str_unique=$(echo \"$str_lower\" | fold -w1 | sort | uniq | tr -d '\\n')\n \
    \   local str_unique_upper=$(echo \"$str_upper\" | fold -w1 | sort | uniq | tr\
    \ -d '\\n')\n    echo \"${#str_unique}${#str_unique_upper}\" | tr -d '\\n'", '    echo
    "$1" | grep -o -i "[a-z]" | sort | uniq | wc -l', "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo $1 | grep -o -i -E\
    \ '[a-z]' | sort | uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq
    | wc -l', "    echo \"$1\" | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]' |\
    \ fold -w1 | sort | uniq | wc -l", "    echo \"$1\" | tr -d '[:space:]' | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", '  echo "${1,,}" | fold -w1 |
    sort | uniq | wc -l', "    echo $1 | tr -d '\\n' | tr -s '[:upper:]' '[:lower:]'\
    \ | fold -w1 | sort | uniq | wc -l", "  local str=$1\n  local str_lower=$(echo\
    \ $str | tr '[:upper:]' '[:lower:]')\n  local str_unique=$(echo $str_lower | fold\
    \ -w1 | sort -u | tr -d '\\n')\n  echo ${#str_unique}", '  echo "${1,,}" | fold
    -w1 | sort | uniq | wc -l', '    echo "$1" | grep -o -i "[a-z]" | sort | uniq
    | wc -l', "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq\
    \ | wc -l", '  echo "$1" | grep -o -i "[a-z]" | sort | uniq | wc -l', '    echo
    "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "  echo -n \"$1\" | tr -d '\\\
    n' | tr -s '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", '    echo
    "${1,,}" | fold -w1 | sort | uniq | wc -l', "  echo \"$1\" | tr -d '[:space:]'\
    \ | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", '    echo "${1,,}"
    | fold -w1 | sort | uniq | wc -l', "    local str=$1\n    local str_len=${#str}\n\
    \    local distinct_chars=()\n    local distinct_chars_len=0\n    local i=0\n\
    \    while [ $i -lt $str_len ]; do\n        local char=${str:$i:1}\n        local\
    \ j=0\n        local is_distinct=1\n        while [ $j -lt $distinct_chars_len\
    \ ]; do\n            if [ \"${distinct_chars[$j]}\" == \"$char\" ]; then\n   \
    \             is_distinct=0\n                break\n            fi\n         \
    \   j=$((j+1))\n        done\n        if [ $is_distinct -eq 1 ]; then\n      \
    \      distinct_chars[$distinct_chars_len]=$char\n            distinct_chars_len=$((distinct_chars_len+1))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $distinct_chars_len", "  \
    \  echo \"$1\" | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]' | fold -w1 | sort\
    \ | uniq | wc -l", "    echo -n \"$1\" | tr -d '\\n' | tr -s '[:upper:]' '[:lower:]'\
    \ | fold -w1 | sort | uniq | wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | fold -w1 | sort | uniq | wc -l", '  echo "$1" | grep -o -i "[a-z]" | sort
    | uniq | wc -l', "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort\
    \ | uniq | wc -l", "    local input=\"$1\"\n    echo \"${input,,}\" | fold -w1\
    \ | sort | uniq | wc -l", "    local string=\"$1\"\n    echo \"${string,,}\" |\
    \ grep -o . | sort | uniq | wc -l", '    echo "$1" | grep -o -i "[a-z]" | sort
    | uniq | wc -l', '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo\
    \ $1 | tr -d '\\n' | tr -s '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq |\
    \ wc -l", '    echo "$1" | grep -o -i "[a-z]" | sort | uniq | wc -l', '    echo
    "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo \"${1}\" | tr -d '\\\
    n' | tr -s '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", '    echo
    "${1,,}" | grep -o . | sort | uniq | wc -l', '  echo "${1,,}" | fold -w1 | sort
    | uniq | wc -l', "    echo \"$1\" | tr -d '\\n' | tr '[:upper:]' '[:lower:]' |\
    \ fold -w1 | sort | uniq | wc -l", "    echo $1 | tr -d '\\n' | tr -s '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "  echo -n \"$1\" | tr -s '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo -n \"$1\" | tr -d -c\
    \ '[:alnum:]' | tr '[:upper:]' '[:lower:]' | sort | uniq | wc -l", '    echo "${1,,}"
    | fold -w1 | sort | uniq | wc -l', "    echo $1 | tr -d '\\n' | tr -s '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", '    echo "${1,,}" | fold -w1
    | sort | uniq | wc -l', '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l',
  "    echo \"$1\" | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]' | fold -w1 | sort\
    \ | uniq | wc -l", '    echo "$1" | grep -o -i "[a-z]" | sort | uniq | wc -l',
  '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "  echo $1 | tr -d '\\n' | tr\
    \ -s '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo $1 |\
    \ tr -d -c 'a-zA-Z' | wc -c", '    echo "$1" | grep -o -i "[a-z]" | sort | uniq
    | wc -l', "  echo \"$1\" | tr -d '\\n' | tr '[:upper:]' '[:lower:]' | fold -w1\
    \ | sort | uniq | wc -l", "    echo \"$1\" | grep -o -i -E '[a-z]' | sort | uniq\
    \ | wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort |\
    \ uniq | wc -l", "  echo \"$1\" | tr -d '\\n' | tr -s '[:upper:]' '[:lower:]'\
    \ | fold -w1 | sort | uniq | wc -l", "  local string=$1\n  echo \"${string}\"\
    \ | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", '    echo "${1,,}"
    | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr -d '\\n' | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", '    echo "${1,,}" | fold -w1
    | sort | uniq | wc -l', "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1\
    \ | sort | uniq | wc -l", "    echo \"$1\" | grep -o -i -E '.' | sort | uniq |\
    \ wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq\
    \ | wc -l", "    echo \"$1\" | tr -d '\\n' | tr -s '[:upper:]' '[:lower:]' | fold\
    \ -w1 | sort | uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq | wc
    -l', '  echo "${1,,}" | fold -w1 | sort | uniq | wc -l', '  echo "${1,,}" | fold
    -w1 | sort | uniq | wc -l', "  local str=\"$1\"\n  local str_lower=$(echo \"$str\"\
    \ | tr '[:upper:]' '[:lower:]')\n  echo \"$str_lower\" | fold -w1 | sort | uniq\
    \ | wc -l", '    echo "$1" | grep -o -i "[a-z]" | sort | uniq | wc -l', "    echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", '  echo
    "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | fold -w1 | sort | uniq | wc -l", "    echo \"$1\" | tr -d '[:space:]'\
    \ | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l", '  echo "$1"
    | grep -o -i "[a-z]" | sort | uniq | wc -l', "    echo \"${1}\" | grep -o -i -E\
    \ '[a-z]' | sort | uniq | wc -l", "  echo $1 | grep -o -i -E '[a-z]' | sort |\
    \ uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', "    echo\
    \ \"$1\" | grep -o -i -E '[a-z]' | sort | uniq | wc -l", "    echo \"$1\" | tr\
    \ -d '\\n' | tr -s '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l",
  '  echo "$1" | grep -o -i "[a-z]" | sort | uniq | wc -l', '    echo "${1,,}" | fold
    -w1 | sort | uniq | wc -l', '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l',
  '    echo "$1" | grep -o -i "[a-z]" | sort | uniq | wc -l', "  echo \"$1\" | tr\
    \ -d '\\n' | tr -s '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l",
  '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', '    echo $(echo "$1" | grep
    -o . | sort -u | wc -l)', '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l',
  "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l",
  "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 | sort | uniq | wc -l",
  '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l', '    echo "${1,,}" | fold
    -w1 | sort | uniq | wc -l', "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold\
    \ -w1 | sort | uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq | wc
    -l', "    echo -n \"$1\" | tr -cd '[:alnum:]' | tr '[:upper:]' '[:lower:]' | fold\
    \ -w1 | sort | uniq | wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ fold -w1 | sort | uniq | wc -l", '    echo "${1,,}" | fold -w1 | sort | uniq
    | wc -l', "    echo \"$1\" | grep -o -i -E '[a-z]' | sort | uniq | wc -l", '  echo
    $1 | tr -d -c "a-zA-Z" | wc -c', "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | fold -w1 | sort | uniq | wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | fold -w1 | sort | uniq | wc -l", "    echo $1 | grep -o -i -E '[a-z]' | sort\
    \ | uniq | wc -l", "    local str=\"$1\"\n    echo \"${str,,}\" | fold -w1 | sort\
    \ | uniq | wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1 |\
    \ sort | uniq | wc -l", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | fold -w1\
    \ | sort | uniq | wc -l", '    echo "${1,,}" | grep -o . | sort | uniq | wc -l',
  '    echo "${1,,}" | fold -w1 | sort | uniq | wc -l']
stop_tokens:
- "\n}"

name: HumanEval_58_common
language: sh
prompt: "#!/bin/bash\n# Return sorted unique common elements for two lists.\n# >>>\
  \ $(common \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\")\n# ['\"1\"', '\"5\"', '\"\
  653\"']\n# >>> $(common \"5 3 2 8\" \"3 2\")\n# ['\"2\"', '\"3\"']\ncommon() {\n"
tests: "}\n\ncandidate() {\n    common \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"1 4 3 34 653 2 5\" \"5 7 1 5 9 653 121\") = \"1 5 653\" ]]\n    [[ $(candidate\
  \ \"5 3 2 8\" \"3 2\") = \"2 3\" ]]\n    [[ $(candidate \"4 3 2 8\" \"3 2 4\") =\
  \ \"2 3 4\" ]]\n    [[ $(candidate \"4 3 2 8\" \"\") = \"\" ]]\n}\n\nrun_test"
completions: ["  local -a a1=($1)\n  local -a a2=($2)\n  local -a a3=()\n  local -a\
    \ a4=()\n  local -a a5=()\n  local -a a6=()\n  local -a a7=()\n  local -a a8=()\n\
    \  local -a a9=()\n  local -a a10=()\n  local -a a11=()\n  local -a a12=()\n \
    \ local -a a13=()\n  local -a a14=()\n  local -a a15=()\n  local -a a16=()\n \
    \ local -a a17=()\n  local -a a18=()\n  local -a a19=()\n  local -a a20=()\n \
    \ local -a a21=()\n  local -a a22=()\n  local -a a23=()\n  local -a a24=()\n \
    \ local -a a25=()\n  local -a a26=()\n  local -a a27=()\n  local -a a28=()\n \
    \ local -a a29=()\n  local -a a30=()\n  local -a a31=()\n  local -a a32=()\n \
    \ local -a a33=()\n  local -a a34=()\n  local -a a35=()\n  local -a a36=()\n \
    \ local -a a37=()\n  local -a a38=()\n  local -a a39=()\n  local -a a40=()\n \
    \ local -a a41=()\n  local -a a42=()\n  local -a a43=()\n  local -a a44=()\n \
    \ local -a a45=()\n  local -a a46=()\n  local -a a47=()\n  local -a a48=()\n \
    \ local -a a49=()\n  local -a a50=()\n  local -a a51=()\n  local -a a52=()\n \
    \ local -a a53=()\n  local -a a54=()\n  local -a a55=()\n  local -a a56=()\n \
    \ local -", "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local -a\
    \ d=()\n  local -a e=()\n  local -a f=()\n  local -a g=()\n  local -a h=()\n \
    \ local -a i=()\n  local -a j=()\n  local -a k=()\n  local -a l=()\n  local -a\
    \ m=()\n  local -a n=()\n  local -a o=()\n  local -a p=()\n  local -a q=()\n \
    \ local -a r=()\n  local -a s=()\n  local -a t=()\n  local -a u=()\n  local -a\
    \ v=()\n  local -a w=()\n  local -a x=()\n  local -a y=()\n  local -a z=()\n \
    \ local -a A=()\n  local -a B=()\n  local -a C=()\n  local -a D=()\n  local -a\
    \ E=()\n  local -a F=()\n  local -a G=()\n  local -a H=()\n  local -a I=()\n \
    \ local -a J=()\n  local -a K=()\n  local -a L=()\n  local -a M=()\n  local -a\
    \ N=()\n  local -a O=()\n  local -a P=()\n  local -a Q=()\n  local -a R=()\n \
    \ local -a S=()\n  local -a T=()\n  local -a U=()\n  local -a V=()\n  local -a\
    \ W=()\n  local -a X=()\n  local -a Y=()\n  local -a Z=()\n  local -a aa=()\n\
    \  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n  local -a ae=()\n  local\
    \ -a af=()\n  local -a ag=()\n  local -a ah=()\n  local -a ai=()\n  local -a aj=()\n\
    \  local -a ak=()", "    local a=\"$1\"\n    local b=\"$2\"\n    local -a a_array=($a)\n\
    \    local -a b_array=($b)\n    local -a common_array=()\n    for i in \"${a_array[@]}\"\
    ; do\n        for j in \"${b_array[@]}\"; do\n            if [[ \"$i\" == \"$j\"\
    \ ]]; then\n                common_array+=(\"$i\")\n            fi\n        done\n\
    \    done\n    echo \"${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n'\
    \ ' '", "    local list1=\"$1\"\n    local list2=\"$2\"\n    local common_list=\"\
    $(comm -12 <(echo \"$list1\" | tr ' ' '\\n' | sort -n) <(echo \"$list2\" | tr\
    \ ' ' '\\n' | sort -n))\"\n    echo \"$common_list\" | sed 's/^/\"/g' | sed 's/$/\"\
    /g' | tr '\\n' ' '", "  local a=\"$1\"\n  local b=\"$2\"\n  local a_sorted=$(echo\
    \ \"$a\" | tr ' ' '\\n' | sort -n | uniq)\n  local b_sorted=$(echo \"$b\" | tr\
    \ ' ' '\\n' | sort -n | uniq)\n  local common=$(comm -12 <(echo \"$a_sorted\"\
    ) <(echo \"$b_sorted\"))\n  echo \"$common\" | tr '\\n' ' ' | sed 's/^ *//g' |\
    \ sed 's/ *$//g'", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local -a list1_array=($list1)\n\
    \  local -a list2_array=($list2)\n  local -a common_array=()\n  for item in \"\
    ${list1_array[@]}\"; do\n    if [[ \" ${list2_array[@]} \" =~ \" ${item} \" ]];\
    \ then\n      common_array+=($item)\n    fi\n  done\n  echo \"${common_array[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_sorted=$(echo \"$list1\" | tr ' ' '\\n' | sort -n)\n  local\
    \ list2_sorted=$(echo \"$list2\" | tr ' ' '\\n' | sort -n)\n  local common_sorted=$(comm\
    \ -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\n  local common_unique=$(echo\
    \ \"$common_sorted\" | uniq)\n  echo \"$common_unique\"", "    local list1=\"\
    $1\"\n    local list2=\"$2\"\n    local list1_array=($list1)\n    local list2_array=($list2)\n\
    \    local common_array=()\n    for i in \"${list1_array[@]}\"; do\n        for\
    \ j in \"${list2_array[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n\
    \                common_array+=($i)\n            fi\n        done\n    done\n\
    \    echo \"${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", " \
    \ local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local -a d=()\n  local\
    \ -a e=()\n  local -a f=()\n  local -a g=()\n  local -a h=()\n  local -a i=()\n\
    \  local -a j=()\n  local -a k=()\n  local -a l=()\n  local -a m=()\n  local -a\
    \ n=()\n  local -a o=()\n  local -a p=()\n  local -a q=()\n  local -a r=()\n \
    \ local -a s=()\n  local -a t=()\n  local -a u=()\n  local -a v=()\n  local -a\
    \ w=()\n  local -a x=()\n  local -a y=()\n  local -a z=()\n  local -a A=()\n \
    \ local -a B=()\n  local -a C=()\n  local -a D=()\n  local -a E=()\n  local -a\
    \ F=()\n  local -a G=()\n  local -a H=()\n  local -a I=()\n  local -a J=()\n \
    \ local -a K=()\n  local -a L=()\n  local -a M=()\n  local -a N=()\n  local -a\
    \ O=()\n  local -a P=()\n  local -a Q=()\n  local -a R=()\n  local -a S=()\n \
    \ local -a T=()\n  local -a U=()\n  local -a V=()\n  local -a W=()\n  local -a\
    \ X=()\n  local -a Y=()\n  local -a Z=()\n  local -a aa=()\n  local -a ab=()\n\
    \  local -a ac=()\n  local -a ad=()\n  local -a ae=()\n  local -a af=()\n  local\
    \ -a ag=()\n  local -a ah=()\n  local -a ai=()\n  local -a aj=()\n  local -a ak=()",
  "    local list1=\"$1\"\n    local list2=\"$2\"\n    local -a common=()\n    local\
    \ -a list1_array=()\n    local -a list2_array=()\n    local -a list1_array_sorted=()\n\
    \    local -a list2_array_sorted=()\n    local -a common_sorted=()\n    local\
    \ -a common_unique=()\n    local -a common_unique_sorted=()\n    local -a common_unique_sorted_json=()\n\
    \    local -a common_unique_sorted_json_string=()\n    local -a common_unique_sorted_json_string_trimmed=()\n\
    \    local -a common_unique_sorted_json_string_trimmed_quoted=()\n    local -a\
    \ common_unique_sorted_json_string_trimmed_quoted_joined=()\n    local -a common_unique_sorted_json_string_trimmed_quoted_joined_trimmed=()\n\
    \    local -a common_unique_sorted_json_string_trimmed_quoted_joined_trimmed_quoted=()\n\
    \    local -a common_unique_sorted_json_string_trimmed_quoted_joined_trimmed_quoted_joined=()\n\
    \    local -a common_unique_sorted_json_string_trimmed_quoted_joined_trimmed_quoted_joined_trimmed=()\n\
    \    local -a common_unique_sorted_json_string_trimmed_quoted_joined_trimmed_quoted_joined_trimmed_quoted=()\n\
    \    local -a common_unique_sorted_json_string_trimmed_quoted_joined_trimmed_quoted_joined_trimmed_quoted_joined=()\n\
    \    local -a common_unique_sorted_json_string_trimmed_quoted_joined_trimmed_quoted_joined_trimmed_quoted_joined_trimmed=()\n\
    \    local -a common_unique_sorted_json_string_trimmed_quoted_joined_trimmed",
  "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_sorted=$(echo \"$list1\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local list2_sorted=$(echo \"$list2\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local common_list=$(comm -12 <(echo\
    \ \"$list1_sorted\") <(echo \"$list2_sorted\"))\n  echo \"$common_list\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '", "  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_size=$(echo \"$list1\" | wc -w)\n  local list2_size=$(echo\
    \ \"$list2\" | wc -w)\n  local list1_max=$((list1_size - 1))\n  local list2_max=$((list2_size\
    \ - 1))\n  local common_list=\"\"\n  local common_list_size=0\n  local common_list_max=0\n\
    \  local i=0\n  local j=0\n  local list1_item=\"\"\n  local list2_item=\"\"\n\
    \  local common_list_item=\"\"\n  local common_list_item_next=\"\"\n  local common_list_item_prev=\"\
    \"\n  local common_list_item_prev_index=0\n  local common_list_item_next_index=0\n\
    \  local common_list_item_prev_index_max=0\n  local common_list_item_next_index_max=0\n\
    \  local common_list_item_prev_index_min=0\n  local common_list_item_next_index_min=0\n\
    \  local common_list_item_prev_index_min_max=0\n  local common_list_item_next_index_min_max=0\n\
    \  local common_list_item_prev_index_max_max=0\n  local common_list_item_next_index_max_max=0\n\
    \  local common_list_item_prev_index_min_max_max=0\n  local common_list_item_next_index_min_max_max=0\n\
    \  local common_list_item_prev_index_max_max_max=0\n  local common_list_item_next_index_max_max_max=0\n\
    \  local common_list_item_prev_index_min_max_max_max=0\n  local common_list_item_next_index_min_max_max_max=0\n\
    \  local common_list_item_prev_index_max_max_max_max=0\n  local common_list_item_next_index_max_max_max_max=0\n\
    \  local common", "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n\
    \    local -a d=()\n    local -a e=()\n    local -a f=()\n    local -a g=()\n\
    \    local -a h=()\n    local -a i=()\n    local -a j=()\n    local -a k=()\n\
    \    local -a l=()\n    local -a m=()\n    local -a n=()\n    local -a o=()\n\
    \    local -a p=()\n    local -a q=()\n    local -a r=()\n    local -a s=()\n\
    \    local -a t=()\n    local -a u=()\n    local -a v=()\n    local -a w=()\n\
    \    local -a x=()\n    local -a y=()\n    local -a z=()\n    local -a A=()\n\
    \    local -a B=()\n    local -a C=()\n    local -a D=()\n    local -a E=()\n\
    \    local -a F=()\n    local -a G=()\n    local -a H=()\n    local -a I=()\n\
    \    local -a J=()\n    local -a K=()\n    local -a L=()\n    local -a M=()\n\
    \    local -a N=()\n    local -a O=()\n    local -a P=()\n    local -a Q=()\n\
    \    local -a R=()\n    local -a S=()\n    local -a T=()\n    local -a U=()\n\
    \    local -a V=()\n    local -a W=()\n    local -a X=()\n    local -a Y=()\n\
    \    local -a Z=()\n    local -a _=()\n    local -a __=()\n    local -a ___=()\n\
    \    local -a ____=()\n    local -a _____=()\n    local -a ______=()\n    local\
    \ -a _______=()\n    local -a ________=()\n    local -a _________=()\n    local\
    \ -a __________=()\n    local -", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local -a c=()\n    for i in \"${a[@]}\"; do\n        for j in \"${b[@]}\"\
    ; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                c+=(\"$i\"\
    )\n            fi\n        done\n    done\n    echo \"$(echo \"${c[@]}\" | tr\
    \ ' ' '\\n' | sort -u | tr '\\n' ' ')\"", "    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_sorted=\"$(echo \"$list1\" | tr ' ' '\\n' | sort -n | tr\
    \ '\\n' ' ')\"\n    local list2_sorted=\"$(echo \"$list2\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\"\n    local common_sorted=\"$(comm -12 <(echo \"$list1_sorted\"\
    ) <(echo \"$list2_sorted\"))\"\n    echo \"$common_sorted\" | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' '", "    local list1=\"$1\"\n    local list2=\"$2\"\n    local\
    \ list1_sorted=$(echo \"$list1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  \
    \  local list2_sorted=$(echo \"$list2\" | tr ' ' '\\n' | sort -n | tr '\\n' '\
    \ ')\n    local list1_unique=$(echo \"$list1_sorted\" | tr ' ' '\\n' | uniq |\
    \ tr '\\n' ' ')\n    local list2_unique=$(echo \"$list2_sorted\" | tr ' ' '\\\
    n' | uniq | tr '\\n' ' ')\n    local list1_unique_count=$(echo \"$list1_unique\"\
    \ | wc -w)\n    local list2_unique_count=$(echo \"$list2_unique\" | wc -w)\n \
    \   local common_list=\"\"\n    for ((i=1; i<=$list1_unique_count; i++)); do\n\
    \        local list1_unique_element=$(echo \"$list1_unique\" | cut -d ' ' -f $i)\n\
    \        for ((j=1; j<=$list2_unique_count; j++)); do\n            local list2_unique_element=$(echo\
    \ \"$list2_unique\" | cut -d ' ' -f $j)\n            if [ \"$list1_unique_element\"\
    \ == \"$list2_unique_element\" ]; then\n                common_list=\"$common_list\
    \ $list1_unique_element\"\n            fi\n        done\n    done\n    echo \"\
    $common_list\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '", "  local list1=\"$1\"\
    \n  local list2=\"$2\"\n  local list1_sorted=\"$(echo \"$list1\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' ')\"\n  local list2_sorted=\"$(echo \"$list2\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n  local common_list=\"$(comm -12 <(echo\
    \ \"$list1_sorted\") <(echo \"$list2_sorted\"))\"\n  echo \"$common_list\" | tr\
    \ ' ' '\\n' | sort -u | tr '\\n' ' '", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -a c=()\n  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a\
    \ g=()\n  local -a h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n \
    \ local -a l=()\n  local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a\
    \ p=()\n  local -a q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n \
    \ local -a u=()\n  local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a\
    \ y=()\n  local -a z=()\n  local -a A=()\n  local -a B=()\n  local -a C=()\n \
    \ local -a D=()\n  local -a E=()\n  local -a F=()\n  local -a G=()\n  local -a\
    \ H=()\n  local -a I=()\n  local -a J=()\n  local -a K=()\n  local -a L=()\n \
    \ local -a M=()\n  local -a N=()\n  local -a O=()\n  local -a P=()\n  local -a\
    \ Q=()\n  local -a R=()\n  local -a S=()\n  local -a T=()\n  local -a U=()\n \
    \ local -a V=()\n  local -a W=()\n  local -a X=()\n  local -a Y=()\n  local -a\
    \ Z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n\
    \  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n  local\
    \ -a ai=()\n  local -a aj=()\n  local -a ak=()", "  local list1=\"$1\"\n  local\
    \ list2=\"$2\"\n  local -a list1_array=($list1)\n  local -a list2_array=($list2)\n\
    \  local -a common_array=()\n  local -a sorted_common_array=()\n  local -a unique_common_array=()\n\
    \  local -a json_array=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n\
    \  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n\
    \  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \ ", "  local -a a=(\"$@\")\n  local -a b=(\"${a[@]:1}\")\n  local -a c=()\n \
    \ for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" ==\
    \ \"$j\" ]]; then\n        c+=(\"$i\")\n      fi\n    done\n  done\n  echo \"\
    $(unique \"${c[@]}\")\"", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local\
    \ -a common=()\n  local -a list1_array=($list1)\n  local -a list2_array=($list2)\n\
    \  for i in \"${list1_array[@]}\"; do\n    for j in \"${list2_array[@]}\"; do\n\
    \      if [[ \"$i\" == \"$j\" ]]; then\n        common+=(\"$i\")\n      fi\n \
    \   done\n  done\n  echo \"${common[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n'\
    \ ' '", "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for\
    \ i in \"${a[@]}\"; do\n        for j in \"${b[@]}\"; do\n            if [[ \"\
    $i\" == \"$j\" ]]; then\n                c+=(\"$i\")\n            fi\n       \
    \ done\n    done\n    printf '%s\\n' \"${c[@]}\" | sort -u", "    local list1=\"\
    $1\"\n    local list2=\"$2\"\n    local list1_sorted=\"$(echo \"$list1\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local list2_sorted=\"$(echo \"$list2\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local common_sorted=\"$(comm\
    \ -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\"\n    echo \"$common_sorted\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local -a a=(${1// / })\n    local\
    \ -a b=(${2// / })\n    local -a c=()\n    local -a d=()\n    local -a e=()\n\
    \    local -a f=()\n    local -a g=()\n    local -a h=()\n    local -a i=()\n\
    \    local -a j=()\n    local -a k=()\n    local -a l=()\n    local -a m=()\n\
    \    local -a n=()\n    local -a o=()\n    local -a p=()\n    local -a q=()\n\
    \    local -a r=()\n    local -a s=()\n    local -a t=()\n    local -a u=()\n\
    \    local -a v=()\n    local -a w=()\n    local -a x=()\n    local -a y=()\n\
    \    local -a z=()\n    local -a A=()\n    local -a B=()\n    local -a C=()\n\
    \    local -a D=()\n    local -a E=()\n    local -a F=()\n    local -a G=()\n\
    \    local -a H=()\n    local -a I=()\n    local -a J=()\n    local -a K=()\n\
    \    local -a L=()\n    local -a M=()\n    local -a N=()\n    local -a O=()\n\
    \    local -a P=()\n    local -a Q=()\n    local -a R=()\n    local -a S=()\n\
    \    local -a T=()\n    local -a U=()\n    local -a V=()\n    local -a W=()\n\
    \    local -a X=()\n    local -a Y=()\n    local -a Z=()\n    local -a aa=()\n\
    \    local -a ab=()\n    local -a ac=()\n    local -a ad=()\n    local -a ae=()\n\
    \    local -a af=()\n    local -a ag=()\n    local -a ah=()\n    local -a ai=()\n\
    \    local -a aj=()\n    local -", "    local a=\"$1\"\n    local b=\"$2\"\n \
    \   local -a aa=()\n    local -a bb=()\n    local -a cc=()\n    local -a dd=()\n\
    \    local -a ee=()\n    local -a ff=()\n    local -a gg=()\n    local -a hh=()\n\
    \    local -a ii=()\n    local -a jj=()\n    local -a kk=()\n    local -a ll=()\n\
    \    local -a mm=()\n    local -a nn=()\n    local -a oo=()\n    local -a pp=()\n\
    \    local -a qq=()\n    local -a rr=()\n    local -a ss=()\n    local -a tt=()\n\
    \    local -a uu=()\n    local -a vv=()\n    local -a ww=()\n    local -a xx=()\n\
    \    local -a yy=()\n    local -a zz=()\n    local -a aaa=()\n    local -a bbb=()\n\
    \    local -a ccc=()\n    local -a ddd=()\n    local -a eee=()\n    local -a fff=()\n\
    \    local -a ggg=()\n    local -a hhh=()\n    local -a iii=()\n    local -a jjj=()\n\
    \    local -a kkk=()\n    local -a lll=()\n    local -a mmm=()\n    local -a nnn=()\n\
    \    local -a ooo=()\n    local -a ppp=()\n    local -a qqq=()\n    local -a rrr=()\n\
    \    local -a sss=()\n    local -a ttt=()\n    local -a uuu=()\n    local -a vvv=()\n\
    \    local -a www=()\n    local -a xxx=()\n    local -a yyy=()\n    local -a zzz=()\n\
    \    local -a aaaa=()\n    local -a bbbb=()\n    local -a cccc=()\n    local -a\
    \ dddd=()", "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for i in\
    \ \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"$j\"\
    \ ]]; then\n        c+=(\"$i\")\n      fi\n    done\n  done\n  echo \"$(sort_unique\
    \ \"${c[@]}\")\"", "    local a=\"$1\"\n    local b=\"$2\"\n    local -a a_array=($a)\n\
    \    local -a b_array=($b)\n    local -a c_array=()\n    local -a d_array=()\n\
    \    local -a e_array=()\n    local -a f_array=()\n    local -a g_array=()\n \
    \   local -a h_array=()\n    local -a i_array=()\n    local -a j_array=()\n  \
    \  local -a k_array=()\n    local -a l_array=()\n    local -a m_array=()\n   \
    \ local -a n_array=()\n    local -a o_array=()\n    local -a p_array=()\n    local\
    \ -a q_array=()\n    local -a r_array=()\n    local -a s_array=()\n    local -a\
    \ t_array=()\n    local -a u_array=()\n    local -a v_array=()\n    local -a w_array=()\n\
    \    local -a x_array=()\n    local -a y_array=()\n    local -a z_array=()\n \
    \   local -a aa_array=()\n    local -a ab_array=()\n    local -a ac_array=()\n\
    \    local -a ad_array=()\n    local -a ae_array=()\n    local -a af_array=()\n\
    \    local -a ag_array=()\n    local -a ah_array=()\n    local -a ai_array=()\n\
    \    local -a aj_array=()\n    local -a ak_array=()\n    local -a al_array=()\n\
    \    local -a am_array=()\n    local -a an_array=()\n    local -a ao_array=()\n\
    \    local -a ap_array=()\n    local -a aq_array=()\n    local -a ar_array=()\n\
    \    local -a as_array=()\n    local -a at_array=()\n    local -a au_array=()\n\
    \    local -a av_array=()\n    local -a aw", "    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a common=()\n    for i in \"${list1[@]}\"; do\n  \
    \      for j in \"${list2[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n\
    \                common+=(\"$i\")\n            fi\n        done\n    done\n  \
    \  echo \"$(echo \"${common[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"",
  "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local -a d=()\n  local\
    \ -a e=()\n  local -a f=()\n  local -a g=()\n  local -a h=()\n  local -a i=()\n\
    \  local -a j=()\n  local -a k=()\n  local -a l=()\n  local -a m=()\n  local -a\
    \ n=()\n  local -a o=()\n  local -a p=()\n  local -a q=()\n  local -a r=()\n \
    \ local -a s=()\n  local -a t=()\n  local -a u=()\n  local -a v=()\n  local -a\
    \ w=()\n  local -a x=()\n  local -a y=()\n  local -a z=()\n  local -a A=()\n \
    \ local -a B=()\n  local -a C=()\n  local -a D=()\n  local -a E=()\n  local -a\
    \ F=()\n  local -a G=()\n  local -a H=()\n  local -a I=()\n  local -a J=()\n \
    \ local -a K=()\n  local -a L=()\n  local -a M=()\n  local -a N=()\n  local -a\
    \ O=()\n  local -a P=()\n  local -a Q=()\n  local -a R=()\n  local -a S=()\n \
    \ local -a T=()\n  local -a U=()\n  local -a V=()\n  local -a W=()\n  local -a\
    \ X=()\n  local -a Y=()\n  local -a Z=()\n  local -a aa=()\n  local -a ab=()\n\
    \  local -a ac=()\n  local -a ad=()\n  local -a ae=()\n  local -a af=()\n  local\
    \ -a ag=()\n  local -a ah=()\n  local -a ai=()\n  local -a aj=()\n  local -a ak=()",
  "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_sorted=\"$(echo\
    \ \"$list1\" | tr ' ' '\\n' | sort | uniq | tr '\\n' ' ')\"\n    local list2_sorted=\"\
    $(echo \"$list2\" | tr ' ' '\\n' | sort | uniq | tr '\\n' ' ')\"\n    local common_sorted=\"\
    $(comm -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\"\n    echo \"\
    $common_sorted\"", "  local list1=\"$1\"\n  local list2=\"$2\"\n  echo \"$list1\"\
    \ | tr ' ' '\\n' | sort | uniq | while read -r item; do\n    echo \"$list2\" |\
    \ tr ' ' '\\n' | grep -q \"$item\" && echo \"\\\"$item\\\"\"\n  done", "    local\
    \ -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local -a d=()\n    local\
    \ -a e=()\n    local -a f=()\n    local -a g=()\n    local -a h=()\n    local\
    \ -a i=()\n    local -a j=()\n    local -a k=()\n    local -a l=()\n    local\
    \ -a m=()\n    local -a n=()\n    local -a o=()\n    local -a p=()\n    local\
    \ -a q=()\n    local -a r=()\n    local -a s=()\n    local -a t=()\n    local\
    \ -a u=()\n    local -a v=()\n    local -a w=()\n    local -a x=()\n    local\
    \ -a y=()\n    local -a z=()\n    local -a A=()\n    local -a B=()\n    local\
    \ -a C=()\n    local -a D=()\n    local -a E=()\n    local -a F=()\n    local\
    \ -a G=()\n    local -a H=()\n    local -a I=()\n    local -a J=()\n    local\
    \ -a K=()\n    local -a L=()\n    local -a M=()\n    local -a N=()\n    local\
    \ -a O=()\n    local -a P=()\n    local -a Q=()\n    local -a R=()\n    local\
    \ -a S=()\n    local -a T=()\n    local -a U=()\n    local -a V=()\n    local\
    \ -a W=()\n    local -a X=()\n    local -a Y=()\n    local -a Z=()\n    local\
    \ -a aa=()\n    local -a ab=()\n    local -a ac=()\n    local -a ad=()\n    local\
    \ -a ae=()\n    local -a af=()\n    local -a ag=()\n    local -a ah=()\n    local\
    \ -a ai=()\n    local -a aj=()\n    local -a ak=()", "    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a common=()\n    for i in \"${list1[@]}\"\
    ; do\n        for j in \"${list2[@]}\"; do\n            if [[ \"$i\" == \"$j\"\
    \ ]]; then\n                common+=(\"$i\")\n            fi\n        done\n \
    \   done\n    echo \"$(echo \"${common[@]}\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' ')\"", "    local list1=($1)\n    local list2=($2)\n    local common=()\n\
    \    for i in \"${list1[@]}\"; do\n        for j in \"${list2[@]}\"; do\n    \
    \        if [[ \"$i\" == \"$j\" ]]; then\n                common+=(\"$i\")\n \
    \           fi\n        done\n    done\n    echo \"${common[@]}\" | tr ' ' '\\\
    n' | sort -u | tr '\\n' ' '", "  local -a a=($1)\n  local -a b=($2)\n  local -a\
    \ c=()\n  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a g=()\n \
    \ local -a h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n  local -a\
    \ l=()\n  local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a p=()\n \
    \ local -a q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n  local -a\
    \ u=()\n  local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a y=()\n \
    \ local -a z=()\n  local -a A=()\n  local -a B=()\n  local -a C=()\n  local -a\
    \ D=()\n  local -a E=()\n  local -a F=()\n  local -a G=()\n  local -a H=()\n \
    \ local -a I=()\n  local -a J=()\n  local -a K=()\n  local -a L=()\n  local -a\
    \ M=()\n  local -a N=()\n  local -a O=()\n  local -a P=()\n  local -a Q=()\n \
    \ local -a R=()\n  local -a S=()\n  local -a T=()\n  local -a U=()\n  local -a\
    \ V=()\n  local -a W=()\n  local -a X=()\n  local -a Y=()\n  local -a Z=()\n \
    \ local -a _=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local\
    \ -a ad=()\n  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n\
    \  local -a ai=()\n  local -a aj=()", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -a c=()\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n \
    \     if [[ \"$i\" == \"$j\" ]]; then\n        c+=(\"$i\")\n      fi\n    done\n\
    \  done\n  echo \"$(echo \"${c[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"",
  "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local i j\n    for\
    \ ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n   \
    \         if [[ \"${a[$i]}\" == \"${b[$j]}\" ]]; then\n                c+=(\"\
    ${a[$i]}\")\n            fi\n        done\n    done\n    echo \"$(printf '%s\\\
    n' \"${c[@]}\" | sort -u)\"", "    local list1=\"$1\"\n    local list2=\"$2\"\n\
    \    local list1_array=($list1)\n    local list2_array=($list2)\n    local common_array=()\n\
    \    for i in \"${list1_array[@]}\"; do\n        for j in \"${list2_array[@]}\"\
    ; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                common_array+=(\"\
    $i\")\n            fi\n        done\n    done\n    local common_array_sorted=($(echo\
    \ \"${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n    echo \"\
    ${common_array_sorted[@]}\"", "  local -a a=($1)\n  local -a b=($2)\n  local -a\
    \ c=()\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[\
    \ \"$i\" == \"$j\" ]]; then\n        c+=(\"$i\")\n      fi\n    done\n  done\n\
    \  echo \"$(unique \"${c[@]}\")\"", "  local a=\"$1\"\n  local b=\"$2\"\n  local\
    \ a_sorted=$(echo \"$a\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local b_sorted=$(echo\
    \ \"$b\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local common=$(comm -12 <(echo\
    \ \"$a_sorted\") <(echo \"$b_sorted\"))\n  echo \"$common\" | tr ' ' '\\n' | sort\
    \ -n | uniq | tr '\\n' ' '", "    local a=\"$1\"\n    local b=\"$2\"\n    local\
    \ a_sorted=$(echo \"$a\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local b_sorted=$(echo\
    \ \"$b\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local a_sorted_uniq=$(echo\
    \ \"$a_sorted\" | tr ' ' '\\n' | uniq | tr '\\n' ' ')\n    local b_sorted_uniq=$(echo\
    \ \"$b_sorted\" | tr ' ' '\\n' | uniq | tr '\\n' ' ')\n    local common=$(comm\
    \ -12 <(echo \"$a_sorted_uniq\") <(echo \"$b_sorted_uniq\"))\n    echo \"$common\"\
    \ | tr '\\n' ' '", "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"\
    $j\" ]]; then\n        c+=(\"$i\")\n      fi\n    done\n  done\n  echo \"$(sort_unique\
    \ \"${c[@]}\")\"", "    local list1=($1)\n    local list2=($2)\n    local common=()\n\
    \    for i in \"${list1[@]}\"; do\n        for j in \"${list2[@]}\"; do\n    \
    \        if [[ \"$i\" == \"$j\" ]]; then\n                common+=(\"$i\")\n \
    \           fi\n        done\n    done\n    echo \"${common[@]}\" | tr ' ' '\\\
    n' | sort -u | tr '\\n' ' '", "    local list1=\"$1\"\n    local list2=\"$2\"\n\
    \    local list1_sorted=$(echo \"$list1\" | tr ' ' '\\n' | sort -n | tr '\\n'\
    \ ' ')\n    local list2_sorted=$(echo \"$list2\" | tr ' ' '\\n' | sort -n | tr\
    \ '\\n' ' ')\n    local list1_unique=$(echo \"$list1_sorted\" | tr ' ' '\\n' |\
    \ uniq | tr '\\n' ' ')\n    local list2_unique=$(echo \"$list2_sorted\" | tr '\
    \ ' '\\n' | uniq | tr '\\n' ' ')\n    local list1_unique_count=$(echo \"$list1_unique\"\
    \ | wc -w)\n    local list2_unique_count=$(echo \"$list2_unique\" | wc -w)\n \
    \   local list1_unique_index=1\n    local list2_unique_index=1\n    local common_list=\"\
    \"\n    while [ $list1_unique_index -le $list1_unique_count ] && [ $list2_unique_index\
    \ -le $list2_unique_count ]; do\n        local list1_unique_element=$(echo \"\
    $list1_unique\" | cut -d ' ' -f $list1_unique_index)\n        local list2_unique_element=$(echo\
    \ \"$list2_unique\" | cut -d ' ' -f $list2_unique_index)\n        if [ \"$list1_unique_element\"\
    \ -eq \"$list2_unique_element\" ]; then\n            common_list=\"$common_list\
    \ $list1_unique_element\"\n            list1_unique_index=$((list1_unique_index\
    \ + 1))\n            list2_unique_index=$((list2_unique_index + 1))\n        elif\
    \ [ \"$list1_unique_element\" -lt \"$list2_unique_element\" ]; then\n        \
    \    list1_unique_index=$((list1_unique_index + 1))\n        else\n          \
    \  list2_unique_index=$((list2_unique_index + 1))\n        fi\n    done\n    echo\
    \ \"$common_list\"", "    local list1=\"$1\"\n    local list2=\"$2\"\n    local\
    \ list1_array=($list1)\n    local list2_array=($list2)\n    local common_array=()\n\
    \    for i in \"${list1_array[@]}\"; do\n        for j in \"${list2_array[@]}\"\
    ; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                common_array+=(\"\
    $i\")\n            fi\n        done\n    done\n    echo \"${common_array[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local list1=\"$1\"\n    local\
    \ list2=\"$2\"\n    local list1_sorted=\"$(echo \"$list1\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\"\n    local list2_sorted=\"$(echo \"$list2\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' ')\"\n    local list1_unique=\"$(echo \"$list1_sorted\"\
    \ | tr ' ' '\\n' | uniq | tr '\\n' ' ')\"\n    local list2_unique=\"$(echo \"\
    $list2_sorted\" | tr ' ' '\\n' | uniq | tr '\\n' ' ')\"\n    local list1_unique_count=\"\
    $(echo \"$list1_unique\" | wc -w)\"\n    local list2_unique_count=\"$(echo \"\
    $list2_unique\" | wc -w)\"\n    local list1_unique_index=1\n    local list2_unique_index=1\n\
    \    local common_list=\"\"\n    while [ \"$list1_unique_index\" -le \"$list1_unique_count\"\
    \ ] && [ \"$list2_unique_index\" -le \"$list2_unique_count\" ]; do\n        local\
    \ list1_unique_element=\"$(echo \"$list1_unique\" | cut -d ' ' -f \"$list1_unique_index\"\
    )\"\n        local list2_unique_element=\"$(echo \"$list2_unique\" | cut -d '\
    \ ' -f \"$list2_unique_index\")\"\n        if [ \"$list1_unique_element\" -eq\
    \ \"$list2_unique_element\" ]; then\n            common_list=\"$common_list $list1_unique_element\"\
    \n            list1_unique_index=$((list1_unique_index + 1))\n            list2_unique_index=$((list2_unique_index\
    \ + 1))\n        elif [ \"$list1_unique_element\" -lt \"$list2_unique_element\"\
    \ ]; then\n            list1_unique_index=$((list1_unique_index + 1))\n      \
    \  else\n            list2_unique_index=$((list2_unique_index + 1))\n       ",
  "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_sorted=\"$(echo \"$list1\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n  local list2_sorted=\"$(echo \"\
    $list2\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n  local common_list=\"$(comm\
    \ -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\"\n  echo \"$common_list\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '", "    local list1=\"$1\"\n    local\
    \ list2=\"$2\"\n    local list1_sorted=\"$(echo \"$list1\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\"\n    local list2_sorted=\"$(echo \"$list2\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' ')\"\n    local common_sorted=\"$(comm -12 <(echo \"\
    $list1_sorted\") <(echo \"$list2_sorted\"))\"\n    echo \"$common_sorted\" | tr\
    \ ' ' '\\n' | sort -u | tr '\\n' ' '", "  local list1=$1\n  local list2=$2\n \
    \ local common=$(comm -12 <(echo \"$list1\" | tr ' ' '\\n' | sort -n) <(echo \"\
    $list2\" | tr ' ' '\\n' | sort -n))\n  echo \"$common\" | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g' | sed 's/ /\", \"/g' | sed 's/^/\"/g' | sed 's/$/\"/g'",
  "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for i in \"${a[@]}\";\
    \ do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n  \
    \      c+=(\"$i\")\n      fi\n    done\n  done\n  echo \"$(printf '%s\\n' \"${c[@]}\"\
    \ | sort -u)\"", "    local a=\"$1\"\n    local b=\"$2\"\n    local c=\"$(echo\
    \ \"$a\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"\n    local d=\"$(echo \"$b\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"\n    local e=\"$(comm -12 <(echo\
    \ \"$c\") <(echo \"$d\") | tr '\\n' ' ')\"\n    echo \"$e\"", "  local -a list1=($1)\n\
    \  local -a list2=($2)\n  local -a common=($(comm -12 <(printf \"%s\\n\" \"${list1[@]}\"\
    \ | sort -u) <(printf \"%s\\n\" \"${list2[@]}\" | sort -u)))\n  printf '%s\\n'\
    \ \"${common[@]}\"", "    local list1=\"$1\"\n    local list2=\"$2\"\n    local\
    \ -a common\n    local -a list1_array\n    local -a list2_array\n    local -a\
    \ unique_list1_array\n    local -a unique_list2_array\n    local -a unique_common_array\n\
    \    local -a sorted_unique_common_array\n    local -a sorted_unique_common_array_json\n\
    \    local -a sorted_unique_common_array_json_string\n    local -a sorted_unique_common_array_json_string_quoted\n\
    \    local -a sorted_unique_common_array_json_string_quoted_joined\n    local\
    \ -a sorted_unique_common_array_json_string_quoted_joined_trimmed\n    local -a\
    \ sorted_unique_common_array_json_string_quoted_joined_trimmed_stripped\n    local\
    \ -a sorted_unique_common_array_json_string_quoted_joined_trimmed_stripped_escaped\n\
    \    local -a sorted_unique_common_array_json_string_quoted_joined_trimmed_stripped_escaped_trimmed\n\
    \    local -a sorted_unique_common_array_json_string_quoted_joined_trimmed_stripped_escaped_trimmed_stripped\n\
    \    local -a sorted_unique_common_array_json_string_quoted_joined_trimmed_stripped_escaped_trimmed_stripped_escaped\n\
    \    local -a sorted_unique_common_array_json_string_quoted_joined_trimmed_stripped_escaped_trimmed_stripped_escaped_trimmed\n\
    \    local -a sorted_unique_common_array_json_string_quoted_joined_trimmed_stripped_escaped_trimmed_stripped_escaped_trimmed_stripped\n\
    \    local -a sorted_unique_common_array_json_string_quoted_joined_trimmed_stripped_escaped_trimmed_stripped_escaped_trimmed_stripped_escaped\n\
    \    local -a sorted_unique_common_array_json", "    local a=\"$1\"\n    local\
    \ b=\"$2\"\n    echo $(comm -12 <(echo \"$a\" | tr ' ' '\\n' | sort -n) <(echo\
    \ \"$b\" | tr ' ' '\\n' | sort -n))", "    local -a list1=($1)\n    local -a list2=($2)\n\
    \    local -a common\n    local -a result\n    local i\n    local j\n    for ((i=0;\
    \ i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n  \
    \          if [[ \"${list1[$i]}\" == \"${list2[$j]}\" ]]; then\n             \
    \   common+=(\"${list1[$i]}\")\n            fi\n        done\n    done\n    for\
    \ ((i=0; i<${#common[@]}; i++)); do\n        for ((j=0; j<${#result[@]}; j++));\
    \ do\n            if [[ \"${common[$i]}\" == \"${result[$j]}\" ]]; then\n    \
    \            unset common[$i]\n            fi\n        done\n    done\n    for\
    \ ((i=0; i<${#common[@]}; i++)); do\n        result+=(\"${common[$i]}\")\n   \
    \ done\n    echo \"$(printf '%s\\n' \"${result[@]}\" | sort -n)\"", "  local a=\"\
    $1\"\n  local b=\"$2\"\n  local -a aa=($a)\n  local -a bb=($b)\n  local -a cc=()\n\
    \  for i in \"${aa[@]}\"; do\n    for j in \"${bb[@]}\"; do\n      if [[ \"$i\"\
    \ == \"$j\" ]]; then\n        cc+=(\"$i\")\n      fi\n    done\n  done\n  echo\
    \ \"${cc[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "  local -a list1=($1)\n\
    \  local -a list2=($2)\n  local -a common=()\n  for i in \"${list1[@]}\"; do\n\
    \    for j in \"${list2[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n   \
    \     common+=(\"$i\")\n      fi\n    done\n  done\n  echo \"${common[@]}\" |\
    \ tr ' ' '\\n' | sort -u | tr '\\n' ' '", "  local a=\"$1\"\n  local b=\"$2\"\n\
    \  local -a a_array=($a)\n  local -a b_array=($b)\n  local -a c_array=()\n  local\
    \ -a d_array=()\n  local -a e_array=()\n  local -a f_array=()\n  local -a g_array=()\n\
    \  local -a h_array=()\n  local -a i_array=()\n  local -a j_array=()\n  local\
    \ -a k_array=()\n  local -a l_array=()\n  local -a m_array=()\n  local -a n_array=()\n\
    \  local -a o_array=()\n  local -a p_array=()\n  local -a q_array=()\n  local\
    \ -a r_array=()\n  local -a s_array=()\n  local -a t_array=()\n  local -a u_array=()\n\
    \  local -a v_array=()\n  local -a w_array=()\n  local -a x_array=()\n  local\
    \ -a y_array=()\n  local -a z_array=()\n  local -a aa_array=()\n  local -a ab_array=()\n\
    \  local -a ac_array=()\n  local -a ad_array=()\n  local -a ae_array=()\n  local\
    \ -a af_array=()\n  local -a ag_array=()\n  local -a ah_array=()\n  local -a ai_array=()\n\
    \  local -a aj_array=()\n  local -a ak_array=()\n  local -a al_array=()\n  local\
    \ -a am_array=()\n  local -a an_array=()\n  local -a ao_array=()\n  local -a ap_array=()\n\
    \  local -a aq_array=()\n  local -a ar_array=()\n  local -a as_array=()\n  local\
    \ -a at_array=()\n  local -a au_array=()\n  local -a av_array=()\n  local -a aw",
  "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for i in \"${a[@]}\";\
    \ do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n  \
    \      c+=(\"$i\")\n      fi\n    done\n  done\n  echo \"$(array_unique \"${c[@]}\"\
    )\"", "    local -a list1=($1)\n    local -a list2=($2)\n    local -a list3=()\n\
    \    for i in \"${list1[@]}\"; do\n        for j in \"${list2[@]}\"; do\n    \
    \        if [[ \"$i\" == \"$j\" ]]; then\n                list3+=(\"$i\")\n  \
    \          fi\n        done\n    done\n    echo \"${list3[@]}\" | tr ' ' '\\n'\
    \ | sort -u | tr '\\n' ' '", "    local a=\"$1\"\n    local b=\"$2\"\n    local\
    \ -a a_array=($a)\n    local -a b_array=($b)\n    local -a common_array=()\n \
    \   for i in \"${a_array[@]}\"; do\n        for j in \"${b_array[@]}\"; do\n \
    \           if [[ \"$i\" == \"$j\" ]]; then\n                common_array+=(\"\
    $i\")\n            fi\n        done\n    done\n    echo \"${common_array[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local -a a=($1)\n    local -a\
    \ b=($2)\n    local -a c=()\n    for i in \"${a[@]}\"; do\n        for j in \"\
    ${b[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                c+=(\"\
    $i\")\n            fi\n        done\n    done\n    echo \"$(sort_unique \"${c[@]}\"\
    )\"", "  local a b\n  a=($1)\n  b=($2)\n  echo $(echo ${a[@]} ${b[@]} | tr ' '\
    \ '\\n' | sort | uniq -c | awk '$1==2 {print $2}')", "    local list1=\"$1\"\n\
    \    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -w)\n    local\
    \ list2_len=$(echo \"$list2\" | wc -w)\n    local list1_max=$(echo \"$list1\"\
    \ | sort -n | tail -n 1)\n    local list2_max=$(echo \"$list2\" | sort -n | tail\
    \ -n 1)\n    local max=$(echo \"$list1_max $list2_max\" | sort -n | tail -n 1)\n\
    \    local list1_hash=()\n    local list2_hash=()\n    local i\n    local j\n\
    \    local k\n    local common_list=()\n\n    for ((i=0; i<=max; i++)); do\n \
    \       list1_hash[$i]=0\n        list2_hash[$i]=0\n    done\n\n    for ((i=0;\
    \ i<list1_len; i++)); do\n        j=$(echo \"$list1\" | cut -d \" \" -f $((i+1)))\n\
    \        list1_hash[$j]=1\n    done\n\n    for ((i=0; i<list2_len; i++)); do\n\
    \        j=$(echo \"$list2\" | cut -d \" \" -f $((i+1)))\n        list2_hash[$j]=1\n\
    \    done\n\n    for ((i=0; i<=max; i++)); do\n        if [ ${list1_hash[$i]}\
    \ -eq 1 ] && [ ${list2_hash[$i]} -eq 1 ]; then\n            common_list[$k]=$i\n\
    \            k=$((k+1))\n        fi\n    done\n\n    echo \"${common_list[@]}\"\
    \ | tr \" \" \",\" | sed 's/,/\", \"/g' | sed 's/^/[\"/' | sed 's/$/\"]/'", " \
    \   local -a list1=($1)\n    local -a list2=($2)\n    local -a common=()\n   \
    \ for i in \"${list1[@]}\"; do\n        for j in \"${list2[@]}\"; do\n       \
    \     if [[ \"$i\" == \"$j\" ]]; then\n                common+=(\"$i\")\n    \
    \        fi\n        done\n    done\n    echo \"$(echo \"${common[@]}\" | tr '\
    \ ' '\\n' | sort -u | tr '\\n' ' ')\"", "    local a=($1)\n    local b=($2)\n\
    \    local c=()\n    for i in \"${a[@]}\"; do\n        for j in \"${b[@]}\"; do\n\
    \            if [[ \"$i\" == \"$j\" ]]; then\n                c+=(\"$i\")\n  \
    \          fi\n        done\n    done\n    echo \"$(echo \"${c[@]}\" | tr ' '\
    \ '\\n' | sort -u | tr '\\n' ' ')\"", "    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_array=($list1)\n    local list2_array=($list2)\n    local\
    \ common_array=()\n    for i in \"${list1_array[@]}\"; do\n        for j in \"\
    ${list2_array[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n       \
    \         common_array+=(\"$i\")\n            fi\n        done\n    done\n   \
    \ echo \"${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local\
    \ list1=\"$1\"\n    local list2=\"$2\"\n    local list1_sorted=\"$(echo \"$list1\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local list2_sorted=\"$(echo\
    \ \"$list2\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local list1_unique=\"\
    $(echo \"$list1_sorted\" | tr ' ' '\\n' | uniq | tr '\\n' ' ')\"\n    local list2_unique=\"\
    $(echo \"$list2_sorted\" | tr ' ' '\\n' | uniq | tr '\\n' ' ')\"\n    local list1_unique_sorted=\"\
    $(echo \"$list1_unique\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local\
    \ list2_unique_sorted=\"$(echo \"$list2_unique\" | tr ' ' '\\n' | sort -n | tr\
    \ '\\n' ' ')\"\n    local list1_unique_sorted_count=\"$(echo \"$list1_unique_sorted\"\
    \ | wc -w)\"\n    local list2_unique_sorted_count=\"$(echo \"$list2_unique_sorted\"\
    \ | wc -w)\"\n    local list1_unique_sorted_array=()\n    local list2_unique_sorted_array=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local common_array=()\n    for\
    \ i in $(seq 1 $list1_unique_sorted_count); do\n        list1_unique_sorted_array[$i]=$(echo\
    \ \"$list1_unique_sorted\" | cut -d ' ' -f $i)\n    done\n    for i in $(seq 1\
    \ $list2_unique_sorted_count); do\n        list2_unique_sorted_array[$i]=$(echo\
    \ \"$list2_unique_sorted\" | cut -d ' ' -f $i)\n    done\n    i=1\n    j=1\n \
    \   while [ $i -le $list1_unique_", "  local -a list1=($1)\n  local -a list2=($2)\n\
    \  local -a common=()\n  for i in \"${list1[@]}\"; do\n    for j in \"${list2[@]}\"\
    ; do\n      if [[ \"$i\" == \"$j\" ]]; then\n        common+=(\"$i\")\n      fi\n\
    \    done\n  done\n  echo \"${common[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n'\
    \ ' '", "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for i in \"\
    ${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]];\
    \ then\n        c+=(\"$i\")\n      fi\n    done\n  done\n  printf '%s\\n' \"${c[@]}\"\
    \ | sort -u", "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_array=($list1)\n\
    \    local list2_array=($list2)\n    local common_array=()\n    for i in \"${list1_array[@]}\"\
    ; do\n        for j in \"${list2_array[@]}\"; do\n            if [[ \"$i\" ==\
    \ \"$j\" ]]; then\n                common_array+=(\"$i\")\n            fi\n  \
    \      done\n    done\n    echo \"${common_array[@]}\" | sort -u | sed 's/^/\\\
    \"/;s/$/\\\"/'", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local common=$(comm\
    \ -12 <(echo \"$list1\" | tr ' ' '\\n' | sort -n) <(echo \"$list2\" | tr ' ' '\\\
    n' | sort -n))\n  echo \"$common\" | tr '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'\
    \ | sed 's/ /\", \"/g' | sed 's/^/\"/g' | sed 's/$/\"/g'", "    local a=($1)\n\
    \    local b=($2)\n    local c=()\n    for i in \"${a[@]}\"; do\n        for j\
    \ in \"${b[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n          \
    \      c+=(\"$i\")\n            fi\n        done\n    done\n    echo \"$(unique\
    \ \"${c[@]}\")\"", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_sorted=$(echo\
    \ \"$list1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local list2_sorted=$(echo\
    \ \"$list2\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local common_sorted=$(comm\
    \ -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\n  echo \"$common_sorted\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local list1=\"$1\"\n    local\
    \ list2=\"$2\"\n    local -a list1_array=($list1)\n    local -a list2_array=($list2)\n\
    \    local -a common_array=()\n    for i in \"${list1_array[@]}\"; do\n      \
    \  for j in \"${list2_array[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]];\
    \ then\n                common_array+=(\"$i\")\n            fi\n        done\n\
    \    done\n    echo \"${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n'\
    \ ' '", "    local a=\"$1\"\n    local b=\"$2\"\n    local -a aa=($a)\n    local\
    \ -a bb=($b)\n    local -a cc=()\n    for i in \"${aa[@]}\"; do\n        for j\
    \ in \"${bb[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n         \
    \       cc+=(\"$i\")\n            fi\n        done\n    done\n    printf '%s\\\
    n' \"${cc[@]}\" | sort -u", "  local -a a=($1)\n  local -a b=($2)\n  local -a\
    \ c=()\n  local i\n  for i in \"${a[@]}\"; do\n    if [[ \" ${b[*]} \" == *\"\
    \ $i \"* ]]; then\n      c+=(\"$i\")\n    fi\n  done\n  echo \"${c[@]}\" | tr\
    \ ' ' '\\n' | sort -u | tr '\\n' ' '", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local -a c=()\n    local -a d=()\n    local -a e=()\n    local -a f=()\n\
    \    local -a g=()\n    local -a h=()\n    local -a i=()\n    local -a j=()\n\
    \    local -a k=()\n    local -a l=()\n    local -a m=()\n    local -a n=()\n\
    \    local -a o=()\n    local -a p=()\n    local -a q=()\n    local -a r=()\n\
    \    local -a s=()\n    local -a t=()\n    local -a u=()\n    local -a v=()\n\
    \    local -a w=()\n    local -a x=()\n    local -a y=()\n    local -a z=()\n\
    \    local -a A=()\n    local -a B=()\n    local -a C=()\n    local -a D=()\n\
    \    local -a E=()\n    local -a F=()\n    local -a G=()\n    local -a H=()\n\
    \    local -a I=()\n    local -a J=()\n    local -a K=()\n    local -a L=()\n\
    \    local -a M=()\n    local -a N=()\n    local -a O=()\n    local -a P=()\n\
    \    local -a Q=()\n    local -a R=()\n    local -a S=()\n    local -a T=()\n\
    \    local -a U=()\n    local -a V=()\n    local -a W=()\n    local -a X=()\n\
    \    local -a Y=()\n    local -a Z=()\n    local -a aa=()\n    local -a ab=()\n\
    \    local -a ac=()\n    local -a ad=()\n    local -a ae=()\n    local -a af=()\n\
    \    local -a ag=()\n    local -a ah=()\n    local -a ai=()\n    local -a aj=()\n\
    \    local -a ak=()", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_array=($list1)\n\
    \  local list2_array=($list2)\n  local common_array=()\n  for i in \"${list1_array[@]}\"\
    ; do\n    for j in \"${list2_array[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]];\
    \ then\n        common_array+=(\"$i\")\n      fi\n    done\n  done\n  echo \"\
    ${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local list1=\"\
    $1\"\n    local list2=\"$2\"\n    local list1_len=$(echo \"$list1\" | wc -w)\n\
    \    local list2_len=$(echo \"$list2\" | wc -w)\n    local list1_max=$(echo \"\
    $list1\" | sort -n | tail -n 1)\n    local list2_max=$(echo \"$list2\" | sort\
    \ -n | tail -n 1)\n    local max=$((list1_max > list2_max ? list1_max : list2_max))\n\
    \    local list1_hash=$(echo \"$list1\" | tr ' ' '\\n' | awk '{print $1+0}' |\
    \ sort -n | uniq | awk -v max=$max '{a[$1]=1}END{for(i=1;i<=max;i++)if(a[i])print\
    \ i}')\n    local list2_hash=$(echo \"$list2\" | tr ' ' '\\n' | awk '{print $1+0}'\
    \ | sort -n | uniq | awk -v max=$max '{a[$1]=1}END{for(i=1;i<=max;i++)if(a[i])print\
    \ i}')\n    local common_hash=$(echo \"$list1_hash\" | tr ' ' '\\n' | awk '{a[$1]=1}END{for(i\
    \ in a)print i}' | tr '\\n' ' ')\n    local common_list=$(echo \"$common_hash\"\
    \ | tr ' ' '\\n' | awk '{a[$1]=1}END{for(i in a)print i}' | tr '\\n' ' ')\n  \
    \  echo \"$common_list\"", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local\
    \ list1_sorted=$(echo \"$list1\" | tr ' ' '\\n' | sort -n)\n  local list2_sorted=$(echo\
    \ \"$list2\" | tr ' ' '\\n' | sort -n)\n  local common_sorted=$(comm -12 <(echo\
    \ \"$list1_sorted\") <(echo \"$list2_sorted\"))\n  echo \"$common_sorted\" | tr\
    \ '\\n' ' ' | sed 's/^\\(.*\\) $/\\1/'", "    local -a list1=($1)\n    local -a\
    \ list2=($2)\n    local -a common=($(comm -12 <(printf \"%s\\n\" \"${list1[@]}\"\
    \ | sort -u) <(printf \"%s\\n\" \"${list2[@]}\" | sort -u)))\n    printf '\"%s\"\
    \ ' \"${common[@]}\"", "    local list1=\"$1\"\n    local list2=\"$2\"\n    local\
    \ -a common\n    local -a list1_array\n    local -a list2_array\n    local i\n\
    \    local j\n    local k\n    local -i list1_length\n    local -i list2_length\n\
    \    local -i common_length\n    local -i common_index\n    local -i found\n \
    \   list1_array=($list1)\n    list2_array=($list2)\n    list1_length=${#list1_array[@]}\n\
    \    list2_length=${#list2_array[@]}\n    common_length=0\n    common_index=0\n\
    \    for ((i=0; i<list1_length; i++)); do\n        found=0\n        for ((j=0;\
    \ j<list2_length; j++)); do\n            if [[ \"${list1_array[$i]}\" == \"${list2_array[$j]}\"\
    \ ]]; then\n                found=1\n                break\n            fi\n \
    \       done\n        if [[ $found -eq 1 ]]; then\n            common[$common_index]=\"\
    ${list1_array[$i]}\"\n            common_index=$common_index+1\n            common_length=$common_length+1\n\
    \        fi\n    done\n    for ((i=0; i<common_length; i++)); do\n        for\
    \ ((j=i+1; j<common_length; j++)); do\n            if [[ \"${common[$i]}\" > \"\
    ${common[$j]}\" ]]; then\n                tmp=\"${common[$i]}\"\n            \
    \    common[$i]=\"${common[$j]}\"\n                common[$j]=\"$tmp\"\n     \
    \       fi\n        done\n    done\n    for ((i=0; i<common_length; i++)); do\n\
    \        echo -n '\"'\n        echo -n \"${common[$i]}\"\n        echo -n '\"\
    '\n        if [[ $i -lt $common_length-1 ]]; then\n            echo -n ', '\n\
    \        fi\n    done", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_array=($list1)\n\
    \  local list2_array=($list2)\n  local common_array=()\n  for i in \"${list1_array[@]}\"\
    ; do\n    for j in \"${list2_array[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]];\
    \ then\n        common_array+=(\"$i\")\n      fi\n    done\n  done\n  echo \"\
    ${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "  local list1=\"\
    $1\"\n  local list2=\"$2\"\n  local common_list=\"\"\n  for i in $list1; do\n\
    \    for j in $list2; do\n      if [[ \"$i\" == \"$j\" ]]; then\n        common_list=\"\
    $common_list $i\"\n      fi\n    done\n  done\n  echo \"$common_list\" | tr '\
    \ ' '\\n' | sort -u | sed 's/^/\"/g' | sed 's/$/\"/g'", "    local a=\"$1\"\n\
    \    local b=\"$2\"\n    echo \"$a\" | tr ' ' '\\n' | sort | uniq | while read\
    \ -r line; do\n        if echo \"$b\" | grep -q \"$line\"; then\n            echo\
    \ \"\\\"$line\\\"\"\n        fi\n    done", "  local a=($1)\n  local b=($2)\n\
    \  local c=()\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n    \
    \  if [[ \"$i\" == \"$j\" ]]; then\n        c+=(\"$i\")\n      fi\n    done\n\
    \  done\n  echo \"$(sort_unique \"${c[@]}\")\"", "  local -a a=($1)\n  local -a\
    \ b=($2)\n  local -a c=()\n  local -a d=()\n  local -a e=()\n  local -a f=()\n\
    \  local -a g=()\n  local -a h=()\n  local -a i=()\n  local -a j=()\n  local -a\
    \ k=()\n  local -a l=()\n  local -a m=()\n  local -a n=()\n  local -a o=()\n \
    \ local -a p=()\n  local -a q=()\n  local -a r=()\n  local -a s=()\n  local -a\
    \ t=()\n  local -a u=()\n  local -a v=()\n  local -a w=()\n  local -a x=()\n \
    \ local -a y=()\n  local -a z=()\n  local -a A=()\n  local -a B=()\n  local -a\
    \ C=()\n  local -a D=()\n  local -a E=()\n  local -a F=()\n  local -a G=()\n \
    \ local -a H=()\n  local -a I=()\n  local -a J=()\n  local -a K=()\n  local -a\
    \ L=()\n  local -a M=()\n  local -a N=()\n  local -a O=()\n  local -a P=()\n \
    \ local -a Q=()\n  local -a R=()\n  local -a S=()\n  local -a T=()\n  local -a\
    \ U=()\n  local -a V=()\n  local -a W=()\n  local -a X=()\n  local -a Y=()\n \
    \ local -a Z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local\
    \ -a ad=()\n  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n\
    \  local -a ai=()\n  local -a aj=()\n  local -a ak=()", "    local list1=\"$1\"\
    \n    local list2=\"$2\"\n    local list1_sorted=\"$(echo \"$list1\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' ')\"\n    local list2_sorted=\"$(echo \"$list2\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local list1_unique=\"$(echo\
    \ \"$list1_sorted\" | tr ' ' '\\n' | uniq | tr '\\n' ' ')\"\n    local list2_unique=\"\
    $(echo \"$list2_sorted\" | tr ' ' '\\n' | uniq | tr '\\n' ' ')\"\n    local list1_unique_length=\"\
    $(echo \"$list1_unique\" | wc -w)\"\n    local list2_unique_length=\"$(echo \"\
    $list2_unique\" | wc -w)\"\n    local common_list=\"\"\n    local i=1\n    while\
    \ [ $i -le $list1_unique_length ]; do\n        local j=1\n        while [ $j -le\
    \ $list2_unique_length ]; do\n            local list1_unique_element=\"$(echo\
    \ \"$list1_unique\" | cut -d ' ' -f $i)\"\n            local list2_unique_element=\"\
    $(echo \"$list2_unique\" | cut -d ' ' -f $j)\"\n            if [ \"$list1_unique_element\"\
    \ = \"$list2_unique_element\" ]; then\n                common_list=\"$common_list\
    \ $list1_unique_element\"\n            fi\n            j=$((j+1))\n        done\n\
    \        i=$((i+1))\n    done\n    echo \"$common_list\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '", "    local a=\"$1\"\n    local b=\"$2\"\n    local a_list=($a)\n\
    \    local b_list=($b)\n    local a_len=${#a_list[@]}\n    local b_len=${#b_list[@]}\n\
    \    local i\n    local j\n    local k\n    local c_list=()\n    local c_len=0\n\
    \    for ((i=0; i<a_len; i++)); do\n        for ((j=0; j<b_len; j++)); do\n  \
    \          if [[ \"${a_list[$i]}\" == \"${b_list[$j]}\" ]]; then\n           \
    \     c_list[$c_len]=\"${a_list[$i]}\"\n                ((c_len++))\n        \
    \        break\n            fi\n        done\n    done\n    for ((i=0; i<c_len;\
    \ i++)); do\n        for ((j=i+1; j<c_len; j++)); do\n            if [[ \"${c_list[$i]}\"\
    \ == \"${c_list[$j]}\" ]]; then\n                for ((k=j; k<c_len; k++)); do\n\
    \                    c_list[$k]=\"${c_list[$k+1]}\"\n                done\n  \
    \              ((c_len--))\n                ((j--))\n            fi\n        done\n\
    \    done\n    for ((i=0; i<c_len; i++)); do\n        for ((j=i+1; j<c_len; j++));\
    \ do\n            if [[ \"${c_list[$i]}\" > \"${c_list[$j]}\" ]]; then\n     \
    \           local tmp=\"${c_list[$i]}\"\n                c_list[$i]=\"${c_list[$j]}\"\
    \n                c_list[$j]=\"$tmp\"\n            fi\n        done\n    done\n\
    \    for ((i=0; i<c_len; i++)); do\n        echo -n \"\\\"${c_list[$i]}\\\"\"\n\
    \        if ((i < c_len-1)); then\n            echo -n \", \"\n        fi\n  \
    \  done", "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_sorted=$(echo\
    \ \"$list1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local list2_sorted=$(echo\
    \ \"$list2\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local common_list=$(comm\
    \ -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\n    echo \"$common_list\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '", "    local list1=\"$1\"\n    local\
    \ list2=\"$2\"\n    local list1_sorted=$(echo \"$list1\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\n    local list2_sorted=$(echo \"$list2\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' ')\n    local common_list=$(comm -12 <(echo \"$list1_sorted\"\
    ) <(echo \"$list2_sorted\"))\n    echo \"$common_list\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '", "  local -a a=($1)\n  local -a b=($2)\n  echo $(comm -12\
    \ <(printf \"%s\\n\" \"${a[@]}\" | sort -u) <(printf \"%s\\n\" \"${b[@]}\" | sort\
    \ -u))", "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_sorted=$(echo\
    \ \"$list1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local list2_sorted=$(echo\
    \ \"$list2\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local common_list=$(comm\
    \ -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\n    echo \"$common_list\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '", "  local a=\"$1\"\n  local b=\"$2\"\
    \n  local a_array=($a)\n  local b_array=($b)\n  local common_array=()\n  for i\
    \ in \"${a_array[@]}\"; do\n    for j in \"${b_array[@]}\"; do\n      if [[ \"\
    $i\" == \"$j\" ]]; then\n        common_array+=(\"$i\")\n      fi\n    done\n\
    \  done\n  echo \"${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '",
  "  local -a a=(\"$@\")\n  local -a b=(\"${a[@]:1}\")\n  local -a c=()\n  for i in\
    \ \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"$j\"\
    \ ]]; then\n        c+=(\"$i\")\n      fi\n    done\n  done\n  printf '%s\\n'\
    \ \"${c[@]}\" | sort -u", "  local -a list1=($1)\n  local -a list2=($2)\n  local\
    \ -a common=()\n  for i in \"${list1[@]}\"; do\n    for j in \"${list2[@]}\";\
    \ do\n      if [[ \"$i\" == \"$j\" ]]; then\n        common+=(\"$i\")\n      fi\n\
    \    done\n  done\n  echo \"${common[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n'\
    \ ' '", "    local a=($1)\n    local b=($2)\n    local i\n    local j\n    local\
    \ c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++));\
    \ do\n            if [[ \"${a[$i]}\" == \"${b[$j]}\" ]]; then\n              \
    \  c+=(\"${a[$i]}\")\n            fi\n        done\n    done\n    echo \"$(sort_unique\
    \ \"${c[@]}\")\"", "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for\
    \ i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"\
    $j\" ]]; then\n        c+=(\"$i\")\n      fi\n    done\n  done\n  echo \"$(echo\
    \ \"${c[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"", "  local list1=\"$1\"\
    \n  local list2=\"$2\"\n  local result=\"$(comm -12 <(echo \"$list1\" | tr ' '\
    \ '\\n' | sort -n) <(echo \"$list2\" | tr ' ' '\\n' | sort -n))\"\n  echo \"$result\"",
  "  local list1=\"$1\"\n  local list2=\"$2\"\n  echo \"$list1\" | tr ' ' '\\n' |\
    \ sort | uniq | while read -r item; do\n    echo \"$list2\" | tr ' ' '\\n' | grep\
    \ -q \"$item\" && echo \"$item\"\n  done | sort | uniq", "    local -a a=($1)\n\
    \    local -a b=($2)\n    local -a c=()\n    for i in \"${a[@]}\"; do\n      \
    \  for j in \"${b[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n   \
    \             c+=(\"$i\")\n            fi\n        done\n    done\n    echo \"\
    $(printf '%s\\n' \"${c[@]}\" | sort -u)\"", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -a c=()\n  local i\n  for i in \"${a[@]}\"; do\n    if [[ \" ${b[*]}\
    \ \" == *\" $i \"* ]]; then\n      c+=(\"$i\")\n    fi\n  done\n  echo \"${c[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local -a a=($1)\n    local -a\
    \ b=($2)\n    local -a c=()\n    local -a d=()\n    local -a e=()\n    local -a\
    \ f=()\n    local -a g=()\n    local -a h=()\n    local -a i=()\n    local -a\
    \ j=()\n    local -a k=()\n    local -a l=()\n    local -a m=()\n    local -a\
    \ n=()\n    local -a o=()\n    local -a p=()\n    local -a q=()\n    local -a\
    \ r=()\n    local -a s=()\n    local -a t=()\n    local -a u=()\n    local -a\
    \ v=()\n    local -a w=()\n    local -a x=()\n    local -a y=()\n    local -a\
    \ z=()\n    local -a A=()\n    local -a B=()\n    local -a C=()\n    local -a\
    \ D=()\n    local -a E=()\n    local -a F=()\n    local -a G=()\n    local -a\
    \ H=()\n    local -a I=()\n    local -a J=()\n    local -a K=()\n    local -a\
    \ L=()\n    local -a M=()\n    local -a N=()\n    local -a O=()\n    local -a\
    \ P=()\n    local -a Q=()\n    local -a R=()\n    local -a S=()\n    local -a\
    \ T=()\n    local -a U=()\n    local -a V=()\n    local -a W=()\n    local -a\
    \ X=()\n    local -a Y=()\n    local -a Z=()\n    local -a _=()\n    local -a\
    \ __=()\n    local -a ___=()\n    local -a ____=()\n    local -a _____=()\n  \
    \  local -a ______=()\n    local -a _______=()\n    local -a ________=()\n   \
    \ local -a _________=()\n    local -a __________=()\n    local -", "  local -a\
    \ list1=($1)\n  local -a list2=($2)\n  local -a common=()\n  for i in \"${list1[@]}\"\
    ; do\n    for j in \"${list2[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n\
    \        common+=(\"$i\")\n      fi\n    done\n  done\n  printf '%s\\n' \"${common[@]}\"\
    \ | sort -u | tr '\\n' ' ' | sed 's/^ *//;s/ *$//;s/ /\", \"/g'", "    local -a\
    \ a=($1)\n    local -a b=($2)\n    local -a c=()\n    for i in \"${a[@]}\"; do\n\
    \        for j in \"${b[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n\
    \                c+=(\"$i\")\n            fi\n        done\n    done\n    echo\
    \ \"$(sort_unique \"${c[@]}\")\"", "    local a=\"$1\"\n    local b=\"$2\"\n \
    \   local -a a_array=($a)\n    local -a b_array=($b)\n    local -a common_array=()\n\
    \    local -a unique_common_array=()\n    local -a sorted_unique_common_array=()\n\
    \    local -a json_array=()\n    local -a json_array_sorted=()\n    local -a json_array_unique=()\n\
    \    local -a json_array_unique_sorted=()\n    local -a json_array_unique_sorted_common=()\n\
    \    local -a json_array_unique_sorted_common_sorted=()\n    local -a json_array_unique_sorted_common_sorted_json=()\n\
    \    local -a json_array_unique_sorted_common_sorted_json_string=()\n    local\
    \ -a json_array_unique_sorted_common_sorted_json_string_trimmed=()\n    local\
    \ -a json_array_unique_sorted_common_sorted_json_string_trimmed_escaped=()\n \
    \   local -a json_array_unique_sorted_common_sorted_json_string_trimmed_escaped_quoted=()\n\
    \    local -a json_array_unique_sorted_common_sorted_json_string_trimmed_escaped_quoted_joined=()\n\
    \    local -a json_array_unique_sorted_common_sorted_json_string_trimmed_escaped_quoted_joined_array=()\n\
    \    local -a json_array_unique_sorted_common_sorted_json_string_trimmed_escaped_quoted_joined_array_string=()\n\
    \    local -a json_array_unique_sorted_common_sorted_json_string_trimmed_escaped_quoted_joined_array_string_trimmed=()\n\
    \    local -a json_array_unique_sorted_common_sorted_json_string_trimmed_escaped_quoted_joined_array_string_trimmed_escaped=()\n\
    \    local -a", "  local a=\"$1\"\n  local b=\"$2\"\n  local -a a_array=($a)\n\
    \  local -a b_array=($b)\n  local -a common_array=()\n  for i in \"${a_array[@]}\"\
    ; do\n    for j in \"${b_array[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n\
    \        common_array+=(\"$i\")\n      fi\n    done\n  done\n  echo \"${common_array[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "  local a=\"$1\"\n  local b=\"$2\"\
    \n  local c=\"$(echo \"$a\" | tr \" \" \"\\n\" | sort | uniq)\"\n  local d=\"\
    $(echo \"$b\" | tr \" \" \"\\n\" | sort | uniq)\"\n  local e=\"$(comm -12 <(echo\
    \ \"$c\") <(echo \"$d\"))\"\n  echo \"$e\" | tr \" \" \"\\\",\\\"\" | sed 's/^/\"\
    /g' | sed 's/$/\"/g'", "  local -a list1=($1)\n  local -a list2=($2)\n  local\
    \ -a common=()\n  for e in \"${list1[@]}\"; do\n    if [[ \" ${list2[*]} \" ==\
    \ *\" $e \"* ]]; then\n      common+=($e)\n    fi\n  done\n  echo \"${common[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local list1=\"$1\"\n    local\
    \ list2=\"$2\"\n    local list1_sorted=$(echo \"$list1\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\n    local list2_sorted=$(echo \"$list2\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' ')\n    local common_list=$(comm -12 <(echo \"$list1_sorted\"\
    ) <(echo \"$list2_sorted\"))\n    local common_list_json=$(echo \"$common_list\"\
    \ | tr ' ' '\\n' | jq -R '.' | jq -s)\n    echo \"$common_list_json\"", "    local\
    \ list1=\"$1\"\n    local list2=\"$2\"\n    local -a list1_array=($list1)\n  \
    \  local -a list2_array=($list2)\n    local -a common_array=()\n    for i in \"\
    ${list1_array[@]}\"; do\n        for j in \"${list2_array[@]}\"; do\n        \
    \    if [[ \"$i\" == \"$j\" ]]; then\n                common_array+=(\"$i\")\n\
    \            fi\n        done\n    done\n    echo \"${common_array[@]}\" | tr\
    \ ' ' '\\n' | sort -u | tr '\\n' ' '", "    local a=($1)\n    local b=($2)\n \
    \   local c=()\n    for i in \"${a[@]}\"; do\n        for j in \"${b[@]}\"; do\n\
    \            if [[ \"$i\" == \"$j\" ]]; then\n                c+=(\"$i\")\n  \
    \          fi\n        done\n    done\n    echo \"${c[@]}\" | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' '", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_array=($list1)\n\
    \  local list2_array=($list2)\n  local common_array=()\n  local i\n  for i in\
    \ \"${list1_array[@]}\"; do\n    if [[ \" ${list2_array[@]} \" =~ \" ${i} \" ]];\
    \ then\n      common_array+=(\"$i\")\n    fi\n  done\n  echo \"${common_array[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local list1=\"$1\"\n    local\
    \ list2=\"$2\"\n    local list1_array=($list1)\n    local list2_array=($list2)\n\
    \    local common_array=()\n    for i in \"${list1_array[@]}\"; do\n        for\
    \ j in \"${list2_array[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n\
    \                common_array+=(\"$i\")\n            fi\n        done\n    done\n\
    \    echo \"${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", " \
    \ local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n  \
    \      c+=(\"$i\")\n      fi\n    done\n  done\n  echo \"$(unique \"${c[@]}\"\
    )\"", "  local a=\"$1\"\n  local b=\"$2\"\n  local -a aa=($a)\n  local -a bb=($b)\n\
    \  local -a cc\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=${#aa[@]}\n\
    \  local -i m=${#bb[@]}\n  while (( i < n )); do\n    while (( j < m )); do\n\
    \      if [[ \"${aa[i]}\" == \"${bb[j]}\" ]]; then\n        cc[k++]=\"${aa[i]}\"\
    \n        break\n      fi\n      (( j++ ))\n    done\n    (( i++ ))\n    j=0\n\
    \  done\n  echo \"$(echo \"${cc[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"",
  "  local a=\"$1\"\n  local b=\"$2\"\n  local a_sorted=\"$(echo \"$a\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' ')\"\n  local b_sorted=\"$(echo \"$b\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' ')\"\n  local a_unique=\"$(echo \"$a_sorted\" | tr '\
    \ ' '\\n' | uniq | tr '\\n' ' ')\"\n  local b_unique=\"$(echo \"$b_sorted\" |\
    \ tr ' ' '\\n' | uniq | tr '\\n' ' ')\"\n  local common_sorted=\"$(comm -12 <(echo\
    \ \"$a_unique\") <(echo \"$b_unique\") | tr '\\n' ' ')\"\n  echo \"$common_sorted\"",
  "    local -a list1=($1)\n    local -a list2=($2)\n    local -a common=()\n    for\
    \ i in \"${list1[@]}\"; do\n        for j in \"${list2[@]}\"; do\n           \
    \ if [[ \"$i\" == \"$j\" ]]; then\n                common+=(\"$i\")\n        \
    \    fi\n        done\n    done\n    echo \"$(echo \"${common[@]}\" | tr ' ' '\\\
    n' | sort -u | tr '\\n' ' ')\"", "  local list1=\"$1\"\n  local list2=\"$2\"\n\
    \  local list1_sorted=$(echo \"$list1\" | tr ' ' '\\n' | sort -n)\n  local list2_sorted=$(echo\
    \ \"$list2\" | tr ' ' '\\n' | sort -n)\n  local list1_unique=$(echo \"$list1_sorted\"\
    \ | uniq)\n  local list2_unique=$(echo \"$list2_sorted\" | uniq)\n  local list1_unique_count=$(echo\
    \ \"$list1_unique\" | wc -l)\n  local list2_unique_count=$(echo \"$list2_unique\"\
    \ | wc -l)\n  local list1_unique_index=0\n  local list2_unique_index=0\n  local\
    \ common_list=\"\"\n  while [ $list1_unique_index -lt $list1_unique_count ] &&\
    \ [ $list2_unique_index -lt $list2_unique_count ]; do\n    local list1_unique_item=$(echo\
    \ \"$list1_unique\" | sed -n \"$((list1_unique_index + 1))p\")\n    local list2_unique_item=$(echo\
    \ \"$list2_unique\" | sed -n \"$((list2_unique_index + 1))p\")\n    if [ \"$list1_unique_item\"\
    \ -eq \"$list2_unique_item\" ]; then\n      common_list=\"$common_list $list1_unique_item\"\
    \n      list1_unique_index=$((list1_unique_index + 1))\n      list2_unique_index=$((list2_unique_index\
    \ + 1))\n    elif [ \"$list1_unique_item\" -lt \"$list2_unique_item\" ]; then\n\
    \      list1_unique_index=$((list1_unique_index + 1))\n    else\n      list2_unique_index=$((list2_unique_index\
    \ + 1))\n    fi\n  done\n  echo \"$common_list\"", "    local list1=\"$1\"\n \
    \   local list2=\"$2\"\n    local -a list1_array=($list1)\n    local -a list2_array=($list2)\n\
    \    local -a common_array=()\n    for i in \"${list1_array[@]}\"; do\n      \
    \  for j in \"${list2_array[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]];\
    \ then\n                common_array+=(\"$i\")\n            fi\n        done\n\
    \    done\n    echo \"${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n'\
    \ ' '", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_array=($list1)\n\
    \  local list2_array=($list2)\n  local common_array=()\n  for i in \"${list1_array[@]}\"\
    ; do\n    for j in \"${list2_array[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]];\
    \ then\n        common_array+=(\"$i\")\n      fi\n    done\n  done\n  echo \"\
    ${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local a=\"\
    $1\"\n    local b=\"$2\"\n    local -a a_array=()\n    local -a b_array=()\n \
    \   local -a result=()\n    local -a tmp=()\n    local -a tmp2=()\n    local -a\
    \ tmp3=()\n    local -a tmp4=()\n    local -a tmp5=()\n    local -a tmp6=()\n\
    \    local -a tmp7=()\n    local -a tmp8=()\n    local -a tmp9=()\n    local -a\
    \ tmp10=()\n    local -a tmp11=()\n    local -a tmp12=()\n    local -a tmp13=()\n\
    \    local -a tmp14=()\n    local -a tmp15=()\n    local -a tmp16=()\n    local\
    \ -a tmp17=()\n    local -a tmp18=()\n    local -a tmp19=()\n    local -a tmp20=()\n\
    \    local -a tmp21=()\n    local -a tmp22=()\n    local -a tmp23=()\n    local\
    \ -a tmp24=()\n    local -a tmp25=()\n    local -a tmp26=()\n    local -a tmp27=()\n\
    \    local -a tmp28=()\n    local -a tmp29=()\n    local -a tmp30=()\n    local\
    \ -a tmp31=()\n    local -a tmp32=()\n    local -a tmp33=()\n    local -a tmp34=()\n\
    \    local -a tmp35=()\n    local -a tmp36=()\n    local -a tmp37=()\n    local\
    \ -a tmp38=()\n    local -a tmp39=()\n    local -a tmp40=()\n    local -a tmp41=()\n\
    \    local -a tmp42=()\n    local -a tmp43=()\n    local -a tmp44=()\n    local\
    \ -a tmp45=()\n    local -a tmp46=()\n    local -a tmp47=()\n    local -a tmp48=()\n\
    \    local -a tmp49=()\n    local -a tmp50=()\n    local -a tmp51=()\n    local\
    \ -a tmp52=()\n", "    local a=($1)\n    local b=($2)\n    local c=()\n    for\
    \ i in \"${a[@]}\"; do\n        for j in \"${b[@]}\"; do\n            if [[ \"\
    $i\" == \"$j\" ]]; then\n                c+=(\"$i\")\n            fi\n       \
    \ done\n    done\n    echo \"$(unique \"${c[@]}\")\"", "    local -a a=($1)\n\
    \    local -a b=($2)\n    local -a c=()\n    local -a d=()\n    local -a e=()\n\
    \    local -a f=()\n    local -a g=()\n    local -a h=()\n    local -a i=()\n\
    \    local -a j=()\n    local -a k=()\n    local -a l=()\n    local -a m=()\n\
    \    local -a n=()\n    local -a o=()\n    local -a p=()\n    local -a q=()\n\
    \    local -a r=()\n    local -a s=()\n    local -a t=()\n    local -a u=()\n\
    \    local -a v=()\n    local -a w=()\n    local -a x=()\n    local -a y=()\n\
    \    local -a z=()\n    local -a A=()\n    local -a B=()\n    local -a C=()\n\
    \    local -a D=()\n    local -a E=()\n    local -a F=()\n    local -a G=()\n\
    \    local -a H=()\n    local -a I=()\n    local -a J=()\n    local -a K=()\n\
    \    local -a L=()\n    local -a M=()\n    local -a N=()\n    local -a O=()\n\
    \    local -a P=()\n    local -a Q=()\n    local -a R=()\n    local -a S=()\n\
    \    local -a T=()\n    local -a U=()\n    local -a V=()\n    local -a W=()\n\
    \    local -a X=()\n    local -a Y=()\n    local -a Z=()\n    local -a aa=()\n\
    \    local -a ab=()\n    local -a ac=()\n    local -a ad=()\n    local -a ae=()\n\
    \    local -a af=()\n    local -a ag=()\n    local -a ah=()\n    local -a ai=()\n\
    \    local -a aj=()\n    local -a ak=()", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -a c=()\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n \
    \     if [[ \"$i\" == \"$j\" ]]; then\n        c+=(\"$i\")\n      fi\n    done\n\
    \  done\n  echo \"$(sort_unique \"${c[@]}\")\"", "  local -a a=($1)\n  local -a\
    \ b=($2)\n  local -a c=()\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"\
    ; do\n      if [[ \"$i\" == \"$j\" ]]; then\n        c+=(\"$i\")\n      fi\n \
    \   done\n  done\n  echo \"$(echo \"${c[@]}\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' ')\"", "    local a=($1)\n    local b=($2)\n    local c=()\n    for i in\
    \ \"${a[@]}\"; do\n        for j in \"${b[@]}\"; do\n            if [[ \"$i\"\
    \ == \"$j\" ]]; then\n                c+=(\"$i\")\n            fi\n        done\n\
    \    done\n    echo \"$(echo \"${c[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' '\
    \ ')\"", "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_array=($list1)\n\
    \    local list2_array=($list2)\n    local common_array=()\n    for i in \"${list1_array[@]}\"\
    ; do\n        for j in \"${list2_array[@]}\"; do\n            if [[ \"$i\" ==\
    \ \"$j\" ]]; then\n                common_array+=(\"$i\")\n            fi\n  \
    \      done\n    done\n    echo \"${common_array[@]}\" | tr ' ' '\\n' | sort -u\
    \ | tr '\\n' ' '", "  local a=($1)\n  local b=($2)\n  local c=()\n  for i in \"\
    ${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]];\
    \ then\n        c+=(\"$i\")\n      fi\n    done\n  done\n  echo \"$(sort_unique\
    \ \"${c[@]}\")\"", "    local -a list1=($1)\n    local -a list2=($2)\n    local\
    \ -a common=()\n    for i in \"${list1[@]}\"; do\n        for j in \"${list2[@]}\"\
    ; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                common+=(\"\
    $i\")\n            fi\n        done\n    done\n    echo \"$(echo \"${common[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"", "  local list1=\"$1\"\n  local\
    \ list2=\"$2\"\n  local list1_sorted=\"$(echo \"$list1\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\"\n  local list2_sorted=\"$(echo \"$list2\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' ')\"\n  local list1_unique=\"$(echo \"$list1_sorted\"\
    \ | tr ' ' '\\n' | uniq | tr '\\n' ' ')\"\n  local list2_unique=\"$(echo \"$list2_sorted\"\
    \ | tr ' ' '\\n' | uniq | tr '\\n' ' ')\"\n  local list1_unique_count=\"$(echo\
    \ \"$list1_unique\" | wc -w)\"\n  local list2_unique_count=\"$(echo \"$list2_unique\"\
    \ | wc -w)\"\n  local list1_unique_index=1\n  local list2_unique_index=1\n  local\
    \ list1_unique_element\n  local list2_unique_element\n  local common_list=\"\"\
    \n  while [ \"$list1_unique_index\" -le \"$list1_unique_count\" ] && [ \"$list2_unique_index\"\
    \ -le \"$list2_unique_count\" ]; do\n    list1_unique_element=\"$(echo \"$list1_unique\"\
    \ | cut -d ' ' -f \"$list1_unique_index\")\"\n    list2_unique_element=\"$(echo\
    \ \"$list2_unique\" | cut -d ' ' -f \"$list2_unique_index\")\"\n    if [ \"$list1_unique_element\"\
    \ -eq \"$list2_unique_element\" ]; then\n      common_list=\"$common_list $list1_unique_element\"\
    \n      list1_unique_index=$((list1_unique_index + 1))\n      list2_unique_index=$((list2_unique_index\
    \ + 1))\n    elif [ \"$list1_unique_element\" -lt \"$list2_unique_element\" ];\
    \ then\n      list1_unique_index=$((list1_unique_index + 1))\n    else\n     \
    \ list2_", "  local a=\"$1\"\n  local b=\"$2\"\n  local -a a_array=($a)\n  local\
    \ -a b_array=($b)\n  local -a common_array=()\n  for i in \"${a_array[@]}\"; do\n\
    \    for j in \"${b_array[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n \
    \       common_array+=(\"$i\")\n      fi\n    done\n  done\n  echo \"${common_array[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -a c=()\n  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a\
    \ g=()\n  local -a h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n \
    \ local -a l=()\n  local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a\
    \ p=()\n  local -a q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n \
    \ local -a u=()\n  local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a\
    \ y=()\n  local -a z=()\n  local -a A=()\n  local -a B=()\n  local -a C=()\n \
    \ local -a D=()\n  local -a E=()\n  local -a F=()\n  local -a G=()\n  local -a\
    \ H=()\n  local -a I=()\n  local -a J=()\n  local -a K=()\n  local -a L=()\n \
    \ local -a M=()\n  local -a N=()\n  local -a O=()\n  local -a P=()\n  local -a\
    \ Q=()\n  local -a R=()\n  local -a S=()\n  local -a T=()\n  local -a U=()\n \
    \ local -a V=()\n  local -a W=()\n  local -a X=()\n  local -a Y=()\n  local -a\
    \ Z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n\
    \  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n  local\
    \ -a ai=()\n  local -a aj=()\n  local -a ak=()", "    local -a a=($1)\n    local\
    \ -a b=($2)\n    local -a c=()\n    local -a d=()\n    local -a e=()\n    local\
    \ -a f=()\n    local -a g=()\n    local -a h=()\n    local -a i=()\n    local\
    \ -a j=()\n    local -a k=()\n    local -a l=()\n    local -a m=()\n    local\
    \ -a n=()\n    local -a o=()\n    local -a p=()\n    local -a q=()\n    local\
    \ -a r=()\n    local -a s=()\n    local -a t=()\n    local -a u=()\n    local\
    \ -a v=()\n    local -a w=()\n    local -a x=()\n    local -a y=()\n    local\
    \ -a z=()\n    local -a A=()\n    local -a B=()\n    local -a C=()\n    local\
    \ -a D=()\n    local -a E=()\n    local -a F=()\n    local -a G=()\n    local\
    \ -a H=()\n    local -a I=()\n    local -a J=()\n    local -a K=()\n    local\
    \ -a L=()\n    local -a M=()\n    local -a N=()\n    local -a O=()\n    local\
    \ -a P=()\n    local -a Q=()\n    local -a R=()\n    local -a S=()\n    local\
    \ -a T=()\n    local -a U=()\n    local -a V=()\n    local -a W=()\n    local\
    \ -a X=()\n    local -a Y=()\n    local -a Z=()\n    local -a _=()\n    local\
    \ -a aa=()\n    local -a ab=()\n    local -a ac=()\n    local -a ad=()\n    local\
    \ -a ae=()\n    local -a af=()\n    local -a ag=()\n    local -a ah=()\n    local\
    \ -a ai=()\n    local -a aj=()", "    local -a list1=($1)\n    local -a list2=($2)\n\
    \    local -a result=()\n    for i in \"${list1[@]}\"; do\n        for j in \"\
    ${list2[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n             \
    \   result+=(\"$i\")\n            fi\n        done\n    done\n    printf '%s\\\
    n' \"${result[@]}\" | sort -u", "    local list1=\"$1\"\n    local list2=\"$2\"\
    \n    local list1_sorted=($(echo \"$list1\" | tr ' ' '\\n' | sort -n))\n    local\
    \ list2_sorted=($(echo \"$list2\" | tr ' ' '\\n' | sort -n))\n    local common_list=()\n\
    \    local i=0\n    local j=0\n    while [ $i -lt ${#list1_sorted[@]} ] && [ $j\
    \ -lt ${#list2_sorted[@]} ]; do\n        if [ ${list1_sorted[$i]} -lt ${list2_sorted[$j]}\
    \ ]; then\n            i=$((i+1))\n        elif [ ${list1_sorted[$i]} -gt ${list2_sorted[$j]}\
    \ ]; then\n            j=$((j+1))\n        else\n            common_list+=(${list1_sorted[$i]})\n\
    \            i=$((i+1))\n            j=$((j+1))\n        fi\n    done\n    echo\
    \ \"${common_list[@]}\"", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local\
    \ list1_sorted=\"$(echo \"$list1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n\
    \  local list2_sorted=\"$(echo \"$list2\" | tr ' ' '\\n' | sort -n | tr '\\n'\
    \ ' ')\"\n  echo \"$list1_sorted\" | tr ' ' '\\n' | uniq | while read -r item;\
    \ do\n    if [[ \"$list2_sorted\" =~ \" $item \" ]]; then\n      echo \"\\\"$item\\\
    \"\"\n    fi\n  done", "    local a=($1)\n    local b=($2)\n    local c=()\n \
    \   for i in \"${a[@]}\"; do\n        for j in \"${b[@]}\"; do\n            if\
    \ [[ \"$i\" == \"$j\" ]]; then\n                c+=(\"$i\")\n            fi\n\
    \        done\n    done\n    echo \"${c[@]}\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' '", "  local a=($1)\n  local b=($2)\n  local c=()\n  for i in \"${a[@]}\"\
    ; do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n  \
    \      c+=(\"$i\")\n      fi\n    done\n  done\n  echo \"$(unique \"${c[@]}\"\
    )\"", "    local a=$1 b=$2\n    local -a a_array=($a) b_array=($b)\n    local\
    \ -a common_array\n    local -i i j\n    for ((i=0; i<${#a_array[@]}; i++)); do\n\
    \        for ((j=0; j<${#b_array[@]}; j++)); do\n            if [[ ${a_array[$i]}\
    \ == ${b_array[$j]} ]]; then\n                common_array+=(${a_array[$i]})\n\
    \            fi\n        done\n    done\n    echo $(sort -u <<< ${common_array[@]})",
  "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_sorted\n    local\
    \ list2_sorted\n    local common_list\n    local common_list_sorted\n    local\
    \ common_list_unique\n    list1_sorted=$(echo \"$list1\" | tr ' ' '\\n' | sort)\n\
    \    list2_sorted=$(echo \"$list2\" | tr ' ' '\\n' | sort)\n    common_list=$(comm\
    \ -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\n    common_list_sorted=$(echo\
    \ \"$common_list\" | tr '\\n' ' ')\n    common_list_unique=$(echo \"$common_list_sorted\"\
    \ | tr ' ' '\\n' | sort -u)\n    echo \"$common_list_unique\"", "    local list1=\"\
    $1\"\n    local list2=\"$2\"\n    local list1_sorted=$(echo \"$list1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' ')\n    local list2_sorted=$(echo \"$list2\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local common_list=$(comm -12 <(echo\
    \ \"$list1_sorted\") <(echo \"$list2_sorted\"))\n    echo \"$common_list\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '", "    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_sorted=\"$(echo \"$list1\" | tr ' ' '\\n' | sort -n | tr\
    \ '\\n' ' ')\"\n    local list2_sorted=\"$(echo \"$list2\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\"\n    local common_sorted=\"$(comm -12 <(echo \"$list1_sorted\"\
    ) <(echo \"$list2_sorted\"))\"\n    echo \"$common_sorted\" | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' '", "    local -a list1=($1)\n    local -a list2=($2)\n    local\
    \ -a common=()\n    for i in \"${list1[@]}\"; do\n        for j in \"${list2[@]}\"\
    ; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                common+=($i)\n\
    \            fi\n        done\n    done\n    echo $(unique \"${common[@]}\")",
  "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local -a d=()\n\
    \    for i in \"${a[@]}\"; do\n        for j in \"${b[@]}\"; do\n            if\
    \ [[ \"$i\" == \"$j\" ]]; then\n                c+=(\"$i\")\n            fi\n\
    \        done\n    done\n    for i in \"${c[@]}\"; do\n        if [[ ! \" ${d[@]}\
    \ \" =~ \" ${i} \" ]]; then\n            d+=(\"$i\")\n        fi\n    done\n \
    \   echo \"$(printf '%s\\n' \"${d[@]}\" | sort -n)\"", "  local a=\"$1\"\n  local\
    \ b=\"$2\"\n  local -a a_array=($a)\n  local -a b_array=($b)\n  local -a common_array=()\n\
    \  for i in \"${a_array[@]}\"; do\n    for j in \"${b_array[@]}\"; do\n      if\
    \ [[ \"$i\" == \"$j\" ]]; then\n        common_array+=(\"$i\")\n      fi\n   \
    \ done\n  done\n  echo \"${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\\
    n' ' '", "  local a=\"$1\"\n  local b=\"$2\"\n  local c=\"$(echo \"$a\" | tr '\
    \ ' '\\n' | sort | uniq)\"\n  local d=\"$(echo \"$b\" | tr ' ' '\\n' | sort |\
    \ uniq)\"\n  local e=\"$(comm -12 <(echo \"$c\") <(echo \"$d\"))\"\n  echo \"\
    $e\" | tr '\\n' ' ' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'", "  \
    \  local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_sorted=\"$(echo\
    \ \"$list1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local list2_sorted=\"\
    $(echo \"$list2\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local common_sorted=\"\
    $(comm -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\"\n    echo \"\
    $common_sorted\" | tr ' ' '\\n' | sort -n | uniq | tr '\\n' ' '", "  local a=($1)\n\
    \  local b=($2)\n  local c=()\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"\
    ; do\n      if [[ \"$i\" == \"$j\" ]]; then\n        c+=(\"$i\")\n      fi\n \
    \   done\n  done\n  echo \"$(sort_unique \"${c[@]}\")\"", "    local list1=\"\
    $1\"\n    local list2=\"$2\"\n    local list1_array=($list1)\n    local list2_array=($list2)\n\
    \    local list1_len=${#list1_array[@]}\n    local list2_len=${#list2_array[@]}\n\
    \    local i=0\n    local j=0\n    local common_array=()\n    while [ $i -lt $list1_len\
    \ ]; do\n        j=0\n        while [ $j -lt $list2_len ]; do\n            if\
    \ [ \"${list1_array[$i]}\" = \"${list2_array[$j]}\" ]; then\n                common_array+=(${list1_array[$i]})\n\
    \                break\n            fi\n            j=$((j+1))\n        done\n\
    \        i=$((i+1))\n    done\n    echo \"${common_array[@]}\" | tr ' ' '\\n'\
    \ | sort -u | tr '\\n' ' '", "    local -a a=($1)\n    local -a b=($2)\n    local\
    \ -a c=()\n    local i\n    for i in \"${a[@]}\"; do\n        if [[ \" ${b[*]}\
    \ \" == *\" $i \"* ]]; then\n            c+=(\"$i\")\n        fi\n    done\n \
    \   echo \"${c[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "  local list1=\"\
    $1\"\n  local list2=\"$2\"\n  local list1_array=($list1)\n  local list2_array=($list2)\n\
    \  local list1_len=${#list1_array[@]}\n  local list2_len=${#list2_array[@]}\n\
    \  local common_list=\"\"\n  local i=0\n  local j=0\n  while [ $i -lt $list1_len\
    \ ]; do\n    j=0\n    while [ $j -lt $list2_len ]; do\n      if [ \"${list1_array[$i]}\"\
    \ = \"${list2_array[$j]}\" ]; then\n        common_list=\"$common_list ${list1_array[$i]}\"\
    \n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n  done\n  echo \"$common_list\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local -a a=($1)\n    local -a\
    \ b=($2)\n    local -a c=()\n    local -a d=()\n    local -a e=()\n    local -a\
    \ f=()\n    local -a g=()\n    local -a h=()\n    local -a i=()\n    local -a\
    \ j=()\n    local -a k=()\n    local -a l=()\n    local -a m=()\n    local -a\
    \ n=()\n    local -a o=()\n    local -a p=()\n    local -a q=()\n    local -a\
    \ r=()\n    local -a s=()\n    local -a t=()\n    local -a u=()\n    local -a\
    \ v=()\n    local -a w=()\n    local -a x=()\n    local -a y=()\n    local -a\
    \ z=()\n    local -a A=()\n    local -a B=()\n    local -a C=()\n    local -a\
    \ D=()\n    local -a E=()\n    local -a F=()\n    local -a G=()\n    local -a\
    \ H=()\n    local -a I=()\n    local -a J=()\n    local -a K=()\n    local -a\
    \ L=()\n    local -a M=()\n    local -a N=()\n    local -a O=()\n    local -a\
    \ P=()\n    local -a Q=()\n    local -a R=()\n    local -a S=()\n    local -a\
    \ T=()\n    local -a U=()\n    local -a V=()\n    local -a W=()\n    local -a\
    \ X=()\n    local -a Y=()\n    local -a Z=()\n    local -a _=()\n    local -a\
    \ aa=()\n    local -a ab=()\n    local -a ac=()\n    local -a ad=()\n    local\
    \ -a ae=()\n    local -a af=()\n    local -a ag=()\n    local -a ah=()\n    local\
    \ -a ai=()\n    local -a aj=()", "  local a=\"$1\"\n  local b=\"$2\"\n  echo \"\
    $a\" | tr ' ' '\\n' | sort | uniq | while read -r a; do\n    echo \"$b\" | tr\
    \ ' ' '\\n' | sort | uniq | while read -r b; do\n      [[ \"$a\" == \"$b\" ]]\
    \ && echo \"$a\"\n    done\n  done | sort | uniq", "  local -a a=($1)\n  local\
    \ -a b=($2)\n  local -a c=()\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"\
    ; do\n      if [[ \"$i\" == \"$j\" ]]; then\n        c+=(\"$i\")\n      fi\n \
    \   done\n  done\n  echo \"$(sort_unique \"${c[@]}\")\"", "  local a=\"$1\"\n\
    \  local b=\"$2\"\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local\
    \ -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n\
    \  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local\
    \ -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n\
    \  local -a x\n  local -a y\n  local -a z\n  local -a A\n  local -a B\n  local\
    \ -a C\n  local -a D\n  local -a E\n  local -a F\n  local -a G\n  local -a H\n\
    \  local -a I\n  local -a J\n  local -a K\n  local -a L\n  local -a M\n  local\
    \ -a N\n  local -a O\n  local -a P\n  local -a Q\n  local -a R\n  local -a S\n\
    \  local -a T\n  local -a U\n  local -a V\n  local -a W\n  local -a X\n  local\
    \ -a Y\n  local -a Z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a\
    \ ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n\
    \  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n \
    \ local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local\
    \ -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a\
    \ ay\n  local -a az\n  local -a Aa\n  local -a Ab\n  local -a Ac\n  local -a Ad\n\
    \  local -a Ae\n  local", "  local list1=\"$1\"\n  local list2=\"$2\"\n  local\
    \ list1_sorted=\"$(echo \"$list1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n\
    \  local list2_sorted=\"$(echo \"$list2\" | tr ' ' '\\n' | sort -n | tr '\\n'\
    \ ' ')\"\n  local common_sorted=\"$(comm -12 <(echo \"$list1_sorted\") <(echo\
    \ \"$list2_sorted\"))\"\n  local common_sorted_unique=\"$(echo \"$common_sorted\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"\n  echo \"$common_sorted_unique\"",
  "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local -a d=()\n\
    \    local -a e=()\n    local -a f=()\n    local -a g=()\n    local -a h=()\n\
    \    local -a i=()\n    local -a j=()\n    local -a k=()\n    local -a l=()\n\
    \    local -a m=()\n    local -a n=()\n    local -a o=()\n    local -a p=()\n\
    \    local -a q=()\n    local -a r=()\n    local -a s=()\n    local -a t=()\n\
    \    local -a u=()\n    local -a v=()\n    local -a w=()\n    local -a x=()\n\
    \    local -a y=()\n    local -a z=()\n    local -a A=()\n    local -a B=()\n\
    \    local -a C=()\n    local -a D=()\n    local -a E=()\n    local -a F=()\n\
    \    local -a G=()\n    local -a H=()\n    local -a I=()\n    local -a J=()\n\
    \    local -a K=()\n    local -a L=()\n    local -a M=()\n    local -a N=()\n\
    \    local -a O=()\n    local -a P=()\n    local -a Q=()\n    local -a R=()\n\
    \    local -a S=()\n    local -a T=()\n    local -a U=()\n    local -a V=()\n\
    \    local -a W=()\n    local -a X=()\n    local -a Y=()\n    local -a Z=()\n\
    \    local -a _=()\n    local -a __=()\n    local -a ___=()\n    local -a ____=()\n\
    \    local -a _____=()\n    local -a ______=()\n    local -a _______=()\n    local\
    \ -a ________=()\n    local -a _________=()\n    local -a __________=()\n    local\
    \ -", "  local a=\"$1\"\n  local b=\"$2\"\n  local -a aa=($a)\n  local -a bb=($b)\n\
    \  local -a cc\n  local -a dd\n  local -a ee\n  local -a ff\n  local -a gg\n \
    \ local -a hh\n  local -a ii\n  local -a jj\n  local -a kk\n  local -a ll\n  local\
    \ -a mm\n  local -a nn\n  local -a oo\n  local -a pp\n  local -a qq\n  local -a\
    \ rr\n  local -a ss\n  local -a tt\n  local -a uu\n  local -a vv\n  local -a ww\n\
    \  local -a xx\n  local -a yy\n  local -a zz\n  local -a aaa\n  local -a bbb\n\
    \  local -a ccc\n  local -a ddd\n  local -a eee\n  local -a fff\n  local -a ggg\n\
    \  local -a hhh\n  local -a iii\n  local -a jjj\n  local -a kkk\n  local -a lll\n\
    \  local -a mmm\n  local -a nnn\n  local -a ooo\n  local -a ppp\n  local -a qqq\n\
    \  local -a rrr\n  local -a sss\n  local -a ttt\n  local -a uuu\n  local -a vvv\n\
    \  local -a www\n  local -a xxx\n  local -a yyy\n  local -a zzz\n  local -a aaaa\n\
    \  local -a bbbb\n  local -a cccc\n  local -a dddd\n  local -a eeee\n  local -a\
    \ ffff\n  local -a gggg\n  local -a hhhh\n  local -a iiii\n  local -a jjjj\n \
    \ local -a kkkk\n  local -a llll\n  local -a mmmm\n  local -a nnnn\n  local -a\
    \ oooo\n  local -a pppp\n  local -a qqqq\n  local -a r", "    local list1=\"$1\"\
    \n    local list2=\"$2\"\n    local result=\"\"\n    for i in $list1; do\n   \
    \     for j in $list2; do\n            if [ \"$i\" == \"$j\" ]; then\n       \
    \         result=\"$result $i\"\n            fi\n        done\n    done\n    echo\
    \ \"$result\" | tr \" \" \"\\n\" | sort -u | tr \"\\n\" \" \"", "  local list1=\"\
    $1\"\n  local list2=\"$2\"\n  local list1_array=($list1)\n  local list2_array=($list2)\n\
    \  local list1_length=${#list1_array[@]}\n  local list2_length=${#list2_array[@]}\n\
    \  local common_array=()\n  for (( i=0; i<list1_length; i++ )); do\n    for ((\
    \ j=0; j<list2_length; j++ )); do\n      if [[ \"${list1_array[$i]}\" == \"${list2_array[$j]}\"\
    \ ]]; then\n        common_array+=(\"${list1_array[$i]}\")\n      fi\n    done\n\
    \  done\n  echo \"${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '",
  "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  for i in \"${a[@]}\";\
    \ do\n    for j in \"${b[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n  \
    \      c+=(\"$i\")\n      fi\n    done\n  done\n  echo \"$(sort_unique \"${c[@]}\"\
    )\"", "    local a=($1)\n    local b=($2)\n    local c=()\n    for i in \"${a[@]}\"\
    ; do\n        for j in \"${b[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]];\
    \ then\n                c+=(\"$i\")\n            fi\n        done\n    done\n\
    \    echo \"${c[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local list1=\"\
    $1\"\n    local list2=\"$2\"\n    local list1_sorted=\"$(echo \"$list1\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local list2_sorted=\"$(echo \"$list2\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    echo \"$list1_sorted\" | tr\
    \ ' ' '\\n' | uniq | while read -r item; do\n        if echo \"$list2_sorted\"\
    \ | grep -q \"$item\"; then\n            echo \"\\\"$item\\\"\"\n        fi\n\
    \    done", "  local a=\"$1\"\n  local b=\"$2\"\n  local a_sorted=$(echo \"$a\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local b_sorted=$(echo \"$b\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local a_unique=$(echo \"$a_sorted\" |\
    \ tr ' ' '\\n' | uniq | tr '\\n' ' ')\n  local b_unique=$(echo \"$b_sorted\" |\
    \ tr ' ' '\\n' | uniq | tr '\\n' ' ')\n  local a_unique_sorted=$(echo \"$a_unique\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local b_unique_sorted=$(echo \"\
    $b_unique\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local a_unique_sorted_array=($a_unique_sorted)\n\
    \  local b_unique_sorted_array=($b_unique_sorted)\n  local a_unique_sorted_array_length=${#a_unique_sorted_array[@]}\n\
    \  local b_unique_sorted_array_length=${#b_unique_sorted_array[@]}\n  local i=0\n\
    \  local j=0\n  local common_array=()\n  while [ $i -lt $a_unique_sorted_array_length\
    \ ] && [ $j -lt $b_unique_sorted_array_length ]; do\n    if [ ${a_unique_sorted_array[$i]}\
    \ -lt ${b_unique_sorted_array[$j]} ]; then\n      i=$((i+1))\n    elif [ ${a_unique_sorted_array[$i]}\
    \ -gt ${b_unique_sorted_array[$j]} ]; then\n      j=$((j+1))\n    else\n     \
    \ common_array+=(\"${a_unique_sorted_array[$i]}\")\n      i=$((i+1))\n      j=$((j+1))",
  "    local a=\"$1\"\n    local b=\"$2\"\n    echo \"$a\" | tr ' ' '\\n' | sort |\
    \ uniq | grep -Fx -f <(echo \"$b\" | tr ' ' '\\n' | sort | uniq) | tr '\\n' '\
    \ ' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//'", "  local list1=\"$1\"\n  local\
    \ list2=\"$2\"\n  local common_list=\"\"\n  for i in $list1; do\n    for j in\
    \ $list2; do\n      if [[ \"$i\" == \"$j\" ]]; then\n        common_list=\"$common_list\
    \ $i\"\n      fi\n    done\n  done\n  echo \"$common_list\" | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' '", "    local IFS=$'\\n'\n    local -a a=($(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -u))\n    local -a b=($(echo \"$2\" | tr ' ' '\\n' | sort -u))\n\
    \    local -a c=()\n    for i in \"${a[@]}\"; do\n        for j in \"${b[@]}\"\
    ; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                c+=(\"$i\"\
    )\n            fi\n        done\n    done\n    echo \"${c[@]}\"", "    local a=\"\
    $1\"\n    local b=\"$2\"\n    local -a a_array=()\n    local -a b_array=()\n \
    \   local -a c_array=()\n    local -a c_array_sorted=()\n    local -a c_array_unique=()\n\
    \    local -a c_array_unique_sorted=()\n    a_array=($(echo \"$a\" | tr ' ' '\\\
    n'))\n    b_array=($(echo \"$b\" | tr ' ' '\\n'))\n    for i in \"${a_array[@]}\"\
    ; do\n        for j in \"${b_array[@]}\"; do\n            if [[ \"$i\" == \"$j\"\
    \ ]]; then\n                c_array+=(\"$i\")\n            fi\n        done\n\
    \    done\n    c_array_sorted=($(echo \"${c_array[@]}\" | tr ' ' '\\n' | sort\
    \ -n))\n    c_array_unique=($(echo \"${c_array_sorted[@]}\" | tr ' ' '\\n' | uniq))\n\
    \    c_array_unique_sorted=($(echo \"${c_array_unique[@]}\" | tr ' ' '\\n' | sort\
    \ -n))\n    echo \"${c_array_unique_sorted[@]}\"", "  local list1=\"$1\"\n  local\
    \ list2=\"$2\"\n  local common=$(comm -12 <(echo \"$list1\" | tr ' ' '\\n' | sort\
    \ -n) <(echo \"$list2\" | tr ' ' '\\n' | sort -n))\n  echo \"$common\"", "  local\
    \ a=\"$1\"\n  local b=\"$2\"\n  local c=\"$(comm -12 <(echo \"$a\" | tr ' ' '\\\
    n' | sort -n) <(echo \"$b\" | tr ' ' '\\n' | sort -n))\"\n  echo \"$c\"", "  local\
    \ list1=\"$1\"\n  local list2=\"$2\"\n  local list1_elements=($list1)\n  local\
    \ list2_elements=($list2)\n  local common_elements=()\n  for element in \"${list1_elements[@]}\"\
    ; do\n    if [[ \" ${list2_elements[@]} \" =~ \" ${element} \" ]]; then\n    \
    \  common_elements+=($element)\n    fi\n  done\n  echo \"${common_elements[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local -a a=($1)\n    local -a\
    \ b=($2)\n    local -a c=()\n    for i in \"${a[@]}\"; do\n        for j in \"\
    ${b[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                c+=(\"\
    $i\")\n            fi\n        done\n    done\n    echo \"$(echo \"${c[@]}\" |\
    \ tr ' ' '\\n' | sort -u | tr '\\n' ' ')\"", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -a c=()\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n \
    \     if [[ \"$i\" == \"$j\" ]]; then\n        c+=(\"$i\")\n      fi\n    done\n\
    \  done\n  echo \"$(sort_unique \"${c[@]}\")\"", "    local -a list1=($1)\n  \
    \  local -a list2=($2)\n    local -a common=()\n    for i in \"${list1[@]}\";\
    \ do\n        for j in \"${list2[@]}\"; do\n            if [[ \"$i\" == \"$j\"\
    \ ]]; then\n                common+=(\"$i\")\n            fi\n        done\n \
    \   done\n    echo \"$(array_unique \"${common[@]}\")\"", "    local list1=\"\
    $1\"\n    local list2=\"$2\"\n    local list1_sorted=\"$(echo \"$list1\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local list2_sorted=\"$(echo \"$list2\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local common_sorted=\"$(comm\
    \ -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\"\n    echo \"$common_sorted\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local list1=\"$1\"\n    local\
    \ list2=\"$2\"\n    local list1_count=$(echo \"$list1\" | wc -w)\n    local list2_count=$(echo\
    \ \"$list2\" | wc -w)\n    local list1_sorted=$(echo \"$list1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' ')\n    local list2_sorted=$(echo \"$list2\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' ')\n    local common_list=\"\"\n    local common_list_count=0\n\
    \    local common_list_sorted=\"\"\n    local i=0\n    local j=0\n    while [\
    \ $i -lt $list1_count ] && [ $j -lt $list2_count ]; do\n        local list1_item=$(echo\
    \ \"$list1_sorted\" | cut -d ' ' -f $((i+1)))\n        local list2_item=$(echo\
    \ \"$list2_sorted\" | cut -d ' ' -f $((j+1)))\n        if [ \"$list1_item\" -eq\
    \ \"$list2_item\" ]; then\n            common_list=\"$common_list $list1_item\"\
    \n            i=$((i+1))\n            j=$((j+1))\n        elif [ \"$list1_item\"\
    \ -lt \"$list2_item\" ]; then\n            i=$((i+1))\n        else\n        \
    \    j=$((j+1))\n        fi\n    done\n    common_list_count=$(echo \"$common_list\"\
    \ | wc -w)\n    common_list_sorted=$(echo \"$common_list\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\n    local result=\"\"\n    for ((i=0; i<$common_list_count;\
    \ i++)); do\n        local item=$(echo \"$common_list_sorted\" | cut -d ' ' -f\
    \ $((i+1)))\n        result=\"$result \\\"$item\\\"\"\n    done\n    echo \"[$result]\"",
  "    local list1=\"$1\"\n    local list2=\"$2\"\n    local list1_sorted=\"$(echo\
    \ \"$list1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local list2_sorted=\"\
    $(echo \"$list2\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\"\n    local common_sorted=\"\
    $(comm -12 <(echo \"$list1_sorted\") <(echo \"$list2_sorted\"))\"\n    echo \"\
    $common_sorted\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local -a list1=($1)\n\
    \    local -a list2=($2)\n    local -a common=()\n    for i in \"${list1[@]}\"\
    ; do\n        for j in \"${list2[@]}\"; do\n            if [[ \"$i\" == \"$j\"\
    \ ]]; then\n                common+=(\"$i\")\n            fi\n        done\n \
    \   done\n    echo \"$(printf '%s\\n' \"${common[@]}\" | sort -u)\"", "    local\
    \ -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    for i in \"${a[@]}\"\
    ; do\n        for j in \"${b[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]];\
    \ then\n                c+=(\"$i\")\n            fi\n        done\n    done\n\
    \    echo \"$(sort_unique \"${c[@]}\")\"", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -a c=()\n  for i in \"${a[@]}\"; do\n    for j in \"${b[@]}\"; do\n \
    \     if [[ \"$i\" == \"$j\" ]]; then\n        c+=(\"$i\")\n      fi\n    done\n\
    \  done\n  echo \"$(sort_unique \"${c[@]}\")\"", "  local -a a=($1)\n  local -a\
    \ b=($2)\n  local -a c=()\n  local -a d=()\n  local -a e=()\n  local -a f=()\n\
    \  local -a g=()\n  local -a h=()\n  local -a i=()\n  local -a j=()\n  local -a\
    \ k=()\n  local -a l=()\n  local -a m=()\n  local -a n=()\n  local -a o=()\n \
    \ local -a p=()\n  local -a q=()\n  local -a r=()\n  local -a s=()\n  local -a\
    \ t=()\n  local -a u=()\n  local -a v=()\n  local -a w=()\n  local -a x=()\n \
    \ local -a y=()\n  local -a z=()\n  local -a A=()\n  local -a B=()\n  local -a\
    \ C=()\n  local -a D=()\n  local -a E=()\n  local -a F=()\n  local -a G=()\n \
    \ local -a H=()\n  local -a I=()\n  local -a J=()\n  local -a K=()\n  local -a\
    \ L=()\n  local -a M=()\n  local -a N=()\n  local -a O=()\n  local -a P=()\n \
    \ local -a Q=()\n  local -a R=()\n  local -a S=()\n  local -a T=()\n  local -a\
    \ U=()\n  local -a V=()\n  local -a W=()\n  local -a X=()\n  local -a Y=()\n \
    \ local -a Z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local\
    \ -a ad=()\n  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n\
    \  local -a ai=()\n  local -a aj=()\n  local -a ak=()", "    local -a a=($1)\n\
    \    local -a b=($2)\n    local -a c=()\n    for i in \"${a[@]}\"; do\n      \
    \  for j in \"${b[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n   \
    \             c+=(\"$i\")\n            fi\n        done\n    done\n    echo \"\
    $(unique \"${c[@]}\")\"", "  local a=\"$1\"\n  local b=\"$2\"\n  echo \"$a\" |\
    \ tr ' ' '\\n' | sort | uniq | grep -Fx -f <(echo \"$b\" | tr ' ' '\\n' | sort\
    \ | uniq) | tr '\\n' ' ' | sed 's/^ *//' | sed 's/ *$//'", "  local list1=\"$1\"\
    \n  local list2=\"$2\"\n  local list1_sorted=$(echo \"$list1\" | tr ' ' '\\n'\
    \ | sort -n | tr '\\n' ' ')\n  local list2_sorted=$(echo \"$list2\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' ')\n  local list1_uniq=$(echo \"$list1_sorted\" | tr\
    \ ' ' '\\n' | uniq | tr '\\n' ' ')\n  local list2_uniq=$(echo \"$list2_sorted\"\
    \ | tr ' ' '\\n' | uniq | tr '\\n' ' ')\n  local list1_uniq_len=$(echo \"$list1_uniq\"\
    \ | wc -w)\n  local list2_uniq_len=$(echo \"$list2_uniq\" | wc -w)\n  local list1_uniq_idx=1\n\
    \  local list2_uniq_idx=1\n  local list1_uniq_item\n  local list2_uniq_item\n\
    \  local common_list=\"\"\n  while [ $list1_uniq_idx -le $list1_uniq_len ]\n \
    \ do\n    list1_uniq_item=$(echo \"$list1_uniq\" | cut -d ' ' -f $list1_uniq_idx)\n\
    \    while [ $list2_uniq_idx -le $list2_uniq_len ]\n    do\n      list2_uniq_item=$(echo\
    \ \"$list2_uniq\" | cut -d ' ' -f $list2_uniq_idx)\n      if [ \"$list1_uniq_item\"\
    \ -eq \"$list2_uniq_item\" ]\n      then\n        common_list=\"$common_list $list1_uniq_item\"\
    \n        break\n      fi\n      list2_uniq_idx=$((list2_uniq_idx + 1))\n    done\n\
    \    list1_uniq_idx=$((list1_uniq_idx + 1))\n    list2_uniq_idx=", "  local list1=\"\
    $1\"\n  local list2=\"$2\"\n  local list1_sorted=$(echo \"$list1\" | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' ')\n  local list2_sorted=$(echo \"$list2\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' ')\n  local common_elements=$(comm -12 <(echo \"\
    $list1_sorted\") <(echo \"$list2_sorted\"))\n  echo \"$common_elements\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local\
    \ -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n\
    \  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local\
    \ -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n\
    \  local -a y\n  local -a z\n  local -a A\n  local -a B\n  local -a C\n  local\
    \ -a D\n  local -a E\n  local -a F\n  local -a G\n  local -a H\n  local -a I\n\
    \  local -a J\n  local -a K\n  local -a L\n  local -a M\n  local -a N\n  local\
    \ -a O\n  local -a P\n  local -a Q\n  local -a R\n  local -a S\n  local -a T\n\
    \  local -a U\n  local -a V\n  local -a W\n  local -a X\n  local -a Y\n  local\
    \ -a Z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a\
    \ ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n\
    \  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n \
    \ local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local\
    \ -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a\
    \ az\n  local -a aA\n  local -a aB\n  local -a aC\n  local -a aD\n ", "  local\
    \ a=\"$1\"\n  local b=\"$2\"\n  local c=\"$(echo \"$a\" | tr ' ' '\\n' | sort\
    \ -u)\"\n  local d=\"$(echo \"$b\" | tr ' ' '\\n' | sort -u)\"\n  local e=\"$(comm\
    \ -12 <(echo \"$c\") <(echo \"$d\"))\"\n  echo \"$e\" | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'", "    local list1=\"$1\"\n    local list2=\"$2\"\n \
    \   local list1_sorted=$(echo \"$list1\" | tr ' ' '\\n' | sort -n | tr '\\n' '\
    \ ')\n    local list2_sorted=$(echo \"$list2\" | tr ' ' '\\n' | sort -n | tr '\\\
    n' ' ')\n    echo \"$list1_sorted\" | tr ' ' '\\n' | uniq | while read -r item;\
    \ do\n        if [[ \"$list2_sorted\" =~ \" $item \" ]]; then\n            echo\
    \ \"\\\"$item\\\"\"\n        fi\n    done", "    local list1=\"$1\"\n    local\
    \ list2=\"$2\"\n    local list1_sorted=$(echo \"$list1\" | tr ' ' '\\n' | sort\
    \ -n)\n    local list2_sorted=$(echo \"$list2\" | tr ' ' '\\n' | sort -n)\n  \
    \  echo \"$list1_sorted\" | uniq -d | while read -r line; do\n        echo \"\
    $list2_sorted\" | grep -q \"$line\" && echo \"$line\"\n    done | sort -n | tr\
    \ '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'", "    local -a a=($1)\n    local\
    \ -a b=($2)\n    local -a c=()\n    local -a d=()\n    local i\n    local j\n\
    \    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n\
    \            if [[ \"${a[$i]}\" == \"${b[$j]}\" ]]; then\n                c+=(\"\
    ${a[$i]}\")\n            fi\n        done\n    done\n    for ((i=0; i<${#c[@]};\
    \ i++)); do\n        for ((j=0; j<${#d[@]}; j++)); do\n            if [[ \"${c[$i]}\"\
    \ == \"${d[$j]}\" ]]; then\n                unset c[$i]\n            fi\n    \
    \    done\n        d+=(\"${c[$i]}\")\n    done\n    echo \"${d[@]}\"", "  local\
    \ list1=\"$1\"\n  local list2=\"$2\"\n  local -a list1_array=($list1)\n  local\
    \ -a list2_array=($list2)\n  local -a common_array=()\n  for i in \"${list1_array[@]}\"\
    ; do\n    for j in \"${list2_array[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]];\
    \ then\n        common_array+=(\"$i\")\n      fi\n    done\n  done\n  echo \"\
    ${common_array[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local list1=\"\
    $1\"\n    local list2=\"$2\"\n    local common_list=\"$(comm -12 <(echo \"$list1\"\
    \ | tr ' ' '\\n' | sort -n) <(echo \"$list2\" | tr ' ' '\\n' | sort -n))\"\n \
    \   echo \"$common_list\" | tr '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'", " \
    \   local list1=\"$1\"\n    local list2=\"$2\"\n    local list3=\"$(echo \"$list1\"\
    \ | tr ' ' '\\n' | sort | uniq)\"\n    local list4=\"$(echo \"$list2\" | tr '\
    \ ' '\\n' | sort | uniq)\"\n    local list5=\"$(comm -12 <(echo \"$list3\") <(echo\
    \ \"$list4\"))\"\n    echo \"$list5\"", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -a c=()\n  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a\
    \ g=()\n  local -a h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n \
    \ local -a l=()\n  local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a\
    \ p=()\n  local -a q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n \
    \ local -a u=()\n  local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a\
    \ y=()\n  local -a z=()\n  local -a A=()\n  local -a B=()\n  local -a C=()\n \
    \ local -a D=()\n  local -a E=()\n  local -a F=()\n  local -a G=()\n  local -a\
    \ H=()\n  local -a I=()\n  local -a J=()\n  local -a K=()\n  local -a L=()\n \
    \ local -a M=()\n  local -a N=()\n  local -a O=()\n  local -a P=()\n  local -a\
    \ Q=()\n  local -a R=()\n  local -a S=()\n  local -a T=()\n  local -a U=()\n \
    \ local -a V=()\n  local -a W=()\n  local -a X=()\n  local -a Y=()\n  local -a\
    \ Z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n\
    \  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n  local\
    \ -a ai=()\n  local -a aj=()\n  local -a ak=()", "  local list1=\"$1\"\n  local\
    \ list2=\"$2\"\n  local common=\"$(comm -12 <(echo \"$list1\" | tr ' ' '\\n' |\
    \ sort -n) <(echo \"$list2\" | tr ' ' '\\n' | sort -n))\"\n  echo \"$common\"",
  "  local a=\"$1\"\n  local b=\"$2\"\n  echo \"$a\" | tr ' ' '\\n' | sort | uniq\
    \ | grep -Fx -f <(echo \"$b\" | tr ' ' '\\n' | sort | uniq) | tr '\\n' ' ' | sed\
    \ 's/^ *//;s/ *$//'", "  local a=\"$1\"\n  local b=\"$2\"\n  local -a a_array=($a)\n\
    \  local -a b_array=($b)\n  local -a common_array=()\n  for i in \"${a_array[@]}\"\
    ; do\n    for j in \"${b_array[@]}\"; do\n      if [[ \"$i\" == \"$j\" ]]; then\n\
    \        common_array+=(\"$i\")\n      fi\n    done\n  done\n  echo \"${common_array[@]}\"\
    \ | tr ' ' '\\n' | sort -u | tr '\\n' ' '", "    local -a a=($1)\n    local -a\
    \ b=($2)\n    local -a c=()\n    for i in \"${a[@]}\"; do\n        for j in \"\
    ${b[@]}\"; do\n            if [[ \"$i\" == \"$j\" ]]; then\n                c+=(\"\
    $i\")\n            fi\n        done\n    done\n    echo \"$(echo \"${c[@]}\" |\
    \ tr ' ' '\\n' | sort -u | tr '\\n' ' ')\""]
stop_tokens:
- "\n}"

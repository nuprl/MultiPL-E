language: sh
name: HumanEval_95_check_dict_case
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_len=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_len -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_len=$(echo \"$dict_keys\" | wc -l)\n    local dict_keys_lower=$(echo\
    \ \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo\
    \ \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n    if [[ $dict_keys_len -eq $(echo\
    \ \"$dict_keys_lower\" | wc -l) ]]; then\n        echo \"true\"\n    elif [[ $dict_keys_len\
    \ -eq $(echo \"$dict_keys_upper\" | wc -l) ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local is_lower_case=$(echo \"$dict\" | awk -F, '{print\
    \ tolower($1)}' | diff - <(echo \"$dict\" | awk -F, '{print $1}'))\n    local\
    \ is_upper_case=$(echo \"$dict\" | awk -F, '{print toupper($1)}' | diff - <(echo\
    \ \"$dict\" | awk -F, '{print $1}'))\n    if [ -z \"$is_lower_case\" ]; then\n\
    \        echo \"true\"\n    elif [ -z \"$is_upper_case\" ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=$1\n  local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n  local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \  local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \  local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \  if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n    echo \"true\"\n\
    \  elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" = \"$dict_keys_lower\" ]; then\n        echo \"true\"\
    \n    elif [ \"$dict_keys\" = \"$dict_keys_upper\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n  \
    \      echo \"true\"\n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" = \"$dict_keys_lower\" ]; then\n        echo \"true\"\
    \n    elif [ \"$dict_keys\" = \"$dict_keys_upper\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [ \"$dict_keys\" = \"$dict_keys_lower\" ] || [ \"$dict_keys\"\
    \ = \"$dict_keys_upper\" ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  local dict_lower_keys=$(echo \"$dict_lower\"\
    \ | cut -d, -f1)\n  local dict_upper_keys=$(echo \"$dict_upper\" | cut -d, -f1)\n\
    \  local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n  if [[ \"$dict_keys\" ==\
    \ \"$dict_lower_keys\" ]]; then\n    echo \"true\"\n  elif [[ \"$dict_keys\" ==\
    \ \"$dict_upper_keys\" ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local lower_keys=$(echo \"$dict\" | cut -d, -f1\
    \ | grep -v '[A-Z]')\n    local upper_keys=$(echo \"$dict\" | cut -d, -f1 | grep\
    \ -v '[a-z]')\n    if [ -z \"$lower_keys\" ] && [ -z \"$upper_keys\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n  local dict_values=\"$(echo \"$dict\" | cut\
    \ -d, -f2)\"\n  local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n  local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n  if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n  \
    \  echo \"true\"\n  elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n  if [[ $dict_size -eq 0 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n  local\
    \ dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n  local\
    \ dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n  if [[\
    \ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n    echo \"true\"\n  elif [[\
    \ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  # TODO: Implement this function\n  echo\
    \ \"false\"\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local -r dict=\"$1\"\n    local -r dict_len=$(wc\
    \ -l <<< \"$dict\")\n    if [[ $dict_len -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local -r keys=$(cut -d, -f1 <<< \"$dict\")\n   \
    \ local -r lower_keys=$(tr '[:upper:]' '[:lower:]' <<< \"$keys\")\n    local -r\
    \ upper_keys=$(tr '[:lower:]' '[:upper:]' <<< \"$keys\")\n    if [[ \"$keys\"\
    \ == \"$lower_keys\" ]] || [[ \"$keys\" == \"$upper_keys\" ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d',' -f1)\n    local dict_values=$(echo \"$dict\" | cut -d','\
    \ -f2)\n    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n        echo \"true\"\
    \n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=$1\n  local dict_keys=$(echo\
    \ $dict | tr ',' '\\n' | cut -d '\\n' -f 1)\n  local dict_values=$(echo $dict\
    \ | tr ',' '\\n' | cut -d '\\n' -f 2)\n  local dict_keys_lower=$(echo $dict_keys\
    \ | tr '[:upper:]' '[:lower:]')\n  local dict_keys_upper=$(echo $dict_keys | tr\
    \ '[:lower:]' '[:upper:]')\n  if [[ $dict_keys == $dict_keys_lower ]]; then\n\
    \    echo \"true\"\n  elif [[ $dict_keys == $dict_keys_upper ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"cut: the delimiter must be a single character\nTry ''cut --help'' for
    more information.\ncut: the delimiter must be a single character\nTry ''cut --help''
    for more information.\ncut: the delimiter must be a single character\nTry ''cut
    --help'' for more information.\ncut: the delimiter must be a single character\nTry
    ''cut --help'' for more information.\n"'
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n  if [[ $dict_size -eq 0 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  local key_case=$(echo \"$dict\" | cut -d, -f1 | tr '[:upper:]'\
    \ '[:lower:]' | sort | uniq)\n  if [[ $key_case == $(echo \"$dict\" | cut -d,\
    \ -f1 | sort | uniq) ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    # Write your code here\n    echo \"false\"\
    \n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower_case=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper_case=$(echo \"\
    $dict\" | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower_case\"\
    \ ]] || [[ \"$dict\" == \"$dict_upper_case\" ]]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    if [[ -z \"$1\" ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    local dict=\"$1\"\n    local lower_case_keys=$(echo\
    \ \"$dict\" | cut -d, -f1 | tr '[:upper:]' '[:lower:]')\n    local upper_case_keys=$(echo\
    \ \"$dict\" | cut -d, -f1 | tr '[:lower:]' '[:upper:]')\n    local keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    if [[ \"$lower_case_keys\" == \"$keys\" ]] ||\
    \ [[ \"$upper_case_keys\" == \"$keys\" ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=\n\
    \    local dict_upper=\n    local key=\n    local value=\n    local -a keys=()\n\
    \    local -a values=()\n    local -a keys_lower=()\n    local -a keys_upper=()\n\
    \    local -a values_lower=()\n    local -a values_upper=()\n    local -a keys_lower_upper=()\n\
    \    local -a keys_upper_lower=()\n    local -a values_lower_upper=()\n    local\
    \ -a values_upper_lower=()\n    local -a keys_lower_upper_lower=()\n    local\
    \ -a keys_upper_lower_upper=()\n    local -a values_lower_upper_lower=()\n   \
    \ local -a values_upper_lower_upper=()\n    local -a keys_lower_upper_lower_upper=()\n\
    \    local -a keys_upper_lower_upper_lower=()\n    local -a values_lower_upper_lower_upper=()\n\
    \    local -a values_upper_lower_upper_lower=()\n    local -a keys_lower_upper_lower_upper_lower=()\n\
    \    local -a keys_upper_lower_upper_lower_upper=()\n    local -a values_lower_upper_lower_upper_lower=()\n\
    \    local -a values_upper_lower_upper_lower_upper=()\n    local -a keys_lower_upper_lower_upper_lower_upper=()\n\
    \    local -a values_lower_upper_lower_upper_lower_upper=()\n    local -a keys_lower_upper_lower_upper_lower_upper_lower=()\n\
    \    local -a values_lower_upper_lower_upper_lower_upper_lower=()\n    local -a\
    \ keys_lower_upper_lower_upper_lower_upper_lower_upper=()\n    local -a values_lower_upper_lower_upper_lower_upper_lower_upper=()\n\
    \    local -a keys_lower_upper_lower_upper_lower_upper_lower_upper_lower=()\n\
    \    local -a values_lower_upper_lower_upper_lower_upper_lower_upper_lower=()\n\
    \   \n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local lower_case_keys=0\n\
    \  local upper_case_keys=0\n  local keys_are_all_lower_case=0\n  local keys_are_all_upper_case=0\n\
    \  local keys_are_all_strings=0\n  local keys_are_all_numbers=0\n  local keys_are_mixed=0\n\
    \  local key\n  local value\n  local key_is_string\n  local key_is_number\n  local\
    \ key_is_lower_case\n  local key_is_upper_case\n  local key_is_mixed_case\n  local\
    \ key_is_mixed_type\n  local key_is_mixed_type_and_case\n  local key_is_mixed_type_or_case\n\
    \  local key_is_mixed_type_or_case_or_empty\n  local keys_are_mixed_type_or_case_or_empty\n\
    \  local keys_are_mixed_type_or_case\n  local keys_are_mixed_type_and_case\n \
    \ local keys_are_mixed_type\n  local keys_are_mixed_case\n  local keys_are_mixed_type_and_case_or_empty\n\
    \  local keys_are_mixed_type_or_case_and_empty\n  local keys_are_mixed_type_and_case_and_empty\n\
    \  local keys_are_mixed_type_or_case_or_empty\n  local keys_are_mixed_type_or_case_and_empty\n\
    \  local keys_are_mixed_type_and_case_or_empty\n  local keys_are_mixed_type_and_case_and_empty\n\
    \  local keys_are_mixed_type_or_case_or_empty\n  local keys_are_mixed_type_or_case_and_empty\n\
    \  local keys_are_mixed_type_and_case_or_empty\n  local keys_are_mixed_type_and_case_and_empty\n\
    \  local keys_are_mixed_type_or_case_or_empty\n  local keys_are\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    declare -A dict\n    while read -r line;\
    \ do\n        key=$(echo \"$line\" | cut -d, -f1)\n        value=$(echo \"$line\"\
    \ | cut -d, -f2)\n        dict[$key]=$value\n    done <<< \"$1\"\n    if [[ ${#dict[@]}\
    \ -eq 0 ]]; then\n        echo \"false\"\n        return\n    fi\n    for key\
    \ in \"${!dict[@]}\"; do\n        if [[ $key =~ [A-Z] ]]; then\n            if\
    \ [[ $key =~ [a-z] ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        else\n            if [[ $key =~ [A-Z] ]]; then\n    \
    \            echo \"false\"\n                return\n            fi\n        fi\n\
    \    done\n    echo \"true\"\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"\
    true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n\
    \    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n  \
    \  [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower_case=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n  local dict_upper_case=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n  if [[ \"$dict\" == \"$dict_lower_case\"\
    \ ]] || [[ \"$dict\" == \"$dict_upper_case\" ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys\n\
    \    local dict_values\n    local dict_key\n    local dict_value\n    local dict_key_lower\n\
    \    local dict_key_upper\n    local dict_key_lower_count=0\n    local dict_key_upper_count=0\n\
    \    local dict_key_count=0\n    local dict_value_count=0\n    local dict_key_value_count=0\n\
    \    local dict_key_value_count_lower=0\n    local dict_key_value_count_upper=0\n\
    \    local dict_key_value_count_lower_upper=0\n    local dict_key_value_count_lower_upper_lower=0\n\
    \    local dict_key_value_count_lower_upper_upper=0\n    local dict_key_value_count_lower_upper_lower_upper=0\n\
    \    local dict_key_value_count_lower_upper_lower_upper_lower=0\n    local dict_key_value_count_lower_upper_lower_upper_upper=0\n\
    \    local dict_key_value_count_lower_upper_lower_upper_lower_upper=0\n    local\
    \ dict_key_value_count_lower_upper_lower_upper_lower_upper_lower=0\n    local\
    \ dict_key_value_count_lower_upper_lower_upper_lower_upper_upper=0\n    local\
    \ dict_key_value_count_lower_upper_lower_upper_lower_upper_lower_upper=0\n   \
    \ local dict_key_value_count_lower_upper_lower_upper_lower_upper_lower_upper_lower=0\n\
    \    local dict_key_value_count_lower_upper_lower_upper_lower_upper_lower_upper_upper=0\n\
    \    local dict_key_value_count_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper=0\n\
    \    local dict_key_value_count_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_lower=0\n\
    \    local dict_key_value_count_lower_upper_lower_upper_lower_upper_lower_upper_lower_upper_upper=0\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=$1\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=$1\n  local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n  local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \  local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \  local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \  if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n    echo \"true\"\n\
    \  elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n  local dict_keys_lower=\"$(echo \"$dict_keys\"\
    \ | tr '[:upper:]' '[:lower:]')\"\n  local dict_keys_upper=\"$(echo \"$dict_keys\"\
    \ | tr '[:lower:]' '[:upper:]')\"\n  if [[ \"$dict_keys\" == \"$dict_keys_lower\"\
    \ ]]; then\n    echo \"true\"\n  elif [[ \"$dict_keys\" == \"$dict_keys_upper\"\
    \ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n  local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \  local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \  local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \  if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n    echo \"true\"\n  elif\
    \ [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local -i lower=0 upper=0\n\
    \  while IFS=, read -r key value; do\n    if [[ $key =~ ^[[:lower:]]+$ ]]; then\n\
    \      ((lower++))\n    elif [[ $key =~ ^[[:upper:]]+$ ]]; then\n      ((upper++))\n\
    \    else\n      echo \"false\"\n      return\n    fi\n  done <<< \"$dict\"\n\
    \  if [[ $lower -gt 0 && $upper -gt 0 ]]; then\n    echo \"false\"\n  else\n \
    \   echo \"true\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    if [ $# -ne 1 ]; then\n        echo \"\
    Usage: check_dict_case <dict>\"\n        return 1\n    fi\n    local dict=\"$1\"\
    \n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo\
    \ \"$dict\" | cut -d, -f2)\n    local dict_keys_lower=$(echo \"$dict_keys\" |\
    \ tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo \"$dict_keys\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [ \"$dict_keys\" = \"$dict_keys_lower\"\
    \ ] || [ \"$dict_keys\" = \"$dict_keys_upper\" ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n  local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n  if [ \"$dict\" = \"$dict_lower\"\
    \ ] || [ \"$dict\" = \"$dict_upper\" ]; then\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local all_lower=true\n\
    \  local all_upper=true\n  local key\n  local value\n  while IFS=, read -r key\
    \ value; do\n    if [[ \"$key\" =~ [A-Z] ]]; then\n      all_lower=false\n   \
    \ fi\n    if [[ \"$key\" =~ [a-z] ]]; then\n      all_upper=false\n    fi\n  done\
    \ <<< \"$dict\"\n  if [[ \"$all_lower\" == true || \"$all_upper\" == true ]];\
    \ then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" = \"$dict_keys_lower\" ]; then\n        echo \"true\"\
    \n    elif [ \"$dict_keys\" = \"$dict_keys_upper\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local is_lower=0\n\
    \    local is_upper=0\n    local key\n    local value\n    local IFS=','\n   \
    \ while read -r key value; do\n        if [[ $key =~ ^[[:lower:]]+$ ]]; then\n\
    \            is_lower=1\n        elif [[ $key =~ ^[[:upper:]]+$ ]]; then\n   \
    \         is_upper=1\n        else\n            echo \"false\"\n            return\n\
    \        fi\n    done <<< \"$dict\"\n    if [[ $is_lower -eq 1 && $is_upper -eq\
    \ 1 ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    # Write your code here\n    echo \"true\"\
    \n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys=\"\
    $(echo \"$dict\" | cut -d',' -f1)\"\n  local dict_values=\"$(echo \"$dict\" |\
    \ cut -d',' -f2)\"\n  local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n  local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n  if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n    echo\
    \ \"true\"\n  elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=$1\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [ \"$dict\" = \"$dict_lower\" ]; then\n\
    \        echo \"true\"\n    elif [ \"$dict\" = \"$dict_upper\" ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=$1\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [ \"$dict\" == \"$dict_lower\"\
    \ ] || [ \"$dict\" == \"$dict_upper\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower_case=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper_case=$(echo \"\
    $dict\" | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower_case\"\
    \ ]] || [[ \"$dict\" == \"$dict_upper_case\" ]]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys\n \
    \ local dict_values\n  local dict_key\n  local dict_value\n  local dict_key_type\n\
    \  local dict_key_type_prev\n  local dict_key_type_prev_is_set\n  local dict_key_type_prev_is_set=false\n\
    \  local dict_key_type_prev_is_upper\n  local dict_key_type_prev_is_lower\n  local\
    \ dict_key_type_prev_is_upper=false\n  local dict_key_type_prev_is_lower=false\n\
    \  local dict_key_type_is_upper\n  local dict_key_type_is_lower\n  local dict_key_type_is_upper=false\n\
    \  local dict_key_type_is_lower=false\n  local dict_key_type_is_set\n  local dict_key_type_is_set=false\n\
    \  local dict_key_type_is_mixed\n  local dict_key_type_is_mixed=false\n  local\
    \ dict_key_type_is_mixed_prev\n  local dict_key_type_is_mixed_prev=false\n  local\
    \ dict_key_type_is_mixed_prev_is_set\n  local dict_key_type_is_mixed_prev_is_set=false\n\
    \  local dict_key_type_is_mixed_prev_is_upper\n  local dict_key_type_is_mixed_prev_is_upper=false\n\
    \  local dict_key_type_is_mixed_prev_is_lower\n  local dict_key_type_is_mixed_prev_is_lower=false\n\
    \  local dict_key_type_is_mixed_is_upper\n  local dict_key_type_is_mixed_is_lower\n\
    \  local dict_key_type_is_mixed_is_upper=false\n  local dict_key_type_is_mixed_is_lower=false\n\
    \  local dict_key_type_is_mixed_is_set\n  local dict_key_type_is_mixed_is_set=false\n\
    \  local dict_key\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n  local dict_values=\"$(echo \"$dict\" | cut\
    \ -d, -f2)\"\n  local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n  local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n  if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n  \
    \  echo \"true\"\n  elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n  \
    \      echo \"true\"\n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_keys_lower=$(echo \"$dict_keys\" |\
    \ tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo \"$dict_keys\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\"\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys\n \
    \ dict_keys=$(echo \"$dict\" | cut -d, -f1)\n  local dict_values\n  dict_values=$(echo\
    \ \"$dict\" | cut -d, -f2)\n  local dict_keys_lower\n  dict_keys_lower=$(echo\
    \ \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n  local dict_keys_upper\n  dict_keys_upper=$(echo\
    \ \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict_keys\" == \"$dict_keys_lower\"\
    \ ]]; then\n    echo \"true\"\n  elif [[ \"$dict_keys\" == \"$dict_keys_upper\"\
    \ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n  local lower_keys=\"$(echo \"$dict_keys\"\
    \ | tr '[:upper:]' '[:lower:]')\"\n  local upper_keys=\"$(echo \"$dict_keys\"\
    \ | tr '[:lower:]' '[:upper:]')\"\n  if [[ \"$dict_keys\" == \"$lower_keys\" ]]\
    \ || [[ \"$dict_keys\" == \"$upper_keys\" ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=`echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]'`\n    local dict_upper=`echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]'`\n    if [ \"$dict\" == \"$dict_lower\" ]; then\n\
    \        echo \"true\"\n    elif [ \"$dict\" == \"$dict_upper\" ]; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local lower_case_keys=0\n\
    \    local upper_case_keys=0\n    local mixed_case_keys=0\n    local empty_dict=0\n\
    \    local key\n    local value\n    while IFS=, read -r key value; do\n     \
    \   if [[ -z \"$key\" ]]; then\n            empty_dict=1\n            break\n\
    \        fi\n        if [[ \"$key\" =~ ^[a-z]+$ ]]; then\n            lower_case_keys=1\n\
    \        elif [[ \"$key\" =~ ^[A-Z]+$ ]]; then\n            upper_case_keys=1\n\
    \        else\n            mixed_case_keys=1\n        fi\n    done <<< \"$dict\"\
    \n    if [[ $empty_dict -eq 1 ]]; then\n        echo \"false\"\n    elif [[ $lower_case_keys\
    \ -eq 1 && $upper_case_keys -eq 0 && $mixed_case_keys -eq 0 ]]; then\n       \
    \ echo \"true\"\n    elif [[ $lower_case_keys -eq 0 && $upper_case_keys -eq 1\
    \ && $mixed_case_keys -eq 0 ]]; then\n        echo \"true\"\n    else\n      \
    \  echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n  \
    \      echo \"true\"\n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n  local dict_values=\"$(echo \"$dict\" | cut\
    \ -d, -f2)\"\n  local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n  local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n  if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n  \
    \  echo \"true\"\n  elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d ',' -f\
    \ 1)\n    local dict_keys_size=$(echo \"$dict_keys\" | wc -l)\n    local dict_keys_lower=$(echo\
    \ \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo\
    \ \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict_keys\" == \"\
    $dict_keys_lower\" ]]; then\n        echo \"true\"\n    elif [[ \"$dict_keys\"\
    \ == \"$dict_keys_upper\" ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [ \"$dict\" = \"$dict_lower\" ]; then\n\
    \        echo \"true\"\n    elif [ \"$dict\" = \"$dict_upper\" ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n        echo \"true\"\
    \n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n  local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n  local dict_lower_keys=\"$(echo\
    \ \"$dict_lower\" | cut -d ',' -f 1)\"\n  local dict_upper_keys=\"$(echo \"$dict_upper\"\
    \ | cut -d ',' -f 1)\"\n  local dict_lower_keys_num=\"$(echo \"$dict_lower_keys\"\
    \ | wc -l)\"\n  local dict_upper_keys_num=\"$(echo \"$dict_upper_keys\" | wc -l)\"\
    \n  local dict_num=\"$(echo \"$dict\" | wc -l)\"\n  if [ \"$dict_num\" -eq 0 ];\
    \ then\n    echo \"false\"\n  elif [ \"$dict_lower_keys_num\" -eq \"$dict_num\"\
    \ ]; then\n    echo \"true\"\n  elif [ \"$dict_upper_keys_num\" -eq \"$dict_num\"\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_size=\"\
    $(echo \"$dict\" | wc -l)\"\n  if [ \"$dict_size\" -eq 0 ]; then\n    echo \"\
    false\"\n    return\n  fi\n  local dict_keys=\"$(echo \"$dict\" | cut -d, -f1)\"\
    \n  local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\"\
    \n  local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\"\
    \n  if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n    echo \"true\"\n \
    \ elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n    echo \"true\"\n \
    \ else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower_case=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper_case=$(echo \"\
    $dict\" | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower_case\"\
    \ ]] || [[ \"$dict\" == \"$dict_upper_case\" ]]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local lower=0\n\
    \    local upper=0\n    local other=0\n    local key\n    while IFS=, read -r\
    \ key _; do\n        if [[ \"$key\" =~ ^[a-z]+$ ]]; then\n            lower=$((lower\
    \ + 1))\n        elif [[ \"$key\" =~ ^[A-Z]+$ ]]; then\n            upper=$((upper\
    \ + 1))\n        else\n            other=$((other + 1))\n        fi\n    done\
    \ < <(echo \"$dict\" | tr '\\n' ',')\n    if [[ $lower -gt 0 && $upper -gt 0 ]]\
    \ || [[ $other -gt 0 ]]; then\n        echo \"false\"\n    else\n        echo\
    \ \"true\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local upper_case_keys=false\n\
    \    local lower_case_keys=false\n    local key\n    local value\n    local key_regex='^[a-z]+$'\n\
    \    local key_regex_upper='^[A-Z]+$'\n    while IFS=',' read -r key value; do\n\
    \        if [[ $key =~ $key_regex ]]; then\n            lower_case_keys=true\n\
    \        elif [[ $key =~ $key_regex_upper ]]; then\n            upper_case_keys=true\n\
    \        else\n            echo \"false\"\n            return\n        fi\n  \
    \  done <<< \"$dict\"\n    if [[ $lower_case_keys == true && $upper_case_keys\
    \ == true ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n\
    \    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local is_upper=0\n\
    \    local is_lower=0\n    local is_mixed=0\n    local key\n    local value\n\
    \    local IFS=','\n    while read -r key value; do\n        if [[ $key =~ ^[A-Z]+$\
    \ ]]; then\n            is_upper=1\n        elif [[ $key =~ ^[a-z]+$ ]]; then\n\
    \            is_lower=1\n        else\n            is_mixed=1\n        fi\n  \
    \  done <<< \"$dict\"\n    if [[ $is_upper -eq 1 && $is_lower -eq 0 && $is_mixed\
    \ -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $is_upper -eq 0 && $is_lower\
    \ -eq 1 && $is_mixed -eq 0 ]]; then\n        echo \"true\"\n    else\n       \
    \ echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local lower=0\n\
    \    local upper=0\n    local mixed=0\n    local other=0\n    local key\n    local\
    \ value\n    while IFS=, read -r key value; do\n        if [[ \"$key\" =~ ^[a-z]+$\
    \ ]]; then\n            lower=$((lower + 1))\n        elif [[ \"$key\" =~ ^[A-Z]+$\
    \ ]]; then\n            upper=$((upper + 1))\n        elif [[ \"$key\" =~ ^[a-zA-Z]+$\
    \ ]]; then\n            mixed=$((mixed + 1))\n        else\n            other=$((other\
    \ + 1))\n        fi\n    done <<< \"$dict\"\n    if [[ $lower -gt 0 && $upper\
    \ -gt 0 ]]; then\n        echo \"false\"\n    elif [[ $lower -gt 0 && $mixed -gt\
    \ 0 ]]; then\n        echo \"false\"\n    elif [[ $lower -gt 0 && $other -gt 0\
    \ ]]; then\n        echo \"false\"\n    elif [[ $upper -gt 0 && $mixed -gt 0 ]];\
    \ then\n        echo \"false\"\n    elif [[ $upper -gt 0 && $other -gt 0 ]]; then\n\
    \        echo \"false\"\n    elif [[ $mixed -gt 0 && $other -gt 0 ]]; then\n \
    \       echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n        echo \"true\"\
    \n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local -a keys\n   \
    \ local -a values\n    local -a lower_keys\n    local -a upper_keys\n    local\
    \ -a lower_values\n    local -a upper_values\n    local -a lower_keys_values\n\
    \    local -a upper_keys_values\n    local -a lower_keys_upper_values\n    local\
    \ -a upper_keys_lower_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_upper_values\n    local\
    \ -a upper_keys_lower_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower_values\n    local\
    \ -a upper_keys_upper_values\n    local -a lower_keys_lower\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_len=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_len\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" = \"$dict_keys_lower\" ] || [ \"$dict_keys\" = \"$dict_keys_upper\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"\
    p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\\
    n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\\
    nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\")\
    \ = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys\n\
    \    local dict_values\n    local dict_key\n    local dict_value\n    local lower_case_keys\n\
    \    local upper_case_keys\n    local lower_case_values\n    local upper_case_values\n\
    \    local lower_case_key\n    local upper_case_key\n    local lower_case_value\n\
    \    local upper_case_value\n    local lower_case_key_count\n    local upper_case_key_count\n\
    \    local lower_case_value_count\n    local upper_case_value_count\n    local\
    \ lower_case_key_count_max\n    local upper_case_key_count_max\n    local lower_case_value_count_max\n\
    \    local upper_case_value_count_max\n    local lower_case_key_count_min\n  \
    \  local upper_case_key_count_min\n    local lower_case_value_count_min\n    local\
    \ upper_case_value_count_min\n    local lower_case_key_count_avg\n    local upper_case_key_count_avg\n\
    \    local lower_case_value_count_avg\n    local upper_case_value_count_avg\n\
    \    local lower_case_key_count_med\n    local upper_case_key_count_med\n    local\
    \ lower_case_value_count_med\n    local upper_case_value_count_med\n    local\
    \ lower_case_key_count_std\n    local upper_case_key_count_std\n    local lower_case_value_count_std\n\
    \    local upper_case_value_count_std\n    local lower_case_key_count_var\n  \
    \  local upper_case_key_count_var\n    local lower_case_value_count_var\n    local\
    \ upper_case_value_count_var\n    local lower_case_key_count_skew\n    local upper_case_key_count_skew\n\
    \    local lower_case_value_count_skew\n    local upper_case_value_count_skew\n\
    \    local lower_case_key_count_kurt\n    local upper_case_key_count_kurt\n  \
    \ \n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local lower_case=0\n\
    \    local upper_case=0\n    local mixed_case=0\n    local key\n    local value\n\
    \    while IFS=, read -r key value; do\n        if [[ \"$key\" =~ ^[a-z]+$ ]];\
    \ then\n            lower_case=1\n        elif [[ \"$key\" =~ ^[A-Z]+$ ]]; then\n\
    \            upper_case=1\n        else\n            mixed_case=1\n        fi\n\
    \    done <<< \"$dict\"\n    if [[ \"$lower_case\" -eq 1 && \"$upper_case\" -eq\
    \ 0 && \"$mixed_case\" -eq 0 ]]; then\n        echo \"true\"\n    elif [[ \"$lower_case\"\
    \ -eq 0 && \"$upper_case\" -eq 1 && \"$mixed_case\" -eq 0 ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    if [[ -z \"$1\" ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    local dict=\"$1\"\n    local lower_keys=0\n\
    \    local upper_keys=0\n    local keys=$(echo \"$dict\" | cut -d, -f1)\n    for\
    \ key in $keys; do\n        if [[ $key =~ ^[a-z]+$ ]]; then\n            lower_keys=$((lower_keys\
    \ + 1))\n        elif [[ $key =~ ^[A-Z]+$ ]]; then\n            upper_keys=$((upper_keys\
    \ + 1))\n        fi\n    done\n    if [[ $lower_keys -eq 0 && $upper_keys -eq\
    \ 0 ]]; then\n        echo \"false\"\n    elif [[ $lower_keys -gt 0 && $upper_keys\
    \ -gt 0 ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n  \
    \  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d ',' -f 1)\"\n    local dict_values=\"$(echo \"$dict\"\
    \ | cut -d ',' -f 2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr\
    \ '[:upper:]' '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\"\
    \ | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\"\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_keys_lower=$(echo \"$dict_keys\" |\
    \ tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo \"$dict_keys\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\"\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [ \"$dict\" == \"$dict_lower\"\
    \ ] || [ \"$dict\" == \"$dict_upper\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n  local dict_values=\"$(echo \"$dict\" | cut\
    \ -d, -f2)\"\n  local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n  local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n  if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n    echo\
    \ \"true\"\n  elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys\n\
    \    local dict_values\n    local dict_key\n    local dict_value\n    local dict_key_lower\n\
    \    local dict_key_upper\n    local dict_key_lower_count=0\n    local dict_key_upper_count=0\n\
    \    local dict_key_other_count=0\n    local dict_key_count=0\n    local dict_value_count=0\n\
    \    local dict_key_value_count=0\n    local dict_key_value_count_lower=0\n  \
    \  local dict_key_value_count_upper=0\n    local dict_key_value_count_other=0\n\
    \    local dict_key_value_count_lower_count=0\n    local dict_key_value_count_upper_count=0\n\
    \    local dict_key_value_count_other_count=0\n    local dict_key_value_count_lower_count_lower=0\n\
    \    local dict_key_value_count_lower_count_upper=0\n    local dict_key_value_count_lower_count_other=0\n\
    \    local dict_key_value_count_upper_count_lower=0\n    local dict_key_value_count_upper_count_upper=0\n\
    \    local dict_key_value_count_upper_count_other=0\n    local dict_key_value_count_other_count_lower=0\n\
    \    local dict_key_value_count_other_count_upper=0\n    local dict_key_value_count_other_count_other=0\n\
    \    local dict_key_value_count_lower_count_lower_count=0\n    local dict_key_value_count_lower_count_upper_count=0\n\
    \    local dict_key_value_count_lower_count_other_count=0\n    local dict_key_value_count_upper_count_lower_count=0\n\
    \    local dict_key_value_count_upper_count_upper_count=0\n    local dict_key_value_count_upper_count_other_count=0\n\
    \    local dict_key_value_count_other_count_lower_count=0\n    local dict\n}\n\
    \ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"\
    p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\\
    n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\\
    nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\")\
    \ = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys\n\
    \    local dict_values\n    local dict_key\n    local dict_value\n    local dict_key_lower\n\
    \    local dict_key_upper\n    local dict_key_lower_count=0\n    local dict_key_upper_count=0\n\
    \    local dict_key_mixed_count=0\n    local dict_key_count=0\n    local dict_value_count=0\n\
    \    local dict_key_value_count=0\n    local dict_key_value_count_expected\n \
    \   local dict_key_value_count_expected_lower\n    local dict_key_value_count_expected_upper\n\
    \    local dict_key_value_count_expected_mixed\n    local dict_key_value_count_expected_lower_count=0\n\
    \    local dict_key_value_count_expected_upper_count=0\n    local dict_key_value_count_expected_mixed_count=0\n\
    \    local dict_key_value_count_expected_count=0\n    local dict_key_value_count_expected_count_lower=0\n\
    \    local dict_key_value_count_expected_count_upper=0\n    local dict_key_value_count_expected_count_mixed=0\n\
    \    local dict_key_value_count_expected_count_lower_count=0\n    local dict_key_value_count_expected_count_upper_count=0\n\
    \    local dict_key_value_count_expected_count_mixed_count=0\n    local dict_key_value_count_expected_count_count=0\n\
    \    local dict_key_value_count_expected_count_count_lower=0\n    local dict_key_value_count_expected_count_count_upper=0\n\
    \    local dict_key_value_count_expected_count_count_mixed=0\n    local dict_key_value_count_expected_count_count_lower_count=0\n\
    \    local dict_key_value_count_expected_count_count_upper_count=0\n    local\
    \ dict_key_value_count_expected_count_count_mixed_count=0\n    local dict_key_\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_keys=$(echo\
    \ $dict | tr ',' '\\n' | cut -d' ' -f1)\n    local dict_values=$(echo $dict |\
    \ tr ',' '\\n' | cut -d' ' -f2)\n    local dict_keys_lower=$(echo $dict_keys |\
    \ tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo $dict_keys | tr\
    \ '[:lower:]' '[:upper:]')\n    if [[ $dict_keys == $dict_keys_lower ]]; then\n\
    \        echo \"true\"\n    elif [[ $dict_keys == $dict_keys_upper ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local lower_count=$(echo \"$dict\" | grep -c '^[a-z]')\n\
    \    local upper_count=$(echo \"$dict\" | grep -c '^[A-Z]')\n    if [ \"$lower_count\"\
    \ -eq \"$dict_size\" ] || [ \"$upper_count\" -eq \"$dict_size\" ]; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ $dict_size -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_size=$(echo \"$dict_keys\" | wc -l)\n    local dict_keys_lower=$(echo\
    \ \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo\
    \ \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$dict_keys\" = \"$dict_keys_lower\"\
    \ ]; then\n        echo \"true\"\n    elif [ \"$dict_keys\" = \"$dict_keys_upper\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"\
    p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\\
    n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\\
    nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\")\
    \ = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local first_key=$(echo \"$dict\" | head -n 1 | cut\
    \ -d, -f1)\n    if [[ \"$first_key\" =~ [a-z] ]]; then\n        echo \"$dict\"\
    \ | awk -F, '{if ($1 ~ /[A-Z]/) {print \"false\"; exit}}; END {print \"true\"\
    }'\n    else\n        echo \"$dict\" | awk -F, '{if ($1 ~ /[a-z]/) {print \"false\"\
    ; exit}}; END {print \"true\"}'\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [ \"$dict\" == \"$dict_lower\"\
    \ ] || [ \"$dict\" == \"$dict_upper\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [ \"$dict\" == \"$dict_lower\" ] || [\
    \ \"$dict\" == \"$dict_upper\" ]; then\n        echo \"true\"\n    else\n    \
    \    echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"\
    true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n\
    \    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n  \
    \  [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local lower_keys=$(echo \"$dict\" | awk -F, '{print\
    \ tolower($1)}')\n    local upper_keys=$(echo \"$dict\" | awk -F, '{print toupper($1)}')\n\
    \    if [[ \"$dict\" == \"$lower_keys\" ]]; then\n        echo \"true\"\n    elif\
    \ [[ \"$dict\" == \"$upper_keys\" ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys\n\
    \    local dict_values\n    local dict_key\n    local dict_value\n    local dict_key_lower\n\
    \    local dict_key_upper\n    local dict_key_lower_count=0\n    local dict_key_upper_count=0\n\
    \    local dict_key_mixed_count=0\n    local dict_key_count=0\n    local dict_value_count=0\n\
    \    local dict_key_value_count=0\n    local dict_key_value_count_expected=0\n\
    \    local dict_key_value_count_expected_lower=0\n    local dict_key_value_count_expected_upper=0\n\
    \    local dict_key_value_count_expected_mixed=0\n    local dict_key_value_count_expected_mixed_lower=0\n\
    \    local dict_key_value_count_expected_mixed_upper=0\n    local dict_key_value_count_expected_mixed_lower_upper=0\n\
    \    local dict_key_value_count_expected_mixed_upper_lower=0\n    local dict_key_value_count_expected_mixed_lower_upper_lower=0\n\
    \    local dict_key_value_count_expected_mixed_upper_lower_upper=0\n    local\
    \ dict_key_value_count_expected_mixed_lower_upper_lower_upper=0\n    local dict_key_value_count_expected_mixed_upper_lower_upper_lower=0\n\
    \    local dict_key_value_count_expected_mixed_lower_upper_lower_upper_lower=0\n\
    \    local dict_key_value_count_expected_mixed_upper_lower_upper_lower_upper=0\n\
    \    local dict_key_value_count_expected_mixed_lower_upper_lower_upper_lower_upper=0\n\
    \    local dict_key_value_count_expected_mixed_upper_lower_upper_lower_upper_lower=0\n\
    \    local dict_key_value_count_expected_mixed_lower_upper_lower_upper_lower_upper_lower=0\n\
    \    local dict_key_value_count_expected_\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_len=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_len -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local lower_case_keys=$(echo \"$dict\" | awk -F,\
    \ '{print tolower($1)}')\n    local upper_case_keys=$(echo \"$dict\" | awk -F,\
    \ '{print toupper($1)}')\n    if [[ \"$dict\" == \"$lower_case_keys\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$upper_case_keys\" ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n  \
    \      echo \"true\"\n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=$1\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=$1\n  local dict_keys=$(echo\
    \ \"$dict\" | awk -F, '{print $1}')\n  local dict_values=$(echo \"$dict\" | awk\
    \ -F, '{print $2}')\n  local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\n  local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\n  if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n    echo\
    \ \"true\"\n  elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [ \"$dict\" == \"$dict_lower\"\
    \ ] || [ \"$dict\" == \"$dict_upper\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ $dict_size -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d',' -f1)\n\
    \    local dict_keys_size=$(echo \"$dict_keys\" | wc -l)\n    local dict_keys_lower=$(echo\
    \ \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo\
    \ \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$dict_keys\" == \"\
    $dict_keys_lower\" ]; then\n        echo \"true\"\n    elif [ \"$dict_keys\" ==\
    \ \"$dict_keys_upper\" ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local -i upper=0\n\
    \  local -i lower=0\n  local -i i=0\n  local -i len\n  local -i count=0\n  local\
    \ key\n  local -a keys\n  local -a values\n  local -a dict_array\n  IFS=',' read\
    \ -r -a dict_array <<< \"$dict\"\n  len=${#dict_array[@]}\n  for ((i=0; i<len;\
    \ i+=2)); do\n    keys[count]=${dict_array[i]}\n    values[count]=${dict_array[i+1]}\n\
    \    count+=1\n  done\n  len=${#keys[@]}\n  if [[ $len -eq 0 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len; i++)); do\n    key=${keys[i]}\n\
    \    if [[ $key =~ ^[A-Z]+$ ]]; then\n      upper+=1\n    elif [[ $key =~ ^[a-z]+$\
    \ ]]; then\n      lower+=1\n    else\n      echo \"false\"\n      return\n   \
    \ fi\n  done\n  if [[ $upper -eq $len || $lower -eq $len ]]; then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n        echo \"true\"\
    \n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n  local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n  if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [ \"$dict\" = \"$dict_lower\"\
    \ ] || [ \"$dict\" = \"$dict_upper\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    if [[ -z \"$1\" ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    local dict=\"$1\"\n    local lower_case_keys=0\n\
    \    local upper_case_keys=0\n    while IFS=, read -r key value; do\n        if\
    \ [[ \"$key\" =~ ^[[:lower:]]+$ ]]; then\n            lower_case_keys=$((lower_case_keys\
    \ + 1))\n        elif [[ \"$key\" =~ ^[[:upper:]]+$ ]]; then\n            upper_case_keys=$((upper_case_keys\
    \ + 1))\n        else\n            echo \"false\"\n            return\n      \
    \  fi\n    done <<< \"$dict\"\n    if [[ $lower_case_keys -eq 0 && $upper_case_keys\
    \ -eq 0 ]]; then\n        echo \"false\"\n    elif [[ $lower_case_keys -gt 0 &&\
    \ $upper_case_keys -gt 0 ]]; then\n        echo \"false\"\n    else\n        echo\
    \ \"true\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    # Write your code here\n    echo \"true\"\
    \n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local key\n  local\
    \ value\n  local lower_case=0\n  local upper_case=0\n  local mixed_case=0\n  local\
    \ empty=0\n  local key_count=0\n  local IFS=','\n  while read -r key value; do\n\
    \    if [[ -z \"$key\" ]]; then\n      empty=1\n      break\n    fi\n    if [[\
    \ \"$key\" =~ ^[a-z]+$ ]]; then\n      lower_case=1\n    elif [[ \"$key\" =~ ^[A-Z]+$\
    \ ]]; then\n      upper_case=1\n    else\n      mixed_case=1\n      break\n  \
    \  fi\n    key_count=$((key_count + 1))\n  done <<< \"$dict\"\n  if [[ $empty\
    \ -eq 1 ]]; then\n    echo \"false\"\n  elif [[ $mixed_case -eq 1 ]]; then\n \
    \   echo \"false\"\n  elif [[ $lower_case -eq 1 && $upper_case -eq 1 ]]; then\n\
    \    echo \"false\"\n  elif [[ $key_count -eq 0 ]]; then\n    echo \"false\"\n\
    \  else\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n  if [[ $dict_size -eq 0 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n  local\
    \ dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n  local\
    \ dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n  if [[\
    \ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n    echo \"true\"\n  elif [[\
    \ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=$1\n  local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n  local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \  local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \  local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \  if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n    echo \"true\"\n\
    \  elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys\n\
    \    local dict_values\n    local dict_key\n    local dict_value\n    local dict_key_is_upper\n\
    \    local dict_key_is_lower\n    local dict_key_is_digit\n    local dict_key_is_alpha\n\
    \    local dict_key_is_alnum\n    local dict_key_is_space\n    local dict_key_is_punct\n\
    \    local dict_key_is_graph\n    local dict_key_is_print\n    local dict_key_is_cntrl\n\
    \    local dict_key_is_xdigit\n    local dict_key_is_blank\n    local dict_key_is_ascii\n\
    \    local dict_key_is_alnumc\n    local dict_key_is_alpha_lower\n    local dict_key_is_alpha_upper\n\
    \    local dict_key_is_alpha_lower_upper\n    local dict_key_is_alpha_upper_lower\n\
    \    local dict_key_is_alpha_lower_digit\n    local dict_key_is_alpha_upper_digit\n\
    \    local dict_key_is_alpha_lower_upper_digit\n    local dict_key_is_alpha_upper_lower_digit\n\
    \    local dict_key_is_alpha_lower_digit_space\n    local dict_key_is_alpha_upper_digit_space\n\
    \    local dict_key_is_alpha_lower_upper_digit_space\n    local dict_key_is_alpha_upper_lower_digit_space\n\
    \    local dict_key_is_alpha_lower_digit_space_punct\n    local dict_key_is_alpha_upper_digit_space_punct\n\
    \    local dict_key_is_alpha_lower_upper_digit_space_punct\n    local dict_key_is_alpha_upper_lower_digit_space_punct\n\
    \    local dict_key_is_alnum_lower\n    local dict_key_is_alnum_upper\n    local\
    \ dict_key_is_alnum_lower_upper\n    local dict_key_is_alnum_upper_lower\n   \
    \ local dict_key_is_alnum_lower_digit\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys\n \
    \ local dict_values\n  local dict_key\n  local dict_value\n  local dict_key_count\n\
    \  local dict_value_count\n  local dict_key_upper_count\n  local dict_key_lower_count\n\
    \  local dict_key_upper_count\n  local dict_key_lower_count\n  local dict_value_upper_count\n\
    \  local dict_value_lower_count\n  local dict_key_upper_count\n  local dict_key_lower_count\n\
    \  local dict_value_upper_count\n  local dict_value_lower_count\n  local dict_key_upper_count\n\
    \  local dict_key_lower_count\n  local dict_value_upper_count\n  local dict_value_lower_count\n\
    \  local dict_key_upper_count\n  local dict_key_lower_count\n  local dict_value_upper_count\n\
    \  local dict_value_lower_count\n  local dict_key_upper_count\n  local dict_key_lower_count\n\
    \  local dict_value_upper_count\n  local dict_value_lower_count\n  local dict_key_upper_count\n\
    \  local dict_key_lower_count\n  local dict_value_upper_count\n  local dict_value_lower_count\n\
    \  local dict_key_upper_count\n  local dict_key_lower_count\n  local dict_value_upper_count\n\
    \  local dict_value_lower_count\n  local dict_key_upper_count\n  local dict_key_lower_count\n\
    \  local dict_value_upper_count\n  local dict_value_lower_count\n  local dict_key_upper_count\n\
    \  local dict_key_lower_count\n  local dict_value_upper_count\n  local dict_value_lower_count\n\
    \  local dict_key_upper_count\n  local dict_key_lower_count\n  local dict_value_upper_count\n\
    \  local dict_value_lower_count\n  local dict_key_upper_count\n  local dict_key_lower_count\n\
    \  local dict_value_upper_count\n  local dict_value_lower_count\n  local dict\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys\n\
    \    local dict_values\n    local dict_key\n    local dict_value\n    local dict_key_lower\n\
    \    local dict_key_upper\n    local dict_key_lower_count=0\n    local dict_key_upper_count=0\n\
    \    local dict_key_mixed_count=0\n    local dict_key_count=0\n    local dict_value_count=0\n\
    \    local dict_key_value_count=0\n    local dict_key_value_count_lower=0\n  \
    \  local dict_key_value_count_upper=0\n    local dict_key_value_count_mixed=0\n\
    \    local dict_key_value_count_mixed_lower=0\n    local dict_key_value_count_mixed_upper=0\n\
    \    local dict_key_value_count_mixed_mixed=0\n    local dict_key_value_count_mixed_lower_upper=0\n\
    \    local dict_key_value_count_mixed_upper_lower=0\n    local dict_key_value_count_mixed_lower_mixed=0\n\
    \    local dict_key_value_count_mixed_upper_mixed=0\n    local dict_key_value_count_mixed_mixed_lower=0\n\
    \    local dict_key_value_count_mixed_mixed_upper=0\n    local dict_key_value_count_mixed_mixed_mixed=0\n\
    \    local dict_key_value_count_mixed_lower_mixed_upper=0\n    local dict_key_value_count_mixed_upper_mixed_lower=0\n\
    \    local dict_key_value_count_mixed_lower_upper_mixed=0\n    local dict_key_value_count_mixed_upper_lower_mixed=0\n\
    \    local dict_key_value_count_mixed_mixed_lower_upper=0\n    local dict_key_value_count_mixed_mixed_upper_lower=0\n\
    \    local dict_key_value_count_mixed_lower_mixed_upper_mixed=0\n    local dict\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local lower_case_keys=0\n\
    \  local upper_case_keys=0\n  local key\n  local value\n  local line\n  local\
    \ -a lines\n  local -a keys\n  local -a values\n  local -a lower_case_keys\n \
    \ local -a upper_case_keys\n  local -a lower_case_values\n  local -a upper_case_values\n\
    \  local -a lower_case_lines\n  local -a upper_case_lines\n  local -a lower_case_dict\n\
    \  local -a upper_case_dict\n  local -a dict_keys\n  local -a dict_values\n  local\
    \ -a dict_lines\n  local -a dict_lower_case_keys\n  local -a dict_upper_case_keys\n\
    \  local -a dict_lower_case_values\n  local -a dict_upper_case_values\n  local\
    \ -a dict_lower_case_lines\n  local -a dict_upper_case_lines\n  local -a dict_lower_case_dict\n\
    \  local -a dict_upper_case_dict\n  local -a dict_lower_case_dict_keys\n  local\
    \ -a dict_upper_case_dict_keys\n  local -a dict_lower_case_dict_values\n  local\
    \ -a dict_upper_case_dict_values\n  local -a dict_lower_case_dict_lines\n  local\
    \ -a dict_upper_case_dict_lines\n  local -a dict_lower_case_dict_lower_case_keys\n\
    \  local -a dict_upper_case_dict_upper_case_keys\n  local -a dict_lower_case_dict_lower_case_values\n\
    \  local -a dict_upper_case_dict_upper_case_values\n  local -a dict_lower_case_dict_lower_case_lines\n\
    \  local -a dict_upper_case_dict_upper_case_lines\n  local -a dict_lower_case_dict_lower_case_dict\n\
    \  local -a dict_upper_case_dict_upper_case_dict\n  local -a dict_lower_case_dict_lower_case_dict_keys\n\
    \  local -a dict\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n \
    \   [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n   \
    \ [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[\
    \ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate\
    \ \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_len=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_len\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_len=$(echo \"$dict_keys\" | wc -l)\n    local dict_keys_lower=$(echo\
    \ \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo\
    \ \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$dict_keys\" == \"\
    $dict_keys_lower\" ]; then\n        echo \"true\"\n    elif [ \"$dict_keys\" ==\
    \ \"$dict_keys_upper\" ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys\n \
    \ local dict_values\n  local dict_key\n  local dict_value\n  local dict_key_lower\n\
    \  local dict_key_upper\n  local dict_key_lower_count=0\n  local dict_key_upper_count=0\n\
    \  local dict_key_mixed_count=0\n  local dict_key_non_alpha_count=0\n  local dict_key_count=0\n\
    \  local dict_value_count=0\n  local dict_key_value_count=0\n  local dict_key_value_count_expected=0\n\
    \  local dict_key_value_count_actual=0\n  local dict_key_value_count_expected_lower=0\n\
    \  local dict_key_value_count_expected_upper=0\n  local dict_key_value_count_expected_mixed=0\n\
    \  local dict_key_value_count_expected_non_alpha=0\n  local dict_key_value_count_actual_lower=0\n\
    \  local dict_key_value_count_actual_upper=0\n  local dict_key_value_count_actual_mixed=0\n\
    \  local dict_key_value_count_actual_non_alpha=0\n  local dict_key_value_count_expected_lower_lower=0\n\
    \  local dict_key_value_count_expected_lower_upper=0\n  local dict_key_value_count_expected_lower_mixed=0\n\
    \  local dict_key_value_count_expected_lower_non_alpha=0\n  local dict_key_value_count_expected_upper_lower=0\n\
    \  local dict_key_value_count_expected_upper_upper=0\n  local dict_key_value_count_expected_upper_mixed=0\n\
    \  local dict_key_value_count_expected_upper_non_alpha=0\n  local dict_key_value_count_expected_mixed_lower=0\n\
    \  local dict_key_value_count_expected_mixed_upper=0\n  local dict_key_value_count_expected_mixed_mixed=0\n\
    \  local dict_key_value_count_\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n    local dict_values=\"$(echo \"$dict\" |\
    \ cut -d, -f2)\"\n    local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n    local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n  \
    \      echo \"true\"\n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n  if [[ $dict_size -eq 0 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n  local\
    \ dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n  local\
    \ dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n  if [[\
    \ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n    echo \"true\"\n  elif [[\
    \ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local lower_case_keys=$(echo \"$dict\" | cut -d,\
    \ -f1 | tr '[:upper:]' '[:lower:]')\n    local upper_case_keys=$(echo \"$dict\"\
    \ | cut -d, -f1 | tr '[:lower:]' '[:upper:]')\n    local lower_case_keys_size=$(echo\
    \ \"$lower_case_keys\" | wc -l)\n    local upper_case_keys_size=$(echo \"$upper_case_keys\"\
    \ | wc -l)\n    if [[ $lower_case_keys_size -eq $dict_size ]]; then\n        echo\
    \ \"true\"\n    elif [[ $upper_case_keys_size -eq $dict_size ]]; then\n      \
    \  echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=$1\n  local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n  local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \  local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \  local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \  if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n    echo \"true\"\n\
    \  elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  # Fill in the code here\n  echo \"false\"\
    \n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_len=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_len -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_len=$(echo \"$dict_keys\" | wc -l)\n    local dict_keys_lower=$(echo\
    \ \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo\
    \ \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n    if [[ $dict_keys_len -eq $(echo\
    \ \"$dict_keys_lower\" | wc -l) ]]; then\n        echo \"true\"\n    elif [[ $dict_keys_len\
    \ -eq $(echo \"$dict_keys_upper\" | wc -l) ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_keys=\"\
    $(echo \"$dict\" | cut -d, -f1)\"\n  local dict_values=\"$(echo \"$dict\" | cut\
    \ -d, -f2)\"\n  local dict_keys_lower=\"$(echo \"$dict_keys\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n  local dict_keys_upper=\"$(echo \"$dict_keys\" | tr '[:lower:]'\
    \ '[:upper:]')\"\n  if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n  \
    \  echo \"true\"\n  elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n  local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n  if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" = \"$dict_keys_lower\" ] || [ \"$dict_keys\" = \"$dict_keys_upper\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"\
    p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\\
    n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\\
    nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\")\
    \ = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local lower_case_keys=$(echo\
    \ \"$dict\" | awk -F, '{print tolower($1)}')\n    local upper_case_keys=$(echo\
    \ \"$dict\" | awk -F, '{print toupper($1)}')\n    if [[ \"$dict\" == \"$lower_case_keys\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$upper_case_keys\"\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local lower_keys=0\n\
    \  local upper_keys=0\n  local mixed_keys=0\n  local keys_count=0\n  local key\n\
    \  local value\n  while IFS=, read -r key value; do\n    if [[ \"$key\" =~ ^[a-z]+$\
    \ ]]; then\n      ((lower_keys++))\n    elif [[ \"$key\" =~ ^[A-Z]+$ ]]; then\n\
    \      ((upper_keys++))\n    else\n      ((mixed_keys++))\n    fi\n    ((keys_count++))\n\
    \  done <<< \"$dict\"\n  if [[ $keys_count -eq 0 ]]; then\n    echo \"false\"\n\
    \  elif [[ $lower_keys -eq $keys_count ]]; then\n    echo \"true\"\n  elif [[\
    \ $upper_keys -eq $keys_count ]]; then\n    echo \"true\"\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n  local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n  if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=\n\
    \    local dict_upper=\n    local dict_mixed=\n    local dict_num=\n    local\
    \ dict_empty=\n    local dict_lower_count=0\n    local dict_upper_count=0\n  \
    \  local dict_mixed_count=0\n    local dict_num_count=0\n    local dict_empty_count=0\n\
    \    local dict_lower_count_max=0\n    local dict_upper_count_max=0\n    local\
    \ dict_mixed_count_max=0\n    local dict_num_count_max=0\n    local dict_empty_count_max=0\n\
    \    local dict_lower_count_min=0\n    local dict_upper_count_min=0\n    local\
    \ dict_mixed_count_min=0\n    local dict_num_count_min=0\n    local dict_empty_count_min=0\n\
    \    local dict_lower_count_avg=0\n    local dict_upper_count_avg=0\n    local\
    \ dict_mixed_count_avg=0\n    local dict_num_count_avg=0\n    local dict_empty_count_avg=0\n\
    \    local dict_lower_count_sum=0\n    local dict_upper_count_sum=0\n    local\
    \ dict_mixed_count_sum=0\n    local dict_num_count_sum=0\n    local dict_empty_count_sum=0\n\
    \    local dict_lower_count_median=0\n    local dict_upper_count_median=0\n  \
    \  local dict_mixed_count_median=0\n    local dict_num_count_median=0\n    local\
    \ dict_empty_count_median=0\n    local dict_lower_count_mode=0\n    local dict_upper_count_mode=0\n\
    \    local dict_mixed_count_mode=0\n    local dict_num_count_mode=0\n    local\
    \ dict_empty_count_mode=0\n    local dict_lower_count_range=0\n    local dict_upper_count_range=0\n\
    \    local dict_mixed_count_range=0\n    local dict_num\n}\n\ncandidate() {\n\
    \    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\\
    nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\"\
    ) = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") =\
    \ \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n \
    \   [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local lower_case_keys=0\n\
    \    local upper_case_keys=0\n    local mixed_case_keys=0\n    local empty_dict=0\n\
    \    local key\n    local value\n    while IFS=, read -r key value; do\n     \
    \   if [[ -z \"$key\" ]]; then\n            empty_dict=1\n            break\n\
    \        fi\n        if [[ \"$key\" =~ ^[a-z]+$ ]]; then\n            lower_case_keys=1\n\
    \        elif [[ \"$key\" =~ ^[A-Z]+$ ]]; then\n            upper_case_keys=1\n\
    \        else\n            mixed_case_keys=1\n        fi\n    done <<< \"$dict\"\
    \n    if [[ $empty_dict -eq 1 ]]; then\n        echo \"false\"\n    elif [[ $lower_case_keys\
    \ -eq 1 && $upper_case_keys -eq 0 && $mixed_case_keys -eq 0 ]]; then\n       \
    \ echo \"true\"\n    elif [[ $lower_case_keys -eq 0 && $upper_case_keys -eq 1\
    \ && $mixed_case_keys -eq 0 ]]; then\n        echo \"true\"\n    else\n      \
    \  echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_keys=$(echo\
    \ \"$dict\" | cut -d, -f1)\n    local dict_values=$(echo \"$dict\" | cut -d, -f2)\n\
    \    local all_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n   \
    \ local all_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n    if\
    \ [[ \"$dict_keys\" == \"$all_lower\" ]]; then\n        echo \"true\"\n    elif\
    \ [[ \"$dict_keys\" == \"$all_upper\" ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n  local dict=\"$1\"\n  local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n  local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n  if [[ \"$dict\" == \"$dict_lower\"\
    \ ]]; then\n    echo \"true\"\n  elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\\
    nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\"\
    ) = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"\
    false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\"\
    \ ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_len=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_len -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_len=$(echo \"$dict_keys\" | wc -l)\n    local dict_keys_lower=$(echo\
    \ \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo\
    \ \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict_keys\" == \"\
    $dict_keys_lower\" ]]; then\n        echo \"true\"\n    elif [[ \"$dict_keys\"\
    \ == \"$dict_keys_upper\" ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" = \"$dict_keys_lower\" ]; then\n        echo \"true\"\
    \n    elif [ \"$dict_keys\" = \"$dict_keys_upper\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_lower=$(echo \"$dict\" | tr '[:upper:]'\
    \ '[:lower:]')\n    local dict_upper=$(echo \"$dict\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n        echo \"true\"\n    elif\
    \ [[ \"$dict\" == \"$dict_upper\" ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_line\n\
    \    local dict_key\n    local dict_value\n    local dict_key_lower\n    local\
    \ dict_key_upper\n    local dict_key_lower_count=0\n    local dict_key_upper_count=0\n\
    \    local dict_key_count=0\n    local dict_key_lower_count_max=0\n    local dict_key_upper_count_max=0\n\
    \    local dict_key_count_max=0\n    local dict_key_lower_count_min=0\n    local\
    \ dict_key_upper_count_min=0\n    local dict_key_count_min=0\n    local dict_key_lower_count_avg=0\n\
    \    local dict_key_upper_count_avg=0\n    local dict_key_count_avg=0\n    local\
    \ dict_key_lower_count_sum=0\n    local dict_key_upper_count_sum=0\n    local\
    \ dict_key_count_sum=0\n    local dict_key_lower_count_median=0\n    local dict_key_upper_count_median=0\n\
    \    local dict_key_count_median=0\n    local dict_key_lower_count_mode=0\n  \
    \  local dict_key_upper_count_mode=0\n    local dict_key_count_mode=0\n    local\
    \ dict_key_lower_count_range=0\n    local dict_key_upper_count_range=0\n    local\
    \ dict_key_count_range=0\n    local dict_key_lower_count_variance=0\n    local\
    \ dict_key_upper_count_variance=0\n    local dict_key_count_variance=0\n    local\
    \ dict_key_lower_count_std_dev=0\n    local dict_key_upper_count_std_dev=0\n \
    \   local dict_key_count_std_dev=0\n    local dict_key_lower_count_skewness=0\n\
    \    local dict_key_upper_count_skewness=0\n    local dict_key_count_skewness=0\n\
    \    local dict_key_lower_count_k\n}\n\ncandidate() {\n    check_dict_case \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_lower=\"\
    $(echo \"$dict\" | tr '[:upper:]' '[:lower:]')\"\n    local dict_upper=\"$(echo\
    \ \"$dict\" | tr '[:lower:]' '[:upper:]')\"\n    if [ \"$dict\" == \"$dict_lower\"\
    \ ] || [ \"$dict\" == \"$dict_upper\" ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") =\
    \ \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local first_key=$(echo \"$dict\" | head -n 1 | cut\
    \ -d ',' -f 1)\n    local first_key_lower=$(echo \"$first_key\" | tr '[:upper:]'\
    \ '[:lower:]')\n    local first_key_upper=$(echo \"$first_key\" | tr '[:lower:]'\
    \ '[:upper:]')\n    if [[ \"$first_key\" == \"$first_key_lower\" ]]; then\n  \
    \      local all_lower=true\n        local all_upper=false\n    elif [[ \"$first_key\"\
    \ == \"$first_key_upper\" ]]; then\n        local all_lower=false\n        local\
    \ all_upper=true\n    else\n        echo \"false\"\n        return\n    fi\n \
    \   while read -r line; do\n        local key=$(echo \"$line\" | cut -d ',' -f\
    \ 1)\n        local key_lower=$(echo \"$key\" | tr '[:upper:]' '[:lower:]')\n\
    \        local key_upper=$(echo \"$key\" | tr '[:lower:]' '[:upper:]')\n     \
    \   if [[ \"$key\" != \"$key_lower\" ]] && [[ \"$key\" != \"$key_upper\" ]]; then\n\
    \            echo \"false\"\n            return\n        elif [[ \"$key\" == \"\
    $key_lower\" ]] && [[ \"$all_upper\" == \"true\" ]]; then\n            echo \"\
    false\"\n            return\n        elif [[ \"$key\" == \"$key_upper\" ]] &&\
    \ [[ \"$all_lower\" == \"true\" ]]; then\n            echo \"false\"\n       \
    \     return\n        fi\n    done <<< \"$dict\"\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local lower_case_keys=$(echo \"$dict\" | cut -d,\
    \ -f1 | tr '[:upper:]' '[:lower:]')\n    local upper_case_keys=$(echo \"$dict\"\
    \ | cut -d, -f1 | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$lower_case_keys\"\
    \ ]]; then\n        echo \"true\"\n    elif [[ \"$dict\" == \"$upper_case_keys\"\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_lower=$(echo\
    \ \"$dict\" | tr '[:upper:]' '[:lower:]')\n    local dict_upper=$(echo \"$dict\"\
    \ | tr '[:lower:]' '[:upper:]')\n    if [[ \"$dict\" == \"$dict_lower\" ]]; then\n\
    \        echo \"true\"\n    elif [[ \"$dict\" == \"$dict_upper\" ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ $dict_size -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d ',' -f\
    \ 1)\n    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n        echo \"true\"\
    \n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local lower_case_keys=true\n\
    \    local upper_case_keys=true\n    local keys_count=0\n    while IFS=, read\
    \ -r key value; do\n        if [[ $key =~ [A-Z] ]]; then\n            lower_case_keys=false\n\
    \        fi\n        if [[ $key =~ [a-z] ]]; then\n            upper_case_keys=false\n\
    \        fi\n        keys_count=$((keys_count + 1))\n    done <<< \"$dict\"\n\
    \    if [[ $keys_count -eq 0 ]]; then\n        echo \"false\"\n    elif [[ $lower_case_keys\
    \ == true ]]; then\n        echo \"true\"\n    elif [[ $upper_case_keys == true\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate\
    \ \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"\
    p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\\
    nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\"\
    ) = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local all_lower_case=$(echo \"$dict\" | awk -F,\
    \ '{print tolower($1)}')\n    local all_upper_case=$(echo \"$dict\" | awk -F,\
    \ '{print toupper($1)}')\n    if [ \"$dict\" = \"$all_lower_case\" ]; then\n \
    \       echo \"true\"\n    elif [ \"$dict\" = \"$all_upper_case\" ]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    check_dict_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"p,pineapple\\nb,banana\") = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\\
    nA,banana\\nB,banana\") = \"false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\\
    na,apple\") = \"false\" ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\"\
    ) = \"false\" ]]\n    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n\
    \    [[ $(candidate \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate\
    \ \"\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=$1\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [[ $dict_size -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [[ \"$dict_keys\" == \"$dict_keys_lower\" ]]; then\n        echo \"true\"\
    \n    elif [[ \"$dict_keys\" == \"$dict_keys_upper\" ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_size=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_size\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d, -f1)\n\
    \    local dict_keys_lower=$(echo \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n\
    \    local dict_keys_upper=$(echo \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n\
    \    if [ \"$dict_keys\" == \"$dict_keys_lower\" ]; then\n        echo \"true\"\
    \n    elif [ \"$dict_keys\" == \"$dict_keys_upper\" ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\"\
    ) = \"true\" ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"\
    false\" ]]\n    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\"\
    \ ]]\n    [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n\
    \    [[ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate\
    \ \"fruit,Orange\\ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"\
    false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998
- exit_code: 1
  program: "#!/bin/bash\n# Given a dictionary, return True if all keys are strings\
    \ in lower \n# case or all keys are strings in upper case, else return False.\n\
    # The function should return False is the given dictionary is empty.\n# Examples:\n\
    # >>> $(check_dict_case \"a,apple\\nb,banana\")\n# \"true\"\n# >>> $(check_dict_case\
    \ \"a,apple\\nA,banana\\nB,banana\")\n# \"false\"\n# >>> $(check_dict_case \"\
    a,apple\\n8,banana\")\n# \"false\"\n# >>> $(check_dict_case \"Name,John\\nAge,36\\\
    nCity,Houston\")\n# \"false\"\n# >>> $(check_dict_case \"STATE,NC\\nZIP,12345\"\
    )\n# \"true\"\ncheck_dict_case() {\n    local dict=\"$1\"\n    local dict_len=$(echo\
    \ \"$dict\" | wc -l)\n    if [ \"$dict_len\" -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n    local dict_keys=$(echo \"$dict\" | cut -d',' -f1)\n\
    \    local dict_keys_len=$(echo \"$dict_keys\" | wc -l)\n    local dict_keys_lower=$(echo\
    \ \"$dict_keys\" | tr '[:upper:]' '[:lower:]')\n    local dict_keys_upper=$(echo\
    \ \"$dict_keys\" | tr '[:lower:]' '[:upper:]')\n    if [ \"$dict_keys\" == \"\
    $dict_keys_lower\" ]; then\n        echo \"true\"\n    elif [ \"$dict_keys\" ==\
    \ \"$dict_keys_upper\" ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    check_dict_case \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"p,pineapple\\nb,banana\") = \"true\"\
    \ ]]\n    [[ $(candidate \"p,pineapple\\nA,banana\\nB,banana\") = \"false\" ]]\n\
    \    [[ $(candidate \"p,pineapple\\n5,banana\\na,apple\") = \"false\" ]]\n   \
    \ [[ $(candidate \"Name,John\\nAge,36\\nCity,Houston\") = \"false\" ]]\n    [[\
    \ $(candidate \"STATE,NC\\nZIP,12345\") = \"true\" ]]\n    [[ $(candidate \"fruit,Orange\\\
    ntaste,Sweet\") = \"true\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660341998

language: sh
name: HumanEval_21_rescale_to_unit
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in ${numbers[@]}; do\n        echo $(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l)\n    done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers\n    local -a rescaled_numbers\n    local -a rescaled_numbers_str\n\
    \    local min\n    local max\n    local range\n    local i\n    local rescaled_number\n\
    \    local rescaled_number_str\n\n    numbers=($(echo \"$@\"))\n    min=$(echo\
    \ \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n    max=$(echo \"${numbers[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    range=$(echo \"$max - $min\" | bc)\n\
    \n    for i in \"${!numbers[@]}\"; do\n        rescaled_number=$(echo \"(${numbers[$i]}\
    \ - $min) / $range\" | bc -l)\n        rescaled_number_str=$(printf \"%f\" \"\
    $rescaled_number\")\n        rescaled_numbers+=($rescaled_number)\n        rescaled_numbers_str+=($rescaled_number_str)\n\
    \    done\n\n    echo \"${rescaled_numbers_str[@]}\"\n}\n\ncandidate() {\n   \
    \ rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0\
    \ 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n\
    \    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n\
    \    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=\"$1\"\n    local min=$(echo \"$numbers\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"$numbers\" | tr ' ' '\\n' |\
    \ sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo\
    \ \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local scaled=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n \
    \   done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2;\
    \ ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r delta=$(echo \"$max - $min\" |\
    \ bc -l)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n     \
    \   local -r rescaled=$(echo \"($number - $min) / $delta\" | bc -l)\n        echo\
    \ \"\\\"$rescaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpwiq46mbx.sh: line 12: local: rescaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ \"${numbers[@]}\"; do\n        echo -n \"\\\"$(echo \"($number - $min) / $range\"\
    \ | bc -l)\\\" \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a arr=(\"$@\")\n    local min=${arr[0]}\n    local max=${arr[0]}\n\
    \    for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a result=()\n    for i in \"${arr[@]}\"\
    ; do\n        result+=(\"$(echo \"($i - $min) / $range\" | bc -l)\")\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n  \
    \  [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0\
    \ 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0\
    \ 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number\
    \ - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    for\
    \ number in \"${numbers[@]}\"; do\n        echo \"$(echo \"$number - $min\" |\
    \ bc) / $range\" | bc -l\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r list=\"$1\"\n    local -r min=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local -r max=$(echo \"$list\" | tr ' ' '\\n' |\
    \ sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" | bc)\n    echo\
    \ \"$list\" | tr ' ' '\\n' | while read num; do\n        local -r scaled=$(echo\
    \ \"($num - $min) / $range\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpl85eh6rv.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=\"$1\"\n    local min=$(echo \"$numbers\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"$numbers\" | tr ' ' '\\n' |\
    \ sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo\
    \ \"$numbers\" | tr ' ' '\\n' | while read number; do\n        echo \"$number\
    \ - $min\" | bc | awk -v range=\"$range\" '{printf \"%.2f\", $1 / range}'\n  \
    \  done | tr '\\n' ' '\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        echo\
    \ \"$number - $min\" | bc | awk -v range=\"$range\" '{printf \"%.2f\", $1 / range}'\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($1)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local range\n    local i\n    for i in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n\
    \        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n          \
    \  max=$i\n        fi\n    done\n    range=$(echo \"$max - $min\" | bc -l)\n \
    \   for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($i - $min) /\
    \ $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled_numbers+=($(echo \"scale=3; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo ${rescaled_numbers[@]}\n}\n\ncandidate() {\n \
    \   rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0\
    \ 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n\
    \    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n\
    \    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ \"${numbers[@]}\"; do\n        echo $(echo \"($number - $min) / $range\" | bc\
    \ -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=$1\n    local min=$(echo \"$numbers\" | tr ' ' '\\n' |\
    \ sort -n | head -n 1)\n    local max=$(echo \"$numbers\" | tr ' ' '\\n' | sort\
    \ -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo \"$numbers\"\
    \ | tr ' ' '\\n' | while read number; do\n        local rescaled=$(echo \"($number\
    \ - $min) / $range\" | bc -l)\n        echo -n \"\\\"$rescaled\\\" \"\n    done\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(bc <<< \"$max - $min\"\
    )\n    local -r scale=$(bc <<< \"1 / $range\")\n    echo \"$numbers\" | tr ' '\
    \ '\\n' | while read number; do\n        local -r scaled=$(bc <<< \"($number -\
    \ $min) * $scale\")\n        echo \"\\\"$scaled\\\"\"\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpt1pe5m4n.sh: line 13: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ \"${numbers[@]}\"; do\n        echo \"$(echo \"($number - $min) / $range\" |\
    \ bc -l)\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a values=($@)\n    local min=${values[0]}\n    local max=${values[0]}\n\
    \    for v in ${values[@]}; do\n        if (( $(echo \"$v < $min\" | bc -l) ));\
    \ then\n            min=$v\n        fi\n        if (( $(echo \"$v > $max\" | bc\
    \ -l) )); then\n            max=$v\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for v in ${values[@]}; do\n        echo $(echo\
    \ \"($v - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled_numbers+=($(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo ${rescaled_numbers[@]}\n}\n\ncandidate() {\n \
    \   rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0\
    \ 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n\
    \    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n\
    \    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ \"${number}\" < \"${min}\" ]]; then\n            min=${number}\n        fi\n\
    \        if [[ \"${number}\" > \"${max}\" ]]; then\n            max=${number}\n\
    \        fi\n    done\n    for number in ${numbers[@]}; do\n        rescaled_numbers+=($(echo\
    \ \"scale=2; (${number} - ${min}) / (${max} - ${min})\" | bc -l))\n    done\n\
    \    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local input=($@)\n    local min=${input[0]}\n    local max=${input[0]}\n\
    \    for i in \"${input[@]}\"; do\n        if [[ $i < $min ]]; then\n        \
    \    min=$i\n        fi\n        if [[ $i > $max ]]; then\n            max=$i\n\
    \        fi\n    done\n    local range=$(echo \"$max - $min\" | bc)\n    for i\
    \ in \"${input[@]}\"; do\n        echo $(echo \"($i - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local rescaled=()\n    for n in ${numbers[@]};\
    \ do\n        rescaled+=($(echo \"($n - $min) / $range\" | bc -l))\n    done\n\
    \    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n \
    \   done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled_numbers=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo \"\
    ($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    if (( $(echo \"\
    $range == 0\" | bc -l) )); then\n        echo ${numbers[@]}\n    else\n      \
    \  for number in ${numbers[@]}; do\n            echo $(echo \"($number - $min)\
    \ / $range\" | bc -l)\n        done\n    fi\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local range\n    local number\n    for number\
    \ in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) ));\
    \ then\n            min=$number\n        fi\n        if (( $(echo \"$number >\
    \ $max\" | bc -l) )); then\n            max=$number\n        fi\n    done\n  \
    \  range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n  local -r numbers=\"$1\"\n  local -r min=$(echo \"$numbers\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n  local -r max=$(echo \"$numbers\" | tr ' ' '\\n' |\
    \ sort -n | tail -n 1)\n  local -r range=$(echo \"$max - $min\" | bc)\n  echo\
    \ \"$numbers\" | tr ' ' '\\n' | while read number; do\n    local -r scaled=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n    echo \"\\\"$scaled\\\"\"\n  done\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp6d4jrab7.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for n in ${numbers[@]}; do\n        echo $(echo\
    \ \"($n - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number < $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2; ($number\
    \ - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2;\
    \ ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $(echo \"$number < $min\" | bc -l) -eq 1 ]]; then\n            min=$number\n\
    \        fi\n        if [[ $(echo \"$number > $max\" | bc -l) -eq 1 ]]; then\n\
    \            max=$number\n        fi\n    done\n    for number in ${numbers[@]};\
    \ do\n        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local number\n    for number in \"${numbers[@]}\"\
    ; do\n        if [[ $number < $min ]]; then\n            min=$number\n       \
    \ fi\n        if [[ $number > $max ]]; then\n            max=$number\n       \
    \ fi\n    done\n    local range=$(echo \"$max - $min\" | bc)\n    for number in\
    \ \"${numbers[@]}\"; do\n        local rescaled_number=$(echo \"($number - $min)\
    \ / $range\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n    done\n\
    \    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number\
    \ - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number < $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    for number in ${numbers[@]}; do\n        rescaled_numbers+=($(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for n in ${numbers[@]}; do\n        echo $(echo\
    \ \"($n - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled_numbers=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers\n    numbers=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n\
    \    local min=${numbers[0]}\n    local max=${numbers[-1]}\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled\n    for number in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r data=\"$1\"\n    local -r min=$(echo \"$data\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local -r max=$(echo \"$data\" | tr ' ' '\\n' |\
    \ sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" | bc)\n    echo\
    \ \"$data\" | tr ' ' '\\n' | awk -v min=\"$min\" -v range=\"$range\" '{print \"\
    \\\"\" ($1 - min) / range \"\\\"\"}' | tr '\\n' ',' | sed 's/,$//'\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n \
    \   done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number < $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    for number in ${numbers[@]}; do\n        rescaled_numbers+=($(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled_numbers[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number\
    \ - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if [[ $number -lt $min ]]; then\n\
    \            min=$number\n        fi\n        if [[ $number -gt $max ]]; then\n\
    \            max=$number\n        fi\n    done\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    for number in ${numbers[@]}; do\n        echo $(echo \"\
    ($number - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmplyb1fuzn.sh: line 11: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n/tmp/tmplyb1fuzn.sh: line 14: [[: 2.0: syntax
    error: invalid arithmetic operator (error token is ".0")\n/tmp/tmplyb1fuzn.sh:
    line 11: [[: 49.9: syntax error: invalid arithmetic operator (error token is ".9")\n/tmp/tmplyb1fuzn.sh:
    line 14: [[: 49.9: syntax error: invalid arithmetic operator (error token is ".9")\nRuntime
    error (func=(main), adr=13): Divide by zero\nRuntime error (func=(main), adr=14):
    Divide by zero\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local list=($@)\n    local min=$(echo \"${list[@]}\" | tr ' ' '\\n' |\
    \ sort -n | head -n 1)\n    local max=$(echo \"${list[@]}\" | tr ' ' '\\n' | sort\
    \ -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    for i in\
    \ \"${list[@]}\"; do\n        echo $(echo \"($i - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for n in ${numbers[@]}; do\n        echo $(echo\
    \ \"($n - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n  local -a numbers=($@)\n  local -a rescaled\n  local min=${numbers[0]}\n\
    \  local max=${numbers[0]}\n  for number in \"${numbers[@]}\"; do\n    if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n      min=$number\n    fi\n    if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n      max=$number\n    fi\n  done\n  for\
    \ number in \"${numbers[@]}\"; do\n    rescaled+=($(echo \"scale=2; ($number -\
    \ $min) / ($max - $min)\" | bc -l))\n  done\n  echo \"${rescaled[@]}\"\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local range\n    local rescaled_number\n   \
    \ for number in \"${numbers[@]}\"; do\n        if [[ $number < $min ]]; then\n\
    \            min=$number\n        fi\n        if [[ $number > $max ]]; then\n\
    \            max=$number\n        fi\n    done\n    range=$(echo \"$max - $min\"\
    \ | bc)\n    for number in \"${numbers[@]}\"; do\n        rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number < $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2; ($number\
    \ - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        echo\
    \ \"$(echo \"scale=2; ($number - $min) / $range\" | bc)\"\n    done | tr '\\n'\
    \ ' '\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2;\
    \ ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | awk '{print\
    \ $1}')\n    local -r max=$(echo \"$numbers\" | awk '{print $NF}')\n    local\
    \ -r scale=$(echo \"$max - $min\" | bc -l)\n    echo \"$numbers\" | awk -v min=\"\
    $min\" -v scale=\"$scale\" '{print \"\\\"\" ($1 - min) / scale \"\\\"\"}'\n}\n\
    \ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ \"${numbers[@]}\"; do\n        echo $(echo \"($number - $min) / $range\" | bc\
    \ -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2;\
    \ ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers\n    local -a rescaled\n    local min\n    local max\n\
    \    local range\n    local i\n    local n\n    numbers=($@)\n    min=${numbers[0]}\n\
    \    max=${numbers[0]}\n    for n in \"${numbers[@]}\"; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    range=$(echo \"$max - $min\" | bc -l)\n    for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n        rescaled[$i]=$(echo \"(${numbers[$i]} - $min) / $range\"\
    \ | bc -l)\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number\
    \ - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read n; do\n        local\
    \ -r rescaled=$(echo \"($n - $min) / $range\" | bc -l)\n        echo -n \"\\\"\
    $rescaled\\\" \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n  \
    \  [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0\
    \ 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0\
    \ 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpqsb7sh6_.sh: line 12: local: rescaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in ${numbers[@]}; do\n        echo $(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l)\n    done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo -n \"$(echo \"($number - $min) / $range\" |\
    \ bc -l) \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for n in ${numbers[@]}; do\n        echo -n \"\
    \\\"$(echo \"($n - $min) / $range\" | bc -l)\\\" \"\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n \
    \   done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local scale=$(echo \"scale=10; 1 / ($max - $min)\" | bc -l)\n \
    \   local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=10; ($number - $min) * $scale\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    local -r scale=$(echo \"1 / $range\" | bc -l)\n    echo \"$numbers\"\
    \ | tr ' ' '\\n' | while read number; do\n        local -r scaled=$(echo \"($number\
    \ - $min) * $scale\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done\n}\n\
    \ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpu__h7030.sh: line 13: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo -n \"\\\"$(echo \"($number - $min) / $range\"\
    \ | bc -l)\\\" \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a list=($@)\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
    \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\"\
    \ | bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        echo -n \"\
    \\\"$(echo \"($i - $min) / $range\" | bc -l)\\\" \"\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled_numbers+=($(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo ${rescaled_numbers[@]}\n}\n\ncandidate() {\n \
    \   rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0\
    \ 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n\
    \    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n\
    \    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    if (( $(echo \"\
    $range == 0\" | bc -l) )); then\n        for number in ${numbers[@]}; do\n   \
    \         echo \"\\\"0.0\\\"\"\n        done\n    else\n        for number in\
    \ ${numbers[@]}; do\n            echo \"\\\"$(echo \"($number - $min) / $range\"\
    \ | bc -l)\\\"\"\n        done\n    fi\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled\n    local -i i\n    local\
    \ -i n=${#numbers[@]}\n    local -i min=${numbers[0]}\n    local -i max=${numbers[0]}\n\
    \    local -i range\n    local -i value\n    local -i rescaled_value\n    for\
    \ ((i=1; i<n; i++)); do\n        value=${numbers[$i]}\n        if ((value < min));\
    \ then\n            min=$value\n        fi\n        if ((value > max)); then\n\
    \            max=$value\n        fi\n    done\n    range=$((max - min))\n    for\
    \ ((i=0; i<n; i++)); do\n        value=${numbers[$i]}\n        rescaled_value=$(((value\
    \ - min) * 1000 / range))\n        rescaled[$i]=$rescaled_value\n    done\n  \
    \  echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9brwh5b0.sh: line 11: local: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=$(min \"${numbers[@]}\")\n    local\
    \ max=$(max \"${numbers[@]}\")\n    local range=$(echo \"$max - $min\" | bc -l)\n\
    \    local rescaled=()\n    for number in \"${numbers[@]}\"; do\n        local\
    \ rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7hdazq_p.sh: line 8: min: command not found\n/tmp/tmp7hdazq_p.sh:
    line 9: max: command not found\n(standard_in) 2: syntax error\n(standard_in) 1:
    syntax error\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n \
    \   done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers\n    local -i i\n\
    \    local -i n=${#numbers[@]}\n    local -i min=${numbers[0]}\n    local -i max=${numbers[0]}\n\
    \    local -i range\n    local -i number\n    local -i rescaled_number\n    for\
    \ ((i=1; i<n; i++)); do\n        number=${numbers[i]}\n        if ((number < min));\
    \ then\n            min=$number\n        fi\n        if ((number > max)); then\n\
    \            max=$number\n        fi\n    done\n    range=$((max - min))\n   \
    \ for ((i=0; i<n; i++)); do\n        number=${numbers[i]}\n        rescaled_number=$(((number\
    \ - min) * 100 / range))\n        rescaled_numbers[i]=$rescaled_number\n    done\n\
    \    echo ${rescaled_numbers[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdhdw500a.sh: line 11: local: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled_numbers=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo ${rescaled_numbers[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if [[ $number < $min ]]; then\n\
    \            min=$number\n        fi\n        if [[ $number > $max ]]; then\n\
    \            max=$number\n        fi\n    done\n    local diff=$(echo \"$max -\
    \ $min\" | bc -l)\n    local result=\"\"\n    for number in ${numbers[@]}; do\n\
    \        local scaled=$(echo \"($number - $min) / $diff\" | bc -l)\n        result=\"\
    $result \\\"$scaled\\\"\"\n    done\n    echo \"[$result]\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local result=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled=$(echo \"($number\
    \ - $min) / $range\" | bc -l)\n        result+=($rescaled)\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number < $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2; ($number\
    \ - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local i\n    for i in \"${numbers[@]}\"; do\n\
    \        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n  \
    \      fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n\
    \        fi\n    done\n    for i in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo\
    \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a list=($@)\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
    \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\"\
    \ | bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for i in \"${list[@]}\"\
    ; do\n        rescaled+=($(echo \"($i - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local result=()\n\
    \    for number in \"${numbers[@]}\"; do\n        local scaled=$(echo \"($number\
    \ - $min) / $range\" | bc -l)\n        result+=($scaled)\n    done\n    echo \"\
    ${result[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local range\n    local rescaled_number\n   \
    \ for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\"\
    ; do\n        rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n\
    \        rescaled_numbers+=($rescaled_number)\n    done\n    echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r scale=$(echo \"scale=2; 1 / ($max\
    \ - $min)\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n\
    \        echo \"$number\" | awk -v min=\"$min\" -v scale=\"$scale\" '{print scale\
    \ * ($1 - min)}'\n    done | tr '\\n' ' ' | sed 's/ $//'\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a scaled_numbers\n    for n in ${numbers[@]};\
    \ do\n        local scaled_n=$(echo \"($n - $min) / $range\" | bc -l)\n      \
    \  scaled_numbers+=($scaled_n)\n    done\n    echo ${scaled_numbers[@]}\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local\
    \ rescaled=()\n    for number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        rescaled+=(\"$rescaled_number\"\
    )\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2;\
    \ ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
    \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\"\
    \ | bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for i in \"${numbers[@]}\"; do\n        echo $(echo\
    \ \"($i - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r diff=$(echo \"$max - $min\" | bc\
    \ -l)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        echo\
    \ \"$(echo \"($number - $min) / $diff\" | bc -l)\"\n    done | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=\"$1\"\n    local min=$(echo \"$numbers\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"$numbers\" | tr ' ' '\\n' |\
    \ sort -n | tail -n 1)\n    local scale=$(echo \"scale=5; 1 / ($max - $min)\"\
    \ | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n      \
    \  local rescaled=$(echo \"scale=5; ($number - $min) * $scale\" | bc)\n      \
    \  echo \"\\\"$rescaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=$(echo\
    \ \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo\
    \ \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo\
    \ \"$max - $min\" | bc)\n    for number in \"${numbers[@]}\"; do\n        local\
    \ rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n        rescaled+=(\"\
    $rescaled_number\")\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if [[ \"$number\" -lt \"$min\" ]];\
    \ then\n            min=$number\n        fi\n        if [[ \"$number\" -gt \"\
    $max\" ]]; then\n            max=$number\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc)\n    local result=\"\"\n    for number in ${numbers[@]};\
    \ do\n        local scaled=$(echo \"($number - $min) / $range\" | bc -l)\n   \
    \     result=\"$result \\\"$scaled\\\"\"\n    done\n    echo \"[$result]\"\n}\n\
    \ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm202dig1.sh: line 11: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n/tmp/tmpm202dig1.sh: line 14: [[: 2.0: syntax
    error: invalid arithmetic operator (error token is ".0")\n/tmp/tmpm202dig1.sh:
    line 11: [[: 49.9: syntax error: invalid arithmetic operator (error token is ".9")\n/tmp/tmpm202dig1.sh:
    line 14: [[: 49.9: syntax error: invalid arithmetic operator (error token is ".9")\nRuntime
    error (func=(main), adr=13): Divide by zero\nRuntime error (func=(main), adr=14):
    Divide by zero\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
    \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\"\
    \ | bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for i in \"${numbers[@]}\"\
    ; do\n        local rescaled_i=$(echo \"($i - $min) / $range\" | bc -l)\n    \
    \    rescaled+=($rescaled_i)\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n  local -r numbers=\"$1\"\n  local -r min=$(echo \"$numbers\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n  local -r max=$(echo \"$numbers\" | tr ' ' '\\n' |\
    \ sort -n | tail -n 1)\n  local -r diff=$(echo \"$max - $min\" | bc)\n  local\
    \ -r scale=$(echo \"1 / $diff\" | bc)\n  echo \"$numbers\" | tr ' ' '\\n' | awk\
    \ -v min=\"$min\" -v scale=\"$scale\" '{print \"\\\"\" scale * ($1 - min) \"\\\
    \"\"}' | tr '\\n' ' '\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        local\
    \ rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n  local numbers=($@)\n  local min=$(echo \"${numbers[@]}\" | tr ' ' '\\n'\
    \ | sort -n | head -n 1)\n  local max=$(echo \"${numbers[@]}\" | tr ' ' '\\n'\
    \ | sort -n | tail -n 1)\n  local range=$(echo \"$max - $min\" | bc)\n  local\
    \ rescaled=()\n  for number in \"${numbers[@]}\"; do\n    local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n    rescaled+=($rescaled_number)\n \
    \ done\n  echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in \"${numbers[@]}\"; do\n        if (( $(echo \"$n < $min\" | bc -l)\
    \ )); then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\"\
    \ | bc -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for n in \"${numbers[@]}\"; do\n        echo $(echo\
    \ \"($n - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r input=\"$1\"\n    local -r min=$(echo \"$input\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local -r max=$(echo \"$input\" | tr ' ' '\\n' |\
    \ sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" | bc)\n    echo\
    \ \"$input\" | tr ' ' '\\n' | while read x; do\n        echo \"$(echo \"($x -\
    \ $min) / $range\" | bc -l)\"\n    done | tr '\\n' ' '\n}\n\ncandidate() {\n \
    \   rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0\
    \ 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n\
    \    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n\
    \    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r values=\"$1\"\n    local -r min=$(echo \"$values\" | tr ' '\
    \ '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$values\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" | bc)\n \
    \   echo \"$values\" | tr ' ' '\\n' | while read value; do\n        echo \"$value\
    \ - $min\" | bc | awk -v range=\"$range\" '{printf \"%.2f\", $1 / range}'\n  \
    \  done | tr '\\n' ' '\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    for n in ${numbers[@]}; do\n        rescaled_numbers+=($(echo \"\
    scale=2; ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if [[ \"$n\" -lt \"$min\" ]]; then\n\
    \            min=$n\n        fi\n        if [[ \"$n\" -gt \"$max\" ]]; then\n\
    \            max=$n\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc)\n    local -a rescaled=()\n    for n in ${numbers[@]}; do\n        local\
    \ rescaled_n=$(echo \"($n - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_n)\n\
    \    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4kc4ryl0.sh: line 11: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n/tmp/tmp4kc4ryl0.sh: line 14: [[: 2.0: syntax
    error: invalid arithmetic operator (error token is ".0")\n/tmp/tmp4kc4ryl0.sh:
    line 11: [[: 49.9: syntax error: invalid arithmetic operator (error token is ".9")\n/tmp/tmp4kc4ryl0.sh:
    line 14: [[: 49.9: syntax error: invalid arithmetic operator (error token is ".9")\nRuntime
    error (func=(main), adr=13): Divide by zero\nRuntime error (func=(main), adr=14):
    Divide by zero\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for i in ${numbers[@]}; do\n        if [[ $i\
    \ -lt $min ]]; then\n            min=$i\n        fi\n        if [[ $i -gt $max\
    \ ]]; then\n            max=$i\n        fi\n    done\n    for i in ${numbers[@]};\
    \ do\n        rescaled+=($(echo \"scale=2; ($i - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg3n7qzfr.sh: line 12: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n/tmp/tmpg3n7qzfr.sh: line 15: [[: 2.0: syntax
    error: invalid arithmetic operator (error token is ".0")\n/tmp/tmpg3n7qzfr.sh:
    line 12: [[: 49.9: syntax error: invalid arithmetic operator (error token is ".9")\n/tmp/tmpg3n7qzfr.sh:
    line 15: [[: 49.9: syntax error: invalid arithmetic operator (error token is ".9")\nRuntime
    error (func=(main), adr=29): Divide by zero\nRuntime error (func=(main), adr=30):
    Divide by zero\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=4;\
    \ ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled_numbers=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo \"\
    ($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=\"$1\"\n    local min=$(echo \"$numbers\" | awk '{print\
    \ $1}')\n    local max=$(echo \"$numbers\" | awk '{print $NF}')\n    local range=$(echo\
    \ \"$max - $min\" | bc)\n    echo \"$numbers\" | awk -v min=\"$min\" -v range=\"\
    $range\" '{print \"\\\"\" ($1 - min) / range \"\\\"\"}'\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers\n    local -a rescaled\n    local min\n    local max\n\
    \    local range\n    local i\n    local n\n    local r\n\n    numbers=($(echo\
    \ \"$@\" | tr ' ' '\\n' | sort -n))\n    min=${numbers[0]}\n    max=${numbers[-1]}\n\
    \    range=$(echo \"$max - $min\" | bc -l)\n\n    for i in \"${!numbers[@]}\"\
    ; do\n        n=${numbers[$i]}\n        r=$(echo \"($n - $min) / $range\" | bc\
    \ -l)\n        rescaled[$i]=$r\n    done\n\n    echo \"${rescaled[@]}\"\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled\n    local -i i\n    local\
    \ -i n=${#numbers[@]}\n    local -i min=${numbers[0]}\n    local -i max=${numbers[0]}\n\
    \    local -i range\n    local -i value\n    local -i rescaled_value\n    for\
    \ ((i=1; i<n; i++)); do\n        value=${numbers[$i]}\n        if ((value < min));\
    \ then\n            min=$value\n        fi\n        if ((value > max)); then\n\
    \            max=$value\n        fi\n    done\n    range=$((max - min))\n    for\
    \ ((i=0; i<n; i++)); do\n        value=${numbers[$i]}\n        rescaled_value=$(((value\
    \ - min) * 100 / range))\n        rescaled[$i]=$rescaled_value\n    done\n   \
    \ echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjgdkgtss.sh: line 11: local: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local rescaled=()\n    for n in ${numbers[@]};\
    \ do\n        local r=$(echo \"($n - $min) / $range\" | bc -l)\n        rescaled+=($r)\n\
    \    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    local -r scale=$(echo \"1 / $range\" | bc -l)\n    echo \"$numbers\"\
    \ | tr ' ' '\\n' | while read number; do\n        local -r scaled=$(echo \"($number\
    \ - $min) * $scale\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done\n}\n\
    \ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpu__h7030.sh: line 13: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r scale=$(echo \"scale=2; 1 / ($max\
    \ - $min)\" | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n\
    \        local -r rescaled=$(echo \"scale=2; ($number - $min) * $scale\" | bc)\n\
    \        echo \"\\\"$rescaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp7u346w1w.sh: line 12: local: rescaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers=($(rescale_to_unit_impl\
    \ \"${numbers[@]}\"))\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmps4wllm2v.sh: line 8: rescale_to_unit_impl: command not found\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local number\n    local rescaled_number\n  \
    \  for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in \"${numbers[@]}\"; do\n        rescaled_number=$(echo\
    \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"($number - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n  local -a numbers=($@)\n  local -a rescaled_numbers\n  local min=${numbers[0]}\n\
    \  local max=${numbers[0]}\n  for number in \"${numbers[@]}\"; do\n    if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n      min=$number\n    fi\n    if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n      max=$number\n    fi\n  done\n  for\
    \ number in \"${numbers[@]}\"; do\n    rescaled_numbers+=($(echo \"scale=2; ($number\
    \ - $min) / ($max - $min)\" | bc -l))\n  done\n  echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers\n    numbers=($(echo \"$@\"))\n    local min=$(echo\
    \ \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo\
    \ \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo\
    \ \"$max - $min\" | bc)\n    for i in \"${!numbers[@]}\"; do\n        numbers[$i]=$(echo\
    \ \"scale=2; (${numbers[$i]} - $min) / $range\" | bc)\n    done\n    echo \"${numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers\n    numbers=($(echo \"$@\"))\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in \"${numbers[@]}\"; do\n        if (( $(echo \"$n < $min\" | bc -l)\
    \ )); then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\"\
    \ | bc -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for n in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"($n - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local number\n    for number in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    for number in \"${numbers[@]}\"\
    ; do\n        rescaled_numbers+=($(echo \"scale=2; ($number - $min) / ($max -\
    \ $min)\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo -n \"\\\"$(echo \"($number - $min) / $range\"\
    \ | bc -l)\\\" \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=(\"$@\")\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled_numbers=()\n\
    \    for number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for num in ${numbers[@]}; do\n        if (( $(echo \"$num < $min\" | bc -l)\
    \ )); then\n            min=$num\n        fi\n        if (( $(echo \"$num > $max\"\
    \ | bc -l) )); then\n            max=$num\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local result=()\n    for num in ${numbers[@]};\
    \ do\n        local rescaled=$(echo \"($num - $min) / $range\" | bc -l)\n    \
    \    result+=($rescaled)\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local\
    \ rescaled=()\n    for number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2;\
    \ ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local input=($@)\n    local min=${input[0]}\n    local max=${input[0]}\n\
    \    for i in \"${input[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
    \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\"\
    \ | bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for i in \"${input[@]}\"; do\n        echo $(echo\
    \ \"($i - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number -lt $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number -gt $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2; ($number\
    \ - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq0upi7gu.sh: line 12: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n/tmp/tmpq0upi7gu.sh: line 15: [[: 2.0: syntax
    error: invalid arithmetic operator (error token is ".0")\n/tmp/tmpq0upi7gu.sh:
    line 12: [[: 49.9: syntax error: invalid arithmetic operator (error token is ".9")\n/tmp/tmpq0upi7gu.sh:
    line 15: [[: 49.9: syntax error: invalid arithmetic operator (error token is ".9")\nRuntime
    error (func=(main), adr=29): Divide by zero\nRuntime error (func=(main), adr=30):
    Divide by zero\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
    \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\"\
    \ | bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for i in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"($i - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n \
    \   done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=\"$1\"\n    local min=$(echo \"$numbers\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"$numbers\" | tr ' ' '\\n' |\
    \ sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local\
    \ result=\"\"\n    for number in $numbers; do\n        local rescaled=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        result=\"$result $rescaled\"\n \
    \   done\n    echo \"$result\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n  local -a numbers=($@)\n  local -a rescaled_numbers=()\n  local min=${numbers[0]}\n\
    \  local max=${numbers[0]}\n  for number in \"${numbers[@]}\"; do\n    if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n      min=$number\n    fi\n    if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n      max=$number\n    fi\n  done\n  local\
    \ range=$(echo \"$max - $min\" | bc -l)\n  for number in \"${numbers[@]}\"; do\n\
    \    rescaled_numbers+=($(echo \"($number - $min) / $range\" | bc -l))\n  done\n\
    \  echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled_numbers=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo ${rescaled_numbers[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r input_list=\"$1\"\n    local -r min=$(echo \"$input_list\" |\
    \ tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$input_list\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r delta=$(echo \"$max - $min\"\
    \ | bc -l)\n    echo \"$input_list\" | tr ' ' '\\n' | awk -v min=\"$min\" -v delta=\"\
    $delta\" '{print \"\\\"\" ($1 - min) / delta \"\\\"\"}' | tr '\\n' ',' | sed 's/,$//'\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for i in ${numbers[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for i in ${numbers[@]};\
    \ do\n        rescaled+=($(echo \"($i - $min) / $range\" | bc -l))\n    done\n\
    \    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=(\"$@\")\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($number\
    \ - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers=()\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number < $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    for number in ${numbers[@]}; do\n        rescaled_numbers+=($(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled_numbers[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n  local -a numbers=($@)\n  local min=${numbers[0]}\n  local max=${numbers[0]}\n\
    \  for number in ${numbers[@]}; do\n    if (( $(echo \"${number} < ${min}\" |\
    \ bc -l) )); then\n      min=${number}\n    fi\n    if (( $(echo \"${number} >\
    \ ${max}\" | bc -l) )); then\n      max=${number}\n    fi\n  done\n  local range=$(echo\
    \ \"${max} - ${min}\" | bc -l)\n  local -a rescaled_numbers=()\n  for number in\
    \ ${numbers[@]}; do\n    local rescaled_number=$(echo \"(${number} - ${min}) /\
    \ ${range}\" | bc -l)\n    rescaled_numbers+=(${rescaled_number})\n  done\n  echo\
    \ ${rescaled_numbers[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local\
    \ result=()\n    for number in \"${numbers[@]}\"; do\n        local scaled=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        result+=(\"$scaled\")\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n  \
    \  [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0\
    \ 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0\
    \ 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in ${numbers[@]}; do\n        echo \"$(echo \"scale=2;\
    \ ($number - $min) / ($max - $min)\" | bc -l)\"\n    done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local input=($@)\n    local min=${input[0]}\n    local max=${input[0]}\n\
    \    for i in \"${input[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
    \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\"\
    \ | bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local output=()\n    for i in \"${input[@]}\"\
    ; do\n        local rescaled=$(echo \"($i - $min) / $range\" | bc -l)\n      \
    \  output+=($rescaled)\n    done\n    echo ${output[@]}\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n  local -r numbers=\"$1\"\n  local -r min=$(echo \"$numbers\" | sort -n |\
    \ head -n 1)\n  local -r max=$(echo \"$numbers\" | sort -n | tail -n 1)\n  local\
    \ -r range=$(echo \"$max - $min\" | bc)\n  local -r scale=$(echo \"1.0 / $range\"\
    \ | bc -l)\n  local -r offset=$(echo \"-$min * $scale\" | bc -l)\n  echo \"$numbers\"\
    \ | tr ' ' '\\n' |\n    while read number; do\n      local -r scaled=$(echo \"\
    $number * $scale + $offset\" | bc -l)\n      echo \"\\\"$scaled\\\"\"\n    done\
    \ | tr '\\n' ' '\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    2: syntax error\n(standard_in) 1: syntax error\n(standard_in) 1: syntax error\n(standard_in)
    1: syntax error\n/tmp/tmp6n1uk4_4.sh: line 15: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n  local -a numbers=($@)\n  local -i n=${#numbers[@]}\n  local -i i\n  local\
    \ -i min=${numbers[0]}\n  local -i max=${numbers[0]}\n  local -i range\n  local\
    \ -i value\n  local -i scaled\n  for ((i=1; i<n; i++)); do\n    value=${numbers[i]}\n\
    \    if ((value < min)); then\n      min=$value\n    fi\n    if ((value > max));\
    \ then\n      max=$value\n    fi\n  done\n  range=$((max - min))\n  for ((i=0;\
    \ i<n; i++)); do\n    value=${numbers[i]}\n    scaled=$(((value - min) * 100 /\
    \ range))\n    numbers[i]=$scaled\n  done\n  echo ${numbers[@]}\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4nposm8v.sh: line 10: local: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local -a rescaled_numbers\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    local number\n    for number in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    for number in \"${numbers[@]}\"\
    ; do\n        rescaled_numbers+=($(echo \"scale=2; ($number - $min) / ($max -\
    \ $min)\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers\n    numbers=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n\
    \    local -a rescaled\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=3; ($number - ${numbers[0]}) / (${numbers[-1]} - ${numbers[0]})\" |\
    \ bc -l))\n    done\n    echo \"${rescaled[@]}\" | tr ' ' '\\n' | sed 's/^/\"\
    /;s/$/\"/' | tr '\\n' ',' | sed 's/,$//'\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo -n \"\\\"$(echo \"($number - $min) / $range\"\
    \ | bc -l)\\\" \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local\
    \ rescaled=()\n    for number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr \"\
    \ \" \"\\n\" | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr\
    \ \" \" \"\\n\" | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\"\
    \ | bc)\n    echo \"$numbers\" | tr \" \" \"\\n\" | while read number; do\n  \
    \      echo \"$(echo \"($number - $min) / $range\" | bc -l)\"\n    done\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        local\
    \ rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n        rescaled+=(\"\
    $rescaled_number\")\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo -n \"\\\
    \"$scaled\\\" \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n  \
    \  [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0\
    \ 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0\
    \ 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpxq4eqdec.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r list=$1\n    local -r min=$(echo \"$list\" | tr ' ' '\\n' |\
    \ sort -n | head -n 1)\n    local -r max=$(echo \"$list\" | tr ' ' '\\n' | sort\
    \ -n | tail -n 1)\n    local -r scale=$(echo \"scale=10; 1 / ($max - $min)\" |\
    \ bc)\n    echo \"$list\" | tr ' ' '\\n' | awk -v min=$min -v scale=$scale '{print\
    \ \"\\\"\" scale * ($1 - min) \"\\\"\"}' | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n  local numbers=($@)\n  local min=$(echo \"${numbers[@]}\" | tr ' ' '\\n'\
    \ | sort -n | head -n 1)\n  local max=$(echo \"${numbers[@]}\" | tr ' ' '\\n'\
    \ | sort -n | tail -n 1)\n  local range=$(echo \"$max - $min\" | bc)\n  local\
    \ rescaled=()\n  for number in \"${numbers[@]}\"; do\n    local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n    rescaled+=(\"$rescaled_number\"\
    )\n  done\n  echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a list=($@)\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    for i in \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l)\
    \ )); then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\"\
    \ | bc -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        echo $(echo\
    \ \"($i - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in ${numbers[@]}; do\n        if (( $(echo \"$n < $min\" | bc -l) ));\
    \ then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc\
    \ -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local -a rescaled=()\n    for n in ${numbers[@]};\
    \ do\n        rescaled+=($(echo \"($n - $min) / $range\" | bc -l))\n    done\n\
    \    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if [[ $number < $min ]]; then\n\
    \            min=$number\n        fi\n        if [[ $number > $max ]]; then\n\
    \            max=$number\n        fi\n    done\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    for number in ${numbers[@]}; do\n        local rescaled=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        echo -n \"\\\"$rescaled\\\"\
    \ \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if [[ $number < $min ]]; then\n\
    \            min=$number\n        fi\n        if [[ $number > $max ]]; then\n\
    \            max=$number\n        fi\n    done\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    local -a result=()\n    for number in ${numbers[@]}; do\n\
    \        local scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        result+=($scaled)\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        echo -n \"\\\"$(echo \"($number - $min) / $range\"\
    \ | bc -l)\\\" \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for number in\
    \ ${numbers[@]}; do\n        local rescaled=$(echo \"($number - $min) / $range\"\
    \ | bc -l)\n        echo \"\\\"$rescaled\\\"\"\n    done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled_numbers=()\n\
    \    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo ${rescaled_numbers[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n\
    \    for number in ${numbers[@]}; do\n        rescaled+=($(echo \"($number - $min)\
    \ / $range\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for number in ${numbers[@]}; do\n        if [[ $(echo \"$number < $min\"\
    \ | bc -l) -eq 1 ]]; then\n            min=$number\n        fi\n        if [[\
    \ $(echo \"$number > $max\" | bc -l) -eq 1 ]]; then\n            max=$number\n\
    \        fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local\
    \ -a rescaled_numbers=()\n    for number in ${numbers[@]}; do\n        local rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo ${rescaled_numbers[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n        rescaled+=(\"\
    $(echo \"($number - $min) / $range\" | bc -l)\")\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local input=($@)\n    local min=${input[0]}\n    local max=${input[0]}\n\
    \    for i in ${input[@]}; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local output=()\n    for i in ${input[@]}; do\n\
    \        local scaled=$(echo \"($i - $min) / $range\" | bc -l)\n        output+=($scaled)\n\
    \    done\n    echo ${output[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    local -r scale=$(echo \"1.0 / $range\" | bc -l)\n    echo \"$numbers\"\
    \ | tr ' ' '\\n' | while read number; do\n        local -r scaled=$(echo \"($number\
    \ - $min) * $scale\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done\n}\n\
    \ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp2uih5ro6.sh: line 13: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=\"$1\"\n    local min=$(echo \"$numbers\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"$numbers\" | tr ' ' '\\n' |\
    \ sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo\
    \ \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local scaled=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n \
    \   done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -a values=($@)\n    local min=${values[0]}\n    local max=${values[0]}\n\
    \    for value in ${values[@]}; do\n        if [[ $value < $min ]]; then\n   \
    \         min=$value\n        fi\n        if [[ $value > $max ]]; then\n     \
    \       max=$value\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc)\n    local -a rescaled_values=()\n    for value in ${values[@]}; do\n\
    \        local rescaled_value=$(echo \"($value - $min) / $range\" | bc -l)\n \
    \       rescaled_values+=($rescaled_value)\n    done\n    echo ${rescaled_values[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r list=$1\n    local -r min=$(echo \"$list\" | tr \" \" \"\\n\"\
    \ | sort -n | head -n 1)\n    local -r max=$(echo \"$list\" | tr \" \" \"\\n\"\
    \ | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" | bc)\n  \
    \  echo \"$list\" | tr \" \" \"\\n\" | while read x; do\n        local -r y=$(echo\
    \ \"($x - $min) / $range\" | bc -l)\n        echo \"\\\"$y\\\"\"\n    done\n}\n\
    \ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpcylre9a1.sh: line 12: local: y: readonly variable\n'''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    for n in \"${numbers[@]}\"; do\n        if (( $(echo \"$n < $min\" | bc -l)\
    \ )); then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\"\
    \ | bc -l) )); then\n            max=$n\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    local rescaled=()\n    for n in \"${numbers[@]}\"\
    ; do\n        local rescaled_n=$(echo \"($n - $min) / $range\" | bc -l)\n    \
    \    rescaled+=($rescaled_n)\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local -r numbers=\"$1\"\n    local -r min=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"$numbers\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local\
    \ -r scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"\
    $scaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpf31da_3y.sh: line 12: local: scaled: readonly variable\n'''
  stdout: b''
  timestamp: 1660344322
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\nrescale_to_unit()\
    \ {\n    local numbers=($@)\n    local min=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    for\
    \ n in \"${numbers[@]}\"; do\n        echo \"$(echo \"($n - $min) / $range\" |\
    \ bc -l)\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344323

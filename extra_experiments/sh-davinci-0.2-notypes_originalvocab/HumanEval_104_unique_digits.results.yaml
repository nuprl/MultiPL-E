language: sh
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    local -a numbers=($@)\n\
    \    local -a digits\n    local number\n    local digit\n    local is_unique\n\
    \    for number in \"${numbers[@]}\"; do\n        is_unique=1\n        digits=($(echo\
    \ \"$number\" | grep -o .))\n        for digit in \"${digits[@]}\"; do\n     \
    \       if [[ $((digit % 2)) -eq 0 ]]; then\n                is_unique=0\n   \
    \             break\n            fi\n        done\n        if [[ $is_unique -eq\
    \ 1 ]]; then\n            result+=(\"$number\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n  local digits=\"$@\"\n  local result=()\n\
    \  for digit in $digits; do\n    if [[ $digit =~ ^[13579]+$ ]]; then\n      result+=($digit)\n\
    \    fi\n  done\n  echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    local -a even=(\"0\" \"2\" \"4\" \"6\" \"8\")\n    for i in \"${arr[@]}\"\
    ; do\n        local -a digits=($(echo $i | grep -o .))\n        local has_even=0\n\
    \        for j in \"${digits[@]}\"; do\n            for k in \"${even[@]}\"; do\n\
    \                if [ \"$j\" == \"$k\" ]; then\n                    has_even=1\n\
    \                    break\n                fi\n            done\n           \
    \ if [ $has_even -eq 1 ]; then\n                break\n            fi\n      \
    \  done\n        if [ $has_even -eq 0 ]; then\n            res+=(\"$i\")\n   \
    \     fi\n    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n'\
    \ ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        local -a digits=($(echo $i | grep -o .))\n        local -a even_digits=($(echo\
    \ ${digits[@]} | grep -o \"[02468]\"))\n        if [ ${#even_digits[@]} -eq 0\
    \ ]; then\n            result+=($i)\n        fi\n    done\n    echo ${result[@]}\
    \ | tr \" \" \",\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result=()\n    for x in \"\
    $@\"; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=(\"$x\"\
    )\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    local -a even_digits=(0 2 4 6 8)\n    local -a odd_digits=(1 3 5\
    \ 7 9)\n    local -a digits\n    local -a tmp\n    local -i i\n    local -i j\n\
    \    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i\
    \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i flag\n    local -i len\n    local -i num\n    local -i even_len\n\
    \    local -i odd_len\n    local -i even_num\n    local -i odd_num\n    local\
    \ -i even_flag\n    local -i odd_flag\n    local -i even_flag_tmp\n    local -i\
    \ odd_flag_tmp\n    local -i even_num_tmp\n    local -i odd_num_tmp\n    local\
    \ -i even_len_tmp\n    local -i odd_len_tmp\n    local -i even_num_tmp_2\n   \
    \ local -i odd_num_tmp_2\n    local -i even_len_tmp_2\n    local -i odd_len_tmp_2\n\
    \    local -i even_flag_tmp_2\n    local -i odd_flag_tmp_2\n    local -i even_num_tmp_3\n\
    \    local -i odd_num_tmp_3\n    local -i even_len_tmp_3\n    local -i odd_len_tmp_3\n\
    \    local -i even_flag_tmp_3\n    local -i odd_flag_tmp_3\n    local -i even_num_tmp_4\n\
    \    local -i odd_num_tmp_4\n    local -i even_len_tmp_4\n    local -i odd_len_tmp_4\n\
    \    local -i even_flag_tmp_4\n    local -i odd_flag_tmp_4\n    local -i\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ ! $x =~ [24680] ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in \"$@\"\
    ; do\n        if [[ ! $x =~ [24680] ]]; then\n            result+=(\"$x\")\n \
    \       fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr\
    \ '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in \"$@\"\
    ; do\n        if [[ \"$x\" =~ ^[13579]+$ ]]; then\n            result+=($x)\n\
    \        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in \"$@\"\
    ; do\n        if [[ $x =~ ^[^02468]+$ ]]; then\n            result+=($x)\n   \
    \     fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local digits=\"$@\"\n    local unique_digits=()\n\
    \    for digit in $digits; do\n        if [[ $digit =~ ^[^02468]+$ ]]; then\n\
    \            unique_digits+=($digit)\n        fi\n    done\n    echo \"${unique_digits[@]}\"\
    \ | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            res+=($x)\n        fi\n\
    \    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n\
    \    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a list=($@)\n    local -a result=()\n\
    \    for i in ${list[@]}; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n      \
    \      result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr ' ' '\\\
    n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result=()\n    for x in \"\
    $@\"; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=(\"$x\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result=()\n    for i in $@;\
    \ do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n    \
    \    fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' '\
    \ '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            res+=($x)\n        fi\n\
    \    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    local -a even_digits=(0 2 4 6 8)\n    local -a odd_digits=(1 3 5\
    \ 7 9)\n    local -a digits\n    local -i i\n    local -i j\n    local -i k\n\
    \    local -i n\n    local -i m\n    local -i is_even\n    local -i is_odd\n \
    \   local -i is_unique\n    local -i is_unique_even\n    local -i is_unique_odd\n\
    \    local -i is_unique_even_odd\n    local -i is_unique_odd_even\n    local -i\
    \ is_unique_even_odd_even\n    local -i is_unique_odd_even_odd\n    local -i is_unique_even_odd_even_odd\n\
    \    local -i is_unique_odd_even_odd_even\n    local -i is_unique_even_odd_even_odd_even\n\
    \    local -i is_unique_odd_even_odd_even_odd\n    local -i is_unique_even_odd_even_odd_even_odd\n\
    \    local -i is_unique_odd_even_odd_even_odd_even\n    local -i is_unique_even_odd_even_odd_even_odd_even\n\
    \    local -i is_unique_odd_even_odd_even_odd_even_odd\n    local -i is_unique_even_odd_even_odd_even_odd_even_odd\n\
    \    local -i is_unique_odd_even_odd_even_odd_even_odd_even\n    local -i is_unique_even_odd_even_odd_even_odd_even_odd_even\n\
    \    local -i is_unique_odd_even_odd_even_odd_even_odd_even_odd\n    local -i\
    \ is_unique_even_odd_even_odd_even_odd_even_odd_even_odd\n    local -i is_unique_odd_even_odd_even_odd_even_odd_even_odd_even\n\
    \    local -i is_unique_even_odd_even_odd_even_odd_\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in \"$@\"\
    ; do\n        if [[ \"$i\" =~ ^[13579]+$ ]]; then\n            result+=(\"$i\"\
    )\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n |\
    \ tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a list=(\"$@\")\n    local -a\
    \ result=()\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]];\
    \ then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ ! $i =~ [02468] ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    echo $@ | tr ' ' '\\n' | grep -v '.*[02468].*'\
    \ | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in \"$@\"\
    ; do\n        if [[ \"$i\" =~ ^[^24680]+$ ]]; then\n            result+=(\"$i\"\
    )\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for i in $@; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            res+=($i)\n        fi\n \
    \   done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    local -a even_digits=(\"0\" \"2\" \"4\" \"6\" \"8\")\n    for i\
    \ in \"${arr[@]}\"; do\n        local -a digits=()\n        local -i has_even_digit=0\n\
    \        for ((j=0; j<${#i}; j++)); do\n            digits[j]=${i:$j:1}\n    \
    \        for k in \"${even_digits[@]}\"; do\n                if [[ \"${digits[j]}\"\
    \ == \"$k\" ]]; then\n                    has_even_digit=1\n                 \
    \   break\n                fi\n            done\n            if [[ $has_even_digit\
    \ -eq 1 ]]; then\n                break\n            fi\n        done\n      \
    \  if [[ $has_even_digit -eq 0 ]]; then\n            res+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ [02468] ]]; then\n            continue\n        fi\n    \
    \    result+=($x)\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for i in $@; do\n\
    \        if [[ $i =~ [02468] ]]; then\n            continue\n        fi\n    \
    \    res+=(\"$i\")\n    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    local -a list=($@)\n\
    \    local -a even_digits=(0 2 4 6 8)\n    local -a digits\n    local -i i\n \
    \   local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n\
    \    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i\
    \ s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i number\n    local -i is_even\n\
    \    local -i is_unique\n    local -i len\n    local -i len_even_digits\n    local\
    \ -i len_digits\n    local -i len_result\n    local -i len_list\n    local -i\
    \ len_even_digits=${#even_digits[@]}\n    local -i len_list=${#list[@]}\n    for\
    \ ((i=0; i<len_list; i++)); do\n        number=${list[i]}\n        is_even=0\n\
    \        is_unique=1\n        digits=($(echo $number | grep -o .))\n        len_digits=${#digits[@]}\n\
    \        for ((j=0; j<len_digits; j++)); do\n            for ((k=0; k<len_even_digits;\
    \ k++)); do\n                if [[ ${digits[j]} -eq ${even_digits[k]} ]]; then\n\
    \                    is_even=1\n                    break\n                fi\n\
    \            done\n            if [[ $is_even -eq 1 ]]; then\n               \
    \ break\n            fi\n        done\n        if [[ $is_even -eq 0 ]]; then\n\
    \            len_result=${#result[@]}\n            for ((l=0; l<len_result; l++));\
    \ do\n                if [[ ${result[l]} -eq $number ]]; then\n              \
    \      is_unique=0\n                    break\n                fi\n          \
    \  done\n            if [[ $is_unique -eq 1 ]]; then\n                result+\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpfrgx2mgj.sh: line 70: syntax error near unexpected token `}''\n/tmp/tmpfrgx2mgj.sh:
    line 70: `}''\n"'
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ ! $i =~ [24680] ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for i in \"$@\";\
    \ do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            res+=(\"$i\")\n   \
    \     fi\n    done\n    echo \"${res[@]}\" | sort -n\n}\n\ncandidate() {\n   \
    \ unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n  local -a result\n  for i in $@; do\n\
    \    if [[ ! $i =~ [24680] ]]; then\n      result+=($i)\n    fi\n  done\n  echo\
    \ ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a nums=($@)\n    local -a result=()\n\
    \    for num in ${nums[@]}; do\n        if [[ $num =~ ^[13579]+$ ]]; then\n  \
    \          result+=($num)\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n\tlocal -a result\n\tfor i in $@; do\n\t\
    \tif [[ $i =~ ^[13579]+$ ]]; then\n\t\t\tresult+=($i)\n\t\tfi\n\tdone\n\techo\
    \ ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n \
    \   unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result=()\n    for i in $@;\
    \ do\n        if [[ $i =~ ^[1-9]+$ ]]; then\n            result+=($i)\n      \
    \  fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            res+=($x)\n        fi\n\
    \    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result=()\n    for i in \"\
    $@\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n\
    \        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a list=($@)\n    local -a result=()\n\
    \    for i in ${list[@]}; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n      \
    \      result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in \"$@\"\
    ; do\n        if [[ \"$i\" =~ ^[13579]+$ ]]; then\n            result+=(\"$i\"\
    )\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n |\
    \ tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n  local -a arr=(\"$@\")\n  local -a res=()\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i =~ ^[13579]+$ ]]; then\n      res+=(\"\
    $i\")\n    fi\n  done\n  echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\\
    n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    local -a args=(\"\
    $@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=0\n\
    \    local -i len_args=${#args[@]}\n    local -i len_result=0\n    local -i len_digits=0\n\
    \    local -i len_unique_digits=0\n    local -i len_unique_digits_prev=0\n   \
    \ local -i len_unique_digits_curr=0\n    local -i len_unique_digits_next=0\n \
    \   local -i len_unique_digits_max=0\n    local -i len_unique_digits_min=0\n \
    \   local -i len_unique_digits_min_prev=0\n    local -i len_unique_digits_min_curr=0\n\
    \    local -i len_unique_digits_min_next=0\n    local -i len_unique_digits_min_max=0\n\
    \    local -i len_unique_digits_min_min=0\n    local -i len_unique_digits_min_min_prev=0\n\
    \    local -i len_unique_digits_min_min_curr=0\n    local -i len_unique_digits_min_min_next=0\n\
    \    local -i len_unique_digits_min_min_max=0\n    local -i len_unique_digits_min_min_min=0\n\
    \    local -i len_unique_digits_min_min_min_prev=0\n    local -i len_unique_digits_min_min_min_curr=0\n\
    \    local -i len_unique_digits_min_min_min_next=0\n    local -i len_unique_digits_min_min_min_max=0\n\
    \    local -i len_unique_digits_min_min_min_min=0\n    local -i len_unique_digits_min_min_min_min_prev=0\n\
    \    local -i len_unique_digits_min_min_min_min_curr=0\n    local\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a array=(\"$@\")\n    local\
    \ -a result=()\n    for i in \"${array[@]}\"; do\n        if [[ $i =~ ^[13579]+$\
    \ ]]; then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ result\n    local -i i\n    local -i j\n    local -i k\n    local -i len\n \
    \   local -i len2\n    local -i len3\n    local -i flag\n    local -i flag2\n\
    \    local -i flag3\n    local -i flag4\n    local -i flag5\n    local -i flag6\n\
    \    local -i flag7\n    local -i flag8\n    local -i flag9\n    local -i flag10\n\
    \    local -i flag11\n    local -i flag12\n    local -i flag13\n    local -i flag14\n\
    \    local -i flag15\n    local -i flag16\n    local -i flag17\n    local -i flag18\n\
    \    local -i flag19\n    local -i flag20\n    local -i flag21\n    local -i flag22\n\
    \    local -i flag23\n    local -i flag24\n    local -i flag25\n    local -i flag26\n\
    \    local -i flag27\n    local -i flag28\n    local -i flag29\n    local -i flag30\n\
    \    local -i flag31\n    local -i flag32\n    local -i flag33\n    local -i flag34\n\
    \    local -i flag35\n    local -i flag36\n    local -i flag37\n    local -i flag38\n\
    \    local -i flag39\n    local -i flag40\n    local -i flag41\n    local -i flag42\n\
    \    local -i flag43\n    local -i flag44\n    local -i flag45\n    local -i flag46\n\
    \    local -i flag47\n    local -i flag48\n    local -i flag49\n    local -i flag50\n\
    \    local -i flag51\n    local -i flag52\n    local -i flag53\n    local -i flag54\n\
    \    local -i flag55\n    local -i flag56\n    local -i flag57\n    local -i flag58\n\
    \    local -i flag59\n    local -i flag60\n    local -i flag61\n    local -i flag62\n\
    \    local -i flag63\n    local -i flag64\n    local -i flag65\n    local\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in \"$@\"\
    ; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=(\"$x\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    local -a evens=(0 2 4 6 8)\n    local -a digits=()\n    local -i\
    \ i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n\
    \    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n   \
    \ local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n   \
    \ local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local\n}\n\ncandidate() {\n    unique_digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            result+=(\"$i\")\n      \
    \  fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n'\
    \ ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=(\"$x\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result=()\n    for i in $@;\
    \ do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a list=($@)\n    local -a result=()\n\
    \    for i in ${list[@]}; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n      \
    \      result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a list=($@)\n    local -a res=()\n\
    \    for i in ${list[@]}; do\n        local -a digits=($(echo $i | grep -o .))\n\
    \        local -a even_digits=($(echo ${digits[@]} | grep -o [02468]))\n     \
    \   if [[ ${#even_digits[@]} -eq 0 ]]; then\n            res+=($i)\n        fi\n\
    \    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n \
    \   unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=(\"$x\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo ${result[@]} | tr ' ' ','\n}\n\ncandidate() {\n   \
    \ unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a even_digits=(0 2 4 6 8)\n\
    \    local -a result=()\n    for x in \"$@\"; do\n        local -a digits=($(echo\
    \ \"$x\" | grep -o .))\n        local has_even=0\n        for digit in \"${digits[@]}\"\
    ; do\n            for even_digit in \"${even_digits[@]}\"; do\n              \
    \  if [[ \"$digit\" -eq \"$even_digit\" ]]; then\n                    has_even=1\n\
    \                    break\n                fi\n            done\n           \
    \ if [[ \"$has_even\" -eq 1 ]]; then\n                break\n            fi\n\
    \        done\n        if [[ \"$has_even\" -eq 0 ]]; then\n            result+=(\"\
    $x\")\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for number in\
    \ $@; do\n        if [[ $number =~ ^[13579]+$ ]]; then\n            result+=(\"\
    $number\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a numbers=($@)\n    local -a\
    \ result=()\n    for number in ${numbers[@]}; do\n        local -a digits=($(echo\
    \ $number | grep -o .))\n        local has_even=0\n        for digit in ${digits[@]};\
    \ do\n            if [ $((digit % 2)) -eq 0 ]; then\n                has_even=1\n\
    \                break\n            fi\n        done\n        if [ $has_even -eq\
    \ 0 ]; then\n            result+=($number)\n        fi\n    done\n    echo ${result[@]}\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in \"$@\"\
    ; do\n        if [[ \"$i\" =~ ^[13579]+$ ]]; then\n            result+=(\"$i\"\
    )\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n |\
    \ tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a nums=($@)\n    local -a result\n\
    \    local num\n    for num in ${nums[@]}; do\n        if [[ ! $num =~ [24680]\
    \ ]]; then\n            result+=($num)\n        fi\n    done\n    echo ${result[@]}\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for number in\
    \ $@; do\n        if [[ $number =~ ^[13579]+$ ]]; then\n            result+=(\"\
    $number\")\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local input=\"$@\"\n    local output=()\n\
    \    local num\n    for num in $input; do\n        if [[ $num =~ ^[13579]+$ ]];\
    \ then\n            output+=(\"$num\")\n        fi\n    done\n    echo \"${output[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    local -a even_digits=(0\
    \ 2 4 6 8)\n    for x in $@; do\n        local -a digits=($(echo $x | grep -o\
    \ .))\n        local is_even=0\n        for digit in ${digits[@]}; do\n      \
    \      for even_digit in ${even_digits[@]}; do\n                if [[ $digit -eq\
    \ $even_digit ]]; then\n                    is_even=1\n                    break\n\
    \                fi\n            done\n            if [[ $is_even -eq 1 ]]; then\n\
    \                break\n            fi\n        done\n        if [[ $is_even -eq\
    \ 0 ]]; then\n            result+=($x)\n        fi\n    done\n    echo ${result[@]}\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ ! $i =~ [24680] ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ result=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]];\
    \ then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ ! $x =~ [24680] ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result=()\n    for i in $@;\
    \ do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n    \
    \    fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result=()\n    for x in $@;\
    \ do\n        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=(\"$x\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    declare -a arr=(\"$@\")\n    declare\
    \ -a res=()\n    for i in \"${arr[@]}\"; do\n        if [[ \"$i\" =~ ^[13579]+$\
    \ ]]; then\n            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\"\
    \ | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    local -a tmp=()\n    for i in \"${arr[@]}\"; do\n        tmp=()\n\
    \        for ((j=0; j<${#i}; j++)); do\n            if [[ \"${tmp[*]}\" =~ \"\
    ${i:$j:1}\" ]]; then\n                break\n            else\n              \
    \  tmp+=(\"${i:$j:1}\")\n            fi\n        done\n        if [[ \"${tmp[*]}\"\
    \ == \"${i}\" ]]; then\n            res+=(\"$i\")\n        fi\n    done\n    echo\
    \ \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local result=()\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    local -a args=($@)\n\
    \    local -a even_digits=(0 2 4 6 8)\n    local -a even_digits_regex=\"(${even_digits[@]})\"\
    \n    for i in ${args[@]}; do\n        if [[ ! $i =~ $even_digits_regex ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    # TODO: Write your code here\n    #\
    \ Please use echo to print the result, eg:\n    # echo \"Hello world\"\n    echo\
    \ \"Not implemented\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ [02468] ]]; then\n            continue\n        fi\n    \
    \    result+=($i)\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a input=($@)\n    local -a output=()\n\
    \    for i in ${input[@]}; do\n        if [[ ! $i =~ [24680] ]]; then\n      \
    \      output+=($i)\n        fi\n    done\n    echo ${output[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n  local -a result\n  for i in $@; do\n\
    \    if [[ $i =~ ^[13579]+$ ]]; then\n      result+=(\"$i\")\n    fi\n  done\n\
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for i in $@; do\n\
    \        if [[ ! $i =~ [02468] ]]; then\n            res+=($i)\n        fi\n \
    \   done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ \"$i\" =~ ^[1-9]+$ ]]; then\n            result+=(\"$i\")\n   \
    \     fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res=()\n    for x in $@; do\n\
    \        if [[ \"$x\" =~ ^[13579]+$ ]]; then\n            res+=(\"$x\")\n    \
    \    fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for num in \"\
    $@\"; do\n        if [[ $num =~ ^[13579]+$ ]]; then\n            result+=(\"$num\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ result=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]];\
    \ then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[^02468]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ ! $x =~ [24680] ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    local -a even_digits=(0\
    \ 2 4 6 8)\n    for num in \"$@\"; do\n        local -a digits=($(echo $num |\
    \ grep -o .))\n        local -a even_digits_in_num=($(echo ${digits[@]} ${even_digits[@]}\
    \ | tr ' ' '\\n' | sort | uniq -u))\n        if [ ${#even_digits_in_num[@]} -eq\
    \ ${#digits[@]} ]; then\n            result+=($num)\n        fi\n    done\n  \
    \  echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ ! \"$i\" =~ [24680] ]]; then\n            result+=($i)\n      \
    \  fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a digits\n    local -a result\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\
    \ m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i digit\n \
    \   local -i even_digit\n    local -i even_digit_count\n    local -i digit_count\n\
    \    local -i number\n    local -i number_count\n    local -i number_index\n \
    \   local -i number_length\n    local -i digit_index\n    local -i digit_length\n\
    \    local -i digit_power\n    local -i digit_power_index\n    local -i digit_power_length\n\
    \    local -i digit_power_value\n    local -i digit_power_value_length\n    local\
    \ -i digit_power_value_index\n    local -i digit_power_value_digit\n    local\
    \ -i digit_power_value_digit_count\n    local -i digit_power_value_digit_index\n\
    \    local -i digit_power_value_digit_length\n    local -i digit_power_value_digit_power\n\
    \    local -i digit_power_value_digit_power_index\n    local -i digit_power_value_digit_power_length\n\
    \    local -i digit_power_value_digit_power_value\n    local -i digit_power_value_digit_power_value_length\n\
    \    local -i digit_power_value_digit_power_value_index\n    local -i digit_power_value_digit_power_value_digit\n\
    \    local -i digit_power_value_digit_power_value_digit_count\n    local -i digit_power_value_digit_power_value_digit_index\n\
    \    local -i digit_power_value_digit_power_value_digit_length\n    local -i digit_power_value_digit_power_value_digit_power\n\
    \   \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[^02468]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ ! $i =~ [24680] ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        local -a digits=()\n       \
    \ for ((j=0; j<${#i}; j++)); do\n            digits+=(\"${i:$j:1}\")\n       \
    \ done\n        local -a unique=()\n        for j in \"${digits[@]}\"; do\n  \
    \          if [[ ! \" ${unique[@]} \" =~ \" ${j} \" ]]; then\n               \
    \ unique+=(\"$j\")\n            fi\n        done\n        if [[ ${#unique[@]}\
    \ -eq ${#digits[@]} ]]; then\n            res+=(\"$i\")\n        fi\n    done\n\
    \    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ ret=()\n    local -a evens=(2 4 6 8 0)\n    local -a odds=(1 3 5 7 9)\n    local\
    \ -a digits=()\n    local -a unique_digits=()\n    local -a unique_digits_sorted=()\n\
    \    local -a unique_digits_sorted_ret=()\n    local -a unique_digits_sorted_ret_str=()\n\
    \    local -a unique_digits_sorted_ret_str_quoted=()\n    local -a unique_digits_sorted_ret_str_quoted_joined=()\n\
    \    local -a unique_digits_sorted_ret_str_quoted_joined_ret=()\n    local -a\
    \ unique_digits_sorted_ret_str_quoted_joined_ret_str=()\n    local -a unique_digits_sorted_ret_str_quoted_joined_ret_str_quoted=()\n\
    \    local -a unique_digits_sorted_ret_str_quoted_joined_ret_str_quoted_joined=()\n\
    \    local -a unique_digits_sorted_ret_str_quoted_joined_ret_str_quoted_joined_ret=()\n\
    \    local -a unique_digits_sorted_ret_str_quoted_joined_ret_str_quoted_joined_ret_str=()\n\
    \    local -a unique_digits_sorted_ret_str_quoted_joined_ret_str_quoted_joined_ret_str_quoted=()\n\
    \    local -a unique_digits_sorted_ret_str_quoted_joined_ret_str_quoted_joined_ret_str_quoted_joined=()\n\
    \    local -a unique_digits_sorted_ret_str_quoted_joined_ret_str_quoted_joined_ret_str_quoted_joined_ret=()\n\
    \    local -a unique_digits_sorted_ret_str_quoted_joined_ret_str_quoted_joined_ret_str_quoted_joined_ret_str=()\n\
    \    local\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result=()\n    for i in $@;\
    \ do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a array=(\"$@\")\n    local\
    \ -a result=()\n    local -a even=(\"2\" \"4\" \"6\" \"8\" \"0\")\n    local -a\
    \ odd=(\"1\" \"3\" \"5\" \"7\" \"9\")\n    local -a digits=()\n    local -a unique=()\n\
    \    local -a sorted=()\n    local -a sorted_unique=()\n    local -a sorted_result=()\n\
    \    local -a sorted_result_unique=()\n    local -a sorted_result_unique_odd=()\n\
    \    local -a sorted_result_unique_even=()\n    local -a sorted_result_unique_even_odd=()\n\
    \    local -a sorted_result_unique_even_odd_odd=()\n    local -a sorted_result_unique_even_odd_odd_even=()\n\
    \    local -a sorted_result_unique_even_odd_odd_even_odd=()\n    local -a sorted_result_unique_even_odd_odd_even_odd_even=()\n\
    \    local -a sorted_result_unique_even_odd_odd_even_odd_even_odd=()\n    local\
    \ -a sorted_result_unique_even_odd_odd_even_odd_even_odd_even=()\n    local -a\
    \ sorted_result_unique_even_odd_odd_even_odd_even_odd_even_odd=()\n    local -a\
    \ sorted_result_unique_even_odd_odd_even_odd_even_odd_even_odd_even=()\n    local\
    \ -a sorted_result_unique_even_odd_odd_even_odd_even_odd_even_odd_even_odd=()\n\
    \    local -a sorted_result_unique_even_odd_odd_even_odd_even_odd_even_odd_even_odd_even=()\n\
    \    local -a sorted_result_unique_even_odd_odd_even_odd_even_odd_even_odd_even_odd_even_odd=()\n\
    \    local -a sorted_result_unique_even_odd_odd_even_odd_even_odd_even_odd_even_odd_even_odd_even=()\n\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local result=()\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    for i in $@; do\n        if [[ $i =~\
    \ [02468] ]]; then\n            continue\n        else\n            echo -n \"\
    \\\"$i\\\" \"\n        fi\n    done\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a nums=($@)\n    local -a res=()\n\
    \    for num in ${nums[@]}; do\n        if [[ $num =~ ^[13579]+$ ]]; then\n  \
    \          res+=($num)\n        fi\n    done\n    echo ${res[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for num in \"\
    $@\"; do\n        if [[ ! \"$num\" =~ [24680] ]]; then\n            result+=(\"\
    $num\")\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort\
    \ -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=(\"$x\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        local -a digits\n        digits=($(echo $i | grep -o .))\n        local\
    \ even=0\n        for d in ${digits[@]}; do\n            if [[ $((d % 2)) -eq\
    \ 0 ]]; then\n                even=1\n                break\n            fi\n\
    \        done\n        if [[ $even -eq 0 ]]; then\n            result+=($i)\n\
    \        fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\\
    n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a nums\n    local -a res\n \
    \   local num\n    local digit\n    local i\n    nums=($@)\n    for num in ${nums[@]};\
    \ do\n        for ((i=0; i<${#num}; i++)); do\n            digit=${num:$i:1}\n\
    \            if [[ $digit =~ [02468] ]]; then\n                break\n       \
    \     fi\n        done\n        if [[ $i -eq ${#num} ]]; then\n            res=(${res[@]}\
    \ $num)\n        fi\n    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr\
    \ '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a list=(\"$@\")\n    local -a\
    \ result=()\n    local -a even_digits=(\"2\" \"4\" \"6\" \"8\" \"0\")\n    local\
    \ -a even_digits_regex=(\"[$(join_by \"|\" \"${even_digits[@]}\")]\")\n    for\
    \ i in \"${list[@]}\"; do\n        if [[ ! \"$i\" =~ ${even_digits_regex[@]} ]];\
    \ then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"$(join_by\
    \ \" \" \"${result[@]}\")\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpnnxk25bl.sh: line 14: join_by: command not found\n/tmp/tmpnnxk25bl.sh:
    line 20: join_by: command not found\n'''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local input=$@\n    local output=()\n\
    \    for i in $input; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n          \
    \  output+=($i)\n        fi\n    done\n    echo \"${output[@]}\" | tr ' ' '\\\
    n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result=()\n    for i in $@;\
    \ do\n        if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n     \
    \   fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' '\
    \ '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ \"$i\" =~ ^[13579]+$ ]];\
    \ then\n            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    local -a even=(\"0\" \"2\" \"4\" \"6\" \"8\")\n    for i in \"${arr[@]}\"\
    ; do\n        local -a digits=()\n        for (( j=0; j<${#i}; j++ )); do\n  \
    \          digits+=(\"${i:$j:1}\")\n        done\n        local -a odd=()\n  \
    \      for k in \"${digits[@]}\"; do\n            for l in \"${even[@]}\"; do\n\
    \                if [[ \"$k\" == \"$l\" ]]; then\n                    odd+=(\"\
    $k\")\n                fi\n            done\n        done\n        if [[ \"${#odd[@]}\"\
    \ -eq 0 ]]; then\n            res+=(\"$i\")\n        fi\n    done\n    echo \"\
    ${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n\tlocal -a result\n\tfor i in $@; do\n\t\
    \tif [[ ! $i =~ [02468] ]]; then\n\t\t\tresult+=($i)\n\t\tfi\n\tdone\n\techo ${result[@]}\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 2
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a numbers=($@)\n    local -a\
    \ result=()\n    local -a even_digits=(0 2 4 6 8)\n    local -a even_digits_as_strings=(\"\
    0\" \"2\" \"4\" \"6\" \"8\")\n    local -a even_digits_as_regexp=(\"0\" \"2\"\
    \ \"4\" \"6\" \"8\")\n    local -a even_digits_as_regexp_joined=$(IFS=\"|\"; echo\
    \ \"${even_digits_as_regexp[*]}\")\n    local -a even_digits_as_regexp_joined_escaped=$(echo\
    \ \"${even_digits_as_regexp_joined}\" | sed -e 's/[\\/&]/\\\\&/g')\n    local\
    \ -a even_digits_as_regexp_joined_escaped_with_brackets=$(echo \"[${even_digits_as_regexp_joined_escaped}]\"\
    )\n    local -a even_digits_as_regexp_joined_escaped_with_brackets_and_plus=$(echo\
    \ \"${even_digits_as_regexp_joined_escaped_with_brackets}+\")\n    local -a even_digits_as_regexp_joined_escaped_with_brackets_and_plus_and_parentheses=$(echo\
    \ \"(${even_digits_as_regexp_joined_escaped_with_brackets_and_plus})\")\n    local\
    \ -a even_digits_as_regexp_joined_escaped_with_brackets_and_plus_and_parentheses_and_question_mark=$(echo\
    \ \"${even_digits_as_regexp_joined_escaped_with_brackets_and_plus_and_parentheses}?\"\
    )\n    local -a even_digits_as_regexp_joined_escaped_with_brackets_and_plus_and_parentheses_and_question_mark_and_asterisk=$(echo\
    \ \"${even_digits_as_regexp_joined_escaped_with_brackets_and_plus\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp19rm5lpu.sh: line 34: unexpected EOF while looking for matching
    `"\''\n/tmp/tmp19rm5lpu.sh: line 38: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local numbers=\"$@\"\n    local result=()\n\
    \    for number in $numbers; do\n        local has_even_digit=0\n        for digit\
    \ in $(echo \"$number\" | grep -o .); do\n            if [ $((digit % 2)) -eq\
    \ 0 ]; then\n                has_even_digit=1\n                break\n       \
    \     fi\n        done\n        if [ $has_even_digit -eq 0 ]; then\n         \
    \   result+=(\"$number\")\n        fi\n    done\n    echo \"${result[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in \"$@\"\
    ; do\n        if [[ ! $x =~ [24680] ]]; then\n            result+=(\"$x\")\n \
    \       fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr\
    \ '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    local -a input=($@)\n\
    \    local -a even_digits=(0 2 4 6 8)\n    local -a odd_digits=(1 3 5 7 9)\n \
    \   local -a digits\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i is_even\n    local -i is_odd\n    local -i is_unique\n    local -i is_sorted\n\
    \    local -i is_sorted_prev\n    local -i is_sorted_curr\n    local -i is_sorted_next\n\
    \    local -i is_sorted_prev_prev\n    local -i is_sorted_next_next\n    local\
    \ -i is_sorted_prev_prev_prev\n    local -i is_sorted_next_next_next\n    local\
    \ -i is_sorted_prev_prev_prev_prev\n    local -i is_sorted_next_next_next_next\n\
    \    local -i is_sorted_prev_prev_prev_prev_prev\n    local -i is_sorted_next_next_next_next_next\n\
    \    local -i is_sorted_prev_prev_prev_prev_prev_prev\n    local -i is_sorted_next_next_next_next_next_next\n\
    \    local -i is_sorted_prev_prev_prev_prev_prev_prev_prev\n    local -i is_sorted_next_next_next_next_next_next_next\n\
    \    local -i is_sorted_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i\
    \ is_sorted_next_next_next_next_next_next_next_next\n    local -i is_sorted_prev_prev_prev_prev\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in \"$@\"\
    ; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=(\"$x\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for num in $@;\
    \ do\n        if [[ $num =~ ^[13579]+$ ]]; then\n            result+=(\"$num\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n  local -a result\n  for i in $@; do\n\
    \    if [[ ! $i =~ [24680] ]]; then\n      result+=($i)\n    fi\n  done\n  echo\
    \ \"${result[@]}\" | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n  local -a result\n  for number in \"$@\"\
    ; do\n    if [[ \"$number\" =~ ^[13579]+$ ]]; then\n      result+=(\"$number\"\
    )\n    fi\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n'\
    \ ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ result=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]];\
    \ then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            res+=($x)\n        fi\n\
    \    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n \
    \   unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ result\n    for i in \"${arr[@]}\"; do\n        if [[ ! $i =~ [02468] ]]; then\n\
    \            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n  local -a arr=(\"$@\")\n  local -a res=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i len=${#arr[@]}\n  local -i len2=0\n\
    \  local -i num=0\n  local -i digit=0\n  local -i even=0\n  local -i odd=0\n \
    \ local -i flag=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n\
    \  local -i flag5=0\n  local -i flag6=0\n  local -i flag7=0\n  local -i flag8=0\n\
    \  local -i flag9=0\n  local -i flag10=0\n  local -i flag11=0\n  local -i flag12=0\n\
    \  local -i flag13=0\n  local -i flag14=0\n  local -i flag15=0\n  local -i flag16=0\n\
    \  local -i flag17=0\n  local -i flag18=0\n  local -i flag19=0\n  local -i flag20=0\n\
    \  local -i flag21=0\n  local -i flag22=0\n  local -i flag23=0\n  local -i flag24=0\n\
    \  local -i flag25=0\n  local -i flag26=0\n  local -i flag27=0\n  local -i flag28=0\n\
    \  local -i flag29=0\n  local -i flag30=0\n  local -i flag31=0\n  local -i flag32=0\n\
    \  local -i flag33=0\n  local -i flag34=0\n  local -i flag35=0\n  local -i flag36=0\n\
    \  local -i flag37=0\n  local -i flag38=0\n  local -i flag39=0\n  local -i flag40=0\n\
    \  local -i flag41=0\n  local -i flag42=0\n  local -i flag43=0\n  local -i flag44=0\n\
    \  local -i flag45=0\n  local -i flag46=0\n  local -i flag47=0\n\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local result=()\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for num in \"\
    $@\"; do\n        if [[ $num =~ ^[13579]+$ ]]; then\n            result+=(\"$num\"\
    )\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in \"$@\"\
    ; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ \"$i\" =~ ^[13579]+$ ]];\
    \ then\n            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n\
    \    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n \
    \   unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in \"$@\"\
    ; do\n        if [[ ! $x =~ [02468] ]]; then\n            result+=($x)\n     \
    \   fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\\
    n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for num in \"\
    $@\"; do\n        if [[ \"$num\" =~ ^[13579]+$ ]]; then\n            result+=(\"\
    $num\")\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort\
    \ -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    # TODO: Write your code here\n    echo\
    \ \"Not implemented yet\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for i in $@; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            res+=($i)\n        fi\n \
    \   done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local input=(\"$@\")\n    local output=()\n\
    \    for i in \"${input[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n \
    \           output+=(\"$i\")\n        fi\n    done\n    echo \"${output[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n  local -a result=()\n  for x in $@; do\n\
    \    if [[ ! $x =~ [02468] ]]; then\n      result+=($x)\n    fi\n  done\n  echo\
    \ ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ ! \"$i\" =~ [24680] ]]; then\n            result+=($i)\n      \
    \  fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n'\
    \ ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a list=(\"$@\")\n    local -a\
    \ result=()\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]];\
    \ then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for x in $@; do\n\
    \        if [[ $x =~ ^[13579]+$ ]]; then\n            result+=($x)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res\n    for i in \"$@\";\
    \ do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            res+=(\"$i\")\n   \
    \     fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ res=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr\n    local -a res\n  \
    \  local -a even_digits=(0 2 4 6 8)\n    local -a odd_digits=(1 3 5 7 9)\n   \
    \ local -a digits\n    local -i i\n    local -i j\n    local -i k\n    local -i\
    \ flag\n    local -i num\n    local -i len\n    local -i len_even\n    local -i\
    \ len_odd\n    local -i len_digits\n    local -i len_res\n    local -i len_arr\n\
    \    local -i len_digits_arr\n    local -i len_even_digits\n    local -i len_odd_digits\n\
    \    local -i len_res_arr\n    local -i len_arr_arr\n    local -i len_even_digits_arr\n\
    \    local -i len_odd_digits_arr\n    local -i len_digits_arr_arr\n    local -i\
    \ len_res_arr_arr\n    local -i len_arr_arr_arr\n    local -i len_even_digits_arr_arr\n\
    \    local -i len_odd_digits_arr_arr\n    local -i len_digits_arr_arr_arr\n  \
    \  local -i len_res_arr_arr_arr\n    local -i len_arr_arr_arr_arr\n    local -i\
    \ len_even_digits_arr_arr_arr\n    local -i len_odd_digits_arr_arr_arr\n    local\
    \ -i len_digits_arr_arr_arr_arr\n    local -i len_res_arr_arr_arr_arr\n    local\
    \ -i len_arr_arr_arr_arr_arr\n    local -i len_even_digits_arr_arr_arr_arr\n \
    \   local -i len_odd_digits_arr_arr_arr_arr\n    local -i len_digits_arr_arr_arr_arr_arr\n\
    \    local -i len_res_arr_arr_arr_arr_arr\n    local -i len_arr_arr_arr_arr_arr_arr\n\
    \    local -i len_even_digits_arr_arr_arr_arr_\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a res=()\n    for i in $@; do\n\
    \        local -a digits=($(echo $i | grep -o .))\n        local -a evens=($(echo\
    \ ${digits[@]} | grep -o '[02468]'))\n        if [ ${#evens[@]} -eq 0 ]; then\n\
    \            res+=($i)\n        fi\n    done\n    echo ${res[@]} | tr ' ' ','\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a arr=(\"$@\")\n    local -a\
    \ result=()\n    for i in \"${arr[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]];\
    \ then\n            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\nunique_digits() {\n    local -a result\n    for i in $@; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660343375

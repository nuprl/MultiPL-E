language: sh
name: HumanEval_47_median
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ if ((n%2==0)); then\n        echo \"$(echo \"${l[m-1]} ${l[m]}\" | awk '{print\
    \ ($1+$2)/2}')\"\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    if ((n%2)); then\n  \
    \      echo \"${s[m]}\"\n    else\n        echo \"$(echo \"${s[m-1]},${s[m]}\"\
    \ | awk '{print ($1+$2)/2}')\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"$m,$((m+1))p\" | awk '{print ($1+$2)/2}'\n    else\n     \
    \   echo \"$l\" | sed -n \"$((m+1))p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m - 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i\n    local m\n    local n\n    local\
    \ s\n    local t\n    local v\n    for i in ${l[@]}; do\n        s+=\"$i \"\n\
    \    done\n    t=($(echo $s | tr ' ' '\\n' | sort -n))\n    n=${#t[@]}\n    if\
    \ [ $((n % 2)) -eq 0 ]; then\n        m=$((n / 2))\n        v=$(echo \"scale=1;\
    \ (${t[$m]} + ${t[$((m - 1))]}) / 2\" | bc)\n    else\n        m=$((n / 2))\n\
    \        v=${t[$m]}\n    fi\n    echo $v\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i\n    local j\n\
    \    local t\n    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m; j++)); do\n\
    \            if (( $(echo \"${l[i]} > ${l[j]}\" | bc -l) )); then\n          \
    \      t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n    \
    \        fi\n        done\n    done\n    if (( $(echo \"$m % 2\" | bc -l) ));\
    \ then\n        echo ${l[$((m/2))]}\n    else\n        echo $(echo \"scale=1;\
    \ (${l[$((m/2-1))]} + ${l[$((m/2))]}) / 2\" | bc -l)\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$m,$((m + 1))p\" | awk '{print ($1 + $2) / 2}'\n  \
    \  else\n        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i\n    local m\n    local n\n    local\
    \ s\n    local t\n    local x\n    local y\n    n=${#l[@]}\n    if ((n == 0));\
    \ then\n        echo 0\n        return\n    fi\n    if ((n == 1)); then\n    \
    \    echo ${l[0]}\n        return\n    fi\n    for ((i = 0; i < n; i++)); do\n\
    \        x=${l[i]}\n        for ((j = i; j > 0 && x < ${l[j - 1]}; j--)); do\n\
    \            l[j]=${l[j - 1]}\n        done\n        l[j]=$x\n    done\n    if\
    \ ((n % 2 == 1)); then\n        echo ${l[n / 2]}\n    else\n        m=$((n / 2))\n\
    \        s=0\n        for ((i = m - 1; i <= m; i++)); do\n            s=$(echo\
    \ \"$s + ${l[i]}\" | bc)\n        done\n        t=$(echo \"$s / 2\" | bc -l)\n\
    \        echo $t\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(( ${#l[@]} / 2 ))\n    local s=${l[@]}\n\
    \    local n=${#l[@]}\n    local i\n    for (( i=0; i<m; i++ )); do\n        s=${s#*\
    \ }\n    done\n    if (( n % 2 == 1 )); then\n        echo \"${s%% *}\"\n    else\n\
    \        local a=${s%% *}\n        s=${s#* }\n        echo $(( (a + ${s%% *})\
    \ / 2 ))\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    local r=$(echo \"${l[$m]} + ${l[$((m + 1))]}\"\
    \ | bc -l)\n    echo \"$(echo \"$r / 2\" | bc -l)\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n    if (( ${#l[@]} % 2 ==\
    \ 1 )); then\n        echo ${v[$m]}\n    else\n        echo $(( (${v[$m-1]} +\
    \ ${v[$m]}) / 2 ))\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local n=${#l[@]}\n    local m=$((n/2))\n\
    \    local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo $@ | tr \" \" \"\\n\" | sort -n)\n    local n=$(echo\
    \ $l | wc -w)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo $(echo\
    \ $l | cut -d \" \" -f $m,$((m+1)) | awk '{print ($1+$2)/2}')\n    else\n    \
    \    echo $(echo $l | cut -d \" \" -f $((m+1)))\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$(echo\
    \ \"${#l[@]} / 2\" | bc)\n    if [ $(( ${#l[@]} % 2 )) -eq 0 ]; then\n       \
    \ echo \"(${l[$n]} + ${l[$((n-1))]})/2\" | bc -l\n    else\n        echo \"${l[$n]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local i=0\n \
    \   local j=0\n    local m=0\n    local t=0\n    local s=0\n    for i in $(seq\
    \ 0 $n); do\n        m=$i\n        for j in $(seq $((i + 1)) $n); do\n       \
    \     if [[ ${l[$j]} -lt ${l[$m]} ]]; then\n                m=$j\n           \
    \ fi\n        done\n        t=${l[$i]}\n        l[$i]=${l[$m]}\n        l[$m]=$t\n\
    \    done\n    if [[ $(($n % 2)) -eq 0 ]]; then\n        s=$(($n / 2))\n     \
    \   echo \"$(echo \"scale=1; (${l[$s]} + ${l[$((s + 1))]})/2\" | bc)\"\n    else\n\
    \        echo \"${l[$((n / 2))]}\"\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$(($n\
    \ - 1))]})) / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local t=0\n    local s=0\n    local r=0\n    local p=0\n \
    \   local q=0\n    local n=0\n    local o=0\n    local d=0\n    local c=0\n  \
    \  local b=0\n    local a=0\n    local z=0\n    local y=0\n    local x=0\n   \
    \ local w=0\n    local v=0\n    local u=0\n    local g=0\n    local f=0\n    local\
    \ e=0\n    local h=0\n    local l=0\n    local g=0\n    local f=0\n    local e=0\n\
    \    local h=0\n    local l=0\n    local g=0\n    local f=0\n    local e=0\n \
    \   local h=0\n    local l=0\n    local g=0\n    local f=0\n    local e=0\n  \
    \  local h=0\n    local l=0\n    local g=0\n    local f=0\n    local e=0\n   \
    \ local h=0\n    local l=0\n    local g=0\n    local f=0\n    local e=0\n    local\
    \ h=0\n    local l=0\n    local g=0\n    local f=0\n    local e=0\n    local h=0\n\
    \    local l=0\n    local g=0\n    local f=0\n    local e=0\n    local h=0\n \
    \   local l=0\n    local g=0\n    local f=0\n    local e=0\n    local h=0\n  \
    \  local l=0\n    local g=0\n    local f=0\n    local e=0\n    local h=0\n   \
    \ local l=0\n    local g=0\n    local f=0\n    local e=0\n    local h=0\n    local\
    \ l=0\n    local g=0\n    local f=0\n    local e=0\n    local h=0\n    local l=0\n\
    \    local g=0\n    local f=0\n\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}/2))\n\
    \    if ((${#l[@]}%2==0)); then\n        echo \"$((${l[$n]}+${l[$((n-1))]}))/2.0\"\
    \ | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local m=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$m-1]} + ${l[$m]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo $(echo \"scale=1;\
    \ (${l[$n]} + ${l[$n-1]})/2\" | bc)\n    else\n        echo ${l[$n]}\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(sort -n <<<\"$*\"))\n    local n=$((${#l[@]} - 1))\n\
    \    local m=$((n / 2))\n    local r=$(echo \"scale=1; ${l[$m]} + ${l[$((m + 1))]}\"\
    \ | bc)\n    echo \"${r%%.*}\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m / 2))\n \
    \   local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    if ((m % 2 == 0));\
    \ then\n        echo \"$(((s[n-1] + s[n]) / 2))\"\n    else\n        echo \"${s[n]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local n=${#l[@]}\n  local m=$((n/2))\n  local s=${l[$m]}\n\
    \  if ((n%2==0)); then\n    s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n  fi\n\
    \  echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m + 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n  local n=$((${#l[@]}\
    \ / 2))\n  if (( ${#l[@]} % 2 == 0 )); then\n    echo \"$((${l[$n]} + ${l[$((n\
    \ - 1))]})) / 2.0\" | bc -l\n  else\n    echo \"${l[$n]}\"\n  fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$(($n / 2))\n\
    \    local s=${l[$m]}\n    if (($n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=${l[$m]}\n\
    \    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo \"scale=1; (${l[$m - 1]}\
    \ + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=${l[$m]}\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        ((--m))\n        s=$(echo \"scale=1;\
    \ (${l[$m]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m / 2))\n \
    \   local s=${l[$n]}\n    if ((m % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$n]} + ${l[$((n - 1))]})/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m - 1))p;$((m + 1))p\" | awk '{print ($1 + $2) /\
    \ 2}'\n    else\n        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=${l[@]}\n    local i\n    for ((i=0; i<n; i++));\
    \ do\n        t[i]=$(echo \"${s[i]}\" | sed 's/^-//')\n    done\n    IFS=$'\\\
    n'\n    s=($(sort -n <<<\"${s[*]}\"))\n    t=($(sort -n <<<\"${t[*]}\"))\n   \
    \ unset IFS\n    if ((n%2==1)); then\n        echo \"${s[m]}\"\n    else\n   \
    \     echo \"$(bc -l <<<\"0.5*(${s[m-1]}+${s[m]})\" | sed 's/^\\./0./')\"\n  \
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i\n    local j\n\
    \    local tmp\n    for ((i=0; i<m; i++)); do\n        for ((j=i+1; j<m; j++));\
    \ do\n            if (($(echo \"${l[$i]} > ${l[$j]}\" | bc -l))); then\n     \
    \           tmp=${l[$i]}\n                l[$i]=${l[$j]}\n                l[$j]=$tmp\n\
    \            fi\n        done\n    done\n    if (($(echo \"$m % 2 == 0\" | bc\
    \ -l))); then\n        echo \"$(echo \"scale=1; (${l[$(($m/2-1))]} + ${l[$(($m/2))]})\
    \ / 2\" | bc -l)\"\n    else\n        echo \"${l[$(($m/2))]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m - 1))p\"\n        echo \"$l\" | sed -n \"$((m\
    \ + 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n        echo \"$l\" | sed\
    \ -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        local p=$((m - 1))\n\
    \        s=$(echo \"scale=1; (${l[$m]} + ${l[$p]})/2\" | bc)\n    fi\n    echo\
    \ \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$(($n\
    \ - 1))]})) / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i\n    local j\n\
    \    local tmp\n    for ((i=0; i<m; i++)); do\n        for ((j=i+1; j<m; j++));\
    \ do\n            if (( $(echo \"${l[i]} > ${l[j]}\" | bc -l) )); then\n     \
    \           tmp=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$tmp\n\
    \            fi\n        done\n    done\n    if (( $(echo \"$m % 2 == 0\" | bc\
    \ -l) )); then\n        echo \"$(echo \"scale=1; (${l[$((m/2-1))]} + ${l[$((m/2))]})\
    \ / 2\" | bc -l)\"\n    else\n        echo \"${l[$((m/2))]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m - 1))p;$((m + 1))p\" | awk '{print ($1 + $2) /\
    \ 2}'\n    else\n        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]}-1))\n    local m=$(($n/2))\n\
    \    local l2=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n    if (( $n % 2 ==\
    \ 0 )); then\n        echo $(echo \"scale=1; (${l2[$m]}+${l2[$m+1]})/2\" | bc)\n\
    \    else\n        echo ${l2[$m]}\n    fi\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local t=0\n    for ((i=0; i<m; i++)); do\n        for ((j=i+1;\
    \ j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n               \
    \ t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n         \
    \   fi\n        done\n    done\n    if ((m % 2 == 0)); then\n        k=$((m /\
    \ 2))\n        echo \"$(echo \"scale=1; (${l[k]} + ${l[k-1]}) / 2\" | bc)\"\n\
    \    else\n        k=$((m / 2))\n        echo \"${l[k]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$(($n\
    \ - 1))]})) / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$(($n / 2))\n\
    \    local s=${l[$m]}\n    if (($n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n   \
    \ median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\")\
    \ = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(sort -n <<<\"$@\"))\n    local n=$((${#l[@]} / 2))\n\
    \    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$((n - 1))]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r\n    if ((n%2==0));\
    \ then\n        r=$(echo \"${s[m-1]}\" \"${s[m]}\" | awk '{print ($1+$2)/2}')\n\
    \    else\n        r=${s[m]}\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n  local n=$(echo\
    \ \"$l\" | wc -l)\n  local m=$((n/2))\n  if ((n%2==0)); then\n    echo \"$l\"\
    \ | sed -n \"$m,$((m+1))p\" | awk '{print ($1+$2)/2}'\n  else\n    echo \"$l\"\
    \ | sed -n \"$((m+1))p\"\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    l=($@)\n    n=${#l[@]}\n    if (( n == 0 )); then\n        echo\
    \ \"0\"\n    elif (( n == 1 )); then\n        echo \"${l[0]}\"\n    else\n   \
    \     l=($(printf \"%f\\n\" \"${l[@]}\" | sort -n))\n        if (( n % 2 == 1\
    \ )); then\n            echo \"${l[n/2]}\"\n        else\n            echo \"\
    $(echo \"scale=1; (${l[n/2-1]} + ${l[n/2]}) / 2\" | bc)\"\n        fi\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]}/2\" | bc)\n    local\
    \ r=$(echo \"${l[$m]}\" | bc)\n    if (( ${#l[@]} % 2 == 0 )); then\n        local\
    \ lm=$(echo \"$m-1\" | bc)\n        local lr=$(echo \"${l[$lm]}\" | bc)\n    \
    \    r=$(echo \"($r+$lr)/2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local m=$(( ${#l[@]} / 2 ))\n  local s=${l[$m]}\n\
    \  (( ${#l[@]} % 2 == 0 )) && s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc\
    \ -l)\n  echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m - 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m + 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$1\n    local m=$(echo \"$l\" | wc -w)\n    local n=$(($m/2))\n\
    \    local s=$(echo \"$l\" | sort -n)\n    if [ $(($m%2)) -eq 0 ]; then\n    \
    \    echo \"$s\" | cut -d' ' -f$n | awk '{print ($1+$2)/2}'\n    else\n      \
    \  echo \"$s\" | cut -d' ' -f$(($n+1))\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i\n    local j\n\
    \    local t\n    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m; j++)); do\n\
    \            if ((${l[i]} > ${l[j]})); then\n                t=${l[i]}\n     \
    \           l[i]=${l[j]}\n                l[j]=$t\n            fi\n        done\n\
    \    done\n    if ((m % 2 == 1)); then\n        echo ${l[m/2]}\n    else\n   \
    \     echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]} / 2\" | bc)\n    local\
    \ r=$(echo \"${l[$m]} + ${l[$(($m - 1))]}\" | bc)\n    echo \"$r / 2\" | bc -l\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=${l[$m]}\n\
    \    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo \"scale=1; (${l[$m - 1]}\
    \ + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=${l[$m]}\n\
    \    ((${#l[@]} % 2 == 0)) && s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc\
    \ -l)\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    local r=$(echo \"${l[$m]} + ${l[$((m + 1))]}\"\
    \ | bc -l)\n    echo \"$r / 2\" | bc -l\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | head -n $((m + 1)) | tail -n 1\n    else\n        echo \"$l\"\
    \ | head -n $((m + 1)) | tail -n 1\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$(($m / 2))\n\
    \    if (($m % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$(($n - 1))]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    l=($@)\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=($(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n))\n    n=$((${#l[@]} / 3))\n    if (( $n % 2\
    \ == 1 )); then\n        echo \"${l[$n]}\"\n    else\n        echo \"$(echo \"\
    scale=1; (${l[$n]} + ${l[$n-1]}) / 2\" | bc -l)\"\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2)); then\n        echo\
    \ \"$l\" | sed -n \"$((m + 1))p\"\n    else\n        echo \"$l\" | sed -n \"$((m\
    \ + 1))p\" | awk '{print ($1 + $(m)) / 2}' m=$(echo \"$l\" | sed -n \"${m}p\"\
    )\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local len=${#l[@]}\n  local mid=$((len / 2))\n \
    \ local sorted=($(for e in \"${l[@]}\"; do echo $e; done | sort -n))\n  if ((len\
    \ % 2 == 0)); then\n    echo \"$(bc -l <<< \"scale=1; (${sorted[mid]} + ${sorted[mid-1]})\
    \ / 2\")\"\n  else\n    echo \"${sorted[mid]}\"\n  fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i\n    local m\n    local s\n    local\
    \ n\n    local v\n    local d\n    local r\n    local t\n    local p\n    local\
    \ q\n    local c\n    local j\n    local k\n    local x\n    local y\n    local\
    \ z\n    local u\n    local w\n    local o\n    local a\n    local b\n    local\
    \ e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local\
    \ k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local aa\n    local ab\n    local\
    \ ac\n    local ad\n    local ae\n    local af\n    local ag\n    local ah\n \
    \   local ai\n    local aj\n    local ak\n    local al\n    local am\n    local\
    \ an\n    local ao\n    local ap\n    local aq\n    local ar\n    local as\n \
    \   local at\n    local au\n    local av\n    local aw\n    local ax\n    local\
    \ ay\n    local az\n    local ba\n    local bb\n    local bc\n    local bd\n \
    \   local be\n    local bf\n    local bg\n    local bh\n    local bi\n    local\
    \ bj\n    local bk\n    local bl\n    local bm\n    local bn\n    local bo\n \
    \   local bp\n    local bq\n    local br\n    local bs\n    local bt\n    local\
    \ bu\n    local bv\n    local bw\n    local bx\n    local by\n    local bz\n \
    \   local ca\n    local cb\n    local cc\n    local cd\n    local ce\n    local\
    \ cf\n    local cg\n    local ch\n    local ci\n    local cj\n    local ck\n \
    \   local cl\n    local cm\n    local cn\n    local co\n    local cp\n    local\
    \ cq\n    local cr\n    local cs\n    local ct\n    local cu\n    local cv\n \
    \   local c\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$((n\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo\
    \ \"$s\" | sed -n \"$((m + 1))p\")\n    if ((n % 2 == 0)); then\n        r=$(echo\
    \ \"$r + $(echo \"$s\" | sed -n \"$((m + 2))p\")\" | bc -l)\n        r=$(echo\
    \ \"$r / 2\" | bc -l)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local t=0\n    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m; j++));\
    \ do\n            if ((${l[i]} > ${l[j]})); then\n                t=${l[i]}\n\
    \                l[i]=${l[j]}\n                l[j]=$t\n            fi\n     \
    \   done\n    done\n    if ((m % 2 == 1)); then\n        echo ${l[m/2]}\n    else\n\
    \        echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n    fi\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local i=$((n / 2))\n    local j=$((i + 1))\n    local m=$(echo \"\
    scale=1; (${l[$i]} + ${l[$j]})/2\" | bc)\n    echo $m\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local s=${#l[@]}\n    local m=$((s / 2))\n \
    \   if ((s % 2 == 0)); then\n        echo \"$((${l[m - 1]} + ${l[m]})) / 2.0\"\
    \ | bc -l\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local s=${l[0]}\n    local\
    \ e=${l[$((m-1))]}\n    local m=$(((s+e)/2))\n    echo $m\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local i\n    local m\n\
    \    local s\n    local t\n    local p\n    for ((i=0; i<n; i++)); do\n      \
    \  t=${l[i]}\n        for ((j=i; j>0 && l[j-1]>t; j--)); do\n            l[j]=${l[j-1]}\n\
    \        done\n        l[j]=$t\n    done\n    if ((n%2==1)); then\n        echo\
    \ ${l[n/2]}\n    else\n        m=$((n/2))\n        s=$(echo \"${l[m-1]}+${l[m]}\"\
    \ | bc)\n        p=$(echo \"$s/2\" | bc -l)\n        echo $p\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]}/2))\n    local s=${l[$m]}\n\
    \    if ((${#l[@]}%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$(($n\
    \ - 1))]})) / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l\n    l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n   \
    \ echo \"${l[$((${#l[@]}/2))]}\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i=0\n    local j=0\n    local k=0\n  \
    \  local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n   \
    \ local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local\
    \ w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local\
    \ ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local\
    \ ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local\
    \ al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local\
    \ aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local\
    \ av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local\
    \ ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local\
    \ bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local\
    \ bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local\
    \ bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local\
    \ bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local\
    \ bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local\
    \ ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n    local ci=0\n    local\
    \ cj=0\n    local\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local i\n  local m\n  local n\n  local s\n  local\
    \ t\n  for i in \"${l[@]}\"; do\n    s+=\"$i \"\n  done\n  t=($(echo $s | tr '\
    \ ' '\\n' | sort -n))\n  n=${#t[@]}\n  if ((n % 2 == 1)); then\n    m=$((n / 2))\n\
    \    echo ${t[$m]}\n  else\n    m=$((n / 2))\n    echo $(((${t[$m]} + ${t[$((m\
    \ - 1))]})/2))\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local n=${#l[@]}\n    local m=$((n/2))\n\
    \    local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local i\n    local m\n\
    \    local j\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++));\
    \ do\n            if (( $(echo \"${l[i]} < ${l[j]}\" | bc -l) )); then\n     \
    \           m=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$m\n\
    \            fi\n        done\n    done\n    if (( $(echo \"$n % 2\" | bc -l)\
    \ )); then\n        echo ${l[$((n/2))]}\n    else\n        echo $(echo \"scale=1;\
    \ (${l[$((n/2-1))]} + ${l[$((n/2))]}) / 2\" | bc -l)\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    if ((n == 0)); then\n\
    \        echo 0\n        return\n    fi\n    local m=$((n / 2))\n    if ((n %\
    \ 2 == 0)); then\n        echo \"$(echo \"scale=1; (${l[m - 1]} + ${l[m]}) / 2\"\
    \ | bc -l)\"\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(sort -n <<< \"$*\"))\n    local n=$((${#l[@]} / 2))\n\
    \    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[@]}\n    local t=()\n    local i\n    for ((i = 0; i < n; i++));\
    \ do\n        if ((i != m)); then\n            t+=(${l[i]})\n        fi\n    done\n\
    \    if ((n % 2 == 1)); then\n        echo ${l[m]}\n    else\n        echo $(($(median\
    \ ${t[@]}) + $(median ${t[@]:1})) / 2.0)\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m/2))\n   \
    \ local s=${l[$n]}\n    if ((m%2==0)); then\n        s=$(echo \"scale=1; (${l[$n-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\" | sed -n \"$m p\"\
    )\n    if (( ${#l[@]} % 2 == 0 )); then\n        local r2=$(echo \"$s\" | sed\
    \ -n \"$((m - 1)) p\")\n        r=$(echo \"scale=1; ($r + $r2) / 2\" | bc)\n \
    \   fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m + 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m + 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo $((${l[$n]} + ${l[$n-1]}))/2\
    \ | bc -l\n    else\n        echo ${l[$n]}\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local i=0\n    local s=0\n    for i in $(seq 0 $((n-1))); do\n        s=$(echo\
    \ \"$s + ${l[$i]}\" | bc)\n    done\n    echo \"$s / $n\" | bc -l\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local o\n    for ((i=0;i<n;i++)); do\n        o=${s%% *}\n\
    \        s=${s#* }\n        if [ $i -eq $m ]; then\n            if [ $((n%2))\
    \ -eq 0 ]; then\n                echo \"$(echo \"$o+${s%% *}\" | bc -l)/2\"\n\
    \            else\n                echo \"$o\"\n            fi\n            break\n\
    \        fi\n    done\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=${l[@]}\n    local i\n    for ((i=0; i<m; i++));\
    \ do\n        s=${s#* }\n        t=${t% *}\n    done\n    if ((n%2)); then\n \
    \       echo \"$s\"\n    else\n        echo \"$(echo \"scale=1; (${s% *}+${t#*\
    \ }) / 2\" | bc)\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$(($n / 2))\n\
    \    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r\n    if ((n\
    \ % 2 == 0)); then\n        r=$(echo \"$s\" | sed -n \"$(($m + 1))p\")\n     \
    \   r=$(echo \"scale=1; (${l[$m - 1]} + $r) / 2\" | bc)\n    else\n        r=$(echo\
    \ \"$s\" | sed -n \"$(($m + 1))p\")\n    fi\n    echo \"$r\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local t=0\n    local s=0\n    local r=0\n    local p=0\n \
    \   local q=0\n    local o=0\n    local n=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n  \
    \  local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n\
    \    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local eeee=0\n    local\
    \ ffff\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m/2))\n   \
    \ local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    if ((m%2==0)); then\n\
    \        echo \"$(((s[n-1]+s[n])/2))\"\n    else\n        echo \"${s[n]}\"\n \
    \   fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    local r=$(echo \"${l[$m]} + ${l[$((m + 1))]}\"\
    \ | bc -l)\n    echo \"$r / 2\" | bc -l\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    if ((${#l[@]}\
    \ % 2 == 0)); then\n        echo \"$((${l[$m]} + ${l[$((m - 1))]})) / 2.0\" |\
    \ bc -l\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n   \
    \ median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\")\
    \ = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} / 2))\n    local s=${l[@]}\n\
    \    for ((i = 0; i < n; i++)); do\n        s=${s#* }\n    done\n    echo \"${s%%\
    \ *}\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]} / 2\" | bc)\n    local\
    \ n=$(echo \"${#l[@]} % 2\" | bc)\n    if [ $n -eq 0 ]; then\n        echo \"\
    $(echo \"${l[$m - 1]} + ${l[$m]}\" | bc -l) / 2\" | bc -l\n    else\n        echo\
    \ \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=${l[*]}\n\
    \    for ((i=0; i<m; i++)); do\n        s=${s#* }\n    done\n    s=${s%% *}\n\
    \    echo \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i\n    local m\n    local n\n    local\
    \ s\n    local t\n    for i in \"${l[@]}\"; do\n        ((m++))\n        ((n+=i))\n\
    \    done\n    ((s=n/m))\n    for i in \"${l[@]}\"; do\n        ((t+=i-s))\n \
    \   done\n    echo \"$(echo \"$t/m\" | bc -l)\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''Runtime error (func=(main), adr=4): Divide by zero\n'''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$(($n\
    \ - 1))]})) / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local n=$((m/2))\n   \
    \ local o=$((m%2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n  \
    \  local r=$(echo \"$s\" | sed -n \"${n}p\")\n    if [ $o -eq 0 ]; then\n    \
    \    r=$(echo \"$s\" | sed -n \"${n}p;${n}q\" | awk '{s+=$1}END{print s/2}')\n\
    \    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}/2))\n\
    \    echo \"${l[$n]}\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: -1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local l1=()\n    local l2=()\n    local i\n    for ((i=0; i<n; i++)); do\n \
    \       if ((i < m)); then\n            l1+=(${l[i]})\n        else\n        \
    \    l2+=(${l[i]})\n        fi\n    done\n    if ((n % 2 == 0)); then\n      \
    \  echo $((($(median \"${l1[@]}\") + $(median \"${l2[@]}\")) / 2))\n    else\n\
    \        echo $(median \"${l2[@]}\")\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=60>
  stdout: <_io.BufferedReader name=19>
  timestamp: 1660340436
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m - 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local n=${#l[@]}\n    local m=$((n/2))\n\
    \    local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"${l[$m-1]}\
    \ + $s\" | bc -l)\n        s=$(echo \"scale=1; $s / 2\" | bc -l)\n    fi\n   \
    \ echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local\
    \ r\n    if ((n % 2 == 0)); then\n        r=$(echo \"scale=1; (${s[m-1]} + ${s[m]})\
    \ / 2\" | bc)\n    else\n        r=${s[m]}\n    fi\n    echo $r\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local s=${#l[@]}\n    local m=$((s/2))\n   \
    \ local r=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n | awk \"NR==$m\")\n    if\
    \ ((s % 2 == 0)); then\n        local r2=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort\
    \ -n | awk \"NR==$((m+1))\")\n        r=$(echo \"scale=1; ($r+$r2)/2\" | bc)\n\
    \    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        local s2=${l[$((m-1))]}\n\
    \        s=$(echo \"scale=1; ($s+$s2)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[@]}\n    local t=()\n    for ((i = 0; i < n; i++)); do\n     \
    \   t+=($(echo \"$s\" | tr ' ' '\\n' | sort -n | sed -n \"$((i + 1))p\"))\n  \
    \  done\n    if ((n % 2 == 0)); then\n        echo \"$(bc -l <<< \"scale=1; (${t[m\
    \ - 1]} + ${t[m]}) / 2\")\"\n    else\n        echo \"${t[m]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$(($n\
    \ / 2))\n    local s=${l[*]}\n    for i in $(seq 0 $m); do\n        s=${s#* }\n\
    \    done\n    echo \"${s%% *}\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]} / 2\" | bc)\n    local\
    \ s=$(echo \"${#l[@]} % 2\" | bc)\n    if [ $s -eq 0 ]; then\n        echo \"\
    $(echo \"${l[$m]} + ${l[$m-1]}\" | bc -l) / 2\" | bc -l\n    else\n        echo\
    \ \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m - 1))p;$((m + 1))p\" | awk '{print ($1 + $2) /\
    \ 2}'\n    else\n        echo \"$l\" | sed -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($@)\n  local m=${#l[@]}\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local t=0\n  local s=0\n  local r=0\n  local n=0\n  local d=0\n  local\
    \ p=0\n  local q=0\n  local c=0\n  local b=0\n  local a=0\n  local z=0\n  local\
    \ x=0\n  local w=0\n  local v=0\n  local u=0\n  local g=0\n  local f=0\n  local\
    \ e=0\n  local h=0\n  local o=0\n  local y=0\n  local x=0\n  local w=0\n  local\
    \ v=0\n  local u=0\n  local g=0\n  local f=0\n  local e=0\n  local h=0\n  local\
    \ o=0\n  local y=0\n  local x=0\n  local w=0\n  local v=0\n  local u=0\n  local\
    \ g=0\n  local f=0\n  local e=0\n  local h=0\n  local o=0\n  local y=0\n  local\
    \ x=0\n  local w=0\n  local v=0\n  local u=0\n  local g=0\n  local f=0\n  local\
    \ e=0\n  local h=0\n  local o=0\n  local y=0\n  local x=0\n  local w=0\n  local\
    \ v=0\n  local u=0\n  local g=0\n  local f=0\n  local e=0\n  local h=0\n  local\
    \ o=0\n  local y=0\n  local x=0\n  local w=0\n  local v=0\n  local u=0\n  local\
    \ g=0\n  local f=0\n  local e=0\n  local h=0\n  local o=0\n  local y=0\n  local\
    \ x=0\n  local w=0\n  local v=0\n  local u=0\n  local g=0\n  local f=0\n  local\
    \ e=0\n  local h=0\n\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"$((m-1))p;$((m+1))p\" | awk '{print ($1+$2)/2}'\n    else\n\
    \        echo \"$l\" | sed -n \"$((m+1))p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$1\n    local n=$(echo \"$l\" | wc -w)\n    local m=$(echo\
    \ \"$n / 2\" | bc)\n    local i=0\n    for x in $l; do\n        if [ $i -eq $m\
    \ ]; then\n            echo \"$x\"\n            return\n        fi\n        i=$(($i\
    \ + 1))\n    done\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    if (( ${#l[@]} % 2 == 0 )); then\n   \
    \     echo \"$(echo \"$s\" | sed -n \"$m,$(($m + 1))p\" | awk '{print ($1 + $2)\
    \ / 2}')\"\n    else\n        echo \"$(echo \"$s\" | sed -n \"$(($m + 1))p\")\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]}/2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    if (( ${#l[@]} % 2 == 0 )); then\n   \
    \     echo $(echo \"$s\" | sed -n \"$m,$(($m+1))p\" | awk '{print ($1+$2)/2}')\n\
    \    else\n        echo $(echo \"$s\" | sed -n \"$(($m+1))p\")\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r\n    if ((n\
    \ % 2 == 0)); then\n        r=$(echo \"$s\" | sed -n \"$((m - 1))p;$((m + 1))p\"\
    \ | awk '{print ($1 + $2) / 2}')\n    else\n        r=$(echo \"$s\" | sed -n \"\
    $((m + 1))p\")\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if (($((${#l[@]} % 2)) == 0)); then\n        echo \"$((${l[$n]} +\
    \ ${l[$(($n - 1))]})) / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n \
    \   fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | head -n $m | tail -n 1\n    else\n        echo \"$l\" | head -n $((m+1))\
    \ | tail -n 1\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local t=0\n    for ((i=0; i<m; i++)); do\n        for ((j=i+1;\
    \ j<m; j++)); do\n            if ((l[i] > l[j])); then\n                t=${l[i]}\n\
    \                l[i]=${l[j]}\n                l[j]=$t\n            fi\n     \
    \   done\n    done\n    if ((m % 2 == 0)); then\n        k=$((m / 2))\n      \
    \  echo $(((l[k-1] + l[k]) / 2))\n    else\n        k=$((m / 2))\n        echo\
    \ ${l[k]}\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[$m]}\n    ((n % 2 == 0)) && s=$(echo \"scale=1; (${l[$m - 1]}\
    \ + $s) / 2\" | bc)\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r\n    if ((n%2==0));\
    \ then\n        r=$(echo \"${s[m-1]}\" \"${s[m]}\" | awk '{print ($1+$2)/2}')\n\
    \    else\n        r=${s[m]}\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r\n    if ((n\
    \ % 2 == 0)); then\n        r=$(echo \"${s[m-1]}\" \"${s[m]}\" | awk '{print ($1\
    \ + $2) / 2}')\n    else\n        r=${s[m]}\n    fi\n    echo \"$r\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n | sed -n \"${m}p\")\n  \
    \  if ((n%2==0)); then\n        local s2=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort\
    \ -n | sed -n \"$((m-1))p\")\n        echo \"$(echo \"scale=1; ($s+$s2)/2\" |\
    \ bc -l)\"\n    else\n        echo \"$s\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\"\
    \ | sed -n \"$((m + 1))p\")\n    if ((n % 2 == 0)); then\n        local r2=$(echo\
    \ \"$s\" | sed -n \"$((m))p\")\n        r=$(echo \"scale=1; ($r + $r2) / 2\" |\
    \ bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$1\n    local m=$(echo \"$l\" | tr ' ' '\\n' | sort -n\
    \ | awk '{a[i++]=$0} END {print a[int(i/2)]}')\n    echo \"$m\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    local r\n    if ((n % 2 == 0)); then\n  \
    \      r=$(echo \"scale=1; (${l[m]} + ${l[m+1]}) / 2\" | bc)\n    else\n     \
    \   r=${l[m]}\n    fi\n    echo $r\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$(($n\
    \ - 1))]})) / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if [ $((n%2)) -eq 0 ]; then\n   \
    \     echo \"$l\" | sed -n \"$((m+1))p\" | awk '{print ($1+$2)/2}'\n    else\n\
    \        echo \"$l\" | sed -n \"$((m+1))p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local tmp=0\n    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m; j++));\
    \ do\n            if ((${l[i]} > ${l[j]})); then\n                tmp=${l[i]}\n\
    \                l[i]=${l[j]}\n                l[j]=$tmp\n            fi\n   \
    \     done\n    done\n    if (($m % 2 == 1)); then\n        echo ${l[$((m/2))]}\n\
    \    else\n        echo $(((${l[$((m/2))]} + ${l[$((m/2-1))]})/2))\n    fi\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]} / 2\" | bc)\n    local\
    \ s=$(echo \"${#l[@]} % 2\" | bc)\n    if [ $s -eq 0 ]; then\n        echo \"\
    $(echo \"scale=1; (${l[$m]} + ${l[$m-1]}) / 2\" | bc)\"\n    else\n        echo\
    \ \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m + 1))p\"\n    else\n        echo \"$l\" | sed\
    \ -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\" | sed -n \"${m}p\"\
    )\n    if (( ${#l[@]} % 2 == 0 )); then\n        local r2=$(echo \"$s\" | sed\
    \ -n \"$((m - 1))p\")\n        echo \"scale=1; ($r + $r2) / 2\" | bc\n    else\n\
    \        echo \"$r\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[@]}\n    local t=${l[@]}\n    local i\n    for ((i = 0; i < n;\
    \ i++)); do\n        s=${s// ${l[i]}/}\n        t=${t// ${l[n - i - 1]}/}\n  \
    \      if [[ $((i + 1)) -eq $m ]]; then\n            if [[ $((n % 2)) -eq 0 ]];\
    \ then\n                echo $(echo \"scale=1; (${l[i]} + ${l[n - i - 1]})/2\"\
    \ | bc)\n                return\n            else\n                echo ${l[i]}\n\
    \                return\n            fi\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]}/2))\n    local s=${l[$m]}\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo \"scale=1; (${l[$m-1]}\
    \ + $s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\"\
    \ | sed -n \"$((m + 1))p\")\n    if ((n % 2 == 0)); then\n        r=$(echo \"\
    $r + $(echo \"$s\" | sed -n \"$((m))p\")\" | bc -l)\n        r=$(echo \"$r / 2\"\
    \ | bc -l)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    if ((n % 2)); then\n        echo \"${l[$m]}\"\
    \n    else\n        echo \"$(echo \"scale=1; (${l[$m]} + ${l[$((m + 1))]}) / 2\"\
    \ | bc)\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    if ((n == 0)); then\n\
    \        echo 0\n    elif ((n == 1)); then\n        echo ${l[0]}\n    elif ((n\
    \ % 2 == 1)); then\n        echo $(echo \"$s\" | sed -n \"$((m + 1))p\")\n   \
    \ else\n        local a=$(echo \"$s\" | sed -n \"$((m))p\")\n        local b=$(echo\
    \ \"$s\" | sed -n \"$((m + 1))p\")\n        echo $(((a + b) / 2))\n    fi\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"$m,$((m+1))p\" | awk '{print ($1+$2)/2}'\n    else\n     \
    \   echo \"$l\" | sed -n \"$((m+1))p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$(($n\
    \ / 2))\n    local l1=($(echo ${l[@]} | tr ' ' '\\n' | sort -n | head -n $m))\n\
    \    local l2=($(echo ${l[@]} | tr ' ' '\\n' | sort -n | tail -n $m))\n    if\
    \ [ $((n % 2)) -eq 0 ]; then\n        echo $(echo \"scale=1; (${l1[-1]} + ${l2[0]})\
    \ / 2\" | bc)\n    else\n        echo ${l2[0]}\n    fi\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$#\n    local m=$((n/2))\n    local\
    \ s\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n    \
    \        if ((${l[i]} > ${l[j]})); then\n                s=${l[i]}\n         \
    \       l[i]=${l[j]}\n                l[j]=$s\n            fi\n        done\n\
    \    done\n    if ((n%2 == 0)); then\n        echo \"$(bc -l <<< \"${l[m-1]} +\
    \ ${l[m]}\") / 2\"\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"${l[$m-1]} + $s\"\
    \ | bc -l)\n        s=$(echo \"scale=1; $s / 2\" | bc -l)\n    fi\n    echo \"\
    $s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    l=($@)\n    n=${#l[@]}\n    if ((n == 0)); then\n        echo\
    \ 0\n        return\n    fi\n    if ((n == 1)); then\n        echo ${l[0]}\n \
    \       return\n    fi\n    if ((n == 2)); then\n        echo $(((${l[0]} + ${l[1]})/2))\n\
    \        return\n    fi\n    # Sort the list.\n    IFS=$'\\n' l=($(sort <<<\"\
    ${l[*]}\"))\n    unset IFS\n    # Get the middle element.\n    if ((n % 2 == 1));\
    \ then\n        echo ${l[$((n/2))]}\n    else\n        echo $(((${l[$((n/2-1))]}\
    \ + ${l[$((n/2))]})/2))\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"$((m-1))p;$((m+1))p\" | awk '{print ($1+$2)/2}'\n    else\n\
    \        echo \"$l\" | sed -n \"$((m+1))p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    local r=$(echo \"${l[$m]} + ${l[$((m + 1))]}\"\
    \ | bc -l)\n    echo \"$r / 2\" | bc -l\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i\n    for ((i=0; i<${#l[@]}; i++)); do\n\
    \        l[i]=$(echo \"scale=3; ${l[i]} / 1\" | bc)\n    done\n    echo \"${l[*]}\"\
    \ | tr ' ' '\\n' | sort -n | awk '{\n        if (NR % 2 == 1) {\n            print\
    \ $1\n        } else {\n            print ($1 + $(NR/2)) / 2\n        }\n    }'\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    local r=$(echo \"scale=1; (${l[$m]} + ${l[$((m\
    \ + 1))]})/2\" | bc)\n    echo $r\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local tmp=0\n    for ((i=0; i<m; i++)); do\n        for ((j=i+1;\
    \ j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n               \
    \ tmp=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$tmp\n     \
    \       fi\n        done\n    done\n    if ((m % 2 == 0)); then\n        echo\
    \ \"$(bc -l <<< \"scale=1; (${l[m/2-1]} + ${l[m/2]}) / 2\")\"\n    else\n    \
    \    echo \"${l[m/2]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local n=${#l[@]}\n    local m=$((n / 2))\n\
    \    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        local s2=${l[$((m\
    \ - 1))]}\n        s=$(echo \"scale=1; ($s + $s2) / 2\" | bc)\n    fi\n    echo\
    \ \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(( ${#l[@]} / 2 ))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\" | sed -n \"$m p\"\
    )\n    if (( ${#l[@]} % 2 == 0 )); then\n        local r2=$(echo \"$s\" | sed\
    \ -n \"$(( m - 1 )) p\")\n        echo \"scale=1; ($r + $r2) / 2\" | bc\n    else\n\
    \        echo \"$r\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo $@ | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ / 2))\n    if (( ${#l[@]} % 2 == 1 )); then\n        echo ${l[$n]}\n    else\n\
    \        echo $(((${l[$n-1]} + ${l[$n]})))\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]}/2))\n    local s=($(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n))\n    if (( ${#l[@]}%2 == 1 )); then\n    \
    \    echo \"${s[$m]}\"\n    else\n        echo \"$((${s[$m-1]}+${s[$m]}))/2\"\
    \ | bc -l\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n  local n=$(echo\
    \ \"$l\" | wc -l)\n  local m=$((n/2))\n  echo \"$l\" | sed -n \"${m}p\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | head -n $((m + 1)) | tail -n 1\n    else\n        echo \"$l\"\
    \ | head -n $((m + 1)) | tail -n 1\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m - 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m + 1))p\"\n    else\n        echo \"$l\" | sed\
    \ -n \"$((m + 1))p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2)); then\n        echo \"\
    $l\" | sed -n \"$((m+1))p\"\n    else\n        echo \"$l\" | sed -n \"$m,$((m+1))p\"\
    \ | awk '{print ($1+$2)/2}'\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$1\n    local m=$(echo \"$l\" | wc -w)\n    local n=$(echo\
    \ \"$l\" | sort -n | awk '{print $'$((m/2+1))'}')\n    if (( m % 2 == 0 )); then\n\
    \        local o=$(echo \"$l\" | sort -n | awk '{print $'$((m/2))'}')\n      \
    \  echo \"scale=1; ($n+$o)/2\" | bc\n    else\n        echo \"$n\"\n    fi\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=${l[@]}\n    local i\n    for ((i=0; i<n; i++));\
    \ do\n        t[i]=$(echo \"scale=2; ${l[i]}/1.0\" | bc)\n    done\n    IFS=$'\\\
    n'\n    s=($(sort <<<\"${s[*]}\"))\n    t=($(sort <<<\"${t[*]}\"))\n    if ((n%2==1));\
    \ then\n        echo ${s[m]}\n    else\n        echo $(echo \"scale=2; (${t[m-1]}+${t[m]})/2.0\"\
    \ | bc)\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n  local l=($(sort -n <<<\"$*\"))\n  local n=$((${#l[@]}/2))\n  echo\
    \ \"${l[$n]}\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]}/2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r\n    if (($#%2==1)); then\n  \
    \      r=$(printf \"%s\\n\" \"$s\" | sed -n \"${m}p\")\n    else\n        r=$(printf\
    \ \"%s\\n\" \"$s\" | sed -n \"${m}p;${m}q\" | awk '{print ($1+$2)/2}')\n    fi\n\
    \    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(sort -n <<<\"$*\"))\n    local n=$((${#l[@]} - 1))\n\
    \    local m=$((n / 2))\n    local r=$(echo \"scale=1; ${l[$m]} + ${l[$((m + 1))]}\"\
    \ | bc)\n    echo \"${r%%.*}\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n/2))\n    if ((n%2==0)); then\n        echo\
    \ \"$l\" | sed -n \"$((m-1))p\" | awk '{print ($1+$2)/2}'\n    else\n        echo\
    \ \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=${l[@]}\n    local t=${l[@]}\n    local i\n    for ((i=0; i<m; i++));\
    \ do\n        t=${t/ ${s%% *} /}\n        s=${s#* }\n    done\n    if ((n%2));\
    \ then\n        echo ${s%% *}\n    else\n        echo $(((${s%% *}+${t%% *})/2))\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r\n    if ((n%2==0));\
    \ then\n        r=$(echo \"${s[m-1]}\" \"${s[m]}\" | awk '{print ($1+$2)/2}')\n\
    \    else\n        r=${s[m]}\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s\n    if ((n == 0)); then\n        echo 0\n    elif ((n == 1)); then\n\
    \        echo ${l[0]}\n    elif ((n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[m - 1]} + ${l[m]}) / 2\" | bc)\n        echo $s\n    else\n        echo\
    \ ${l[m]}\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(echo \"${#l[@]} / 2\" | bc)\n    local\
    \ s=$(echo \"${#l[@]} % 2\" | bc)\n    if [ $s -eq 0 ]; then\n        echo \"\
    ${l[$m]}\"\n    else\n        echo \"$(echo \"scale=1; (${l[$m]} + ${l[$m-1]})\
    \ / 2\" | bc)\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$((n\
    \ / 2))\n    local s=${l[@]}\n    for ((i = 0; i < m; i++)); do\n        s=${s#*\
    \ }\n    done\n    if ((n % 2 == 0)); then\n        s=${s% *}\n        echo \"\
    scale=1; (${s%% *} + ${s##* })/2\" | bc\n    else\n        echo ${s%% *}\n   \
    \ fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: -1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$(($n\
    \ / 2))\n    local s=$(($n % 2))\n    local l1=()\n    local l2=()\n    local\
    \ i=0\n    while [ $i -le $m ]; do\n        l1+=(${l[$i]})\n        i=$(($i +\
    \ 1))\n    done\n    i=$(($m + 1))\n    while [ $i -le $n ]; do\n        l2+=(${l[$i]})\n\
    \        i=$(($i + 1))\n    done\n    local m1=$(median \"${l1[@]}\")\n    local\
    \ m2=$(median \"${l2[@]}\")\n    if [ $s -eq 0 ]; then\n        echo $(echo \"\
    scale=1; ($m1 + $m2) / 2\" | bc)\n    else\n        echo $m2\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=45>
  stdout: <_io.BufferedReader name=43>
  timestamp: 1660340436
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=$((${#l[@]} - 1))\n    local m=$(($n\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=$(echo\
    \ \"$s\" | sed -n \"$(($m + 1))p\")\n    if [ $(($n % 2)) -eq 0 ]; then\n    \
    \    v=$(echo \"$v + $(echo \"$s\" | sed -n \"$(($m + 2))p\")\" | bc -l)\n   \
    \     v=$(echo \"$v / 2\" | bc -l)\n    fi\n    echo \"$v\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$(( ${#l[@]} / 2 ))\n    local s=(\"\
    ${l[@]}\")\n    local t\n    for ((i=0; i<m; i++)); do\n        for ((j=i; j<${#s[@]};\
    \ j++)); do\n            if (( $(echo \"${s[i]} > ${s[j]}\" | bc -l) )); then\n\
    \                t=${s[i]}\n                s[i]=${s[j]}\n                s[j]=$t\n\
    \            fi\n        done\n    done\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        echo \"$(echo \"scale=1; (${s[m-1]} + ${s[m]})/2\" | bc -l)\"\n    else\n\
    \        echo \"${s[m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | head -n $((m + 1)) | tail -n 1\n    else\n        echo \"$l\"\
    \ | head -n $((m + 1)) | tail -n 1\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=(\"$@\")\n    local n=${#l[@]}\n    local i=0\n    local\
    \ m=0\n    local s=0\n    local t=0\n    local r=0\n    local p=0\n    local q=0\n\
    \    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n \
    \   local j=0\n    local k=0\n    local l=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n\
    \    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n\
    \    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n\
    \    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n\
    \    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n\
    \    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n\
    \    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n\
    \    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n\
    \    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n\
    \    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n\
    \    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n\
    \    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n\
    \    local ch=\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | head -n $((m + 1)) | tail -n 1\n    else\n        echo \"$l\"\
    \ | head -n $((m + 1)) | tail -n 1\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n    if ((n % 2 == 0));\
    \ then\n        echo \"$(bc -l <<< \"scale=1; (${s[m - 1]} + ${s[m]}) / 2\")\"\
    \n    else\n        echo \"${s[m]}\"\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local m=$((${#l[@]} / 2))\n    local s=$(printf\
    \ \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"$s\" | sed -n \"${m}p\"\
    )\n    if (($((${#l[@]} % 2)) == 0)); then\n        local r2=$(echo \"$s\" | sed\
    \ -n \"$(($m + 1))p\")\n        r=$(echo \"scale=1; ($r + $r2) / 2\" | bc)\n \
    \   fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($(echo \"$@\" | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]}\
    \ - 1))\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n        echo \"\
    $(((${l[m]} + ${l[m+1]})/2))\"\n    else\n        echo \"${l[m]}\"\n    fi\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[$m]}\n    if ((n % 2 == 0)); then\n        s=$(echo \"scale=1;\
    \ (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n   \
    \ median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\")\
    \ = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$(echo \"$@\" | tr ' ' '\\n' | sort -n)\n    local n=$(echo\
    \ \"$l\" | wc -l)\n    local m=$((n / 2))\n    if ((n % 2 == 0)); then\n     \
    \   echo \"$l\" | sed -n \"$((m - 1))p\" | awk '{print ($1 + $2) / 2}'\n    else\n\
    \        echo \"$l\" | sed -n \"${m}p\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local n=${#l[@]}\n    local m=$((n / 2))\n \
    \   local s=${l[@]}\n    local t=()\n    for i in $(seq 0 $((n - 1))); do\n  \
    \      t[i]=${l[$i]}\n    done\n    for i in $(seq 0 $((n - 2))); do\n       \
    \ for j in $(seq $((i + 1)) $((n - 1))); do\n            if ((${t[$i]} > ${t[$j]}));\
    \ then\n                local tmp=${t[$i]}\n                t[$i]=${t[$j]}\n \
    \               t[$j]=$tmp\n            fi\n        done\n    done\n    if ((n\
    \ % 2 == 1)); then\n        echo ${t[$m]}\n    else\n        echo $(((${t[$((m\
    \ - 1))]} + ${t[$m]}) / 2))\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local i=0\n    local m=0\n    local n=${#l[@]}\n\
    \    local t=0\n    for i in ${l[@]}; do\n        m=$(echo \"$m + $i\" | bc)\n\
    \    done\n    m=$(echo \"scale=1; $m / $n\" | bc)\n    for i in ${l[@]}; do\n\
    \        t=$(echo \"$t + ($i - $m)^2\" | bc)\n    done\n    t=$(echo \"scale=1;\
    \ sqrt($t / $n)\" | bc)\n    echo \"$m $t\"\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=($@)\n    local l_len=${#l[@]}\n    local l_mid=$((l_len\
    \ / 2))\n    local l_sorted=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n    if\
    \ ((l_len % 2 == 0)); then\n        echo \"$(bc -l <<< \"${l_sorted[$l_mid]} +\
    \ ${l_sorted[$((l_mid - 1))]}\") / 2\"\n    else\n        echo \"${l_sorted[$l_mid]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    median() {\n    local l=$1\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n\
    \    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n\
    \    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n\
    \    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n\
    \    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n\
    \    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n\
    \    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n\
    \    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n\
    \    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n\
    \    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n\
    \    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n\
    \    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\
    \    local ci=0\n    local cj=0\n    local ck=0\n    local cl=0\n    local cm=0\n\
    \    local c\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340431

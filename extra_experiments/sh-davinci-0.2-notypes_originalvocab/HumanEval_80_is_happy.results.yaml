language: sh
name: HumanEval_80_is_happy
results:
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  local i=0\n  local char1=\"\"\n  local\
    \ char2=\"\"\n  local char3=\"\"\n  local is_happy=\"true\"\n  if [ $len -lt 3\
    \ ]; then\n    is_happy=\"false\"\n  else\n    while [ $i -lt $len ]; do\n   \
    \   char1=${str:$i:1}\n      char2=${str:$((i+1)):1}\n      char3=${str:$((i+2)):1}\n\
    \      if [ \"$char1\" == \"$char2\" ] || [ \"$char1\" == \"$char3\" ] || [ \"\
    $char2\" == \"$char3\" ]; then\n        is_happy=\"false\"\n        break\n  \
    \    fi\n      i=$((i+1))\n    done\n  fi\n  echo $is_happy\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local substr=${str:$i:3}\n\
    \    if [[ $(echo \"$substr\" | uniq | wc -l) -ne 3 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    for (( i=0; i<len-2; i++ ));\
    \ do\n        local c1=${str:i:1}\n        local c2=${str:i+1:1}\n        local\
    \ c3=${str:i+2:1}\n        if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ]\
    \ || [ \"$c2\" == \"$c3\" ]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    if [[ ${#1} -lt 3 ]]; then\n        echo \"false\"\n    else\n        for\
    \ (( i=0; i<${#1}-2; i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} ]]\
    \ || [[ ${1:$i:1} == ${1:$i+2:1} ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\
    \n  else\n    local i=0\n    local j=1\n    local k=2\n    while [ $k -lt $len\
    \ ]; do\n      if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$j:1}\"\
    \ == \"${str:$k:1}\" ] || [ \"${str:$i:1}\" == \"${str:$k:1}\" ]; then\n     \
    \   echo \"false\"\n        return\n      fi\n      i=$((i+1))\n      j=$((j+1))\n\
    \      k=$((k+1))\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\"\
    \ ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\")\
    \ = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [ \"${s:i:1}\" ==\
    \ \"${s:i+1:1}\" ] || [ \"${s:i:1}\" == \"${s:i+2:1}\" ] || [ \"${s:i+1:1}\" ==\
    \ \"${s:i+2:1}\" ]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    if [[ ${#str} -lt 3 ]]; then\n        echo \"false\"\
    \n    else\n        for (( i=0; i<${#str}-2; i++ )); do\n            if [[ ${str:$i:1}\
    \ == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1} ]] || [[ ${str:$i+1:1}\
    \ == ${str:$i+2:1} ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=\"${#str}\"\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local res=\"true\"\n  if [ \"$len\" -lt 3 ]; then\n    res=\"false\"\n\
    \  else\n    for ((i=0; i<len-2; i++)); do\n      j=$((i+1))\n      k=$((i+2))\n\
    \      if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$i:1}\" == \"${str:$k:1}\"\
    \ ] || [ \"${str:$j:1}\" == \"${str:$k:1}\" ]; then\n        res=\"false\"\n \
    \       break\n      fi\n    done\n  fi\n  echo \"$res\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    if [[ ${#1} -lt 3 ]]; then\n        echo \"false\"\n    else\n        for\
    \ ((i=0; i<${#1}-2; i++)); do\n            if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1}\
    \ == ${1:i+2:1} || ${1:i+1:1} == ${1:i+2:1} ]]; then\n                echo \"\
    false\"\n                return\n            fi\n        done\n        echo \"\
    true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local result=\"true\"\n  if [[ $len -lt 3 ]]; then\n    result=\"false\"\n\
    \  else\n    while [[ $i -lt $len ]]; do\n      j=$((i+1))\n      k=$((i+2))\n\
    \      if [[ $j -lt $len && $k -lt $len ]]; then\n        if [[ ${str:$i:1} ==\
    \ ${str:$j:1} || ${str:$i:1} == ${str:$k:1} || ${str:$j:1} == ${str:$k:1} ]];\
    \ then\n          result=\"false\"\n          break\n        fi\n      fi\n  \
    \    i=$((i+1))\n    done\n  fi\n  echo $result\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n      \
    \  echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n\
    \        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\" == \"\
    ${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n      \
    \      echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    if [ ${#1} -lt 3 ]; then\n        echo \"false\"\n    else\n        for ((i=0;\
    \ i<${#1}-2; i++)); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] ||\
    \ [ \"${1:$i:1}\" == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\"\
    \ ]; then\n                echo \"false\"\n                return\n          \
    \  fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    local char1=${str:i:1}\n\
    \    local char2=${str:i+1:1}\n    local char3=${str:i+2:1}\n    if [[ $char1\
    \ == $char2 ]] || [[ $char1 == $char3 ]] || [[ $char2 == $char3 ]]; then\n   \
    \   echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++));\
    \ do\n        local c1=${str:i:1}\n        local c2=${str:i+1:1}\n        local\
    \ c3=${str:i+2:1}\n        if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=\"${#str}\"\n  if [[ $len -lt 3 ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local\
    \ c1=\"${str:$i:1}\"\n    local c2=\"${str:$((i+1)):1}\"\n    local c3=\"${str:$((i+2)):1}\"\
    \n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n  fi\n  for ((i=0;\
    \ i<len-2; i++)); do\n    for ((j=i+1; j<len-1; j++)); do\n      for ((k=j+1;\
    \ k<len; k++)); do\n        if [ \"${str:i:1}\" == \"${str:j:1}\" ] || [ \"${str:i:1}\"\
    \ == \"${str:k:1}\" ] || [ \"${str:j:1}\" == \"${str:k:1}\" ]; then\n        \
    \  echo \"false\"\n          return\n        fi\n      done\n    done\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  local i=0\n  while [ $i -lt $len ]; do\n    local\
    \ c1=${str:$i:1}\n    local c2=${str:$((i+1)):1}\n    local c3=${str:$((i+2)):1}\n\
    \    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n    i=$((i+1))\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for ((i=0; i<${#1}-2;\
    \ i++)); do\n      if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1}\
    \ == ${1:i+2:1} ]]; then\n        echo \"false\"\n        return\n      fi\n \
    \   done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ result=\"true\"\n  if [[ $len -lt 3 ]]; then\n    result=\"false\"\n  else\n\
    \    for ((i=0; i<len-2; i++)); do\n      j=$((i+1))\n      k=$((i+2))\n     \
    \ if [[ ${s:$i:1} == ${s:$j:1} || ${s:$i:1} == ${s:$k:1} || ${s:$j:1} == ${s:$k:1}\
    \ ]]; then\n        result=\"false\"\n        break\n      fi\n    done\n  fi\n\
    \  echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++\
    \ )); do\n        if [[ ${str:$i:1} == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1}\
    \ ]] || [[ ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n     \
    \   local c1=${s:i:1}\n        local c2=${s:i+1:1}\n        local c3=${s:i+2:1}\n\
    \        if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    if [ ${#1} -lt 3 ]; then\n        echo \"false\"\n    else\n        for ((\
    \ i=0; i<${#1}-2; i++ )); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\"\
    \ ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\"\
    \ ]; then\n                echo \"false\"\n                return\n          \
    \  fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n\
    \    local c2=${str:$i+1:1}\n    local c3=${str:$i+2:1}\n    if [ \"$c1\" == \"\
    $c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n     \
    \   local c1=${s:i:1}\n        local c2=${s:i+1:1}\n        local c3=${s:i+2:1}\n\
    \        if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n     \
    \   if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\
    \n  else\n    for (( i=0; i<$len-2; i++ )); do\n      if [ \"${str:$i:1}\" ==\
    \ \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\"\
    \ == \"${str:$i+2:1}\" ]; then\n        echo \"false\"\n        return\n     \
    \ fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[\
    \ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=\"$1\"\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  local i=0\n  while [[ $i -lt $len ]]; do\n    local\
    \ c1=${s:$i:1}\n    local c2=${s:$((i+1)):1}\n    local c3=${s:$((i+2)):1}\n \
    \   if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [ \"${str:i:1}\"\
    \ == \"${str:i+1:1}\" ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\"\
    \ == \"${str:i+2:1}\" ]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local result=\"true\"\n  if [ $len -lt 3 ]; then\n    result=\"false\"\n  else\n\
    \    for ((i=0; i<$len-2; i++)); do\n      j=$((i+1))\n      k=$((i+2))\n    \
    \  if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$i:1}\" == \"${str:$k:1}\"\
    \ ] || [ \"${str:$j:1}\" == \"${str:$k:1}\" ]; then\n        result=\"false\"\n\
    \        break\n      fi\n    done\n  fi\n  echo $result\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local res=\"true\"\n  if [[ $len -lt 3 ]]; then\n    res=\"false\"\n  else\n\
    \    for ((i=0; i<len-2; i++)); do\n      j=$((i+1))\n      k=$((i+2))\n     \
    \ if [[ ${str:$i:1} == ${str:$j:1} || ${str:$i:1} == ${str:$k:1} || ${str:$j:1}\
    \ == ${str:$k:1} ]]; then\n        res=\"false\"\n        break\n      fi\n  \
    \  done\n  fi\n  echo \"$res\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local res=\"true\"\n  if [ $len -lt 3 ]; then\n    res=\"false\"\n  else\n\
    \    for ((i=0; i<len-2; i++)); do\n      for ((j=i+1; j<len-1; j++)); do\n  \
    \      for ((k=j+1; k<len; k++)); do\n          if [ \"${str:i:1}\" == \"${str:j:1}\"\
    \ ] || [ \"${str:i:1}\" == \"${str:k:1}\" ] || [ \"${str:j:1}\" == \"${str:k:1}\"\
    \ ]; then\n            res=\"false\"\n          fi\n        done\n      done\n\
    \    done\n  fi\n  echo \"$res\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  if [[ ${#str} -lt 3 ]]; then\n    echo \"false\"\n  else\n\
    \    local i=0\n    while [[ $i -lt ${#str}-2 ]]; do\n      if [[ ${str:$i:1}\
    \ == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1} ]] || [[ ${str:$i+1:1}\
    \ == ${str:$i+2:1} ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \      i=$((i+1))\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\"\
    \ ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\")\
    \ = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ c1=\"\"\n  local c2=\"\"\n  local c3=\"\"\n  for ((i=0; i<len-2; i++)); do\n\
    \    c1=${str:i:1}\n    c2=${str:i+1:1}\n    c3=${str:i+2:1}\n    if [[ $c1 ==\
    \ $c2 ]] || [[ $c1 == $c3 ]] || [[ $c2 == $c3 ]]; then\n      echo \"false\"\n\
    \      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\
    \n  else\n    local i=0\n    local j=3\n    local sub\n    while [ $j -le $len\
    \ ]; do\n      sub=${str:$i:$j}\n      if [ $(echo $sub | grep -o . | sort | uniq\
    \ | wc -l) -ne 3 ]; then\n        echo \"false\"\n        return\n      fi\n \
    \     i=$((i+1))\n      j=$((j+1))\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    local c1=${s:i:1}\n \
    \   local c2=${s:i+1:1}\n    local c3=${s:i+2:1}\n    if [[ $c1 == $c2 || $c1\
    \ == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local string=\"$1\"\n  local length=${#string}\n  if [ $length -lt 3 ]; then\n\
    \    echo \"false\"\n  else\n    local i=0\n    local j=1\n    local k=2\n   \
    \ while [ $k -lt $length ]; do\n      if [ \"${string:$i:1}\" == \"${string:$j:1}\"\
    \ ] || [ \"${string:$j:1}\" == \"${string:$k:1}\" ] || [ \"${string:$i:1}\" ==\
    \ \"${string:$k:1}\" ]; then\n        echo \"false\"\n        return\n      fi\n\
    \      i=$((i+1))\n      j=$((j+1))\n      k=$((k+1))\n    done\n    echo \"true\"\
    \n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=\"$1\"\n    local len=${#s}\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local s1=\"\"\n    local s2=\"\"\n    local s3=\"\"\n    local is_happy=\"\
    true\"\n    if [ $len -lt 3 ]; then\n        is_happy=\"false\"\n    else\n  \
    \      for ((i=0; i<len-2; i++)); do\n            s1=${s:i:1}\n            s2=${s:i+1:1}\n\
    \            s3=${s:i+2:1}\n            if [ \"$s1\" == \"$s2\" ] || [ \"$s1\"\
    \ == \"$s3\" ] || [ \"$s2\" == \"$s3\" ]; then\n                is_happy=\"false\"\
    \n                break\n            fi\n        done\n    fi\n    echo \"$is_happy\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  local i=0\n  local result=true\n  while\
    \ [ $i -lt $((len-2)) ]; do\n    if [ \"${str:$i:1}\" == \"${str:$((i+1)):1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ] || [ \"${str:$((i+1)):1}\"\
    \ == \"${str:$((i+2)):1}\" ]; then\n      result=false\n      break\n    fi\n\
    \    i=$((i+1))\n  done\n  echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[\
    \ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=\"${#str}\"\n  if [ \"$len\" -lt 3 ]; then\n\
    \    echo \"false\"\n  else\n    local i=0\n    local j=1\n    local k=2\n   \
    \ while [ \"$k\" -lt \"$len\" ]; do\n      if [ \"${str:$i:1}\" == \"${str:$j:1}\"\
    \ ] || [ \"${str:$j:1}\" == \"${str:$k:1}\" ] || [ \"${str:$i:1}\" == \"${str:$k:1}\"\
    \ ]; then\n        echo \"false\"\n        return\n      fi\n      i=$((i+1))\n\
    \      j=$((j+1))\n      k=$((k+1))\n    done\n    echo \"true\"\n  fi\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=\"$1\"\n  local len=\"${#s}\"\n  local i=0\n  local j=0\n  local k=0\n\
    \  local c1=\"\"\n  local c2=\"\"\n  local c3=\"\"\n  if [ \"$len\" -lt 3 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  while [ \"$i\" -lt \"$len\" ]; do\n \
    \   j=$((i+1))\n    k=$((i+2))\n    c1=\"${s:i:1}\"\n    c2=\"${s:j:1}\"\n   \
    \ c3=\"${s:k:1}\"\n    if [ \"$c1\" = \"$c2\" ] || [ \"$c1\" = \"$c3\" ] || [\
    \ \"$c2\" = \"$c3\" ]; then\n      echo \"false\"\n      return\n    fi\n    i=$((i+1))\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n     \
    \   if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local res=\"true\"\n\
    \  if [[ $len -lt 3 ]]; then\n    res=\"false\"\n  else\n    while [[ $i -lt $len\
    \ ]]; do\n      local c1=${str:$i:1}\n      local c2=${str:$((i+1)):1}\n     \
    \ local c3=${str:$((i+2)):1}\n      if [[ $c1 == $c2 ]] || [[ $c1 == $c3 ]] ||\
    \ [[ $c2 == $c3 ]]; then\n        res=\"false\"\n        break\n      fi\n   \
    \   i=$((i+1))\n    done\n  fi\n  echo \"$res\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    for ((i=0; i<$len-2; i++));\
    \ do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\"\
    \ == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [ $len -lt 3 ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    local i=0\n    local j=1\n    local k=2\n\
    \    while [ $k -lt $len ]; do\n        if [ \"${s:$i:1}\" == \"${s:$j:1}\" ]\
    \ || [ \"${s:$j:1}\" == \"${s:$k:1}\" ] || [ \"${s:$i:1}\" == \"${s:$k:1}\" ];\
    \ then\n            echo \"false\"\n            return\n        fi\n        i=$((i+1))\n\
    \        j=$((j+1))\n        k=$((k+1))\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  local i=0\n  local res=\"true\"\n  if\
    \ [[ $len -lt 3 ]]; then\n    res=\"false\"\n  else\n    while [[ $i -lt $len\
    \ ]]; do\n      if [[ ${str:$i:1} == ${str:$((i+1)):1} ]] || [[ ${str:$i:1} ==\
    \ ${str:$((i+2)):1} ]] || [[ ${str:$((i+1)):1} == ${str:$((i+2)):1} ]]; then\n\
    \        res=\"false\"\n        break\n      fi\n      i=$((i+1))\n    done\n\
    \  fi\n  echo $res\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n     \
    \   if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n    \
    \    echo \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n\
    \        if [[ ${str:i:1} == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1}\
    \ == ${str:i+2:1} ]]; then\n            echo \"false\"\n            return\n \
    \       fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[\
    \ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    for ((i=0; i<$len-2; i++));\
    \ do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\"\
    \ == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    if [[ ${#1} -lt 3 ]]; then\n        echo \"false\"\n    else\n        for\
    \ (( i=0; i<${#1}-2; i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} ]]\
    \ || [[ ${1:$i:1} == ${1:$i+2:1} ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n      \
    \  echo \"false\"\n        return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n\
    \        local char1=${str:$i:1}\n        local char2=${str:$i+1:1}\n        local\
    \ char3=${str:$i+2:1}\n        if [ \"$char1\" == \"$char2\" ] || [ \"$char1\"\
    \ == \"$char3\" ] || [ \"$char2\" == \"$char3\" ]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  local i=0\n  local is_happy=\"true\"\n\
    \  while [ $i -lt $((len-2)) ]; do\n    if [ \"${str:$i:1}\" == \"${str:$((i+1)):1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ] || [ \"${str:$((i+1)):1}\"\
    \ == \"${str:$((i+2)):1}\" ]; then\n      is_happy=\"false\"\n      break\n  \
    \  fi\n    i=$((i+1))\n  done\n  echo $is_happy\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n    \
    \    echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++ ));\
    \ do\n        local substr=${str:$i:3}\n        if [[ $(echo $substr | grep -o\
    \ . | sort | uniq | wc -l) -ne 3 ]]; then\n            echo \"false\"\n      \
    \      return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local sub=${str:$i:3}\n\
    \    if [[ $sub == $(echo $sub | uniq) ]]; then\n      echo \"true\"\n      return\n\
    \    fi\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n\
    \  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n\
    \  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n\
    \  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\
    \  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n\
    \  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n\
    \  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n\
    \  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  local result=\"true\"\n  if [[ $len -lt\
    \ 3 ]]; then\n    result=\"false\"\n  else\n    for (( i=0; i<len-2; i++ )); do\n\
    \      if [[ ${str:$i:1} == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1}\
    \ ]] || [[ ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n        result=\"false\"\n\
    \        break\n      fi\n    done\n  fi\n  echo $result\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local string=\"$1\"\n  local length=${#string}\n  if [[ $length -lt 3 ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  for ((i=0; i<length-2; i++)); do\n  \
    \  if [[ ${string:i:1} == ${string:i+1:1} ]] || [[ ${string:i:1} == ${string:i+2:1}\
    \ ]] || [[ ${string:i+1:1} == ${string:i+2:1} ]]; then\n      echo \"false\"\n\
    \      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    local c1=${s:i:1}\n \
    \   local c2=${s:i+1:1}\n    local c3=${s:i+2:1}\n    if [ \"$c1\" == \"$c2\"\
    \ ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\
    \n  else\n    local i=0\n    local j=1\n    local k=2\n    while [ $k -lt $len\
    \ ]; do\n      if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$j:1}\"\
    \ == \"${str:$k:1}\" ] || [ \"${str:$i:1}\" == \"${str:$k:1}\" ]; then\n     \
    \   echo \"false\"\n        return\n      fi\n      i=$((i+1))\n      j=$((j+1))\n\
    \      k=$((k+1))\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\"\
    \ ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\")\
    \ = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    if [[ ${#1} -lt 3 ]]; then\n        echo \"false\"\n    else\n        for\
    \ (( i=0; i<${#1}-2; i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} ]]\
    \ || [[ ${1:$i:1} == ${1:$i+2:1} ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n      \
    \  echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++ )); do\n\
    \        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\" == \"\
    ${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n      \
    \      echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++ ));\
    \ do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\"\
    \ == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    if [ \"\
    ${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\"\
    \ ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n      \
    \  echo \"false\"\n        return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n\
    \        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\" == \"\
    ${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n      \
    \      echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++));\
    \ do\n        if [[ ${str:i:1} == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1}\
    \ ]] || [[ ${str:i+1:1} == ${str:i+2:1} ]]; then\n            echo \"false\"\n\
    \            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    if [[ ${#1} -lt 3 ]]; then\n        echo \"false\"\n    else\n        for\
    \ (( i=0; i<${#1}-2; i++ )); do\n            if [[ ${1:$i:1} == ${1:$i+1:1} ]]\
    \ || [[ ${1:$i:1} == ${1:$i+2:1} ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n      \
    \  echo \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n\
    \        local c1=${str:i:1}\n        local c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n\
    \        if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"\
    $c3\" ]; then\n            echo \"false\"\n            return\n        fi\n  \
    \  done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local result=\"true\"\n  if [ $len -lt 3 ]; then\n    result=\"false\"\n  else\n\
    \    for ((i=0; i<$len-2; i++)); do\n      j=$((i+1))\n      k=$((i+2))\n    \
    \  if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$i:1}\" == \"${str:$k:1}\"\
    \ ] || [ \"${str:$j:1}\" == \"${str:$k:1}\" ]; then\n        result=\"false\"\n\
    \        break\n      fi\n    done\n  fi\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<$len-2; i++)); do\n    if [ \"${str:$i:1}\"\
    \ == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\"\
    \ == \"${str:$i+2:1}\" ]; then\n      echo \"false\"\n      return\n    fi\n \
    \ done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local result=true\n  if [[ $len -lt 3 ]]; then\n    result=false\n  else\n\
    \    for ((i=0; i<len-2; i++)); do\n      for ((j=i+1; j<len-1; j++)); do\n  \
    \      for ((k=j+1; k<len; k++)); do\n          if [[ ${str:i:1} == ${str:j:1}\
    \ || ${str:i:1} == ${str:k:1} || ${str:j:1} == ${str:k:1} ]]; then\n         \
    \   result=false\n          fi\n        done\n      done\n    done\n  fi\n  echo\
    \ \"$result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n    \
    \    echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++ ));\
    \ do\n        local a=${str:$i:1}\n        local b=${str:$i+1:1}\n        local\
    \ c=${str:$i+2:1}\n        if [[ $a == $b || $a == $c || $b == $c ]]; then\n \
    \           echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local string=$1\n  local length=${#string}\n  if [[ $length -lt 3 ]]; then\n\
    \    echo \"false\"\n  else\n    for (( i=0; i<$length-2; i++ )); do\n      if\
    \ [[ ${string:$i:1} == ${string:$i+1:1} ]] || [[ ${string:$i:1} == ${string:$i+2:1}\
    \ ]] || [[ ${string:$i+1:1} == ${string:$i+2:1} ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    local i=0\n    local j=1\n \
    \   local k=2\n    local is_happy=\"true\"\n    if [ $len -lt 3 ]; then\n    \
    \    is_happy=\"false\"\n    else\n        while [ $k -lt $len ]; do\n       \
    \     if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$i:1}\" == \"${str:$k:1}\"\
    \ ] || [ \"${str:$j:1}\" == \"${str:$k:1}\" ]; then\n                is_happy=\"\
    false\"\n                break\n            fi\n            i=$((i+1))\n     \
    \       j=$((j+1))\n            k=$((k+1))\n        done\n    fi\n    echo \"\
    $is_happy\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    local i=0\n    local j=0\n \
    \   local k=0\n    local result=true\n    if [ $len -lt 3 ]; then\n        result=false\n\
    \    else\n        while [ $i -lt $len ]; do\n            j=$((i+1))\n       \
    \     k=$((i+2))\n            if [ $j -lt $len ] && [ $k -lt $len ]; then\n  \
    \              if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$i:1}\"\
    \ == \"${str:$k:1}\" ] || [ \"${str:$j:1}\" == \"${str:$k:1}\" ]; then\n     \
    \               result=false\n                    break\n                fi\n\
    \            fi\n            i=$((i+1))\n        done\n    fi\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for (( i=0; i<len-2; i++ )); do\n    local a=${str:i:1}\n\
    \    local b=${str:i+1:1}\n    local c=${str:i+2:1}\n    if [[ $a == $b || $a\
    \ == $c || $b == $c ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++));\
    \ do\n        local c1=${str:i:1}\n        local c2=${str:i+1:1}\n        local\
    \ c3=${str:i+2:1}\n        if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local result=\"true\"\
    \n  if [[ $len -lt 3 ]]; then\n    result=\"false\"\n  else\n    while [[ $i -lt\
    \ $len ]]; do\n      if [[ ${str:$i:1} == ${str:$i+1:1} || ${str:$i:1} == ${str:$i+2:1}\
    \ || ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n        result=\"false\"\n     \
    \   break\n      fi\n      i=$((i+1))\n    done\n  fi\n  echo \"$result\"\n}\n\
    \ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ c1=''\n  local c2=''\n  local c3=''\n  local result='true'\n  if [ $len -lt\
    \ 3 ]; then\n    result='false'\n  else\n    for ((i=0; i<len-2; i++)); do\n \
    \     j=$((i+1))\n      k=$((i+2))\n      c1=${s:i:1}\n      c2=${s:j:1}\n   \
    \   c3=${s:k:1}\n      if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] ||\
    \ [ \"$c2\" == \"$c3\" ]; then\n        result='false'\n        break\n      fi\n\
    \    done\n  fi\n  echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for ((i=0; i<${#1}-2;\
    \ i++)); do\n      if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1}\
    \ == ${1:i+2:1} ]]; then\n        echo \"false\"\n        return\n      fi\n \
    \   done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    local i=0\n    local j=0\n \
    \   local k=0\n    local happy=true\n    if [ $len -lt 3 ]; then\n        happy=false\n\
    \    else\n        while [ $i -lt $len ]; do\n            j=$((i+1))\n       \
    \     k=$((i+2))\n            if [ $j -lt $len ] && [ $k -lt $len ]; then\n  \
    \              if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$i:1}\"\
    \ == \"${str:$k:1}\" ] || [ \"${str:$j:1}\" == \"${str:$k:1}\" ]; then\n     \
    \               happy=false\n                    break\n                fi\n \
    \           fi\n            i=$((i+1))\n        done\n    fi\n    echo \"$happy\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n    \
    \    echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++ ));\
    \ do\n        if [[ ${str:$i:1} == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1}\
    \ ]] || [[ ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n      \
    \  echo \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n\
    \        local sub=${str:i:3}\n        if [ $(echo $sub | uniq | wc -l) -ne 3\
    \ ]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  local i=0\n  local j=1\n  local k=2\n  while\
    \ [ $k -lt $len ]; do\n    if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$j:1}\"\
    \ == \"${str:$k:1}\" ]; then\n      echo \"false\"\n      return\n    fi\n   \
    \ i=$((i+1))\n    j=$((j+1))\n    k=$((k+1))\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n\
    \    local c2=${str:$i+1:1}\n    local c3=${str:$i+2:1}\n    if [[ $c1 == $c2\
    \ || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\n      return\n \
    \   fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  local i=0\n  while [ $i -lt $len ]; do\n    local\
    \ c1=${str:$i:1}\n    local c2=${str:$((i+1)):1}\n    local c3=${str:$((i+2)):1}\n\
    \    if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n    i=$((i+1))\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++\
    \ )); do\n        local sub=${str:$i:3}\n        if [[ $sub =~ (.).*\\1 ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=\"$1\"\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  local i=0\n  local j=0\n  local k=0\n  local c1=\"\
    \"\n  local c2=\"\"\n  local c3=\"\"\n  while [[ $i -lt $len ]]; do\n    j=$((i+1))\n\
    \    k=$((i+2))\n    c1=${s:$i:1}\n    c2=${s:$j:1}\n    c3=${s:$k:1}\n    if\
    \ [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\n \
    \     return\n    fi\n    i=$((i+3))\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [ \"${str:i:1}\"\
    \ == \"${str:i+1:1}\" ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\"\
    \ == \"${str:i+2:1}\" ]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [ ${#1} -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \   echo \"false\"\n        return\n      fi\n    done\n    echo \"true\"\n  fi\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local string=\"$1\"\n  local length=${#string}\n  if [[ $length -lt 3 ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  for (( i=0; i<$length-2; i++ )); do\n\
    \    local char1=${string:$i:1}\n    local char2=${string:$i+1:1}\n    local char3=${string:$i+2:1}\n\
    \    if [[ $char1 == $char2 || $char1 == $char3 || $char2 == $char3 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local string=$1\n  local length=${#string}\n  local result=\"true\"\n  if [\
    \ $length -lt 3 ]; then\n    result=\"false\"\n  else\n    for (( i=0; i<$length-2;\
    \ i++ )); do\n      if [ \"${string:$i:1}\" == \"${string:$i+1:1}\" ] || [ \"\
    ${string:$i:1}\" == \"${string:$i+2:1}\" ] || [ \"${string:$i+1:1}\" == \"${string:$i+2:1}\"\
    \ ]; then\n        result=\"false\"\n        break\n      fi\n    done\n  fi\n\
    \  echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++\
    \ )); do\n        if [[ ${str:$i:1} == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1}\
    \ ]] || [[ ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local flag=0\n    if [ $len -lt 3 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n        for ((j=i+1;\
    \ j<len-1; j++)); do\n            for ((k=j+1; k<len; k++)); do\n            \
    \    if [ ${str:i:1} == ${str:j:1} ] || [ ${str:i:1} == ${str:k:1} ] || [ ${str:j:1}\
    \ == ${str:k:1} ]; then\n                    flag=1\n                    break\n\
    \                fi\n            done\n            if [ $flag -eq 1 ]; then\n\
    \                break\n            fi\n        done\n        if [ $flag -eq 1\
    \ ]; then\n            break\n        fi\n    done\n    if [ $flag -eq 1 ]; then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local string=\"$1\"\n  local length=${#string}\n  local result=\"true\"\n \
    \ if [ $length -lt 3 ]; then\n    result=\"false\"\n  else\n    for (( i=0; i<$length-2;\
    \ i++ )); do\n      if [ \"${string:$i:1}\" == \"${string:$i+1:1}\" ] || [ \"\
    ${string:$i:1}\" == \"${string:$i+2:1}\" ] || [ \"${string:$i+1:1}\" == \"${string:$i+2:1}\"\
    \ ]; then\n        result=\"false\"\n        break\n      fi\n    done\n  fi\n\
    \  echo \"$result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    if [ ${#1} -lt 3 ]; then\n        echo \"false\"\n    else\n        for ((\
    \ i=0; i<${#1}-2; i++ )); do\n            if [ \"${1:$i:1}\" == \"${1:$i+1:1}\"\
    \ ] || [ \"${1:$i:1}\" == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\"\
    \ ]; then\n                echo \"false\"\n                return\n          \
    \  fi\n        done\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n\
    \    local c2=${str:$((i+1)):1}\n    local c3=${str:$((i+2)):1}\n    if [[ $c1\
    \ == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    local c1=${s:i:1}\n \
    \   local c2=${s:i+1:1}\n    local c3=${s:i+2:1}\n    if [ \"$c1\" == \"$c2\"\
    \ ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local is_happy=\"true\"\n  if [[ $len -lt 3 ]]; then\n    is_happy=\"false\"\
    \n  else\n    for ((i=0; i<len-2; i++)); do\n      for ((j=i+1; j<len-1; j++));\
    \ do\n        for ((k=j+1; k<len; k++)); do\n          if [[ ${str:i:1} == ${str:j:1}\
    \ || ${str:i:1} == ${str:k:1} || ${str:j:1} == ${str:k:1} ]]; then\n         \
    \   is_happy=\"false\"\n            break\n          fi\n        done\n      \
    \  if [[ $is_happy == \"false\" ]]; then\n          break\n        fi\n      done\n\
    \      if [[ $is_happy == \"false\" ]]; then\n        break\n      fi\n    done\n\
    \  fi\n  echo \"$is_happy\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local i=0\n  while [[ $i -lt $len ]]; do\n    local c1=${s:$i:1}\n\
    \    local c2=${s:$((i+1)):1}\n    local c3=${s:$((i+2)):1}\n    if [[ $c1 ==\
    \ $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n    i=$((i+1))\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    local c1=${s:i:1}\n \
    \   local c2=${s:i+1:1}\n    local c3=${s:i+2:1}\n    if [[ $c1 == $c2 || $c1\
    \ == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n    \
    \    echo \"false\"\n        return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n\
    \        local c1=${str:$i:1}\n        local c2=${str:$i+1:1}\n        local c3=${str:$i+2:1}\n\
    \        if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=1\n  local k=2\n\
    \  local res=\"true\"\n  if [[ $len -lt 3 ]]; then\n    res=\"false\"\n  else\n\
    \    while [[ $i -lt $len ]]; do\n      if [[ $j -lt $len ]] && [[ $k -lt $len\
    \ ]]; then\n        if [[ ${str:$i:1} == ${str:$j:1} ]] || [[ ${str:$i:1} == ${str:$k:1}\
    \ ]] || [[ ${str:$j:1} == ${str:$k:1} ]]; then\n          res=\"false\"\n    \
    \      break\n        fi\n      fi\n      i=$((i+1))\n      j=$((j+1))\n     \
    \ k=$((k+1))\n    done\n  fi\n  echo \"$res\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n    \
    \    echo \"false\"\n        return\n    fi\n    for (( i=0; i<len-2; i++ ));\
    \ do\n        local char1=${str:i:1}\n        local char2=${str:i+1:1}\n     \
    \   local char3=${str:i+2:1}\n        if [[ $char1 == $char2 || $char1 == $char3\
    \ || $char2 == $char3 ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n\
    \  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n\
    \  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n\
    \  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\
    \  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n\
    \  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n\
    \  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n\
    \  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local result=\"true\"\
    \n  if [[ $len -lt 3 ]]; then\n    result=\"false\"\n  else\n    while [[ $i -lt\
    \ $len ]]; do\n      if [[ ${str:$i:1} == ${str:$i+1:1} || ${str:$i:1} == ${str:$i+2:1}\
    \ || ${str:$i+1:1} == ${str:$i+2:1} ]]; then\n        result=\"false\"\n     \
    \   break\n      fi\n      i=$((i+1))\n    done\n  fi\n  echo \"$result\"\n}\n\
    \ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    local i=0\n    local j=0\n \
    \   local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n  \
    \  local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n   \
    \ local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local\
    \ z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n\
    \    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n \
    \   local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n  \
    \  local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n   \
    \ local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local\
    \ z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n\
    \    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n \
    \   local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n  \
    \  local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n   \
    \ local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local\
    \ z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n\
    \    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n \
    \   local k=0\n    local l=0\n    local\n}\n\ncandidate() {\n    is_happy \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[\
    \ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local res=\"true\"\n\
    \  if [ $len -lt 3 ]; then\n    res=\"false\"\n  else\n    while [ $i -lt $len\
    \ ]; do\n      if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\"\
    \ == \"${str:$i+2:1}\" ]; then\n        res=\"false\"\n        break\n      fi\n\
    \      i=$((i+1))\n    done\n  fi\n  echo \"$res\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [ $len -lt 3 ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<$len-2; i++)); do\n    \
    \    if [ \"${s:$i:1}\" == \"${s:$i+1:1}\" ] || [ \"${s:$i:1}\" == \"${s:$i+2:1}\"\
    \ ] || [ \"${s:$i+1:1}\" == \"${s:$i+2:1}\" ]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local res=true\n  if [ $len -lt 3 ]; then\n    res=false\n  else\n    for ((i=0;\
    \ i<len-2; i++)); do\n      for ((j=i+1; j<len-1; j++)); do\n        for ((k=j+1;\
    \ k<len; k++)); do\n          if [ \"${str:i:1}\" == \"${str:j:1}\" ] || [ \"\
    ${str:i:1}\" == \"${str:k:1}\" ] || [ \"${str:j:1}\" == \"${str:k:1}\" ]; then\n\
    \            res=false\n          fi\n        done\n      done\n    done\n  fi\n\
    \  echo \"$res\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=\"${#str}\"\n  if [[ $len -lt 3 ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  for (( i=0; i<len-2; i++ )); do\n    local\
    \ c1=\"${str:i:1}\"\n    local c2=\"${str:i+1:1}\"\n    local c3=\"${str:i+2:1}\"\
    \n    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n     \
    \   if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local result=\"true\"\
    \n  if [ $len -lt 3 ]; then\n    result=\"false\"\n  else\n    while [ $i -lt\
    \ $((len-2)) ]; do\n      local c1=${str:$i:1}\n      local c2=${str:$((i+1)):1}\n\
    \      local c3=${str:$((i+2)):1}\n      if [ \"$c1\" == \"$c2\" ] || [ \"$c1\"\
    \ == \"$c3\" ] || [ \"$c2\" == \"$c3\" ]; then\n        result=\"false\"\n   \
    \     break\n      fi\n      i=$((i+1))\n    done\n  fi\n  echo \"$result\"\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local substr=\"\
    ${str:$i:3}\"\n    if [[ \"${substr:0:1}\" == \"${substr:1:1}\" ]] || [[ \"${substr:0:1}\"\
    \ == \"${substr:2:1}\" ]] || [[ \"${substr:1:1}\" == \"${substr:2:1}\" ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local c1=${str:$i:1}\n\
    \    local c2=${str:$i+1:1}\n    local c3=${str:$i+2:1}\n    if [[ $c1 == $c2\
    \ || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\n      return\n \
    \   fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  local i=0\n  local result=\"true\"\n  if [\
    \ $len -lt 3 ]; then\n    result=\"false\"\n  else\n    while [ $i -lt $((len-2))\
    \ ]; do\n      if [ \"${s:$i:1}\" == \"${s:$((i+1)):1}\" ] || [ \"${s:$i:1}\"\
    \ == \"${s:$((i+2)):1}\" ] || [ \"${s:$((i+1)):1}\" == \"${s:$((i+2)):1}\" ];\
    \ then\n        result=\"false\"\n        break\n      fi\n      i=$((i+1))\n\
    \    done\n  fi\n  echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=\"${#str}\"\n  if [[ $len -lt 3 ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    local\
    \ a=\"${str:i:1}\"\n    local b=\"${str:i+1:1}\"\n    local c=\"${str:i+2:1}\"\
    \n    if [[ $a == $b || $a == $c || $b == $c ]]; then\n      echo \"false\"\n\
    \      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    if [ \"\
    ${str:$i:1}\" == \"${str:$((i+1)):1}\" ] || [ \"${str:$i:1}\" == \"${str:$((i+2)):1}\"\
    \ ] || [ \"${str:$((i+1)):1}\" == \"${str:$((i+2)):1}\" ]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local string=\"$1\"\n  local length=${#string}\n  local i=0\n  local result=\"\
    true\"\n  if [ $length -lt 3 ]; then\n    result=\"false\"\n  else\n    while\
    \ [ $i -lt $((length - 2)) ]; do\n      if [ \"${string:$i:1}\" == \"${string:$((i\
    \ + 1)):1}\" ] || [ \"${string:$i:1}\" == \"${string:$((i + 2)):1}\" ] || [ \"\
    ${string:$((i + 1)):1}\" == \"${string:$((i + 2)):1}\" ]; then\n        result=\"\
    false\"\n        break\n      fi\n      i=$((i + 1))\n    done\n  fi\n  echo \"\
    $result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for ((i=0; i<${#1}-2;\
    \ i++)); do\n      if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1} == ${1:i+2:1} || ${1:i+1:1}\
    \ == ${1:i+2:1} ]]; then\n        echo \"false\"\n        return\n      fi\n \
    \   done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local is_happy=true\n    if [ $len -lt 3 ]; then\n        is_happy=false\n\
    \    else\n        for ((i=0; i<len-2; i++)); do\n            for ((j=i+1; j<len-1;\
    \ j++)); do\n                for ((k=j+1; k<len; k++)); do\n                 \
    \   if [ \"${str:i:1}\" == \"${str:j:1}\" ] || [ \"${str:i:1}\" == \"${str:k:1}\"\
    \ ] || [ \"${str:j:1}\" == \"${str:k:1}\" ]; then\n                        is_happy=false\n\
    \                    fi\n                done\n            done\n        done\n\
    \    fi\n    echo $is_happy\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=\"${#str}\"\n  local i=0\n  local result=\"true\"\
    \n  if [[ \"$len\" -lt 3 ]]; then\n    result=\"false\"\n  else\n    while [[\
    \ \"$i\" -lt \"$len\" ]]; do\n      if [[ \"${str:$i:1}\" == \"${str:$((i+1)):1}\"\
    \ ]] || [[ \"${str:$i:1}\" == \"${str:$((i+2)):1}\" ]]; then\n        result=\"\
    false\"\n        break\n      fi\n      i=$((i+1))\n    done\n  fi\n  echo \"\
    $result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local tmp=\"\"\n  local is_happy=\"true\"\n  if [ $len -lt 3 ]; then\n    is_happy=\"\
    false\"\n  else\n    for ((i=0; i<len-2; i++)); do\n      tmp=\"\"\n      for\
    \ ((j=i; j<i+3; j++)); do\n        tmp=\"$tmp${str:$j:1}\"\n      done\n     \
    \ for ((k=i+1; k<len-2; k++)); do\n        if [ \"$tmp\" == \"${str:$k:3}\" ];\
    \ then\n          is_happy=\"false\"\n          break\n        fi\n      done\n\
    \      if [ \"$is_happy\" == \"false\" ]; then\n        break\n      fi\n    done\n\
    \  fi\n  echo \"$is_happy\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=1\n  local k=2\n\
    \  local res=\"true\"\n  if [ $len -lt 3 ]; then\n    res=\"false\"\n  else\n\
    \    while [ $k -lt $len ]; do\n      if [ \"${str:$i:1}\" == \"${str:$j:1}\"\
    \ ] || [ \"${str:$i:1}\" == \"${str:$k:1}\" ] || [ \"${str:$j:1}\" == \"${str:$k:1}\"\
    \ ]; then\n        res=\"false\"\n        break\n      fi\n      i=$((i+1))\n\
    \      j=$((j+1))\n      k=$((k+1))\n    done\n  fi\n  echo \"$res\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    if [[ ${str:$i:1}\
    \ == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1} ]] || [[ ${str:$i+1:1}\
    \ == ${str:$i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\
    \n  else\n    local i=0\n    local j=2\n    local is_happy=\"true\"\n    while\
    \ [ $j -lt $len ]; do\n      if [ \"${str:$i:1}\" == \"${str:$j:1}\" ]; then\n\
    \        is_happy=\"false\"\n        break\n      fi\n      i=$((i+1))\n     \
    \ j=$((j+1))\n    done\n    echo $is_happy\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local result=\"true\"\n  if [ $len -lt 3 ]; then\n    result=\"false\"\n  else\n\
    \    for ((i=0; i<$len-2; i++)); do\n      for ((j=$i+1; j<$len-1; j++)); do\n\
    \        for ((k=$j+1; k<$len; k++)); do\n          if [ \"${str:$i:1}\" = \"\
    ${str:$j:1}\" ] || [ \"${str:$i:1}\" = \"${str:$k:1}\" ] || [ \"${str:$j:1}\"\
    \ = \"${str:$k:1}\" ]; then\n            result=\"false\"\n          fi\n    \
    \    done\n      done\n    done\n  fi\n  echo $result\n}\n\ncandidate() {\n  \
    \  is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=\"${#str}\"\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local flag=0\n  if [ $len -lt 3 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  for ((i=0; i<len-2; i++)); do\n    for ((j=i+1; j<len-1; j++)); do\n\
    \      for ((k=j+1; k<len; k++)); do\n        if [ \"${str:i:1}\" == \"${str:j:1}\"\
    \ ] || [ \"${str:i:1}\" == \"${str:k:1}\" ] || [ \"${str:j:1}\" == \"${str:k:1}\"\
    \ ]; then\n          flag=1\n          break\n        fi\n      done\n      if\
    \ [ $flag -eq 1 ]; then\n        break\n      fi\n    done\n    if [ $flag -eq\
    \ 1 ]; then\n      break\n    fi\n  done\n  if [ $flag -eq 1 ]; then\n    echo\
    \ \"false\"\n  else\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} || ${str:i:1} == ${str:i+2:1} || ${str:i+1:1} == ${str:i+2:1}\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=$1\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n      \
    \  echo \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n\
    \        local c1=${str:i:1}\n        local c2=${str:i+1:1}\n        local c3=${str:i+2:1}\n\
    \        if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\" ] || [ \"$c2\" == \"\
    $c3\" ]; then\n            echo \"false\"\n            return\n        fi\n  \
    \  done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n     \
    \   if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++\
    \ )); do\n        local substr=${str:$i:3}\n        if [[ $(echo $substr | uniq\
    \ | wc -l) -ne 3 ]]; then\n            echo \"false\"\n            return\n  \
    \      fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[\
    \ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++));\
    \ do\n        if [[ \"${str:i:1}\" == \"${str:i+1:1}\" ]] || [[ \"${str:i:1}\"\
    \ == \"${str:i+2:1}\" ]] || [[ \"${str:i+1:1}\" == \"${str:i+2:1}\" ]]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<len-2; i++ )); do\n    if [[ ${str:i:1}\
    \ == ${str:i+1:1} ]] || [[ ${str:i:1} == ${str:i+2:1} ]] || [[ ${str:i+1:1} ==\
    \ ${str:i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [ $len -lt 3 ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n     \
    \   if [ \"${s:i:1}\" == \"${s:i+1:1}\" ] || [ \"${s:i:1}\" == \"${s:i+2:1}\"\
    \ ] || [ \"${s:i+1:1}\" == \"${s:i+2:1}\" ]; then\n            echo \"false\"\n\
    \            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    if [[ ${#1} -lt 3 ]]; then\n        echo \"false\"\n    else\n        for\
    \ ((i=0; i<${#1}-2; i++)); do\n            if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1}\
    \ == ${1:i+2:1} || ${1:i+1:1} == ${1:i+2:1} ]]; then\n                echo \"\
    false\"\n                return\n            fi\n        done\n        echo \"\
    true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    local i=0\n    local j=0\n \
    \   local k=0\n    local res=\"true\"\n    if [ $len -lt 3 ]; then\n        res=\"\
    false\"\n    else\n        for ((i=0; i<$len-2; i++)); do\n            for ((j=$i+1;\
    \ j<$len-1; j++)); do\n                for ((k=$j+1; k<$len; k++)); do\n     \
    \               if [ \"${str:$i:1}\" == \"${str:$j:1}\" ] || [ \"${str:$i:1}\"\
    \ == \"${str:$k:1}\" ] || [ \"${str:$j:1}\" == \"${str:$k:1}\" ]; then\n     \
    \                   res=\"false\"\n                    fi\n                done\n\
    \            done\n        done\n    fi\n    echo \"$res\"\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [ ${#1} -lt 3 ]; then\n    echo \"false\"\n  else\n    for ((i=0; i<${#1}-2;\
    \ i++)); do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \   echo \"false\"\n        return\n      fi\n    done\n    echo \"true\"\n  fi\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    if [ \"\
    ${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\" == \"${str:$i+2:1}\"\
    \ ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ result=\"true\"\n  if [[ $len -lt 3 ]]; then\n    result=\"false\"\n  else\n\
    \    for ((i=0; i<len-2; i++)); do\n      j=$((i+1))\n      k=$((i+2))\n     \
    \ if [[ ${s:$i:1} == ${s:$j:1} || ${s:$i:1} == ${s:$k:1} || ${s:$j:1} == ${s:$k:1}\
    \ ]]; then\n        result=\"false\"\n        break\n      fi\n    done\n  fi\n\
    \  echo $result\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    for (( i=0; i<len-2; i++ ));\
    \ do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\"\
    \ == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [ ${#1} -lt 3 ]; then\n    echo \"false\"\n  else\n    for i in $(seq 0\
    \ $((${#1} - 3))); do\n      if [ \"${1:$i:3}\" == \"${1:$(($i + 1)):3}\" ]; then\n\
    \        echo \"false\"\n        return\n      fi\n    done\n    echo \"true\"\
    \n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    for ((i=0; i<$len-2; i++));\
    \ do\n        local c1=${str:$i:1}\n        local c2=${str:$i+1:1}\n        local\
    \ c3=${str:$i+2:1}\n        if [ \"$c1\" == \"$c2\" ] || [ \"$c1\" == \"$c3\"\
    \ ] || [ \"$c2\" == \"$c3\" ]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n  \
    \  [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\"\
    \ ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\"\
    ) = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local l=${#s}\n  if [ $l -lt 3 ]; then\n    echo \"false\"\n\
    \  else\n    local i=0\n    local j=1\n    local k=2\n    while [ $k -lt $l ];\
    \ do\n      if [ \"${s:$i:1}\" == \"${s:$j:1}\" ] || [ \"${s:$j:1}\" == \"${s:$k:1}\"\
    \ ] || [ \"${s:$i:1}\" == \"${s:$k:1}\" ]; then\n        echo \"false\"\n    \
    \    return\n      fi\n      i=$((i+1))\n      j=$((j+1))\n      k=$((k+1))\n\
    \    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    if [[ ${#1} -lt 3 ]]; then\n        echo \"false\"\n    else\n        for\
    \ ((i=0; i<${#1}-2; i++)); do\n            if [[ ${1:i:1} == ${1:i+1:1} || ${1:i:1}\
    \ == ${1:i+2:1} || ${1:i+1:1} == ${1:i+2:1} ]]; then\n                echo \"\
    false\"\n                return\n            fi\n        done\n        echo \"\
    true\"\n    fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    local sub=${str:i:3}\n\
    \    if [[ $sub =~ ([a-z])\\1 ]]; then\n      echo \"false\"\n      return\n \
    \   fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate\
    \ \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [[ $len -lt 3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n     \
    \   if [[ ${s:i:1} == ${s:i+1:1} || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1}\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for ((i=0; i<$len-2; i++)); do\n    if [[ ${str:$i:1}\
    \ == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1} ]] || [[ ${str:$i+1:1}\
    \ == ${str:$i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<$len-2; i++)); do\n    local char1=${str:$i:1}\n\
    \    local char2=${str:$i+1:1}\n    local char3=${str:$i+2:1}\n    if [ \"$char1\"\
    \ == \"$char2\" ] || [ \"$char1\" == \"$char3\" ] || [ \"$char2\" == \"$char3\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\
    \n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  local i=0\n  local j=0\n  local k=0\n\
    \  local result=\"true\"\n  if [ $len -lt 3 ]; then\n    result=\"false\"\n  else\n\
    \    for ((i=0; i<len-2; i++)); do\n      for ((j=i+1; j<len-1; j++)); do\n  \
    \      for ((k=j+1; k<len; k++)); do\n          if [ ${str:i:1} == ${str:j:1}\
    \ ] || [ ${str:i:1} == ${str:k:1} ] || [ ${str:j:1} == ${str:k:1} ]; then\n  \
    \          result=\"false\"\n          fi\n        done\n      done\n    done\n\
    \  fi\n  echo \"$result\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=\"${#str}\"\n  local i=0\n  local is_happy=\"\
    true\"\n  while [ $i -lt $((len - 2)) ]; do\n    if [ \"${str:$i:1}\" == \"${str:$((i\
    \ + 1)):1}\" ] || [ \"${str:$i:1}\" == \"${str:$((i + 2)):1}\" ] || [ \"${str:$((i\
    \ + 1)):1}\" == \"${str:$((i + 2)):1}\" ]; then\n      is_happy=\"false\"\n  \
    \    break\n    fi\n    i=$((i + 1))\n  done\n  echo \"$is_happy\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    if [[ ${str:$i:1}\
    \ == ${str:$i+1:1} ]] || [[ ${str:$i:1} == ${str:$i+2:1} ]] || [[ ${str:$i+1:1}\
    \ == ${str:$i+2:1} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    if [[ ${s:i:1} == ${s:i+1:1}\
    \ || ${s:i:1} == ${s:i+2:1} || ${s:i+1:1} == ${s:i+2:1} ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n \
    \   is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [[ $len -lt 3 ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    for (( i=0; i<$len-2; i++\
    \ )); do\n        if [[ \"${str:$i:1}\" == \"${str:$((i+1)):1}\" ]] || [[ \"${str:$i:1}\"\
    \ == \"${str:$((i+2)):1}\" ]] || [[ \"${str:$((i+1)):1}\" == \"${str:$((i+2)):1}\"\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    local c1=${s:i:1}\n \
    \   local c2=${s:i+1:1}\n    local c3=${s:i+2:1}\n    if [[ $c1 == $c2 || $c1\
    \ == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"\
    aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate\
    \ \"aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[\
    \ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\"\
    \ ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local string=\"$1\"\n  local length=${#string}\n  if [[ $length -lt 3 ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  for ((i=0; i<length-2; i++)); do\n  \
    \  local first_char=${string:i:1}\n    local second_char=${string:i+1:1}\n   \
    \ local third_char=${string:i+2:1}\n    if [[ $first_char == $second_char || $first_char\
    \ == $third_char || $second_char == $third_char ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for (( i=0; i<$len-2; i++ )); do\n    local a=${str:$i:1}\n\
    \    local b=${str:$i+1:1}\n    local c=${str:$i+2:1}\n    if [ \"$a\" == \"$b\"\
    \ ] || [ \"$a\" == \"$c\" ] || [ \"$b\" == \"$c\" ]; then\n      echo \"false\"\
    \n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local s=$1\n  local len=${#s}\n  if [[ $len -lt 3 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local i=0\n  while [[ $i -lt $len ]]; do\n    local c1=${s:$i:1}\n\
    \    local c2=${s:$((i+1)):1}\n    local c3=${s:$((i+2)):1}\n    if [[ $c1 ==\
    \ $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n    i=$((i+1))\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    is_happy\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"false\" ]]\n\
    \    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\") = \"\
    true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate \"\
    adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=$1\n  local len=${#str}\n  if [ $len -lt 3 ]; then\n    echo \"false\"\
    \n  else\n    for ((i=0; i<len-2; i++)); do\n      if [ \"${str:i:1}\" == \"${str:i+1:1}\"\
    \ ] || [ \"${str:i:1}\" == \"${str:i+2:1}\" ] || [ \"${str:i+1:1}\" == \"${str:i+2:1}\"\
    \ ]; then\n        echo \"false\"\n        return\n      fi\n    done\n    echo\
    \ \"true\"\n  fi\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [ ${#1} -lt 3 ]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [ \"${1:$i:1}\" == \"${1:$i+1:1}\" ] || [ \"${1:$i:1}\"\
    \ == \"${1:$i+2:1}\" ] || [ \"${1:$i+1:1}\" == \"${1:$i+2:1}\" ]; then\n     \
    \   echo \"false\"\n        return\n      fi\n    done\n    echo \"true\"\n  fi\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  local i=0\n  while [[ $i -lt $len ]]; do\n  \
    \  local c1=${str:$i:1}\n    local c2=${str:$((i+1)):1}\n    local c3=${str:$((i+2)):1}\n\
    \    if [[ $c1 == $c2 || $c1 == $c3 || $c2 == $c3 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 1
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    local i=0\n    local j=0\n \
    \   local k=0\n    local is_happy=\"true\"\n    if [[ $len -lt 3 ]]; then\n  \
    \      is_happy=\"false\"\n    else\n        while [[ $i -lt $len ]]; do\n   \
    \         j=$((i+1))\n            k=$((i+2))\n            if [[ ${str:$i:1} ==\
    \ ${str:$j:1} || ${str:$i:1} == ${str:$k:1} || ${str:$j:1} == ${str:$k:1} ]];\
    \ then\n                is_happy=\"false\"\n                break\n          \
    \  fi\n            i=$((i+1))\n        done\n    fi\n    echo \"$is_happy\"\n\
    }\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  if [[ ${#1} -lt 3 ]]; then\n    echo \"false\"\n  else\n    for (( i=0; i<${#1}-2;\
    \ i++ )); do\n      if [[ ${1:$i:1} == ${1:$i+1:1} ]] || [[ ${1:$i:1} == ${1:$i+2:1}\
    \ ]] || [[ ${1:$i+1:1} == ${1:$i+2:1} ]]; then\n        echo \"false\"\n     \
    \   return\n      fi\n    done\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n\
    \    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\") = \"\
    false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate \"abcd\"\
    ) = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[ $(candidate\
    \ \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\" ]]\n    [[ $(candidate\
    \ \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  for ((i=0; i<len-2; i++)); do\n    local a=${str:i:1}\n\
    \    local b=${str:i+1:1}\n    local c=${str:i+2:1}\n    if [[ $a == $b || $a\
    \ == $c || $b == $c ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \  local str=\"$1\"\n  local len=${#str}\n  if [[ $len -lt 3 ]]; then\n    echo\
    \ \"false\"\n    return\n  fi\n  local i=0\n  local j=0\n  local k=0\n  while\
    \ [[ $i -lt $len ]]; do\n    j=$((i+1))\n    k=$((i+2))\n    if [[ $j -ge $len\
    \ || $k -ge $len ]]; then\n      echo \"true\"\n      return\n    fi\n    if [[\
    \ ${str:$i:1} == ${str:$j:1} || ${str:$i:1} == ${str:$k:1} || ${str:$j:1} == ${str:$k:1}\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n    i=$((i+1))\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"\
    false\" ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"\
    aabb\") = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local str=\"$1\"\n    local len=${#str}\n    if [ $len -lt 3 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    for ((i=0; i<$len-2; i++));\
    \ do\n        if [ \"${str:$i:1}\" == \"${str:$i+1:1}\" ] || [ \"${str:$i:1}\"\
    \ == \"${str:$i+2:1}\" ] || [ \"${str:$i+1:1}\" == \"${str:$i+2:1}\" ]; then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"a\") = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\"\
    \ ]]\n    [[ $(candidate \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\"\
    ) = \"false\" ]]\n    [[ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate\
    \ \"xyy\") = \"false\" ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n  \
    \  [[ $(candidate \"iopaxioi\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931
- exit_code: 0
  program: "#!/bin/bash\n# You are given a string s.\n# Your task is to check if the\
    \ string is happy or not.\n# A string is happy if its length is at least 3 and\
    \ every 3 consecutive letters are distinct\n# For example:\n# >>> $(is_happy \"\
    a\")\n# \"false\"\n# >>> $(is_happy \"aa\")\n# \"false\"\n# >>> $(is_happy \"\
    abcd\")\n# \"true\"\n# >>> $(is_happy \"aabb\")\n# \"false\"\n# >>> $(is_happy\
    \ \"adb\")\n# \"true\"\n# >>> $(is_happy \"xyy\")\n# \"false\"\nis_happy() {\n\
    \    local s=$1\n    local len=${#s}\n    if [ $len -lt 3 ]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    for ((i=0; i<len-2; i++)); do\n     \
    \   if [ \"${s:i:1}\" == \"${s:i+1:1}\" ] || [ \"${s:i:1}\" == \"${s:i+2:1}\"\
    \ ] || [ \"${s:i+1:1}\" == \"${s:i+2:1}\" ]; then\n            echo \"false\"\n\
    \            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    is_happy \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"a\"\
    ) = \"false\" ]]\n    [[ $(candidate \"aa\") = \"false\" ]]\n    [[ $(candidate\
    \ \"abcd\") = \"true\" ]]\n    [[ $(candidate \"aabb\") = \"false\" ]]\n    [[\
    \ $(candidate \"adb\") = \"true\" ]]\n    [[ $(candidate \"xyy\") = \"false\"\
    \ ]]\n    [[ $(candidate \"iopaxpoi\") = \"true\" ]]\n    [[ $(candidate \"iopaxioi\"\
    ) = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660339931

language: sh
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local count=0\n  for num in $@; do\n    local sum=0\n    for (( i=0; i<${#num};\
    \ i++ )); do\n      local digit=${num:$i:1}\n      if [[ $digit == \"-\" ]]; then\n\
    \        continue\n      fi\n      sum=$(( sum + digit ))\n    done\n    if [[\
    \ $sum -gt 0 ]]; then\n      count=$(( count + 1 ))\n    fi\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local -i count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local -i sum=0\n        local -i n=${num#-}\n        while ((n >\
    \ 0)); do\n            ((sum += n % 10))\n            ((n /= 10))\n        done\n\
    \        ((sum > 0)) && ((++count))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i count=0\n    for num in \"$@\"; do\n        if (( num < 0 ));\
    \ then\n            (( num = -num ))\n        fi\n        local -i sum=0\n   \
    \     while (( num > 0 )); do\n            (( sum += num % 10 ))\n           \
    \ (( num /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmd4zm67c.sh: line 15: ((: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpmd4zm67c.sh: line 19: ((: -1 -2 0: syntax error
    in expression (error token is "0")\n/tmp/tmpmd4zm67c.sh: line 15: ((: 1 1 2 -2
    3 4 5: syntax error in expression (error token is "1 2 -2 3 4 5")\n/tmp/tmpmd4zm67c.sh:
    line 19: ((: 1 1 2 -2 3 4 5: syntax error in expression (error token is "1 2 -2
    3 4 5")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    for i in $@; do\n        if [ $i -lt 0 ]; then\n   \
    \         i=$((-$i))\n        fi\n        while [ $i -gt 0 ]; do\n           \
    \ sum=$((sum + i % 10))\n            i=$((i / 10))\n        done\n        if [\
    \ $sum -gt 0 ]; then\n            sum=0\n            echo -n \"$((echo -n $@ |\
    \ tr ' ' '\\n' | wc -l)) \"\n            return\n        fi\n    done\n    echo\
    \ -n \"0 \"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        for (( j=0; j<${#i}; j++ )); do\n         \
    \   local digit=${i:$j:1}\n            if [[ $digit == \"-\" ]]; then\n      \
    \          continue\n            fi\n            (( sum += digit ))\n        done\n\
    \        if (( sum > 0 )); then\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        sum=0\n\
    \        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum + ${i:$j:1}\
    \ ))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnsz0g2zi.sh: line 18: sum + - : syntax error: operand expected
    (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        for digit in $(echo $num | grep -o .); do\n    \
    \        sum=$((sum + digit))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjs2cfpaq.sh: line 18: -: syntax error: operand expected (error
    token is "-")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local count=0\n    for num in $@; do\n        local sum=0\n        for\
    \ (( i=0; i<${#num}; i++ )); do\n            local digit=${num:$i:1}\n       \
    \     if [[ $digit == \"-\" ]]; then\n                continue\n            fi\n\
    \            sum=$(( sum + digit ))\n        done\n        if [[ $sum -gt 0 ]];\
    \ then\n            count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for num in $@; do\n        sum=0\n\
    \        for (( i=0; i<${#num}; i++ )); do\n            (( sum += ${num:$i:1}\
    \ ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmps02b965_.sh: line 18: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmps02b965_.sh: line 18: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i n=${i#-}\n        while (( n >\
    \ 0 )); do\n            (( sum += n % 10 ))\n            (( n /= 10 ))\n     \
    \   done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoxgfuo94.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        sum=0\n\
    \        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum + ${i:$j:1}\
    \ ))\n        done\n        if (( sum > 0 )); then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1uoivxg7.sh: line 18: sum + - : syntax error: operand expected
    (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        for ((i=0; i<${#num}; i++)); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit == \"-\" ]]; then\n            \
    \    continue\n            fi\n            sum=$((sum + digit))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -i sum=0\n  for num in $@; do\n    local -i num_sum=0\n    for ((\
    \ i=0; i<${#num}; i++ )); do\n      num_sum+=$(( ${num:$i:1} ))\n    done\n  \
    \  (( sum+=num_sum ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpebcp8i89.sh: line 17: - : syntax error: operand expected (error
    token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ sum=0\n        while [ $num -ne 0 ]; do\n            sum=$((sum + num % 10))\n\
    \            num=$((num / 10))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local nums=($@)\n  local count=0\n  for num in ${nums[@]}; do\n    local\
    \ sum=0\n    local abs_num=${num#-}\n    while [ $abs_num -gt 0 ]; do\n      local\
    \ digit=$((abs_num % 10))\n      sum=$((sum + digit))\n      abs_num=$((abs_num\
    \ / 10))\n    done\n    if [ $sum -gt 0 ]; then\n      count=$((count + 1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ if (( num < 0 )); then\n            sum=$(( sum - num % 10 ))\n        else\n\
    \            sum=$(( sum + num % 10 ))\n        fi\n        num=$(( num / 10 ))\n\
    \        if (( num < 0 )); then\n            sum=$(( sum - num % 10 ))\n     \
    \   else\n            sum=$(( sum + num % 10 ))\n        fi\n        num=$(( num\
    \ / 10 ))\n        if (( num < 0 )); then\n            sum=$(( sum - num % 10\
    \ ))\n        else\n            sum=$(( sum + num % 10 ))\n        fi\n      \
    \  if (( sum > 0 )); then\n            (( count++ ))\n        fi\n        sum=0\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local sum=0\n    local count=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            sum=$((sum\
    \ + i * -1))\n        else\n            sum=$((sum + i))\n        fi\n       \
    \ if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n  \
    \  done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmplishinhv.sh: line 17: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmplishinhv.sh: line 20: -1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 0
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ sum=0\n        if [[ $num -lt 0 ]]; then\n            num=$(( -num ))\n    \
    \        sum=$(( -${num:0:1} ))\n        fi\n        for (( i=0; i<${#num}; i++\
    \ )); do\n            sum=$(( sum + ${num:$i:1} ))\n        done\n        if [[\
    \ $sum -gt 0 ]]; then\n            count=$(( count + 1 ))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for num in $@; do\n        local\
    \ num_abs=${num#-}\n        local num_sign=${num%%$num_abs}\n        local num_sign=${num_sign:-1}\n\
    \        for (( i=0; i<${#num_abs}; i++ )); do\n            sum=$(( sum + ${num_abs:$i:1}\
    \ ))\n        done\n        if (( sum * num_sign > 0 )); then\n            count=$((\
    \ count + 1 ))\n        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqh9jv5wg.sh: line 22: ((: -: syntax error: operand expected
    (error token is "-")\n/tmp/tmpqh9jv5wg.sh: line 22: ((: -: syntax error: operand
    expected (error token is "-")\n/tmp/tmpqh9jv5wg.sh: line 22: ((: -: syntax error:
    operand expected (error token is "-")\n/tmp/tmpqh9jv5wg.sh: line 22: ((: -: syntax
    error: operand expected (error token is "-")\n/tmp/tmpqh9jv5wg.sh: line 22: ((:
    -: syntax error: operand expected (error token is "-")\n/tmp/tmpqh9jv5wg.sh: line
    22: ((: -: syntax error: operand expected (error token is "-")\n/tmp/tmpqh9jv5wg.sh:
    line 22: ((: -: syntax error: operand expected (error token is "-")\n/tmp/tmpqh9jv5wg.sh:
    line 22: ((: -: syntax error: operand expected (error token is "-")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i count=0\n    for num in $@; do\n        local -i sum=0\n   \
    \     local -i num_abs=${num#-}\n        while (( num_abs )); do\n           \
    \ (( sum += num_abs % 10 ))\n            (( num_abs /= 10 ))\n        done\n \
    \       (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [[ $num -ne 0 ]];\
    \ do\n            local digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl0nqa4ns.sh: line 18: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpl0nqa4ns.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while [[ $num -gt\
    \ 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9zwy7unm.sh: line 18: [[: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp9zwy7unm.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=\"$i\"\n        if [[ \"$i\" -lt\
    \ 0 ]]; then\n            num=\"${i:1}\"\n        fi\n        while [[ \"$num\"\
    \ -gt 0 ]]; do\n            local digit=\"$((num % 10))\"\n            sum=$((sum\
    \ + digit))\n            num=$((num / 10))\n        done\n        if [[ \"$sum\"\
    \ -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n   \
    \ echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgbx0f4rg.sh: line 18: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpgbx0f4rg.sh: line 21: [[: -1 -2 0: syntax error
    in expression (error token is "0")\n/tmp/tmpgbx0f4rg.sh: line 18: [[: 1 1 2 -2
    3 4 5: syntax error in expression (error token is "1 2 -2 3 4 5")\n/tmp/tmpgbx0f4rg.sh:
    line 21: [[: 1 1 2 -2 3 4 5: syntax error in expression (error token is "1 2 -2
    3 4 5")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            (( sum+=${num:$i:1}\
    \ ))\n        done\n        (( sum>0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzx_up5ly.sh: line 18: ((: sum+=- : syntax error: operand expected
    (error token is "- ")\n/tmp/tmpzx_up5ly.sh: line 18: ((: sum+=- : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local sum=0\n  local count=0\n  for num in $@; do\n    sum=0\n    for ((\
    \ i=0; i<${#num}; i++ )); do\n      (( sum += ${num:$i:1} ))\n    done\n    ((\
    \ sum > 0 )) && (( count++ ))\n  done\n  echo $count\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwbgadbn.sh: line 18: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmpjwbgadbn.sh: line 18: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local nums=($@)\n  local count=0\n  for num in ${nums[@]}; do\n    local\
    \ sum=0\n    for (( i=0; i<${#num}; i++ )); do\n      local digit=${num:$i:1}\n\
    \      if [[ $digit == \"-\" ]]; then\n        continue\n      fi\n      sum=$((sum\
    \ + digit))\n    done\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while [[ $num -gt\
    \ 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp682tzh88.sh: line 18: [[: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp682tzh88.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i count=0\n    for i in $@; do\n        local -i sum=0\n     \
    \   for (( j=0; j<${#i}; j++ )); do\n            (( sum += ${i:$j:1} ))\n    \
    \    done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmps4b20wtw.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmps4b20wtw.sh: line 17: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -i sum=0\n  for num in \"$@\"; do\n    if (( num < 0 )); then\n \
    \     num=${num:1}\n    fi\n    while (( num > 0 )); do\n      (( sum += num %\
    \ 10 ))\n      (( num /= 10 ))\n    done\n    if (( sum > 0 )); then\n      ((\
    \ count++ ))\n    fi\n    (( sum = 0 ))\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array\n    IFS=' ' read -r -a array <<< \"$@\"\n    local count=0\n\
    \    for i in \"${array[@]}\"; do\n        local sum=0\n        local num=$i\n\
    \        while [[ $num -ne 0 ]]; do\n            sum=$((sum + num % 10))\n   \
    \         num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    local -i count=0\n    for i in\
    \ $@; do\n        if [ $i -lt 0 ]; then\n            sum=$((sum + i * -1))\n \
    \       else\n            sum=$((sum + i))\n        fi\n        while [ $sum -gt\
    \ 0 ]; do\n            sum=$((sum / 10))\n            count=$((count + 1))\n \
    \       done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    local -i num\n    for num in\
    \ $@; do\n        if (( num < 0 )); then\n            num=${num#-}\n        fi\n\
    \        while (( num > 0 )); do\n            (( sum += num % 10 ))\n        \
    \    (( num /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n \
    \       (( sum = 0 ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -a arr=($@)\n  local count=0\n  for i in \"${arr[@]}\"; do\n    local\
    \ -i sum=0\n    for (( j=0; j<${#i}; j++ )); do\n      (( sum += ${i:$j:1} ))\n\
    \    done\n    (( sum > 0 )) && (( count++ ))\n  done\n  echo \"$count\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd_rlricl.sh: line 18: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmpd_rlricl.sh: line 18: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=($@)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            local -a digits=($(echo $i\
    \ | sed 's/-//g' | grep -o .))\n        else\n            local -a digits=($(echo\
    \ $i | grep -o .))\n        fi\n        local sum=0\n        for j in \"${digits[@]}\"\
    ; do\n            sum=$((sum + j))\n        done\n        if [[ $sum -gt 0 ]];\
    \ then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [[ $num -ne 0 ]];\
    \ do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n   \
    \     done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdqfs_7dq.sh: line 18: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpdqfs_7dq.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=($@)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        for (( j=0; j<${#i}; j++ )); do\n         \
    \   local digit=${i:$j:1}\n            if [[ $digit =~ ^[0-9]$ ]]; then\n    \
    \            (( sum += digit ))\n            else\n                (( sum -= digit\
    \ ))\n            fi\n        done\n        if (( sum > 0 )); then\n         \
    \   (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp96ujoqxw.sh: line 22: ((: -: syntax error: operand expected
    (error token is "-")\n/tmp/tmp96ujoqxw.sh: line 22: ((: -: syntax error: operand
    expected (error token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n \
    \       local sum=0\n        local num=${num#-}\n        while [ $num -gt 0 ];\
    \ do\n            local digit=$((num % 10))\n            num=$((num / 10))\n \
    \           sum=$((sum + digit))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=($@)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [ $num -ne 0 ];\
    \ do\n            local digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local count=0\n  for num in $@; do\n    local sum=0\n    for (( i=0; i<${#num};\
    \ i++ )); do\n      sum=$(( sum + ${num:$i:1} ))\n    done\n    if (( sum > 0\
    \ )); then\n      count=$(( count + 1 ))\n    fi\n  done\n  echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmphdofbh63.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local sum=0\n  local count=0\n  for i in $@; do\n    if [[ $i -lt 0 ]];\
    \ then\n      sum=$((sum - i % 10))\n    else\n      sum=$((sum + i % 10))\n \
    \   fi\n    i=$((i / 10))\n    while [[ $i -ne 0 ]]; do\n      if [[ $i -lt 0\
    \ ]]; then\n        sum=$((sum - i % 10))\n      else\n        sum=$((sum + i\
    \ % 10))\n      fi\n      i=$((i / 10))\n    done\n    if [[ $sum -gt 0 ]]; then\n\
    \      count=$((count + 1))\n    fi\n    sum=0\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i i=0\n    for num in $@; do\n        if ((\
    \ num < 0 )); then\n            (( sum += -num % 10 ))\n            (( num = -num\
    \ / 10 ))\n        fi\n        while (( num > 0 )); do\n            (( sum +=\
    \ num % 10 ))\n            (( num /= 10 ))\n        done\n        (( sum > 0 ))\
    \ && (( i++ ))\n        (( sum = 0 ))\n    done\n    echo \"$i\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        sum=0\n\
    \        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum + ${i:$j:1}\
    \ ))\n        done\n        if (( sum > 0 )); then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdfr15lvn.sh: line 18: sum + - : syntax error: operand expected
    (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local sum=0\n    local count=0\n    for num in\
    \ ${nums[@]}; do\n        if [[ $num -lt 0 ]]; then\n            sum=$((sum +\
    \ ${num:1:1}))\n        else\n            sum=$((sum + ${num:0:1}))\n        fi\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local sum=0\n    local count=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((-$i))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzn4lbf0x.sh: line 17: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpzn4lbf0x.sh: line 20: [[: -1 -2 0: syntax error
    in expression (error token is "0")\n/tmp/tmpzn4lbf0x.sh: line 17: [[: 1 1 2 -2
    3 4 5: syntax error in expression (error token is "1 2 -2 3 4 5")\n/tmp/tmpzn4lbf0x.sh:
    line 20: [[: 1 1 2 -2 3 4 5: syntax error in expression (error token is "1 2 -2
    3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local nums=($@)\n  local count=0\n  for num in ${nums[@]}; do\n    local\
    \ sum=0\n    for (( i=0; i<${#num}; i++ )); do\n      local digit=${num:$i:1}\n\
    \      if [[ $digit == \"-\" ]]; then\n        continue\n      fi\n      sum=$((\
    \ $sum + $digit ))\n    done\n    if [[ $sum -gt 0 ]]; then\n      count=$(( $count\
    \ + 1 ))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in \"$@\"; do\n   \
    \     if ((num < 0)); then\n            sum=$((-num % 10))\n        else\n   \
    \         sum=$((num % 10))\n        fi\n        num=$((num / 10))\n        while\
    \ ((num != 0)); do\n            if ((num < 0)); then\n                sum=$((sum\
    \ - num % 10))\n            else\n                sum=$((sum + num % 10))\n  \
    \          fi\n            num=$((num / 10))\n        done\n        if ((sum >\
    \ 0)); then\n            ((count++))\n        fi\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo2uhozh1.sh: line 16: ((: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpo2uhozh1.sh: line 19: -1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for i in $@; do\n        if\
    \ (( i < 0 )); then\n            (( sum += -i % 10 ))\n        else\n        \
    \    (( sum += i % 10 ))\n        fi\n        (( i /= 10 ))\n        while ((\
    \ i != 0 )); do\n            if (( i < 0 )); then\n                (( sum += -i\
    \ % 10 ))\n            else\n                (( sum += i % 10 ))\n           \
    \ fi\n            (( i /= 10 ))\n        done\n        if (( sum > 0 )); then\n\
    \            (( count++ ))\n        fi\n        (( sum = 0 ))\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i num=${i#-}\n        while (( num\
    \ > 0 )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n\
    \        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdsji8496.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        local num_abs=${num#-}\n        while [[ $num_abs\
    \ -gt 0 ]]; do\n            sum=$((sum + num_abs % 10))\n            num_abs=$((num_abs\
    \ / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for i in $@; do\n        if\
    \ (( $i < 0 )); then\n            sum=$(( $i * -1 ))\n        else\n         \
    \   sum=$i\n        fi\n        while (( $sum > 0 )); do\n            sum=$((\
    \ $sum / 10 ))\n            count=$(( $count + 1 ))\n        done\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local nums=($@)\n  local count=0\n  for num in ${nums[@]}; do\n    local\
    \ sum=0\n    local abs_num=${num#-}\n    while [ $abs_num -gt 0 ]; do\n      sum=$((sum\
    \ + abs_num % 10))\n      abs_num=$((abs_num / 10))\n    done\n    if [ $sum -gt\
    \ 0 ]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i num=$i\n        while (( num !=\
    \ 0 )); do\n            sum=$(( sum + (num % 10) ))\n            num=$(( num /\
    \ 10 ))\n        done\n        (( sum != 0 )) && (( count++ ))\n    done\n   \
    \ echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwkimc15k.sh: line 17: local: -1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((-$i))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmppe2ki4_t.sh: line 17: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmppe2ki4_t.sh: line 20: [[: -1 -2 0: syntax error
    in expression (error token is "0")\n/tmp/tmppe2ki4_t.sh: line 17: [[: 1 1 2 -2
    3 4 5: syntax error in expression (error token is "1 2 -2 3 4 5")\n/tmp/tmppe2ki4_t.sh:
    line 20: [[: 1 1 2 -2 3 4 5: syntax error in expression (error token is "1 2 -2
    3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            (( sum\
    \ += -i % 10 ))\n        else\n            (( sum += i % 10 ))\n        fi\n \
    \       (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc5xrrxkq.sh: line 17: ((: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpc5xrrxkq.sh: line 20: ((: -1 -2 0: syntax error
    in expression (error token is "0")\n/tmp/tmpc5xrrxkq.sh: line 17: ((: 1 1 2 -2
    3 4 5: syntax error in expression (error token is "1 2 -2 3 4 5")\n/tmp/tmpc5xrrxkq.sh:
    line 20: ((: 1 1 2 -2 3 4 5: syntax error in expression (error token is "1 2 -2
    3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        if [[ $i -lt 0 ]]; then\n            sum=$((sum\
    \ - ${i:0:1}))\n        else\n            sum=$((sum + ${i:0:1}))\n        fi\n\
    \        for ((j=1; j<${#i}; j++)); do\n            sum=$((sum + ${i:$j:1}))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvzsm_ts3.sh: line 20: sum + : syntax error: operand expected
    (error token is "+ ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        if [[ $i\
    \ -lt 0 ]]; then\n            sum=$((sum - $i % 10))\n        else\n         \
    \   sum=$((sum + $i % 10))\n        fi\n        i=$((i / 10))\n        if [[ $i\
    \ -lt 0 ]]; then\n            sum=$((sum - $i % 10))\n        else\n         \
    \   sum=$((sum + $i % 10))\n        fi\n        i=$((i / 10))\n        if [[ $i\
    \ -lt 0 ]]; then\n            sum=$((sum - $i % 10))\n        else\n         \
    \   sum=$((sum + $i % 10))\n        fi\n        if [[ $sum -gt 0 ]]; then\n  \
    \          count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while [[ $num -gt\
    \ 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp682tzh88.sh: line 18: [[: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp682tzh88.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        sum=0\n\
    \        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum + ${i:$j:1}\
    \ ))\n        done\n        if (( sum > 0 )); then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1uoivxg7.sh: line 18: sum + - : syntax error: operand expected
    (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local sum=0\n    local count=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n\
    \        fi\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum + i % 10))\n\
    \            i=$((i / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpes9ooa6o.sh: line 17: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpes9ooa6o.sh: line 20: [[: -1 -2 0: syntax error
    in expression (error token is "0")\n/tmp/tmpes9ooa6o.sh: line 17: [[: 1 1 2 -2
    3 4 5: syntax error in expression (error token is "1 2 -2 3 4 5")\n/tmp/tmpes9ooa6o.sh:
    line 20: [[: 1 1 2 -2 3 4 5: syntax error in expression (error token is "1 2 -2
    3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        local abs_num=${num#-}\n        while [ $abs_num\
    \ -gt 0 ]; do\n            local digit=$((abs_num % 10))\n            abs_num=$((abs_num\
    \ / 10))\n            sum=$((sum + digit))\n        done\n        if [ $sum -gt\
    \ 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i num=${i#-}\n        while (( num\
    \ > 0 )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n\
    \        done\n        (( count += sum > 0 ))\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5k_8iph1.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    for num in $@; do\n        local -i num_abs=${num#-}\n\
    \        while (( num_abs > 0 )); do\n            (( sum += num_abs % 10 ))\n\
    \            (( num_abs /= 10 ))\n        done\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        for (( j=0; j<${#i}; j++ )); do\n         \
    \   local digit=\"${i:$j:1}\"\n            if [[ \"$digit\" == \"-\" ]]; then\n\
    \                continue\n            fi\n            sum=$(( sum + digit ))\n\
    \        done\n        if [[ \"$sum\" -gt 0 ]]; then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=(\"$@\")\n    local -i count=0\n    for i in \"${array[@]}\"\
    ; do\n        local -i sum=0\n        local -i num=${i#-}\n        while (( num\
    \ > 0 )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n\
    \        done\n        (( count += sum > 0 ))\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2_yhi7ys.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        if [ $i\
    \ -lt 0 ]; then\n            sum=$((sum + $i))\n        else\n            sum=$((sum\
    \ + $i % 10))\n            i=$((i / 10))\n            while [ $i -gt 0 ]; do\n\
    \                sum=$((sum + $i % 10))\n                i=$((i / 10))\n     \
    \       done\n        fi\n        if [ $sum -gt 0 ]; then\n            count=$((count\
    \ + 1))\n        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -a nums=($@)\n  local count=0\n  for num in \"${nums[@]}\"; do\n\
    \    local sum=0\n    for (( i=0; i<${#num}; i++ )); do\n      local digit=\"\
    ${num:$i:1}\"\n      if [[ \"$digit\" == \"-\" ]]; then\n        continue\n  \
    \    fi\n      sum=$(( sum + digit ))\n    done\n    if [[ \"$sum\" -gt 0 ]];\
    \ then\n      count=$(( count + 1 ))\n    fi\n  done\n  echo \"$count\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        local sign=1\n        if [[ $num -lt 0 ]]; then\n\
    \            sign=-1\n            num=$((-$num))\n        fi\n        while [[\
    \ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        if [[ $((sign * sum)) -gt 0 ]]; then\n       \
    \     count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            sum=$((\
    \ $i * -1 ))\n        else\n            sum=$i\n        fi\n        while [[ $sum\
    \ -gt 0 ]]; do\n            sum=$(( $sum / 10 ))\n            count=$(( $count\
    \ + 1 ))\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu4hyojh8.sh: line 17: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpu4hyojh8.sh: line 20: -1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=(\"$@\")\n    local -i count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local -i sum=0\n        local -i num_abs=${num#-}\n        while\
    \ (( num_abs > 0 )); do\n            (( sum += num_abs % 10 ))\n            ((\
    \ num_abs /= 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n   \
    \ done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpawafj6uw.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for i in $@; do\n        sum=0\n\
    \        for ((j=0; j<${#i}; j++)); do\n            sum+=${i:$j:1}\n        done\n\
    \        ((sum>0)) && ((count++))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp65iqityx.sh: line 18: -: syntax error: operand expected (error
    token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums\n    local -i sum\n    local -i i\n    local -i j\n   \
    \ nums=($@)\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sum=0\n        for\
    \ ((j=0; j<${#nums[i]}; j++)); do\n            ((sum+=${nums[i]:j:1}))\n     \
    \   done\n        if ((sum>0)); then\n            ((count++))\n        fi\n  \
    \  done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if (( i < 0 )); then\n            (( sum\
    \ += -i % 10 ))\n        else\n            (( sum += i % 10 ))\n        fi\n \
    \       (( sum += i / 10 ))\n        if (( sum > 0 )); then\n            (( count++\
    \ ))\n        fi\n        (( sum = 0 ))\n    done\n    echo \"$count\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgiste03c.sh: line 17: ((: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpgiste03c.sh: line 20: ((: -1 -2 0: syntax error
    in expression (error token is "0")\n/tmp/tmpgiste03c.sh: line 22: ((: -1 -2 0:
    syntax error in expression (error token is "0")\n/tmp/tmpgiste03c.sh: line 17:
    ((: 1 1 2 -2 3 4 5: syntax error in expression (error token is "1 2 -2 3 4 5")\n/tmp/tmpgiste03c.sh:
    line 20: ((: 1 1 2 -2 3 4 5: syntax error in expression (error token is "1 2 -2
    3 4 5")\n/tmp/tmpgiste03c.sh: line 22: ((: 1 1 2 -2 3 4 5: syntax error in expression
    (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for i in $@; do\n        sum=0\n\
    \        for (( j=0; j<${#i}; j++ )); do\n            (( sum += ${i:$j:1} ))\n\
    \        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdg17o3l0.sh: line 18: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmpdg17o3l0.sh: line 18: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local arr=($@)\n    local count=0\n    for i in ${arr[@]}; do\n     \
    \   local sum=0\n        local num=${i#-}\n        while [ $num -gt 0 ]; do\n\
    \            sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n \
    \       local sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            local\
    \ digit=\"${num:$i:1}\"\n            if [[ \"$digit\" =~ ^-?[0-9]+$ ]]; then\n\
    \                sum=$((sum + digit))\n            fi\n        done\n        if\
    \ [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        if [ $i\
    \ -lt 0 ]; then\n            i=$((-$i))\n        fi\n        while [ $i -gt 0\
    \ ]; do\n            sum=$((sum + i % 10))\n            i=$((i / 10))\n      \
    \  done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n \
    \       fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n \
    \       local sum=0\n        if [[ $num -lt 0 ]]; then\n            num=$((-num))\n\
    \        fi\n        while [[ $num -gt 0 ]]; do\n            sum=$((sum + num\
    \ % 10))\n            num=$((num / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for num in $@; do\n        sum=0\n\
    \        for (( i=0; i<${#num}; i++ )); do\n            (( sum += ${num:$i:1}\
    \ ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmps02b965_.sh: line 18: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmps02b965_.sh: line 18: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i count=0\n    for num in $@; do\n        local -i sum=0\n   \
    \     for (( i=0; i<${#num}; i++ )); do\n            (( sum += ${num:$i:1} ))\n\
    \        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpltgo9sta.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmpltgo9sta.sh: line 17: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -i sum=0\n  local -i count=0\n  for num in $@; do\n    if [[ $num\
    \ -lt 0 ]]; then\n      sum=$((sum + $num * -1))\n    else\n      sum=$((sum +\
    \ $num))\n    fi\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n\
    \    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n \
    \       local sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit == \"-\" ]]; then\n            \
    \    continue\n            fi\n            sum=$((sum + digit))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i j=${i#-}\n        while (( j >\
    \ 0 )); do\n            (( sum += j % 10 ))\n            (( j /= 10 ))\n     \
    \   done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaeomu0sn.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for n in \"${nums[@]}\"; do\n\
    \        local sum=0\n        local abs_n=${n#-}\n        while [ $abs_n -gt 0\
    \ ]; do\n            sum=$((sum + abs_n % 10))\n            abs_n=$((abs_n / 10))\n\
    \        done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [ $num -ne 0 ];\
    \ do\n            local digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpgt2vs9v3.sh: line 18: [: -ne: unary operator expected\n/tmp/tmpgt2vs9v3.sh:
    line 18: [: -1: unary operator expected\n/tmp/tmpgt2vs9v3.sh: line 18: [: too
    many arguments\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        for ((i=0; i<${#num}; i++)); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit == \"-\" ]]; then\n            \
    \    continue\n            fi\n            sum=$((sum + digit))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i sum=0\n    local -i count=0\n   \
    \ for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            sum=$((sum\
    \ + i))\n        else\n            sum=$((sum + i % 10))\n            i=$((i /\
    \ 10))\n            while [[ $i -gt 0 ]]; do\n                sum=$((sum + i %\
    \ 10))\n                i=$((i / 10))\n            done\n        fi\n        if\
    \ [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n     \
    \   sum=0\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy6mdrxj6.sh: line 17: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpy6mdrxj6.sh: line 20: -1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -i sum=0\n  local -i count=0\n  for num in $@; do\n    sum=0\n  \
    \  for ((i=0; i<${#num}; i++)); do\n      ((sum+=${num:$i:1}))\n    done\n   \
    \ ((sum>0)) && ((count++))\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvn2wgb3x.sh: line 18: ((: sum+=-: syntax error: operand expected
    (error token is "-")\n/tmp/tmpvn2wgb3x.sh: line 18: ((: sum+=-: syntax error:
    operand expected (error token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    for num in $@; do\n        local sum=0\n        for\
    \ (( i=0; i<${#num}; i++ )); do\n            local sum=$(( sum + ${num:$i:1} ))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            echo -n \"$num \"\
    \n        fi\n    done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit == \"-\" ]]; then\n            \
    \    continue\n            fi\n            sum=$((sum + digit))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i i=0 j=0 sum=0\n    local -a arr=($@)\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        sum=0\n        for ((j=0; j<${#arr[i]}; j++)); do\n     \
    \       if [[ ${arr[i]:$j:1} == \"-\" ]]; then\n                sum=$((sum + ${arr[i]:$((j+1)):1}))\n\
    \            else\n                sum=$((sum + ${arr[i]:$j:1}))\n           \
    \ fi\n        done\n        if [[ $sum -gt 0 ]]; then\n            echo -n \"\
    $((i+1)) \"\n        fi\n    done\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit == \"-\" ]]; then\n            \
    \    continue\n            fi\n            sum=$(( sum + digit ))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$(( count + 1 ))\n     \
    \   fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -i sum=0\n  for num in \"$@\"; do\n    if (( num < 0 )); then\n \
    \     (( sum += -num % 10 ))\n      (( num = -num / 10 ))\n    fi\n    while ((\
    \ num > 0 )); do\n      (( sum += num % 10 ))\n      (( num /= 10 ))\n    done\n\
    \    (( sum > 0 )) && (( count++ ))\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=($@)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local arr=($@)\n    local count=0\n    for i in ${arr[@]}; do\n     \
    \   local sum=0\n        local num=${i#-}\n        while [ $num -gt 0 ]; do\n\
    \            local digit=$((num % 10))\n            sum=$((sum + digit))\n   \
    \         num=$((num / 10))\n        done\n        if [ $sum -gt 0 ]; then\n \
    \           count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for i in $@; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            sum=$((sum + (-i % 10)))\n        else\n \
    \           sum=$((sum + (i % 10)))\n        fi\n        if [[ $sum -gt 0 ]];\
    \ then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num=0\n    local -i i=0\n    local -i count=0\n\
    \    for num in $@; do\n        sum=0\n        for ((i=0; i<${#num}; i++)); do\n\
    \            ((sum+=${num:$i:1}))\n        done\n        ((sum>0)) && ((count++))\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoo8_2gov.sh: line 20: ((: sum+=-: syntax error: operand expected
    (error token is "-")\n/tmp/tmpoo8_2gov.sh: line 20: ((: sum+=-: syntax error:
    operand expected (error token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=($@)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [[ $num -ne 0 ]];\
    \ do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n   \
    \     done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    for i in $@; do\n        sum=0\n        for (( j=0;\
    \ j<${#i}; j++ )); do\n            (( sum += ${i:$j:1} ))\n        done\n    \
    \    if (( sum > 0 )); then\n            echo -n \"$i \"\n        fi\n    done\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -a nums=($@)\n  local -i num_count=0\n  for num in \"${nums[@]}\"\
    ; do\n    local -i sum=0\n    local -i num_abs=${num#-}\n    while (( num_abs\
    \ > 0 )); do\n      (( sum += num_abs % 10 ))\n      (( num_abs /= 10 ))\n   \
    \ done\n    (( sum > 0 )) && (( num_count++ ))\n  done\n  echo \"$num_count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local sum=0\n  local count=0\n  for num in $@; do\n    if [[ $num -lt 0\
    \ ]]; then\n      num=$(( -num ))\n    fi\n    while [[ $num -gt 0 ]]; do\n  \
    \    sum=$(( sum + num % 10 ))\n      num=$(( num / 10 ))\n    done\n    if [[\
    \ $sum -gt 0 ]]; then\n      count=$(( count + 1 ))\n    fi\n    sum=0\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i count=0\n    for i in $@; do\n        local -i sum=0\n     \
    \   for (( j=0; j<${#i}; j++ )); do\n            (( sum += ${i:$j:1} ))\n    \
    \    done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmps4b20wtw.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmps4b20wtw.sh: line 17: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -a arr=(\"$@\")\n  local -i sum=0\n  local -i count=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      sum=$((sum + i))\n   \
    \ else\n      sum=$((sum + i % 10))\n      i=$((i / 10))\n      while [[ $i -gt\
    \ 0 ]]; do\n        sum=$((sum + i % 10))\n        i=$((i / 10))\n      done\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n    fi\n \
    \   sum=0\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdbapxb0n.sh: line 17: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpdbapxb0n.sh: line 20: -1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i num=${i#-}\n        while (( num\
    \ > 0 )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n\
    \        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdsji8496.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [[ $num -ne 0 ]];\
    \ do\n            local digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyy73wmpn.sh: line 18: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpyy73wmpn.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local sum=0\n  local count=0\n  for num in $@; do\n    sum=0\n    for ((\
    \ i=0; i<${#num}; i++ )); do\n      (( sum += ${num:$i:1} ))\n    done\n    if\
    \ (( sum > 0 )); then\n      (( count++ ))\n    fi\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjx6cxn_q.sh: line 18: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmpjx6cxn_q.sh: line 18: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local array=($@)\n    local count=0\n    for i in ${array[@]}; do\n \
    \       local sum=0\n        local num=${i#-}\n        while [ $num -gt 0 ]; do\n\
    \            sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local num\n    local sum\n    local count=0\n\
    \    for num in \"${nums[@]}\"; do\n        sum=0\n        while [[ $num -ne 0\
    \ ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -i sum=0\n  local -i i=0\n  local -i n=0\n  for n in $@; do\n   \
    \ if (( n < 0 )); then\n      (( sum += -n % 10 ))\n      (( n /= 10 ))\n    fi\n\
    \    while (( n > 0 )); do\n      (( sum += n % 10 ))\n      (( n /= 10 ))\n \
    \   done\n    (( i++ ))\n  done\n  echo $i\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i count=0\n    for num in $@; do\n        local -i sum=0\n   \
    \     for (( i=0; i<${#num}; i++ )); do\n            (( sum += ${num:$i:1} ))\n\
    \        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpltgo9sta.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmpltgo9sta.sh: line 17: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit == \"-\" ]]; then\n            \
    \    continue\n            fi\n            sum=$((sum + digit))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -i sum=0\n  local -i count=0\n  for i in $@; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      sum=$((sum+i*-1))\n    else\n      sum=$((sum+i))\n    fi\n\
    \    if [[ $sum -gt 0 ]]; then\n      count=$((count+1))\n    fi\n  done\n  echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for i in $@; do\n        if\
    \ ((i < 0)); then\n            ((sum += -i % 10))\n            ((i /= 10))\n \
    \       fi\n        while ((i > 0)); do\n            ((sum += i % 10))\n     \
    \       ((i /= 10))\n        done\n        ((sum > 0)) && ((++count))\n      \
    \  ((sum = 0))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while [[ $num -gt\
    \ 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp682tzh88.sh: line 18: [[: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp682tzh88.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ sum=0\n        for ((i=0; i<${#num}; i++)); do\n            ((sum+=${num:$i:1}))\n\
    \        done\n        ((sum>0)) && ((count++))\n    done\n    echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf7k1zpm4.sh: line 18: ((: sum+=-: syntax error: operand expected
    (error token is "-")\n/tmp/tmpf7k1zpm4.sh: line 18: ((: sum+=-: syntax error:
    operand expected (error token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit == \"-\" ]]; then\n            \
    \    continue\n            fi\n            sum=$(( sum + digit ))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$(( count + 1 ))\n     \
    \   fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n \
    \       local sum=0\n        for ((i=0; i<${#num}; i++)); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit =~ ^[0-9]$ ]]; then\n          \
    \      sum=$((sum + digit))\n            else\n                sum=$((sum - digit))\n\
    \            fi\n        done\n        if [[ $sum -gt 0 ]]; then\n           \
    \ count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmph4scx7bm.sh: line 22: -: syntax error: operand expected (error
    token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local count=0\n    for num in $@; do\n        local sum=0\n        for\
    \ (( i=0; i<${#num}; i++ )); do\n            local digit=${num:$i:1}\n       \
    \     if [[ $digit == \"-\" ]]; then\n                continue\n            fi\n\
    \            sum=$((sum + digit))\n        done\n        if [[ $sum -gt 0 ]];\
    \ then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ sum=0\n        if (( num < 0 )); then\n            sum=$(( -num % 10 ))\n  \
    \          num=$(( -num / 10 ))\n        fi\n        while (( num > 0 )); do\n\
    \            sum=$(( sum + num % 10 ))\n            num=$(( num / 10 ))\n    \
    \    done\n        if (( sum > 0 )); then\n            (( count++ ))\n       \
    \ fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n \
    \       local sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit =~ ^-?[0-9]+$ ]]; then\n       \
    \         (( sum += digit ))\n            fi\n        done\n        if (( sum\
    \ > 0 )); then\n            (( count++ ))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        local abs_num=${num#-}\n        while [ $abs_num\
    \ -gt 0 ]; do\n            sum=$((sum + abs_num % 10))\n            abs_num=$((abs_num\
    \ / 10))\n        done\n        if [ $sum -gt 0 ]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [[ $num -ne 0 ]];\
    \ do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n   \
    \     done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3prwo0bd.sh: line 18: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp3prwo0bd.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -a nums=($@)\n  local count=0\n  for num in \"${nums[@]}\"; do\n\
    \    local sum=0\n    for (( i=0; i<${#num}; i++ )); do\n      local digit=${num:$i:1}\n\
    \      if [[ $digit =~ ^[0-9]$ ]]; then\n        (( sum += digit ))\n      else\n\
    \        (( sum -= digit ))\n      fi\n    done\n    if (( sum > 0 )); then\n\
    \      (( count++ ))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmphv0wy_as.sh: line 22: ((: -: syntax error: operand expected
    (error token is "-")\n/tmp/tmphv0wy_as.sh: line 22: ((: -: syntax error: operand
    expected (error token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local count=0\n  for i in $@; do\n    local sum=0\n    for (( j=0; j<${#i};\
    \ j++ )); do\n      sum=$(( sum + ${i:$j:1} ))\n    done\n    if [[ $sum -gt 0\
    \ ]]; then\n      count=$(( count + 1 ))\n    fi\n  done\n  echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp49e84m0b.sh: line 17: sum + - : syntax error: operand expected
    (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        sum=0\n\
    \        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum + ${i:$j:1}\
    \ ))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnsz0g2zi.sh: line 18: sum + - : syntax error: operand expected
    (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=($@)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        for (( j=0; j<${#i}; j++ )); do\n         \
    \   local digit=\"${i:$j:1}\"\n            if [[ \"$digit\" == \"-\" ]]; then\n\
    \                continue\n            fi\n            sum=$(( sum + digit ))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    for num in \"$@\"; do\n       \
    \ if (( num < 0 )); then\n            (( sum += -num % 10 ))\n            (( num\
    \ = -num / 10 ))\n        fi\n        while (( num > 0 )); do\n            ((\
    \ sum += num % 10 ))\n            (( num /= 10 ))\n        done\n        (( sum\
    \ > 0 )) && echo \"$num\"\n    done | wc -l\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp70el6uf2.sh: line 15: -1 -2 0: syntax error in expression (error
    token is "0")\n/tmp/tmp70el6uf2.sh: line 15: 1 1 2 -2 3 4 5: syntax error in expression
    (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i num\n    for num in $@; do\n        while\
    \ ((num != 0)); do\n            sum+=${num: -1}\n            num/=10\n       \
    \ done\n        ((sum > 0)) && echo $num\n    done | wc -l\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=23>
  stdout: <_io.BufferedReader name=52>
  timestamp: 1660342975
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        local abs_num=${num#-}\n        while [ $abs_num\
    \ -gt 0 ]; do\n            sum=$((sum + abs_num % 10))\n            abs_num=$((abs_num\
    \ / 10))\n        done\n        if [ $sum -gt 0 ]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    for num in $@; do\n        if [ $num -lt 0 ]; then\n\
    \            num=$((-$num))\n        fi\n        while [ $num -gt 0 ]; do\n  \
    \          sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [ $sum -gt 0 ]; then\n            echo -n \"1 \"\n        else\n \
    \           echo -n \"0 \"\n        fi\n        sum=0\n    done\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ if (( num < 0 )); then\n            num=${num:1}\n        fi\n        while\
    \ (( num > 0 )); do\n            sum+=$(( num % 10 ))\n            num=$(( num\
    \ / 10 ))\n        done\n        if (( sum > 0 )); then\n            (( count++\
    \ ))\n        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -a nums=(\"$@\")\n  local -i count=0\n  for num in \"${nums[@]}\"\
    ; do\n    local -i sum=0\n    local -i num_abs=${num#-}\n    while (( num_abs\
    \ > 0 )); do\n      sum+=$(( num_abs % 10 ))\n      num_abs=$(( num_abs / 10 ))\n\
    \    done\n    (( sum > 0 )) && (( count++ ))\n  done\n  echo \"$count\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb4a2ojna.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local count=0\n    for i in $@; do\n        local sum=0\n        for\
    \ (( j=0; j<${#i}; j++ )); do\n            local digit=${i:$j:1}\n           \
    \ if (( digit == \"-\" )); then\n                continue\n            fi\n  \
    \          (( sum += digit ))\n        done\n        if (( sum > 0 )); then\n\
    \            (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5ly8fgqz.sh: line 18: ((: -: syntax error: operand expected
    (error token is "-")\n/tmp/tmp5ly8fgqz.sh: line 21: ((: -: syntax error: operand
    expected (error token is "-")\n/tmp/tmp5ly8fgqz.sh: line 18: ((: digit == - :
    syntax error: operand expected (error token is "- ")\n/tmp/tmp5ly8fgqz.sh: line
    18: ((: -: syntax error: operand expected (error token is "-")\n/tmp/tmp5ly8fgqz.sh:
    line 21: ((: -: syntax error: operand expected (error token is "-")\n/tmp/tmp5ly8fgqz.sh:
    line 18: ((: digit == - : syntax error: operand expected (error token is "- ")\n/tmp/tmp5ly8fgqz.sh:
    line 18: ((: digit == - : syntax error: operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [ $num -ne 0 ];\
    \ do\n            let sum+=$(($num%10))\n            let num/=10\n        done\n\
    \        if [ $sum -gt 0 ]; then\n            let count++\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpldv73gbb.sh: line 18: [: -ne: unary operator expected\n/tmp/tmpldv73gbb.sh:
    line 18: [: -1: unary operator expected\n/tmp/tmpldv73gbb.sh: line 18: [: too
    many arguments\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i num=${i#-}\n        while (( num\
    \ > 0 )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n\
    \        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdsji8496.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i count=0\n    for num in \"$@\"; do\n        local -i sum=0\n\
    \        for (( i=0; i<${#num}; i++ )); do\n            (( sum += ${num:i:1} ))\n\
    \        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx313a12z.sh: line 17: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmpx313a12z.sh: line 17: ((: sum +=   : syntax error:
    operand expected (error token is "+=   ")\n/tmp/tmpx313a12z.sh: line 17: ((: sum
    += - : syntax error: operand expected (error token is "- ")\n/tmp/tmpx313a12z.sh:
    line 17: ((: sum +=   : syntax error: operand expected (error token is "+=   ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        sum=0\n\
    \        for (( j=0; j<${#i}; j++ )); do\n            (( sum += ${i:$j:1} ))\n\
    \        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7w73e8g6.sh: line 18: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmp7w73e8g6.sh: line 18: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local count=0\n  for i in $@; do\n    local sum=0\n    for ((j=0; j<${#i};\
    \ j++)); do\n      sum=$((sum + ${i:$j:1}))\n    done\n    if ((sum > 0)); then\n\
    \      count=$((count + 1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwveupa24.sh: line 17: sum + -: syntax error: operand expected
    (error token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ if (( num < 0 )); then\n            sum=$(( sum - num % 10 ))\n        else\n\
    \            sum=$(( sum + num % 10 ))\n        fi\n        num=$(( num / 10 ))\n\
    \        if (( num < 0 )); then\n            sum=$(( sum - num % 10 ))\n     \
    \   else\n            sum=$(( sum + num % 10 ))\n        fi\n        num=$(( num\
    \ / 10 ))\n        if (( num < 0 )); then\n            sum=$(( sum - num % 10\
    \ ))\n        else\n            sum=$(( sum + num % 10 ))\n        fi\n      \
    \  if (( sum > 0 )); then\n            (( count++ ))\n        fi\n        sum=0\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local sum=0\n  local count=0\n  for i in $@; do\n    sum=0\n    for ((j=0;\
    \ j<${#i}; j++)); do\n      sum=$((sum + ${i:$j:1}))\n    done\n    if [[ $sum\
    \ -gt 0 ]]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc3wpf9ui.sh: line 18: sum + -: syntax error: operand expected
    (error token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=($@)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            i=$((-i))\n        fi\n   \
    \     local sum=0\n        while [[ $i -gt 0 ]]; do\n            sum=$((sum +\
    \ i % 10))\n            i=$((i / 10))\n        done\n        if [[ $sum -gt 0\
    \ ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    for num in $@; do\n        if [[ $num -lt 0 ]]; then\n\
    \            num=${num:1}\n        fi\n        while [[ $num -gt 0 ]]; do\n  \
    \          sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            echo -n \"$num \"\n        fi\n\
    \    done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=($@)\n    local count=0\n    for i in ${arr[@]}; do\n  \
    \      local sum=0\n        local num=${i#-}\n        while [ $num -gt 0 ]; do\n\
    \            sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=($@)\n    local count=0\n    for i in ${arr[@]}; do\n  \
    \      local sum=0\n        local num=$i\n        while [ $num -ne 0 ]; do\n \
    \           local digit=$((num % 10))\n            sum=$((sum + digit))\n    \
    \        num=$((num / 10))\n        done\n        if [ $sum -gt 0 ]; then\n  \
    \          count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for i in $@; do\n        if\
    \ (( i < 0 )); then\n            sum=$(( i / 10 ))\n        else\n           \
    \ sum=$i\n        fi\n        while (( sum > 0 )); do\n            sum=$(( sum\
    \ / 10 ))\n            count=$(( count + 1 ))\n        done\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -a nums=($@)\n  local -i count=0\n  for num in \"${nums[@]}\"; do\n\
    \    local -i sum=0\n    local -i num_abs=${num#-}\n    while (( num_abs > 0 ));\
    \ do\n      (( sum += num_abs % 10 ))\n      (( num_abs /= 10 ))\n    done\n \
    \   (( sum > 0 )) && (( count++ ))\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i count=0\n    for n in $@; do\n        local -i sum=0\n     \
    \   for d in $(echo $n | sed 's/-//g'); do\n            (( sum += d ))\n     \
    \   done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -a nums=($@)\n  local count=0\n  for num in \"${nums[@]}\"; do\n\
    \    local sum=0\n    local num_abs=${num#-}\n    while [[ $num_abs -gt 0 ]];\
    \ do\n      sum=$((sum + num_abs % 10))\n      num_abs=$((num_abs / 10))\n   \
    \ done\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n    fi\n  done\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ if (( num < 0 )); then\n            (( sum += -num % 10 ))\n        else\n \
    \           (( sum += num % 10 ))\n        fi\n        (( sum += num / 10 ))\n\
    \        if (( sum > 0 )); then\n            (( count++ ))\n        fi\n     \
    \   (( sum = 0 ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ if (( num < 0 )); then\n            (( sum += -num % 10 ))\n        else\n \
    \           (( sum += num % 10 ))\n        fi\n        (( sum += num / 10 ))\n\
    \        if (( sum > 0 )); then\n            (( count++ ))\n        fi\n     \
    \   (( sum = 0 ))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    for i in $@; do\n        if [ $i -lt 0 ]; then\n   \
    \         i=$((-i))\n        fi\n        while [ $i -gt 0 ]; do\n            sum=$((sum\
    \ + i % 10))\n            i=$((i / 10))\n        done\n        if [ $sum -gt 0\
    \ ]; then\n            echo -n 1\n        else\n            echo -n 0\n      \
    \  fi\n        sum=0\n    done | grep -o 1 | wc -l\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        local num_abs=${num#-}\n        while [ $num_abs\
    \ -gt 0 ]; do\n            local digit=$((num_abs % 10))\n            sum=$((sum\
    \ + digit))\n            num_abs=$((num_abs / 10))\n        done\n        if [\
    \ $sum -gt 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local sum=0\n  for i in $@; do\n    local num=$(echo \"$i\" | sed 's/^-//')\n\
    \    while [ \"$num\" -gt 0 ]; do\n      sum=$((sum + num % 10))\n      num=$((num\
    \ / 10))\n    done\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i count=0\n    for num in $@; do\n        local -i sum=0\n   \
    \     for ((i=0; i<${#num}; i++)); do\n            ((sum+=${num:$i:1}))\n    \
    \    done\n        ((sum>0)) && ((count++))\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcnkxsn6h.sh: line 17: ((: sum+=-: syntax error: operand expected
    (error token is "-")\n/tmp/tmpcnkxsn6h.sh: line 17: ((: sum+=-: syntax error:
    operand expected (error token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -a array=(\"$@\")\n  local -i count=0\n  for i in \"${array[@]}\"\
    ; do\n    local -i sum=0\n    local -i num=${i#-}\n    while (( num > 0 )); do\n\
    \      (( sum += num % 10 ))\n      (( num /= 10 ))\n    done\n    (( sum > 0\
    \ )) && (( count++ ))\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0ret41of.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=($@)\n    local count=0\n    for i in ${arr[@]}; do\n  \
    \      local sum=0\n        for (( j=0; j<${#i}; j++ )); do\n            local\
    \ digit=${i:$j:1}\n            if [[ $digit == \"-\" ]]; then\n              \
    \  continue\n            fi\n            sum=$((sum + digit))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        local num_abs=${num#-}\n        while [ $num_abs\
    \ -gt 0 ]; do\n            sum=$((sum + num_abs % 10))\n            num_abs=$((num_abs\
    \ / 10))\n        done\n        if [ $sum -gt 0 ]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local nums=($@)\n  local count=0\n  for num in ${nums[@]}; do\n    local\
    \ sum=0\n    local num_abs=${num#-}\n    while [ $num_abs -gt 0 ]; do\n      sum=$((sum\
    \ + num_abs % 10))\n      num_abs=$((num_abs / 10))\n    done\n    if [ $sum -gt\
    \ 0 ]; then\n      count=$((count + 1))\n    fi\n  done\n  echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    for i in $@; do\n        local num=$i\n        if [\
    \ $num -lt 0 ]; then\n            num=$((-$num))\n        fi\n        while [\
    \ $num -gt 0 ]; do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        if [ $sum -gt 0 ]; then\n            echo -n \"\
    $i \"\n        fi\n        sum=0\n    done\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [[ $num -ne 0 ]];\
    \ do\n            local digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl0nqa4ns.sh: line 18: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpl0nqa4ns.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i n=${i#-}\n        while (( n >\
    \ 0 )); do\n            (( sum += n % 10 ))\n            (( n /= 10 ))\n     \
    \   done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoxgfuo94.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        for (( j=0; j<${#i}; j++ )); do\n         \
    \   (( sum+=${i:$j:1} ))\n        done\n        (( sum>0 )) && (( count++ ))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsn2rgquy.sh: line 18: ((: sum+=- : syntax error: operand expected
    (error token is "- ")\n/tmp/tmpsn2rgquy.sh: line 18: ((: sum+=  : syntax error:
    operand expected (error token is "+=  ")\n/tmp/tmpsn2rgquy.sh: line 18: ((: sum+=-
    : syntax error: operand expected (error token is "- ")\n/tmp/tmpsn2rgquy.sh: line
    18: ((: sum+=  : syntax error: operand expected (error token is "+=  ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=($@)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [[ $num -ne 0 ]];\
    \ do\n            local digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    local -i i=0\n    local -i\
    \ num=0\n    local -i digit=0\n    local -i nums_len=0\n    local -a nums=()\n\
    \    nums=($@)\n    nums_len=${#nums[@]}\n    for ((i=0; i<nums_len; i++)); do\n\
    \        num=${nums[i]}\n        sum=0\n        while ((num != 0)); do\n     \
    \       digit=$((num % 10))\n            num=$((num / 10))\n            sum=$((sum\
    \ + digit))\n        done\n        if ((sum > 0)); then\n            count=$((count\
    \ + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local nums=(\"$@\")\n    local count=0\n    for num in \"${nums[@]}\"\
    ; do\n        local sum=0\n        for (( i=0; i<${#num}; i++ )); do\n       \
    \     local digit=${num:$i:1}\n            if [[ $digit == \"-\" ]]; then\n  \
    \              continue\n            fi\n            sum=$(( sum + digit ))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local sum=0\n    local count=0\n    for num in\
    \ ${nums[@]}; do\n        if [[ $num -lt 0 ]]; then\n            sum=$((sum +\
    \ num * -1))\n        else\n            sum=$((sum + num))\n        fi\n     \
    \   if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for num in $@; do\n        if [ $num\
    \ -lt 0 ]; then\n            num=$((-$num))\n        fi\n        while [ $num\
    \ -gt 0 ]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        sum=0\n\
    \        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum + ${i:$j:1}\
    \ ))\n        done\n        if [[ $sum -gt 0 ]]; then\n            count=$(( count\
    \ + 1 ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnsz0g2zi.sh: line 18: sum + - : syntax error: operand expected
    (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local sum=0\n  local count=0\n  for num in $@; do\n    if [ $num -lt 0\
    \ ]; then\n      num=$((-num))\n    fi\n    while [ $num -gt 0 ]; do\n      sum=$((sum\
    \ + num % 10))\n      num=$((num / 10))\n    done\n    if [ $sum -gt 0 ]; then\n\
    \      count=$((count + 1))\n    fi\n    sum=0\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    for num in $@; do\n        local -i num_abs=${num#-}\n\
    \        local -i sum_abs=0\n        while (( num_abs > 0 )); do\n           \
    \ sum_abs+=$(( num_abs % 10 ))\n            num_abs=$(( num_abs / 10 ))\n    \
    \    done\n        (( sum += (sum_abs > 0) ))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for i in $@; do\n        if [[ $i\
    \ -lt 0 ]]; then\n            sum=$((sum - $i % 10))\n        else\n         \
    \   sum=$((sum + $i % 10))\n        fi\n        i=$((i / 10))\n        if [[ $i\
    \ -lt 0 ]]; then\n            sum=$((sum - $i % 10))\n        else\n         \
    \   sum=$((sum + $i % 10))\n        fi\n        i=$((i / 10))\n        if [[ $i\
    \ -lt 0 ]]; then\n            sum=$((sum - $i % 10))\n        else\n         \
    \   sum=$((sum + $i % 10))\n        fi\n        if [[ $sum -gt 0 ]]; then\n  \
    \          count=$((count + 1))\n        fi\n        sum=0\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        local sign=1\n        if [[ $num -lt 0 ]]; then\n\
    \            sign=-1\n            num=$((-num))\n        fi\n        while [[\
    \ $num -gt 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num\
    \ / 10))\n        done\n        if [[ $((sign * sum)) -gt 0 ]]; then\n       \
    \     count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    local -i i=0\n    local -i\
    \ j=0\n    local -i num=0\n    local -i digit=0\n    local -i num_len=0\n    local\
    \ -i num_abs=0\n    local -i num_sign=0\n    local -i num_sign_digit=0\n    local\
    \ -a nums=($@)\n    local -a num_digits=()\n    for ((i=0; i<${#nums[@]}; i++));\
    \ do\n        num=${nums[$i]}\n        num_abs=${num#-}\n        num_sign=${num%%$num_abs}\n\
    \        num_sign_digit=${num_sign#-}\n        num_len=${#num_abs}\n        for\
    \ ((j=0; j<num_len; j++)); do\n            digit=${num_abs:$j:1}\n           \
    \ num_digits[$j]=$digit\n        done\n        for ((j=0; j<${#num_digits[@]};\
    \ j++)); do\n            sum=$((sum + ${num_digits[$j]}))\n        done\n    \
    \    if [[ $num_sign_digit -eq 0 ]]; then\n            if [[ $sum -gt 0 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        else\n        \
    \    if [[ $sum -lt 0 ]]; then\n                count=$((count + 1))\n       \
    \     fi\n        fi\n        sum=0\n        num_digits=()\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwany5fuj.sh: line 28: -: syntax error: operand expected (error
    token is "-")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while [[ $num -gt\
    \ 0 ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9zwy7unm.sh: line 18: [[: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp9zwy7unm.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    local count=0\n    for num in $@; do\n        if [ $num\
    \ -lt 0 ]; then\n            num=$((-$num))\n        fi\n        while [ $num\
    \ -gt 0 ]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n        sum=0\n    done\n    echo $count\n}\n\ncandidate() {\n  \
    \  count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ sum=0\n        for (( i=0; i<${#num}; i++ )); do\n            (( sum += ${num:$i:1}\
    \ ))\n        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpki_dwn52.sh: line 18: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmpki_dwn52.sh: line 18: ((: sum += - : syntax error:
    operand expected (error token is "- ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=($@)\n    local count=0\n    for i in ${arr[@]}; do\n  \
    \      local sum=0\n        local num=$i\n        if [[ $i -lt 0 ]]; then\n  \
    \          num=$((-1 * $i))\n        fi\n        while [[ $num -gt 0 ]]; do\n\
    \            sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            count=$((count + 1))\n       \
    \ fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        while [[ $i -ne 0 ]]; do\n            ((sum\
    \ += i % 10))\n            ((i /= 10))\n        done\n        ((sum > 0)) && ((count++))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvqd3sbfm.sh: line 17: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpvqd3sbfm.sh: line 17: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local count=0\n    for num in $@; do\n        local sum=0\n        for\
    \ (( i=0; i<${#num}; i++ )); do\n            local digit=${num:$i:1}\n       \
    \     if [[ $digit == \"-\" ]]; then\n                continue\n            fi\n\
    \            sum=$(( sum + digit ))\n        done\n        if [[ $sum -gt 0 ]];\
    \ then\n            count=$(( count + 1 ))\n        fi\n    done\n    echo $count\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342969
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a array=($@)\n    local count=0\n    for i in \"${array[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [[ $num -ne 0 ]];\
    \ do\n            local digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        for ((i=0; i<${#num}; i++)); do\n            local\
    \ digit=${num:$i:1}\n            if [[ $digit == \"-\" ]]; then\n            \
    \    continue\n            fi\n            ((sum+=digit))\n        done\n    \
    \    if ((sum>0)); then\n            ((count++))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ if (( num < 0 )); then\n            sum=$(( -num % 10 ))\n        else\n   \
    \         sum=$(( num % 10 ))\n        fi\n        while (( num /= 10 )); do\n\
    \            if (( num < 0 )); then\n                sum=$(( sum - num % 10 ))\n\
    \            else\n                sum=$(( sum + num % 10 ))\n            fi\n\
    \        done\n        if (( sum > 0 )); then\n            (( count++ ))\n   \
    \     fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n \
    \       local sum=0\n        local digits=$(echo $num | sed 's/-//g')\n      \
    \  for digit in $(echo $digits | grep -o .); do\n            sum=$((sum + digit))\n\
    \        done\n        if [[ $sum -gt 0 ]]; then\n            count=$((count +\
    \ 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    local -i i=0\n    local -i\
    \ num\n    for num in $@; do\n        if (( num < 0 )); then\n            num=-num\n\
    \        fi\n        while (( num > 0 )); do\n            (( sum += num % 10 ))\n\
    \            (( num /= 10 ))\n        done\n        if (( sum > 0 )); then\n \
    \           (( count++ ))\n        fi\n        (( sum = 0 ))\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    for i in $@; do\n        if (( i < 0 )); then\n \
    \           (( sum += i * -1 ))\n        else\n            (( sum += i ))\n  \
    \      fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local num\n    local sum\n    local count=0\n\
    \    for num in \"${nums[@]}\"; do\n        sum=0\n        while [[ $num -ne 0\
    \ ]]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n\
    \        done\n        ((sum > 0)) && ((count++))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local -i sum=0\n        local -i num=${i#-}\n        while (( num\
    \ > 0 )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n\
    \        done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdsji8496.sh: line 17: local: 1 -2 0: syntax error in expression
    (error token is "0")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        local abs=${num#-}\n        while [ $abs -gt 0 ];\
    \ do\n            sum=$((sum + abs % 10))\n            abs=$((abs / 10))\n   \
    \     done\n        if [ $sum -gt 0 ]; then\n            count=$((count + 1))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a nums=($@)\n    local count=0\n    for num in ${nums[@]}; do\n\
    \        local sum=0\n        for digit in $(echo $num | sed -e 's/-//g'); do\n\
    \            sum=$((sum + digit))\n        done\n        if [ $sum -gt 0 ]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=$i\n        while [[ $num -ne 0 ]];\
    \ do\n            local digit=$((num % 10))\n            sum=$((sum + digit))\n\
    \            num=$((num / 10))\n        done\n        if [[ $sum -gt 0 ]]; then\n\
    \            count=$((count + 1))\n        fi\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl0nqa4ns.sh: line 18: [[: -1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmpl0nqa4ns.sh: line 18: [[: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342969
- exit_code: 0
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -a nums=($@)\n  local count=0\n  for num in \"${nums[@]}\"; do\n\
    \    local sum=0\n    for ((i=0; i<${#num}; i++)); do\n      local digit=${num:$i:1}\n\
    \      if [[ $digit =~ ^[0-9]$ ]]; then\n        sum=$((sum + digit))\n      elif\
    \ [[ $digit =~ ^[-]$ ]]; then\n        sum=$((sum - ${num:$((i+1)):1}))\n    \
    \  fi\n    done\n    if [[ $sum -gt 0 ]]; then\n      count=$((count + 1))\n \
    \   fi\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [ \"$i\" -lt 0 ]; then\n            i=$((i * -1))\n        fi\n\
    \        local sum=0\n        while [ \"$i\" -gt 0 ]; do\n            sum=$((sum\
    \ + i % 10))\n            i=$((i / 10))\n        done\n        if [ \"$sum\" -gt\
    \ 0 ]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpw2yuxqjb.sh: line 16: [: : integer expression expected\n/tmp/tmpw2yuxqjb.sh:
    line 20: [: : integer expression expected\n/tmp/tmpw2yuxqjb.sh: line 16: [: -1
    -2 0: integer expression expected\n/tmp/tmpw2yuxqjb.sh: line 20: [: -1 -2 0: integer
    expression expected\n/tmp/tmpw2yuxqjb.sh: line 16: [: 1 1 2 -2 3 4 5: integer
    expression expected\n/tmp/tmpw2yuxqjb.sh: line 20: [: 1 1 2 -2 3 4 5: integer
    expression expected\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -i sum=0\n    local -i count=0\n    for num in $@; do\n       \
    \ if (( num < 0 )); then\n            num=${num#-}\n        fi\n        while\
    \ (( num > 0 )); do\n            (( sum += num % 10 ))\n            (( num /=\
    \ 10 ))\n        done\n        (( sum > 0 )) && (( count++ ))\n        (( sum\
    \ = 0 ))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local sum=0\n    for num in $@; do\n        if [[ $num -lt 0 ]]; then\n\
    \            num=$((-num))\n        fi\n        while [[ $num -gt 0 ]]; do\n \
    \           sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n\
    \        if [[ $sum -gt 0 ]]; then\n            echo -n \"1 \"\n        else\n\
    \            echo -n \"0 \"\n        fi\n        sum=0\n    done\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n  local -i sum=0\n  local -i count=0\n  for num in \"$@\"; do\n    sum=0\n\
    \    for (( i=0; i<${#num}; i++ )); do\n      (( sum += ${num:$i:1} ))\n    done\n\
    \    (( sum > 0 )) && (( count++ ))\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8201rdx2.sh: line 18: ((: sum += - : syntax error: operand expected
    (error token is "- ")\n/tmp/tmp8201rdx2.sh: line 18: ((: sum +=   : syntax error:
    operand expected (error token is "+=   ")\n/tmp/tmp8201rdx2.sh: line 18: ((: sum
    += - : syntax error: operand expected (error token is "- ")\n/tmp/tmp8201rdx2.sh:
    line 18: ((: sum +=   : syntax error: operand expected (error token is "+=   ")\n'''
  stdout: b''
  timestamp: 1660342970
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\ncount_nums()\
    \ {\n    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        local sum=0\n        local num=${i#-}\n        while (( num > 0\
    \ )); do\n            (( sum += num % 10 ))\n            (( num /= 10 ))\n   \
    \     done\n        (( sum > 0 )) && (( count++ ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 -2 0: syntax error in expression
    (error token is "0")\n/tmp/tmp6ahlrdyk.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax
    error in expression (error token is "1 2 -2 3 4 5")\n'''
  stdout: b''
  timestamp: 1660342970

name: HumanEval_4_mean_absolute_deviation
language: sh
prompt: "#!/bin/bash\n# For a given list of input numbers, calculate Mean Absolute\
  \ Deviation\n# around the mean of this dataset.\n# Mean Absolute Deviation is the\
  \ average absolute difference between each\n# element and a centerpoint (mean in\
  \ this case):\n# MAD = average | x - x_mean |\n# >>> $(mean_absolute_deviation \"\
  1.0 2.0 3.0 4.0\")\n# \"1.0\"\nmean_absolute_deviation() {\n"
tests: "}\n\ncandidate() {\n    mean_absolute_deviation \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"1.0 2.0\") = \"0.5\" ]]\n    [[ $(candidate \"1.0 2.0\
  \ 3.0 4.0\") = \"1.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"1.2\"\
  \ ]]\n}\n\nrun_test"
completions: ["    local -a numbers\n    numbers=($(echo $@))\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations\n    for number in \"${numbers[@]}\"\
    ; do\n        local deviation=$(echo \"$number - $mean\" | bc -l)\n        local\
    \ abs_deviation=$(echo \"if ($deviation < 0) $deviation * -1 else $deviation\"\
    \ | bc -l)\n        deviations+=($abs_deviation)\n    done\n    echo $(mean \"\
    ${deviations[@]}\")", "    local -a numbers=(\"$@\")\n    local -i num_numbers=${#numbers[@]}\n\
    \    local -i i\n    local -r mean=$(mean \"${numbers[@]}\")\n    local -r mean_absolute_deviation=$(\n\
    \        for ((i=0; i<num_numbers; i++)); do\n            echo \"${numbers[$i]}\
    \ - $mean\" | bc -l\n        done |\n        awk '{sum += $1; sumsq += $1*$1}\
    \ END {print sqrt(sumsq/NR - (sum/NR)**2)}'\n    )\n    echo \"$mean_absolute_deviation\"",
  "    local -a data=($@)\n    local -a abs_deviations=()\n    local mean=$(mean \"\
    ${data[@]}\")\n    for (( i=0; i<${#data[@]}; i++ )); do\n        abs_deviations[i]=$(echo\
    \ \"scale=2; ${data[i]} - $mean\" | bc -l)\n        abs_deviations[i]=$(echo \"\
    scale=2; ${abs_deviations[i]} < 0 ? -${abs_deviations[i]} : ${abs_deviations[i]}\"\
    \ | bc -l)\n    done\n    mean \"${abs_deviations[@]}\"", "    local -a numbers\n\
    \    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"; do\n       \
    \ sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    echo \"$sum\
    \ / ${#numbers[@]}\" | bc -l", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum=0\n    for number in \"${numbers[@]}\"; do\n\
    \        sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    echo\
    \ \"$sum / ${#numbers[@]}\" | bc -l", "    local -a numbers\n    numbers=($@)\n\
    \    local mean=$(mean \"${numbers[@]}\")\n    local -a diffs\n    for num in\
    \ \"${numbers[@]}\"; do\n        diffs+=($(echo \"$num - $mean\" | bc -l))\n \
    \   done\n    local -a abs_diffs\n    for diff in \"${diffs[@]}\"; do\n      \
    \  abs_diffs+=($(echo \"if ($diff < 0) $diff * -1 else $diff\" | bc -l))\n   \
    \ done\n    echo $(mean \"${abs_diffs[@]}\")", "    local -a x\n    local -a x_minus_x_mean\n\
    \    local -a abs_x_minus_x_mean\n    local x_mean\n    local sum_abs_x_minus_x_mean\n\
    \    local n\n    local mad\n    x=($@)\n    x_mean=$(mean \"${x[@]}\")\n    for\
    \ ((i=0; i<${#x[@]}; i++)); do\n        x_minus_x_mean[$i]=$(echo \"${x[$i]} -\
    \ $x_mean\" | bc -l)\n        abs_x_minus_x_mean[$i]=$(echo \"if (${x_minus_x_mean[$i]}\
    \ < 0) ${x_minus_x_mean[$i]} * -1 else ${x_minus_x_mean[$i]}\" | bc -l)\n    done\n\
    \    sum_abs_x_minus_x_mean=$(sum \"${abs_x_minus_x_mean[@]}\")\n    n=$(echo\
    \ \"${#x[@]}\")\n    mad=$(echo \"$sum_abs_x_minus_x_mean / $n\" | bc -l)\n  \
    \  echo \"$mad\"", "    local x_mean=$(mean \"$@\")\n    local x_abs_deviation=$(echo\
    \ \"$@\" | awk -v x_mean=\"$x_mean\" '{for (i=1; i<=NF; i++) {print $i - x_mean}}')\n\
    \    local x_abs_deviation_sum=$(echo \"$x_abs_deviation\" | awk '{sum += $1}\
    \ END {print sum}')\n    local x_abs_deviation_mean=$(echo \"$x_abs_deviation_sum\
    \ / $#\" | bc -l)\n    echo \"$x_abs_deviation_mean\"", "    local -a arr=(\"\
    $@\")\n    local mean=$(mean \"${arr[@]}\")\n    local sum=0\n    for i in \"\
    ${arr[@]}\"; do\n        sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n    done\n\
    \    echo \"$sum / ${#arr[@]}\" | bc -l", "    local -a numbers=($@)\n    local\
    \ mean=$(mean \"${numbers[@]}\")\n    local -a absolute_deviations=()\n    for\
    \ number in \"${numbers[@]}\"; do\n        local absolute_deviation=$(echo \"\
    $number - $mean\" | bc -l)\n        absolute_deviations+=($(echo \"$absolute_deviation\"\
    \ | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean \"${absolute_deviations[@]}\"\
    )\"", "    local mean=$(mean \"$@\")\n    local abs_diff_sum=0\n    for x in \"\
    $@\"; do\n        abs_diff_sum=$(echo \"$abs_diff_sum + abs($x - $mean)\" | bc\
    \ -l)\n    done\n    echo \"$abs_diff_sum / $#\" | bc -l", "    local -a numbers\n\
    \    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"; do\n       \
    \ sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    echo \"$sum\
    \ / ${#numbers[@]}\" | bc -l", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum=0\n    for number in \"${numbers[@]}\"; do\n\
    \        local diff=$(echo \"$number - $mean\" | bc -l)\n        local abs_diff=$(echo\
    \ \"if ($diff < 0) $diff * -1 else $diff\" | bc -l)\n        sum=$(echo \"$sum\
    \ + $abs_diff\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local\
    \ -a numbers=($@)\n    local -a abs_deviations=()\n    local sum=0\n    local\
    \ mean=0\n    local abs_deviation=0\n    local mad=0\n\n    # Calculate the mean\
    \ of the dataset\n    for number in \"${numbers[@]}\"; do\n        sum=$(echo\
    \ \"$sum + $number\" | bc -l)\n    done\n    mean=$(echo \"$sum / ${#numbers[@]}\"\
    \ | bc -l)\n\n    # Calculate the absolute deviation of each element from the\
    \ mean\n    for number in \"${numbers[@]}\"; do\n        abs_deviation=$(echo\
    \ \"scale=2; $number - $mean\" | bc -l)\n        abs_deviations+=($(echo \"scale=2;\
    \ $abs_deviation < 0 ? -1 * $abs_deviation : $abs_deviation\" | bc -l))\n    done\n\
    \n    # Calculate the mean absolute deviation\n    sum=0\n    for abs_deviation\
    \ in \"${abs_deviations[@]}\"; do\n        sum=$(echo \"$sum + $abs_deviation\"\
    \ | bc -l)\n    done\n    mad=$(echo \"$sum / ${#abs_deviations[@]}\" | bc -l)\n\
    \n    echo \"$mad\"", "    local mean=$(mean \"$@\")\n    local abs_deviations=$(echo\
    \ \"$@\" | awk -v mean=\"$mean\" '{print $1 - mean}' | awk '{print $1 < 0 ? -$1\
    \ : $1}')\n    echo \"$abs_deviations\" | mean", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a absolute_deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        absolute_deviations+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo\
    \ \"${absolute_deviations[@]}\"", "    local -a numbers=($@)\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a absolute_deviations=()\n    for number in \"\
    ${numbers[@]}\"; do\n        local absolute_deviation=$(echo \"$number - $mean\"\
    \ | bc -l)\n        absolute_deviations+=($(echo \"$absolute_deviation\" | awk\
    \ '{printf \"%f\", $0}'))\n    done\n    mean \"${absolute_deviations[@]}\"",
  "    local -a nums=(\"$@\")\n    local mean=$(mean \"${nums[@]}\")\n    local sum=0\n\
    \    for num in \"${nums[@]}\"; do\n        sum=$(echo \"$sum + abs($num - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "  local input_array=($@)\n\
    \  local mean=$(mean \"${input_array[@]}\")\n  local absolute_deviations=()\n\
    \  for i in \"${input_array[@]}\"; do\n    absolute_deviations+=($(echo \"$i -\
    \ $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n  done\n  echo \"$(mean \"${absolute_deviations[@]}\"\
    )\"", "    local -a numbers=($@)\n    local -i n=${#numbers[@]}\n    local -i\
    \ i\n    local -i sum=0\n    local -i mean\n    local -i abs_deviation\n    local\
    \ -i sum_abs_deviation=0\n    local -i mad\n    for ((i=0; i<n; i++)); do\n  \
    \      sum=$((sum + numbers[i]))\n    done\n    mean=$((sum / n))\n    for ((i=0;\
    \ i<n; i++)); do\n        abs_deviation=$((numbers[i] - mean))\n        abs_deviation=$((abs_deviation\
    \ > 0 ? abs_deviation : -abs_deviation))\n        sum_abs_deviation=$((sum_abs_deviation\
    \ + abs_deviation))\n    done\n    mad=$((sum_abs_deviation / n))\n    echo $mad",
  "    local -a input=($@)\n    local -i n=${#input[@]}\n    local -i i=0\n    local\
    \ -i sum=0\n    local -i mean=0\n    local -i mad=0\n    for ((i=0; i<n; i++));\
    \ do\n        sum=$((sum + input[i]))\n    done\n    mean=$((sum / n))\n    for\
    \ ((i=0; i<n; i++)); do\n        mad=$((mad + abs(input[i] - mean)))\n    done\n\
    \    echo $((mad / n))", "    local -a numbers\n    numbers=( $(echo \"$@\") )\n\
    \    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    deviations=( $(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{print $1-mean}')\
    \ )\n    local -a absolute_deviations\n    absolute_deviations=( $(echo \"${deviations[@]}\"\
    \ | awk '{print $1<0?-$1:$1}') )\n    local sum\n    sum=$(echo \"${absolute_deviations[@]}\"\
    \ | awk '{sum+=$1} END {print sum}')\n    local count\n    count=$(echo \"${absolute_deviations[@]}\"\
    \ | wc -w)\n    echo \"$sum / $count\" | bc -l", "    local -a numbers\n    numbers=($@)\n\
    \    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local abs_deviations\n\
    \    abs_deviations=$(printf \"%s\\n\" \"${numbers[@]}\" | awk -v mean=\"$mean\"\
    \ '{print abs($1 - mean)}')\n    local sum_abs_deviations\n    sum_abs_deviations=$(sum\
    \ \"$abs_deviations\")\n    local n\n    n=$(echo \"${#numbers[@]}\")\n    echo\
    \ \"$sum_abs_deviations / $n\" | bc -l", "    local -a input_array\n    input_array=($@)\n\
    \    local -i n_elements=${#input_array[@]}\n    local -i i\n    local -i sum=0\n\
    \    for ((i=0; i<n_elements; i++)); do\n        sum=$((sum + input_array[i]))\n\
    \    done\n    local -i mean=$((sum / n_elements))\n    local -i sum_abs_dev=0\n\
    \    for ((i=0; i<n_elements; i++)); do\n        sum_abs_dev=$((sum_abs_dev +\
    \ abs(input_array[i] - mean)))\n    done\n    echo $((sum_abs_dev / n_elements))",
  "    local -a numbers\n    numbers=($@)\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a deviations\n    for number in \"${numbers[@]}\"; do\n        local\
    \ deviation\n        deviation=$(echo \"$number - $mean\" | bc -l)\n        deviations+=($(echo\
    \ \"$deviation\" | awk '{print sqrt($1*$1)}'))\n    done\n    echo \"$(mean \"\
    ${deviations[@]}\")\"", "  local -a numbers=(\"$@\")\n  local mean=$(mean \"${numbers[@]}\"\
    )\n  local -a abs_differences=()\n  for number in \"${numbers[@]}\"; do\n    abs_differences+=(\"\
    $(abs \"$(bc <<< \"$number - $mean\")\")\")\n  done\n  mean \"${abs_differences[@]}\"",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations\n    local deviation\n    local\
    \ sum\n    sum=0\n    for number in \"${numbers[@]}\"; do\n        deviation=$(echo\
    \ \"$number - $mean\" | bc -l)\n        deviation=$(echo \"if ($deviation < 0)\
    \ -1 * $deviation else $deviation\" | bc -l)\n        sum=$(echo \"$sum + $deviation\"\
    \ | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local\
    \ -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"\
    ${numbers[@]}\")\n    local -a absolute_deviations\n    for number in \"${numbers[@]}\"\
    ; do\n        absolute_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    echo \"${absolute_deviations[@]}\"", "    local\
    \ -a numbers=($@)\n    local -i n=${#numbers[@]}\n    local -i i\n    local -i\
    \ sum=0\n    local -i mean\n    local -i abs_deviation\n    local -i sum_abs_deviation=0\n\
    \    local -i mad\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n\
    \    done\n    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i]\
    \ - mean))\n        if ((abs_deviation < 0)); then\n            abs_deviation=$((-abs_deviation))\n\
    \        fi\n        sum_abs_deviation=$((sum_abs_deviation + abs_deviation))\n\
    \    done\n    mad=$((sum_abs_deviation / n))\n    echo \"$mad\"", "    local\
    \ -a data=($1)\n    local -a abs_deviations=()\n    local -a abs_deviations_sum=()\n\
    \    local -a abs_deviations_mean=()\n    local -a abs_deviations_mean_rounded=()\n\
    \    local -a abs_deviations_mean_rounded_formatted=()\n    local -a abs_deviations_mean_rounded_formatted_trimmed=()\n\
    \    local -a abs_deviations_mean_rounded_formatted_trimmed_final=()\n    local\
    \ -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted=()\n    local\
    \ -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted_final=()\n\
    \    local -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted_final_final=()\n\
    \    local -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted_final_final_final=()\n\
    \    local -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted_final_final_final_final=()\n\
    \    local -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted_final_final_final_final_final=()\n\
    \    local -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted_final_final_final_final_final_final=()\n\
    \    local -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted_final_final_final_final_final_final_final=()\n\
    \    local -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted_final_final_final_final_final_final_final_final=()\n\
    \    local -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a abs_deviations_mean_rounded_formatted_trimmed_final_formatted_",
  "    local -a data\n    data=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"\
    ${data[@]}\")\n    local abs_diff\n    local sum\n    sum=0\n    for i in \"${data[@]}\"\
    ; do\n        abs_diff=$(echo \"$i - $mean\" | bc -l)\n        abs_diff=$(echo\
    \ \"$abs_diff < 0 ? -$abs_diff : $abs_diff\" | bc -l)\n        sum=$(echo \"$sum\
    \ + $abs_diff\" | bc -l)\n    done\n    echo \"$sum / ${#data[@]}\" | bc -l",
  "    local numbers=$@\n    local mean=$(mean \"$numbers\")\n    local abs_diff_sum=0\n\
    \    for number in $numbers; do\n        abs_diff_sum=$(echo \"$abs_diff_sum +\
    \ $(abs_diff $number $mean)\" | bc -l)\n    done\n    echo \"$abs_diff_sum / $(echo\
    \ \"$numbers\" | wc -w)\" | bc -l", "  local mean=$(mean \"$@\")\n  local abs_deviations=$(echo\
    \ \"$@\" | awk '{for (i=1; i<=NF; i++) {print $i - '\"$mean\"'}}' | awk '{for\
    \ (i=1; i<=NF; i++) {print $i < 0 ? -$i : $i}}')\n  echo \"$abs_deviations\" |\
    \ mean", "    local x_mean=$(mean \"$@\")\n    local x_deviations=$(echo \"$@\"\
    \ | awk -v x_mean=\"$x_mean\" '{print $1-x_mean}')\n    local x_abs_deviations=$(echo\
    \ \"$x_deviations\" | awk '{print sqrt($1*$1)}')\n    local mad=$(echo \"$x_abs_deviations\"\
    \ | mean)\n    echo \"$mad\"", "    local -a numbers\n    local mean\n    local\
    \ sum_of_absolute_deviations\n    local number_of_numbers\n    local mean_absolute_deviation\n\
    \n    numbers=($(echo $@))\n    mean=$(mean \"${numbers[@]}\")\n    sum_of_absolute_deviations=$(sum_of_absolute_deviations\
    \ \"${numbers[@]}\" $mean)\n    number_of_numbers=${#numbers[@]}\n    mean_absolute_deviation=$(echo\
    \ \"$sum_of_absolute_deviations / $number_of_numbers\" | bc -l)\n    echo $mean_absolute_deviation",
  "    local -a data=($@)\n    local -i n=${#data[@]}\n    local -i i\n    local -i\
    \ sum=0\n    local -i mean\n    local -i mad\n    for ((i=0; i<n; i++)); do\n\
    \        sum=$(($sum + ${data[$i]}))\n    done\n    mean=$(($sum / $n))\n    sum=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$(($sum + abs(${data[$i]} - $mean)))\n\
    \    done\n    mad=$(($sum / $n))\n    echo $mad", "    local -a numbers\n   \
    \ numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n    local -a abs_deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo \"$number\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean\
    \ \"${abs_deviations[@]}\")\"", "  local mean=$(mean \"$@\")\n  local abs_deviations=$(echo\
    \ \"$@\" | awk '{for (i=1; i<=NF; i++) print $i - '$mean'}' | awk '{for (i=1;\
    \ i<=NF; i++) if ($i < 0) print -$i; else print $i}')\n  echo \"$abs_deviations\"\
    \ | mean", "    local -a xs=(\"$@\")\n    local x_mean=$(mean \"${xs[@]}\")\n\
    \    local -a xs_minus_x_mean=()\n    for x in \"${xs[@]}\"; do\n        xs_minus_x_mean+=($(echo\
    \ \"$x - $x_mean\" | bc -l))\n    done\n    local -a xs_minus_x_mean_abs=()\n\
    \    for x in \"${xs_minus_x_mean[@]}\"; do\n        xs_minus_x_mean_abs+=($(echo\
    \ \"if ($x < 0) $x * -1 else $x\" | bc -l))\n    done\n    local sum=0\n    for\
    \ x in \"${xs_minus_x_mean_abs[@]}\"; do\n        sum=$(echo \"$sum + $x\" | bc\
    \ -l)\n    done\n    local mad=$(echo \"$sum / ${#xs[@]}\" | bc -l)\n    echo\
    \ \"$mad\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local abs_diff_sum=0\n    for number in \"${numbers[@]}\"; do\n       \
    \ abs_diff_sum=$(echo \"$abs_diff_sum + abs($number - $mean)\" | bc -l)\n    done\n\
    \    echo \"$abs_diff_sum / ${#numbers[@]}\" | bc -l", "    local -a numbers=(\"\
    $@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local sum=0\n    for number\
    \ in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + abs($number - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local -a numbers\n\
    \    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a deviations\n    for number in \"${numbers[@]}\"; do\n        local\
    \ deviation\n        deviation=$(echo \"$number - $mean\" | bc -l)\n        deviations+=($(echo\
    \ \"$deviation\" | awk '{printf \"%f\", $0}'))\n    done\n    local -a absolute_deviations\n\
    \    for deviation in \"${deviations[@]}\"; do\n        absolute_deviations+=($(echo\
    \ \"$deviation\" | awk '{printf \"%f\", $0 < 0 ? -$0 : $0}'))\n    done\n    mean\
    \ \"${absolute_deviations[@]}\"", "    local -a x\n    local -i n=0\n    local\
    \ -i i\n    local -i sum=0\n    local -i mean=0\n    local -i mad=0\n    local\
    \ -i diff=0\n    local -i abs_diff=0\n    local -i sum_abs_diff=0\n    local -i\
    \ mean_abs_diff=0\n    local -i mad_abs_diff=0\n    local -i sum_abs_diff_squared=0\n\
    \    local -i mean_abs_diff_squared=0\n    local -i mad_abs_diff_squared=0\n \
    \   local -i sum_abs_diff_cubed=0\n    local -i mean_abs_diff_cubed=0\n    local\
    \ -i mad_abs_diff_cubed=0\n    local -i sum_abs_diff_fourth=0\n    local -i mean_abs_diff_fourth=0\n\
    \    local -i mad_abs_diff_fourth=0\n    local -i sum_abs_diff_fifth=0\n    local\
    \ -i mean_abs_diff_fifth=0\n    local -i mad_abs_diff_fifth=0\n    local -i sum_abs_diff_sixth=0\n\
    \    local -i mean_abs_diff_sixth=0\n    local -i mad_abs_diff_sixth=0\n    local\
    \ -i sum_abs_diff_seventh=0\n    local -i mean_abs_diff_seventh=0\n    local -i\
    \ mad_abs_diff_seventh=0\n    local -i sum_abs_diff_eighth=0\n    local -i mean_abs_diff_eighth=0\n\
    \    local -i mad_abs_diff_eighth=0\n    local -i sum_abs_diff_ninth=0\n    local\
    \ -i mean_abs_diff_ninth=0\n    local -i mad_abs_diff_ninth=0\n    local -i sum_abs_diff_tenth=0\n\
    \    local -i mean_abs_diff_tenth=0\n    local -i mad_abs_diff_tenth=0\n    local\
    \ -i sum_abs_diff_ele", "    local -a nums\n    local -i i\n    local -r mean=$(mean\
    \ \"$@\")\n    local -r nums=($@)\n    local -i nums_len=${#nums[@]}\n    local\
    \ -i sum=0\n    for ((i=0; i<nums_len; i++)); do\n        sum=$((sum + abs $((nums[i]\
    \ - mean))))\n    done\n    echo $((sum / nums_len))", "    local -a numbers\n\
    \    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"; do\n       \
    \ sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    echo \"$sum\
    \ / ${#numbers[@]}\" | bc -l", "    local input_array=($@)\n    local mean=$(mean\
    \ \"${input_array[@]}\")\n    local abs_deviations=()\n    for i in \"${input_array[@]}\"\
    ; do\n        abs_deviations+=($(echo \"scale=4; ${i} - ${mean}\" | bc -l | awk\
    \ '{printf \"%f\", $0}'))\n    done\n    echo $(mean \"${abs_deviations[@]}\")",
  "    local input_list=\"$1\"\n    local mean=$(mean \"$input_list\")\n    local\
    \ abs_diff_list=$(echo \"$input_list\" | awk -v mean=\"$mean\" '{print $1-mean}'\
    \ | awk '{print $1>0?$1:-$1}')\n    local abs_diff_sum=$(echo \"$abs_diff_list\"\
    \ | awk '{sum+=$1} END {print sum}')\n    local abs_diff_count=$(echo \"$abs_diff_list\"\
    \ | wc -l)\n    echo \"$abs_diff_sum / $abs_diff_count\" | bc -l", "  local mean=$(mean\
    \ \"$@\")\n  local abs_deviations=$(echo \"$@\" | awk -v mean=\"$mean\" '{print\
    \ $1-mean}' | awk '{print $1<0?-$1:$1}')\n  local sum=$(echo \"$abs_deviations\"\
    \ | awk '{sum+=$1} END {print sum}')\n  local count=$(echo \"$abs_deviations\"\
    \ | wc -l)\n  echo \"$sum / $count\" | bc -l", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a absolute_deviations\n\
    \    absolute_deviations=($(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{print\
    \ $1-mean}' | awk '{print $1<0?-$1:$1}'))\n    local sum\n    sum=$(echo \"${absolute_deviations[@]}\"\
    \ | awk '{sum+=$1} END {print sum}')\n    local count\n    count=$(echo \"${absolute_deviations[@]}\"\
    \ | wc -w)\n    echo \"$sum / $count\" | bc -l", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a absolute_deviations\n\
    \    absolute_deviations=($(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{print\
    \ $1-mean}' | awk '{print $1<0?-$1:$1}'))\n    local sum\n    sum=$(echo \"${absolute_deviations[@]}\"\
    \ | awk '{sum+=$1} END {print sum}')\n    local count\n    count=$(echo \"${absolute_deviations[@]}\"\
    \ | wc -w)\n    echo \"$sum / $count\" | bc -l", "    local -a values=($@)\n \
    \   local mean=$(mean \"${values[@]}\")\n    local -a deviations=()\n    for value\
    \ in \"${values[@]}\"; do\n        local deviation=$(echo \"$value - $mean\" |\
    \ bc -l)\n        deviations+=($(echo \"${deviation#-}\"))\n    done\n    echo\
    \ $(mean \"${deviations[@]}\")", "    local -a x\n    x=($(echo \"$@\"))\n   \
    \ local n=${#x[@]}\n    local x_mean=$(echo \"${x[@]}\" | awk '{for(i=1;i<=NF;i++)sum+=$i;print\
    \ sum/NF}')\n    local sum=0\n    for i in \"${x[@]}\"; do\n        sum=$(echo\
    \ \"$sum + abs($i - $x_mean)\" | bc -l)\n    done\n    echo \"$sum / $n\" | bc\
    \ -l", "  local -a numbers\n  numbers=($(echo \"$@\"))\n  local mean\n  mean=$(mean\
    \ \"${numbers[@]}\")\n  local abs_deviations\n  abs_deviations=($(echo \"${numbers[@]}\"\
    \ | awk -v mean=\"$mean\" '{for (i=1; i<=NF; i++) printf(\"%f \", fabs($i - mean))}'))\n\
    \  mean \"${abs_deviations[@]}\"", "    local -a numbers\n    local mean\n   \
    \ local sum\n    local count\n    local i\n    local result\n\n    numbers=($@)\n\
    \    mean=$(mean \"${numbers[@]}\")\n    sum=0\n    count=0\n    for i in \"${numbers[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n        count=$(echo\
    \ \"$count + 1\" | bc -l)\n    done\n    result=$(echo \"$sum / $count\" | bc\
    \ -l)\n    echo \"$result\"", "    local -a numbers=(\"$@\")\n    local -i n=${#numbers[@]}\n\
    \    local -i i\n    local -i sum=0\n    local -i mean=0\n    local -i mad=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n\
    \    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        mad=$((mad + abs(numbers[i]\
    \ - mean)))\n    done\n    echo \"$((mad / n))\"", "    local mean=$(mean \"$@\"\
    )\n    local sum=0\n    for x in \"$@\"; do\n        local diff=$(echo \"$x -\
    \ $mean\" | bc -l)\n        local abs_diff=$(echo \"if ($diff < 0) $diff * -1\
    \ else $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs_diff\" | bc -l)\n  \
    \  done\n    echo \"$sum / $#\" | bc -l", "    local mean=$(mean \"$@\")\n   \
    \ local sum=0\n    for x in \"$@\"; do\n        local diff=$(echo \"$x - $mean\"\
    \ | bc -l)\n        local abs=$(echo \"if ($diff < 0) $diff * -1 else $diff\"\
    \ | bc -l)\n        sum=$(echo \"$sum + $abs\" | bc -l)\n    done\n    echo \"\
    $sum / $#\" | bc -l", "    local -a x=($@)\n    local -a x_mean=($(mean \"${x[@]}\"\
    ))\n    local -a x_abs_diff=($(absolute_difference \"${x[@]}\" \"${x_mean[@]}\"\
    ))\n    local -a x_abs_diff_mean=($(mean \"${x_abs_diff[@]}\"))\n    echo \"${x_abs_diff_mean[@]}\"",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a absolute_deviations\n    for number in \"${numbers[@]}\"\
    ; do\n        absolute_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    local -a absolute_deviations_absolute\n    for\
    \ absolute_deviation in \"${absolute_deviations[@]}\"; do\n        absolute_deviations_absolute+=($(echo\
    \ \"$absolute_deviation < 0 ? -$absolute_deviation : $absolute_deviation\" | bc\
    \ -l | awk '{printf \"%f\", $0}'))\n    done\n    mean \"${absolute_deviations_absolute[@]}\"",
  "    local -a x\n    local -i i\n    local -r x_mean=$(mean \"$@\")\n    for i in\
    \ \"$@\"; do\n        x[${#x[@]}]=$(echo \"$i - $x_mean\" | bc -l)\n    done\n\
    \    echo \"${x[@]}\" | tr ' ' '\\n' | awk '{ sum += $1; } END { print sum / NR;\
    \ }'", "    local -a input=($@)\n    local -a abs_deviations=()\n    local -i\
    \ i=0\n    local -i n=${#input[@]}\n    local -i sum=0\n    local -i mean=0\n\
    \    local -i abs_deviation=0\n    local -i mad=0\n\n    for ((i=0; i<n; i++));\
    \ do\n        sum=$((sum + input[i]))\n    done\n    mean=$((sum / n))\n\n   \
    \ for ((i=0; i<n; i++)); do\n        abs_deviation=$((input[i] - mean))\n    \
    \    abs_deviations[i]=$((abs_deviation < 0 ? -abs_deviation : abs_deviation))\n\
    \    done\n\n    sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + abs_deviations[i]))\n\
    \    done\n    mad=$((sum / n))\n\n    echo \"$mad\"", "    local -a numbers=(\"\
    $@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local sum=0\n    for number\
    \ in \"${numbers[@]}\"; do\n        local diff=$(echo \"$number - $mean\" | bc\
    \ -l)\n        local abs_diff=$(echo \"if ($diff < 0) $diff * -1 else $diff\"\
    \ | bc -l)\n        sum=$(echo \"$sum + $abs_diff\" | bc -l)\n    done\n    echo\
    \ \"$sum / ${#numbers[@]}\" | bc -l", "    local -a x=($@)\n    local -a x_mean=$(mean\
    \ \"${x[@]}\")\n    local -a x_abs_diff\n    local -a x_abs_diff_sum\n    local\
    \ -a x_abs_diff_mean\n    local -a x_abs_diff_mean_rounded\n    for i in \"${x[@]}\"\
    ; do\n        x_abs_diff+=($(echo \"$i - $x_mean\" | bc -l | awk '{printf \"%f\"\
    , $0}'))\n    done\n    for i in \"${x_abs_diff[@]}\"; do\n        x_abs_diff_sum=$(echo\
    \ \"$x_abs_diff_sum + $i\" | bc -l | awk '{printf \"%f\", $0}')\n    done\n  \
    \  x_abs_diff_mean=$(echo \"$x_abs_diff_sum / ${#x[@]}\" | bc -l | awk '{printf\
    \ \"%f\", $0}')\n    x_abs_diff_mean_rounded=$(echo \"$x_abs_diff_mean\" | awk\
    \ '{printf \"%.1f\", $0}')\n    echo \"$x_abs_diff_mean_rounded\"", "    local\
    \ -a numbers=(\"$@\")\n    local -i count=${#numbers[@]}\n    local -i i\n   \
    \ local -i sum=0\n    local -i mean\n    local -i abs_diff\n    local -i abs_diff_sum=0\n\
    \    for ((i=0; i<count; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n\
    \    mean=$((sum / count))\n    for ((i=0; i<count; i++)); do\n        abs_diff=$((numbers[i]\
    \ - mean))\n        abs_diff_sum=$((abs_diff_sum + abs_diff))\n    done\n    echo\
    \ $((abs_diff_sum / count))", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum=0\n    for number in \"${numbers[@]}\"; do\n\
    \        sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    echo\
    \ \"$sum / $#\" | bc -l", "    local x_mean=$(mean \"$@\")\n    local x_abs_diff_sum=0\n\
    \    for x in $@; do\n        x_abs_diff_sum=$(echo \"$x_abs_diff_sum + abs($x\
    \ - $x_mean)\" | bc -l)\n    done\n    echo \"$x_abs_diff_sum / $#\" | bc -l",
  "    local -a numbers\n    local -i i\n    local -r mean=$(mean \"$@\")\n    local\
    \ -r n=$#\n    local -r n_minus_1=$((n - 1))\n    local -r n_minus_2=$((n - 2))\n\
    \    local -r n_minus_3=$((n - 3))\n    local -r n_minus_4=$((n - 4))\n    local\
    \ -r n_minus_5=$((n - 5))\n    local -r n_minus_6=$((n - 6))\n    local -r n_minus_7=$((n\
    \ - 7))\n    local -r n_minus_8=$((n - 8))\n    local -r n_minus_9=$((n - 9))\n\
    \    local -r n_minus_10=$((n - 10))\n    local -r n_minus_11=$((n - 11))\n  \
    \  local -r n_minus_12=$((n - 12))\n    local -r n_minus_13=$((n - 13))\n    local\
    \ -r n_minus_14=$((n - 14))\n    local -r n_minus_15=$((n - 15))\n    local -r\
    \ n_minus_16=$((n - 16))\n    local -r n_minus_17=$((n - 17))\n    local -r n_minus_18=$((n\
    \ - 18))\n    local -r n_minus_19=$((n - 19))\n    local -r n_minus_20=$((n -\
    \ 20))\n    local -r n_minus_21=$((n - 21))\n    local -r n_minus_22=$((n - 22))\n\
    \    local -r n_minus_23=$((n - 23))\n    local -r n_minus_24=$((n - 24))\n  \
    \  local -r n_minus_25=$((n - 25))\n    local -r n_minus_26=$((n - 26))\n    local\
    \ -r n_minus_27=$((n - 27))\n    local -r n_minus_28=$((n - 28))\n    local -r\
    \ n_minus_29=$((n - 29))\n    local -r n_minus_30=$((n - 30))", "    local -a\
    \ values=($1)\n    local mean=$(mean \"${values[@]}\")\n    local -a abs_deviations=()\n\
    \    for value in \"${values[@]}\"; do\n        abs_deviations+=($(echo \"$value\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean\
    \ \"${abs_deviations[@]}\")\"", "  local mean=$(mean \"$@\")\n  local abs_deviations=$(echo\
    \ \"$@\" | awk -v mean=\"$mean\" '{print $1 - mean}' | \\\n    awk '{print $1\
    \ < 0 ? -$1 : $1}')\n  echo \"$abs_deviations\" | mean", "    local -a numbers=(\"\
    $@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local -a abs_diffs=()\n \
    \   for number in \"${numbers[@]}\"; do\n        abs_diffs+=(\"$(echo \"$number\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}')\")\n    done\n    mean \"${abs_diffs[@]}\"",
  "    local mean=$(mean \"$@\")\n    local abs_diffs=\"\"\n    for x in $@; do\n\
    \        local abs_diff=$(echo \"$x - $mean\" | bc -l | awk '{printf \"%f\", $0}')\n\
    \        abs_diffs=\"$abs_diffs $abs_diff\"\n    done\n    echo $(mean $abs_diffs)",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations\n    local -a abs_deviations\n \
    \   local sum\n    local i\n    for i in \"${numbers[@]}\"; do\n        deviations+=($(echo\
    \ \"$i - $mean\" | bc -l))\n    done\n    for i in \"${deviations[@]}\"; do\n\
    \        abs_deviations+=($(echo \"if($i < 0) $i * -1 else $i\" | bc -l))\n  \
    \  done\n    sum=$(sum \"${abs_deviations[@]}\")\n    echo \"$(echo \"$sum / ${#numbers[@]}\"\
    \ | bc -l)\"", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local\
    \ mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n    for number\
    \ in \"${numbers[@]}\"; do\n        deviations+=($(echo \"$number - $mean\" |\
    \ bc -l))\n    done\n    local -a abs_deviations\n    for deviation in \"${deviations[@]}\"\
    ; do\n        abs_deviations+=($(echo \"if ($deviation < 0) $deviation * -1 else\
    \ $deviation\" | bc -l))\n    done\n    echo \"$(mean \"${abs_deviations[@]}\"\
    )\"", "    local mean=$(mean \"$@\")\n    local abs_diff_sum=0\n    for num in\
    \ \"$@\"; do\n        abs_diff_sum=$(echo \"$abs_diff_sum + $(abs_diff \"$num\"\
    \ \"$mean\")\" | bc -l)\n    done\n    echo \"$abs_diff_sum / $#\" | bc -l", " \
    \   local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n\
    \    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local mean=$(mean \"$@\")\n\
    \    local sum=0\n    for num in \"$@\"; do\n        local diff=$(echo \"$num\
    \ - $mean\" | bc -l)\n        local abs_diff=$(echo \"if ($diff < 0) $diff * -1\
    \ else $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs_diff\" | bc -l)\n  \
    \  done\n    echo \"$sum / $#\" | bc -l", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a abs_diffs\n\
    \    abs_diffs=($(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{ for (i=1;\
    \ i<=NF; i++) { print abs($i - mean) } }'))\n    mean \"${abs_diffs[@]}\"", " \
    \   local -a numbers=($@)\n    local -a abs_deviations=()\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo\
    \ \"$(mean \"${abs_deviations[@]}\")\"", "    local -a numbers\n    numbers=($@)\n\
    \    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local sum\n    sum=0\n\
    \    for number in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + abs($number\
    \ - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc -l",
  "    local -a numbers=($@)\n    local -a abs_deviations=()\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo\
    \ \"$(mean \"${abs_deviations[@]}\")\"", "    local mean=$(mean \"$@\")\n    local\
    \ sum=0\n    for x in \"$@\"; do\n        local diff=$(echo \"$x - $mean\" | bc\
    \ -l)\n        local abs=$(echo \"if ($diff < 0) $diff * -1 else $diff\" | bc\
    \ -l)\n        sum=$(echo \"$sum + $abs\" | bc -l)\n    done\n    echo \"$sum\
    \ / $#\" | bc -l", "    local -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local sum=0\n    for number in \"${numbers[@]}\"; do\n        local diff=$(echo\
    \ \"$number - $mean\" | bc -l)\n        local abs_diff=$(echo \"if ($diff < 0)\
    \ $diff * -1 else $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs_diff\" |\
    \ bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a\
    \ numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local sum=0\n\
    \    for number in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + abs($number\
    \ - $mean)\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local -a\
    \ numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n    local sum=0\n  \
    \  for number in \"${numbers[@]}\"; do\n        local diff=$(echo \"$number -\
    \ $mean\" | bc -l)\n        local abs=$(echo \"if ($diff < 0) $diff * -1 else\
    \ $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs\" | bc -l)\n    done\n  \
    \  echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local sum\n\
    \    sum=0\n    for number in \"${numbers[@]}\"; do\n        local diff\n    \
    \    diff=$(echo \"$number - $mean\" | bc -l)\n        local abs_diff\n      \
    \  abs_diff=$(echo \"if ($diff < 0) $diff * -1 else $diff\" | bc -l)\n       \
    \ sum=$(echo \"$sum + $abs_diff\" | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\"\
    \ | bc -l", "    local -a numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local sum=0\n    for number in \"${numbers[@]}\"; do\n        sum=$(echo\
    \ \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\"\
    \ | bc -l", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n\
    \    mean=$(mean \"${numbers[@]}\")\n    local -a abs_differences\n    for number\
    \ in \"${numbers[@]}\"; do\n        abs_differences+=($(echo \"$number - $mean\"\
    \ | bc -l | awk '{printf \"%f\", $0}' | awk '{printf \"%f\", sqrt($0*$0)}'))\n\
    \    done\n    echo \"${abs_differences[@]}\"", "    local -a numbers=($@)\n \
    \   local -i count=${#numbers[@]}\n    local -i i\n    local -i sum=0\n    local\
    \ -i mean\n    local -i abs_deviation\n    local -i sum_abs_deviation=0\n    for\
    \ ((i=0; i<count; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n   \
    \ mean=$((sum / count))\n    for ((i=0; i<count; i++)); do\n        abs_deviation=$((numbers[i]\
    \ - mean))\n        if ((abs_deviation < 0)); then\n            abs_deviation=$((-abs_deviation))\n\
    \        fi\n        sum_abs_deviation=$((sum_abs_deviation + abs_deviation))\n\
    \    done\n    echo $((sum_abs_deviation / count))", "    local -a input=($@)\n\
    \    local mean=$(mean \"${input[@]}\")\n    local -a abs_deviations=()\n    for\
    \ i in \"${input[@]}\"; do\n        abs_deviations+=($(bc <<< \"scale=2; $i -\
    \ $mean\"))\n    done\n    local abs_deviations_str=$(printf \" %s\" \"${abs_deviations[@]}\"\
    )\n    local abs_deviations_str=${abs_deviations_str:1}\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/-/ /g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/ /\\n/g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/^/\\|/g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/$/\\|/g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/\\|\\|/\\|/g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/\\|\\|/\\|/g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/\\|\\|/\\|/g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/\\|\\|/\\|/g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/\\|\\|/\\|/g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/\\|\\|/\\|/g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed 's/\\|\\|/\\|/g')\n    local abs_deviations_str=$(echo\
    \ \"$abs_deviations_str\" | sed '", "  local mean=$(mean \"$@\")\n  local abs_diff_sum=0\n\
    \  local abs_diff\n  for x in \"$@\"; do\n    abs_diff=$(echo \"$x - $mean\" |\
    \ bc -l)\n    abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc -l)\n  done\n\
    \  echo \"$abs_diff_sum / $#\" | bc -l", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        local deviation\n        deviation=$(echo\
    \ \"$number - $mean\" | bc -l)\n        deviations+=($(echo \"$deviation\" | awk\
    \ '{printf \"%f\", $0}'))\n    done\n    local -a abs_deviations\n    for deviation\
    \ in \"${deviations[@]}\"; do\n        abs_deviations+=($(echo \"$deviation\"\
    \ | awk '{printf \"%f\", $0}'))\n    done\n    local sum\n    sum=$(sum \"${abs_deviations[@]}\"\
    )\n    local mean_abs_deviation\n    mean_abs_deviation=$(echo \"$sum / ${#numbers[@]}\"\
    \ | bc -l)\n    echo \"$mean_abs_deviation\"", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        deviations+=($(echo \"$number\
    \ - $mean\" | bc -l))\n    done\n    local -a absolute_deviations\n    for deviation\
    \ in \"${deviations[@]}\"; do\n        absolute_deviations+=($(echo \"if ($deviation\
    \ < 0) $deviation * -1 else $deviation\" | bc -l))\n    done\n    local sum\n\
    \    sum=$(sum \"${absolute_deviations[@]}\")\n    local count\n    count=$(echo\
    \ \"${#absolute_deviations[@]}\")\n    echo \"$sum / $count\" | bc -l", "  local\
    \ -a numbers\n  numbers=($(echo \"$@\"))\n  local mean\n  mean=$(mean \"${numbers[@]}\"\
    )\n  local -a absolute_deviations\n  absolute_deviations=($(absolute_deviations\
    \ \"${numbers[@]}\" \"$mean\"))\n  local sum\n  sum=$(sum \"${absolute_deviations[@]}\"\
    )\n  local count\n  count=$(count \"${absolute_deviations[@]}\")\n  echo \"$(bc\
    \ <<< \"scale=2; $sum / $count\")\"", "  local -a numbers=($@)\n  local mean=$(mean\
    \ \"${numbers[@]}\")\n  local sum=0\n  for number in \"${numbers[@]}\"; do\n \
    \   sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n  done\n  echo \"$sum\
    \ / ${#numbers[@]}\" | bc -l", "    local -a numbers=($@)\n    local -a abs_deviations=()\n\
    \    local mean=$(mean \"${numbers[@]}\")\n    for number in \"${numbers[@]}\"\
    ; do\n        abs_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    echo \"$(mean \"${abs_deviations[@]}\")\"", " \
    \   local -a x\n    local -i n=0\n    local -i i\n    local -i j\n    local -i\
    \ k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n \
    \   local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local\
    \ -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n\
    \    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local\
    \ -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n\
    \    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local\
    \ -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n\
    \    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local\
    \ -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n\
    \    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local\
    \ -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n\
    \    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n   \
    \ local -i bbbb\n    local -i cccc\n    local -i dddd\n    local -i e", "    local\
    \ -a numbers\n    numbers=($@)\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"; do\n       \
    \ sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    echo \"$sum\
    \ / ${#numbers[@]}\" | bc -l", "    local -a nums\n    read -a nums <<< \"$@\"\
    \n    local mean=$(mean \"${nums[@]}\")\n    local -a abs_devs\n    for num in\
    \ \"${nums[@]}\"; do\n        local abs_dev=$(echo \"$num - $mean\" | bc -l)\n\
    \        abs_devs+=($(echo \"$abs_dev\" | sed 's/-//'))\n    done\n    echo \"\
    $(mean \"${abs_devs[@]}\")\"", "    local -a numbers\n    numbers=($@)\n    local\
    \ mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n    for number in \"\
    ${numbers[@]}\"; do\n        local deviation=$(echo \"$number - $mean\" | bc -l)\n\
    \        deviations+=($(echo \"scale=2; $deviation\" | bc -l))\n    done\n   \
    \ echo \"$(mean \"${deviations[@]}\")\"", "    local -a numbers=($@)\n    local\
    \ -i n=${#numbers[@]}\n    local -i i=0\n    local -i sum=0\n    local -i mean=0\n\
    \    local -i mad=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n\
    \    done\n    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        mad=$((mad\
    \ + abs(numbers[i] - mean)))\n    done\n    echo $((mad / n))", "    local -a\
    \ numbers\n    local mean\n    local sum_of_diffs\n    local count\n    local\
    \ i\n    numbers=($@)\n    mean=$(mean \"${numbers[@]}\")\n    sum_of_diffs=0\n\
    \    count=${#numbers[@]}\n    for ((i=0; i<$count; i++)); do\n        sum_of_diffs=$(echo\
    \ \"$sum_of_diffs + ${numbers[$i]} - $mean\" | bc -l)\n    done\n    echo \"$sum_of_diffs\
    \ / $count\" | bc -l", "    local -a nums=($@)\n    local mean=$(mean \"${nums[@]}\"\
    )\n    local sum=0\n    for num in \"${nums[@]}\"; do\n        local diff=$(echo\
    \ \"$num - $mean\" | bc -l)\n        local abs_diff=$(echo \"if ($diff < 0) $diff\
    \ * -1 else $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs_diff\" | bc -l)\n\
    \    done\n    echo \"$sum / ${#nums[@]}\" | bc -l", "  local -a numbers\n  numbers=($(echo\
    \ \"$@\"))\n  local mean\n  mean=$(mean \"${numbers[@]}\")\n  local abs_deviations\n\
    \  abs_deviations=$(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{ for (i=1;\
    \ i<=NF; i++) printf(\"%s \", fabs($i - mean)) }')\n  mean \"${abs_deviations[@]}\"",
  "    local -a numbers\n    local -i i\n    local -i n\n    local -i sum\n    local\
    \ -i mean\n    local -i mad\n    local -i abs_diff\n    numbers=($@)\n    n=${#numbers[@]}\n\
    \    sum=0\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n\
    \    done\n    mean=$((sum / n))\n    mad=0\n    for ((i=0; i<n; i++)); do\n \
    \       abs_diff=$((numbers[i] - mean))\n        if ((abs_diff < 0)); then\n \
    \           abs_diff=$((-abs_diff))\n        fi\n        mad=$((mad + abs_diff))\n\
    \    done\n    mad=$((mad / n))\n    echo \"$mad\"", "    local -a arr=(\"$@\"\
    )\n    local mean=$(mean \"${arr[@]}\")\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        sum=$(bc <<< \"$sum + abs($i - $mean)\")\n    done\n    bc <<< \"\
    $sum / ${#arr[@]}\"", "    local x_mean=$(mean \"$@\")\n    local x_deviations=$(echo\
    \ \"$@\" | awk -v x_mean=\"$x_mean\" '{print $1 - x_mean}')\n    local x_abs_deviations=$(echo\
    \ \"$x_deviations\" | awk '{print sqrt($1^2)}')\n    local x_sum_abs_deviations=$(echo\
    \ \"$x_abs_deviations\" | awk '{sum += $1} END {print sum}')\n    local x_count=$(echo\
    \ \"$@\" | wc -w)\n    echo \"$x_sum_abs_deviations / $x_count\" | bc -l", " \
    \   local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations\n    deviations=($(echo \"${numbers[@]}\"\
    \ | awk -v mean=\"$mean\" '{print $1-mean}'))\n    local -a absolute_deviations\n\
    \    absolute_deviations=($(echo \"${deviations[@]}\" | awk '{print $1<0?-$1:$1}'))\n\
    \    local sum\n    sum=$(echo \"${absolute_deviations[@]}\" | awk '{sum+=$1}\
    \ END {print sum}')\n    local count\n    count=$(echo \"${absolute_deviations[@]}\"\
    \ | wc -w)\n    echo \"$sum / $count\" | bc -l", "    local -a numbers\n    numbers=($@)\n\
    \    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a abs_deviations\n\
    \    abs_deviations=()\n    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo\
    \ \"${abs_deviations[@]}\"\n    local -a abs_deviations_abs\n    abs_deviations_abs=()\n\
    \    for abs_deviation in \"${abs_deviations[@]}\"; do\n        abs_deviations_abs+=($(echo\
    \ \"$abs_deviation < 0 ? -$abs_deviation : $abs_deviation\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    echo \"${abs_deviations_abs[@]}\"\n    local sum\n\
    \    sum=$(sum \"${abs_deviations_abs[@]}\")\n    local mean_absolute_deviation\n\
    \    mean_absolute_deviation=$(echo \"$sum / ${#numbers[@]}\" | bc -l | awk '{printf\
    \ \"%f\", $0}')\n    echo \"$mean_absolute_deviation\"", "    local -a numbers\n\
    \    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a absolute_deviations\n    absolute_deviations=($(echo \"${numbers[@]}\"\
    \ | awk -v mean=\"$mean\" '{print $1-mean}' | awk '{print $1>0?$1:-$1}'))\n  \
    \  local sum\n    sum=$(echo \"${absolute_deviations[@]}\" | awk '{sum+=$1} END\
    \ {print sum}')\n    local count\n    count=$(echo \"${absolute_deviations[@]}\"\
    \ | wc -w)\n    echo \"$sum / $count\" | bc -l", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a absolute_deviations\n\
    \    local i\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        absolute_deviations[i]=$(echo\
    \ \"${numbers[i]} - $mean\" | bc -l)\n        absolute_deviations[i]=$(echo \"\
    ${absolute_deviations[i]} < 0\" | bc -l)\n        if [[ \"${absolute_deviations[i]}\"\
    \ == \"1\" ]]; then\n            absolute_deviations[i]=$(echo \"${absolute_deviations[i]}\
    \ * -1\" | bc -l)\n        fi\n    done\n    echo \"$(mean \"${absolute_deviations[@]}\"\
    )\"", "    local input_list=\"$1\"\n    local mean=$(mean \"$input_list\")\n \
    \   local sum=0\n    for i in $input_list; do\n        sum=$(echo \"$sum + abs($i\
    \ - $mean)\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local -a\
    \ numbers=($@)\n    local -i n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n\
    \    local -i mean\n    local -i abs_deviation\n    local -i abs_deviation_sum=0\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n\
    \    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i]\
    \ - mean))\n        abs_deviation_sum=$((abs_deviation_sum + abs_deviation))\n\
    \    done\n    echo $((abs_deviation_sum / n))", "    local -a nums\n    local\
    \ -i i\n    local -r mean=$(mean \"$@\")\n    local -r nums=($@)\n    local -i\
    \ nums_len=${#nums[@]}\n    local -i sum=0\n    for ((i=0; i<nums_len; i++));\
    \ do\n        sum=$((sum + abs \"$((nums[i] - mean))\"))\n    done\n    echo \"\
    $((sum / nums_len))\"", "    local -a x\n    x=($@)\n    local x_mean\n    x_mean=$(mean\
    \ \"${x[@]}\")\n    local -a x_deviation\n    x_deviation=($(map_array \"abs_diff\"\
    \ \"${x[@]}\" \"$x_mean\"))\n    mean \"${x_deviation[@]}\"", "    local -a numbers\n\
    \    numbers=($@)\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local\
    \ -a deviations\n    local -a abs_deviations\n    local abs_deviation\n    local\
    \ sum\n    local i\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        deviations[$i]=$(bc\
    \ <<< \"${numbers[$i]} - $mean\")\n        abs_deviations[$i]=$(bc <<< \"if (${deviations[$i]}\
    \ < 0) ${deviations[$i]} * -1 else ${deviations[$i]}\")\n    done\n    sum=$(sum\
    \ \"${abs_deviations[@]}\")\n    bc <<< \"$sum / ${#numbers[@]}\"", "    local\
    \ -a x=($@)\n    local x_mean=$(mean \"${x[@]}\")\n    local -a x_deviation=()\n\
    \    for i in \"${x[@]}\"; do\n        x_deviation+=($(echo \"$i - $x_mean\" |\
    \ bc -l))\n    done\n    local -a x_deviation_abs=()\n    for i in \"${x_deviation[@]}\"\
    ; do\n        x_deviation_abs+=($(echo \"if ($i < 0) $i * -1 else $i\" | bc -l))\n\
    \    done\n    mean \"${x_deviation_abs[@]}\"", "    local -a numbers=(\"$@\"\
    )\n    local mean=$(mean \"${numbers[@]}\")\n    local abs_deviations=()\n   \
    \ for number in \"${numbers[@]}\"; do\n        abs_deviations+=(\"$(echo \"$number\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}')\")\n    done\n    echo \"$(mean\
    \ \"${abs_deviations[@]}\")\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum=0\n    for number in \"${numbers[@]}\"; do\n\
    \        local diff=$(echo \"$number - $mean\" | bc -l)\n        local abs=$(echo\
    \ \"if ($diff < 0) $diff * -1 else $diff\" | bc -l)\n        sum=$(echo \"$sum\
    \ + $abs\" | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc -l", " \
    \   local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a abs_deviations\n    for number in \"${numbers[@]}\"\
    ; do\n        abs_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    echo \"${abs_deviations[@]}\"", "    local -a\
    \ input_array\n    input_array=($@)\n    local mean\n    mean=$(mean \"${input_array[@]}\"\
    )\n    local -a absolute_deviations\n    for i in \"${input_array[@]}\"; do\n\
    \        absolute_deviations+=($(echo \"$i - $mean\" | bc -l | awk '{printf \"\
    %.3f\", $0}'))\n    done\n    local -a absolute_deviations_abs\n    for i in \"\
    ${absolute_deviations[@]}\"; do\n        absolute_deviations_abs+=($(echo \"if\
    \ ($i < 0) $i * -1 else $i\" | bc -l | awk '{printf \"%.3f\", $0}'))\n    done\n\
    \    echo $(mean \"${absolute_deviations_abs[@]}\")", "    local x_mean=$(mean\
    \ \"$@\")\n    local x_deviations=$(echo \"$@\" | awk -v x_mean=\"$x_mean\" '{print\
    \ $1-x_mean}')\n    local x_absolute_deviations=$(echo \"$x_deviations\" | awk\
    \ '{print ($1<0?-$1:$1)}')\n    local x_mean_absolute_deviation=$(mean \"$x_absolute_deviations\"\
    )\n    echo \"$x_mean_absolute_deviation\"", "    local x_mean=$(mean \"$@\")\n\
    \    local x_abs_dev=$(echo \"$@\" | awk '{for(i=1;i<=NF;i++)printf(\"%s \",sqrt((($i-'\"\
    $x_mean\"')^2)))}')\n    mean \"$x_abs_dev\"", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n\
    \    deviations=($(echo \"${numbers[@]}\" | awk -v mean=\"$mean\" '{print $1-mean}'))\n\
    \    local -a abs_deviations\n    abs_deviations=($(echo \"${deviations[@]}\"\
    \ | awk '{print $1<0?-$1:$1}'))\n    local sum\n    sum=$(echo \"${abs_deviations[@]}\"\
    \ | awk '{sum+=$1} END {print sum}')\n    local count\n    count=$(echo \"${abs_deviations[@]}\"\
    \ | wc -w)\n    echo \"$sum/$count\" | bc -l", "    local -a data=(\"$@\")\n \
    \   local -a abs_deviations=()\n    local -i i\n    local -i n=${#data[@]}\n \
    \   local -i sum=0\n    local -i mean=0\n    local -i abs_deviation=0\n    local\
    \ -i mad=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + data[i]))\n\
    \    done\n    mean=$((sum / n))\n\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((data[i]\
    \ - mean))\n        abs_deviations[i]=$((abs_deviation < 0 ? -abs_deviation :\
    \ abs_deviation))\n    done\n\n    sum=0\n    for ((i=0; i<n; i++)); do\n    \
    \    sum=$((sum + abs_deviations[i]))\n    done\n    mad=$((sum / n))\n\n    echo\
    \ \"$mad\"", "    local -a nums\n    local num\n    local sum=0\n    local mean\n\
    \    local abs_diff_sum=0\n    local abs_diff\n    local mad\n    nums=($@)\n\
    \    for num in \"${nums[@]}\"; do\n        sum=$(echo \"$sum + $num\" | bc -l)\n\
    \    done\n    mean=$(echo \"$sum / ${#nums[@]}\" | bc -l)\n    for num in \"\
    ${nums[@]}\"; do\n        abs_diff=$(echo \"scale=4; if ($num > $mean) $num -\
    \ $mean else $mean - $num\" | bc -l)\n        abs_diff_sum=$(echo \"$abs_diff_sum\
    \ + $abs_diff\" | bc -l)\n    done\n    mad=$(echo \"$abs_diff_sum / ${#nums[@]}\"\
    \ | bc -l)\n    echo \"$mad\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations=()\n    for n in \"${numbers[@]}\"\
    ; do\n        local deviation=$(echo \"$n - $mean\" | bc -l)\n        deviations+=(\"\
    $(echo \"$deviation\" | awk '{printf \"%f\", $0}')\")\n    done\n    echo \"$(mean\
    \ \"${deviations[@]}\")\"", "    local -a numbers=($@)\n    local -i n=${#numbers[@]}\n\
    \    local -i i\n    local -i sum=0\n    local -i mean\n    local -i abs_deviation\n\
    \    local -i sum_abs_deviations=0\n    local -i mean_abs_deviation\n    for ((i=0;\
    \ i<n; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n    mean=$((sum\
    \ / n))\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((numbers[i] -\
    \ mean))\n        if ((abs_deviation < 0)); then\n            abs_deviation=$((-abs_deviation))\n\
    \        fi\n        sum_abs_deviations=$((sum_abs_deviations + abs_deviation))\n\
    \    done\n    mean_abs_deviation=$((sum_abs_deviations / n))\n    echo $mean_abs_deviation",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local -i n\n    n=${#numbers[@]}\n\
    \    local -i i\n    local -i sum\n    local -i mean\n    local -i abs_dev\n \
    \   local -i abs_dev_sum\n    local -i mad\n    sum=0\n    abs_dev_sum=0\n   \
    \ for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n   \
    \ mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        abs_dev=$((numbers[i]\
    \ - mean))\n        abs_dev_sum=$((abs_dev_sum + abs_dev))\n    done\n    mad=$((abs_dev_sum\
    \ / n))\n    echo \"$mad\"", "    local -a x=($1)\n    local n=${#x[@]}\n    local\
    \ sum=0\n    local mean=0\n    local abs_dev=0\n    local abs_dev_sum=0\n    local\
    \ abs_dev_mean=0\n    for i in \"${x[@]}\"; do\n        sum=$(echo \"$sum + $i\"\
    \ | bc -l)\n    done\n    mean=$(echo \"$sum / $n\" | bc -l)\n    for i in \"\
    ${x[@]}\"; do\n        abs_dev=$(echo \"scale=2; $i - $mean\" | bc -l)\n     \
    \   abs_dev_sum=$(echo \"$abs_dev_sum + $abs_dev\" | bc -l)\n    done\n    abs_dev_mean=$(echo\
    \ \"$abs_dev_sum / $n\" | bc -l)\n    echo \"$abs_dev_mean\"", "    local -a input_list=($@)\n\
    \    local -i n=${#input_list[@]}\n    local -i i=0\n    local -i sum=0\n    local\
    \ -i mean=0\n    local -i abs_diff=0\n    local -i abs_diff_sum=0\n    local -i\
    \ mad=0\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum + input_list[i]))\n\
    \    done\n    mean=$((sum / n))\n\n    for ((i=0; i<n; i++)); do\n        abs_diff=$((input_list[i]\
    \ - mean))\n        abs_diff_sum=$((abs_diff_sum + abs_diff))\n    done\n    mad=$((abs_diff_sum\
    \ / n))\n\n    echo \"$mad\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a absolute_deviations=()\n    for number in \"\
    ${numbers[@]}\"; do\n        absolute_deviations+=(\"$(absolute_difference \"\
    $number\" \"$mean\")\")\n    done\n    mean \"${absolute_deviations[@]}\"", " \
    \   local -a values=($@)\n    local mean=$(mean \"${values[@]}\")\n    local -a\
    \ absolute_deviations=()\n    for value in \"${values[@]}\"; do\n        local\
    \ absolute_deviation=$(echo \"$value - $mean\" | bc -l)\n        absolute_deviations+=($(echo\
    \ \"$absolute_deviation\" | awk '{printf \"%f\", $0}'))\n    done\n    mean \"\
    ${absolute_deviations[@]}\"", "    local -a numbers=($@)\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum=0\n    for number in \"${numbers[@]}\"; do\n\
    \        sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    local\
    \ count=${#numbers[@]}\n    echo \"$sum / $count\" | bc -l", "    local -a numbers=($@)\n\
    \    local mean=$(mean \"${numbers[@]}\")\n    local -a deviations=()\n    for\
    \ number in \"${numbers[@]}\"; do\n        local deviation=$(echo \"$number -\
    \ $mean\" | bc -l)\n        local absolute_deviation=$(echo \"if ($deviation <\
    \ 0) $deviation * -1 else $deviation\" | bc -l)\n        deviations+=($absolute_deviation)\n\
    \    done\n    mean \"${deviations[@]}\"", "    local -a x=($@)\n    local x_mean=$(mean\
    \ \"${x[@]}\")\n    local -a x_diff=($(map_array \"echo \\$(echo \\\"\\$1 - $x_mean\\\
    \" | bc -l)\" \"${x[@]}\"))\n    local -a x_diff_abs=($(map_array \"echo \\$(echo\
    \ \\\"abs(\\$1)\\\" | bc -l)\" \"${x_diff[@]}\"))\n    echo $(mean \"${x_diff_abs[@]}\"\
    )", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a absolute_deviations\n    absolute_deviations=($(absolute_deviations\
    \ \"${numbers[@]}\" \"$mean\"))\n    local sum\n    sum=$(sum \"${absolute_deviations[@]}\"\
    )\n    local count\n    count=$(echo \"${#absolute_deviations[@]}\")\n    echo\
    \ \"$(bc <<< \"scale=2; $sum / $count\")\"", "    local -a array=(\"$@\")\n  \
    \  local mean=$(mean \"${array[@]}\")\n    local sum=0\n    for i in \"${array[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo\
    \ \"$sum / ${#array[@]}\" | bc -l", "    local -a numbers=(\"$@\")\n    local\
    \ mean=$(mean \"${numbers[@]}\")\n    local -a abs_deviations=()\n    for number\
    \ in \"${numbers[@]}\"; do\n        local abs_deviation=$(echo \"$number - $mean\"\
    \ | bc -l)\n        abs_deviations+=(\"$(echo \"$abs_deviation\" | awk '{print\
    \ sqrt($1^2)}')\")\n    done\n    mean \"${abs_deviations[@]}\"", "    local -a\
    \ numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a deviations\n    deviations=($(echo \"${numbers[@]}\" | awk -v\
    \ mean=\"$mean\" '{printf \"%s \", $1 - mean}'))\n    local -a abs_deviations\n\
    \    abs_deviations=($(echo \"${deviations[@]}\" | awk '{printf \"%s \", $1 <\
    \ 0 ? -$1 : $1}'))\n    local sum\n    sum=$(echo \"${abs_deviations[@]}\" | awk\
    \ '{sum += $1} END {print sum}')\n    local n\n    n=$(echo \"${numbers[@]}\"\
    \ | wc -w)\n    echo \"$sum / $n\" | bc -l", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local sum\n\
    \    sum=0\n    for number in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum\
    \ + abs($number - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\"\
    \ | bc -l", "    local input_list=$1\n    local mean=$(mean \"$input_list\")\n\
    \    local abs_diff_list=$(echo \"$input_list\" | awk -v mean=\"$mean\" '{print\
    \ $1 - mean}' | awk '{print $1 < 0 ? -$1 : $1}')\n    local abs_diff_sum=$(echo\
    \ \"$abs_diff_list\" | awk '{sum += $1} END {print sum}')\n    local abs_diff_mean=$(echo\
    \ \"$abs_diff_sum / NR\" | bc -l)\n    echo \"$abs_diff_mean\"", "    local -a\
    \ numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local -a deviations=()\n\
    \    for number in \"${numbers[@]}\"; do\n        local deviation=$(echo \"$number\
    \ - $mean\" | bc -l)\n        local abs_deviation=$(echo \"if ($deviation < 0)\
    \ $deviation * -1 else $deviation\" | bc -l)\n        deviations+=(\"$abs_deviation\"\
    )\n    done\n    mean \"${deviations[@]}\"", "  local -a numbers=($@)\n  local\
    \ mean=$(mean \"${numbers[@]}\")\n  local -a deviations=()\n  for number in \"\
    ${numbers[@]}\"; do\n    local deviation=$(echo \"$number - $mean\" | bc -l)\n\
    \    deviations+=($(echo \"$deviation < 0 ? -$deviation : $deviation\" | bc -l))\n\
    \  done\n  echo $(mean \"${deviations[@]}\")", "    local mean=$(mean \"$@\")\n\
    \    local abs_diffs=()\n    for x in \"$@\"; do\n        abs_diffs+=(\"$(echo\
    \ \"$x - $mean\" | bc -l | awk '{printf \"%f\", $0}')\")\n    done\n    echo \"\
    $(mean \"${abs_diffs[@]}\")\"", "    local -a arr=(\"$@\")\n    local mean=$(mean\
    \ \"${arr[@]}\")\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        sum=$(echo\
    \ \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#arr[@]}\"\
    \ | bc -l", "  local -a numbers\n  numbers=($(echo \"$@\"))\n  local mean\n  mean=$(mean\
    \ \"${numbers[@]}\")\n  local -a deviations\n  deviations=($(echo \"${numbers[@]}\"\
    \ | awk -v mean=\"$mean\" '{print $1-mean}'))\n  local -a absolute_deviations\n\
    \  absolute_deviations=($(echo \"${deviations[@]}\" | awk '{print $1<0?-$1:$1}'))\n\
    \  local sum\n  sum=$(echo \"${absolute_deviations[@]}\" | awk '{sum+=$1} END\
    \ {print sum}')\n  local count\n  count=$(echo \"${absolute_deviations[@]}\" |\
    \ wc -w)\n  echo \"$sum / $count\" | bc -l", "    # Calculate mean\n    local\
    \ mean=$(mean \"$@\")\n    # Calculate absolute difference between each element\
    \ and mean\n    local abs_diff_sum=0\n    for x in $@; do\n        local abs_diff=$(echo\
    \ \"$x - $mean\" | bc -l)\n        local abs_diff=$(echo \"$abs_diff < 0 ? -$abs_diff\
    \ : $abs_diff\" | bc -l)\n        abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\"\
    \ | bc -l)\n    done\n    # Calculate mean absolute deviation\n    local mad=$(echo\
    \ \"$abs_diff_sum / $#\" | bc -l)\n    echo \"$mad\"", "    local -a numbers=(\"\
    $@\")\n    local -i n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n   \
    \ local -i mean\n    local -i abs_deviation\n    local -i abs_deviation_sum=0\n\
    \    local -i abs_deviation_mean\n\n    for ((i=0; i<n; i++)); do\n        sum=$((sum\
    \ + numbers[i]))\n    done\n    mean=$((sum / n))\n\n    for ((i=0; i<n; i++));\
    \ do\n        abs_deviation=$((numbers[i] - mean))\n        abs_deviation_sum=$((abs_deviation_sum\
    \ + abs_deviation))\n    done\n    abs_deviation_mean=$((abs_deviation_sum / n))\n\
    \n    echo \"$abs_deviation_mean\"", "  local -a input_numbers=(\"$@\")\n  local\
    \ -i number_count=${#input_numbers[@]}\n  local -i i\n  local -r mean=$(mean \"\
    ${input_numbers[@]}\")\n  local -r sum=$(sum_absolute_deviations \"${input_numbers[@]}\"\
    )\n  echo \"$(bc <<< \"scale=2; $sum / $number_count\")\"", "  local -a numbers\n\
    \  numbers=($(echo \"$@\"))\n  local mean\n  mean=$(mean \"${numbers[@]}\")\n\
    \  local -a absolute_deviations\n  absolute_deviations=($(absolute_deviations\
    \ \"${numbers[@]}\" \"$mean\"))\n  local sum\n  sum=$(sum \"${absolute_deviations[@]}\"\
    )\n  local count\n  count=$(count \"${absolute_deviations[@]}\")\n  echo \"$(bc\
    \ <<< \"scale=2; $sum / $count\")\"", "    local -a numbers\n    numbers=($(echo\
    \ \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local -a absolute_deviations\n\
    \    for number in \"${numbers[@]}\"; do\n        absolute_deviations+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    local\
    \ -a absolute_deviations_abs\n    for number in \"${absolute_deviations[@]}\"\
    ; do\n        absolute_deviations_abs+=($(echo \"$number < 0 ? -$number : $number\"\
    \ | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean \"${absolute_deviations_abs[@]}\"\
    )\"", "    local mean=$(mean \"$@\")\n    local abs_deviations=$(echo \"$@\" |\
    \ awk -v mean=\"$mean\" '{print $1 - mean}' | awk '{print $1 < 0 ? -$1 : $1}')\n\
    \    local sum_abs_deviations=$(echo \"$abs_deviations\" | awk '{sum += $1} END\
    \ {print sum}')\n    local num_elements=$(echo \"$abs_deviations\" | wc -l)\n\
    \    echo \"$sum_abs_deviations / $num_elements\" | bc -l", "    local -a nums\n\
    \    local mean\n    local sum\n    local i\n    local n\n    local abs_diff\n\
    \    nums=($@)\n    mean=$(mean \"${nums[@]}\")\n    sum=0\n    for ((i=0; i<${#nums[@]};\
    \ i++)); do\n        n=${nums[$i]}\n        abs_diff=$(bc <<< \"scale=4; ${n}\
    \ - ${mean}\")\n        abs_diff=$(bc <<< \"scale=4; ${abs_diff} < 0 ? -${abs_diff}\
    \ : ${abs_diff}\")\n        sum=$(bc <<< \"scale=4; ${sum} + ${abs_diff}\")\n\
    \    done\n    bc <<< \"scale=4; ${sum} / ${#nums[@]}\"", "    local -a numbers\n\
    \    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"; do\n       \
    \ sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n    echo \"$sum\
    \ / ${#numbers[@]}\" | bc -l", "    local -a input_array\n    local -a absolute_differences\n\
    \    local -i i\n    local -i n\n    local -i sum_absolute_differences\n    local\
    \ -i mean_absolute_differences\n    local -i mean\n    local -i sum\n    local\
    \ -i n\n    local -i i\n    local -i sum_absolute_differences\n    local -i mean_absolute_differences\n\
    \    local -i mean\n    local -i sum\n    local -i n\n    local -i i\n    local\
    \ -i sum_absolute_differences\n    local -i mean_absolute_differences\n    local\
    \ -i mean\n    local -i sum\n    local -i n\n    local -i i\n    local -i sum_absolute_differences\n\
    \    local -i mean_absolute_differences\n    local -i mean\n    local -i sum\n\
    \    local -i n\n    local -i i\n    local -i sum_absolute_differences\n    local\
    \ -i mean_absolute_differences\n    local -i mean\n    local -i sum\n    local\
    \ -i n\n    local -i i\n    local -i sum_absolute_differences\n    local -i mean_absolute_differences\n\
    \    local -i mean\n    local -i sum\n    local -i n\n    local -i i\n    local\
    \ -i sum_absolute_differences\n    local -i mean_absolute_differences\n    local\
    \ -i mean\n    local -i sum\n    local -i n\n    local -i i\n    local -i sum_absolute_differences\n\
    \    local -i mean_absolute_differences\n    local -i mean\n    local -i sum\n\
    \    local -i n\n    local -i i\n    local -i sum_absolute_differences\n    local\
    \ -i mean_absolute_differences\n    local -i mean\n    local -i sum\n    local\
    \ -i n\n    local -i i\n    local -i sum_absolute_differences\n    local -i mean_absolute_differences\n\
    \    local -i mean\n    local -i sum\n    local -i n\n    local -i i\n    local\
    \ -i sum_absolute_differences\n    local -i mean_absolute_differences\n", "  local\
    \ -a numbers\n  local -i i\n  local -i n\n  local -i sum\n  local -i mean\n  local\
    \ -i mad\n  local -i diff\n  numbers=($@)\n  n=${#numbers[@]}\n  sum=0\n  for\
    \ ((i=0; i<n; i++)); do\n    sum=$((sum + numbers[i]))\n  done\n  mean=$((sum\
    \ / n))\n  mad=0\n  for ((i=0; i<n; i++)); do\n    diff=$((numbers[i] - mean))\n\
    \    if ((diff < 0)); then\n      diff=$((-diff))\n    fi\n    mad=$((mad + diff))\n\
    \  done\n  mad=$((mad / n))\n  echo \"$mad\"", "    local mean=$(mean \"$@\")\n\
    \    local abs_deviations=()\n    for x in \"$@\"; do\n        abs_deviations+=(\"\
    $(echo \"$x - $mean\" | bc -l | awk '{printf \"%f\", $0}')\")\n    done\n    mean\
    \ \"${abs_deviations[@]}\"", "    local -a numbers\n    read -a numbers <<< \"\
    $@\"\n    local mean=$(mean \"${numbers[@]}\")\n    local -a abs_diff\n    for\
    \ number in \"${numbers[@]}\"; do\n        abs_diff+=($(abs \"$(bc <<< \"$number\
    \ - $mean\")\"))\n    done\n    mean \"${abs_diff[@]}\"", "    local -a numbers\n\
    \    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a absolute_deviations\n    absolute_deviations=($(echo \"${numbers[@]}\"\
    \ | awk -v mean=\"$mean\" '{print $1-mean}' | awk '{print $1>0?$1:-$1}'))\n  \
    \  local sum\n    sum=$(sum \"${absolute_deviations[@]}\")\n    echo \"$sum/${#numbers[@]}\"\
    \ | bc -l", "    local mean=$(mean \"$@\")\n    local sum=0\n    for x in \"$@\"\
    ; do\n        local diff=$(echo \"$x - $mean\" | bc -l)\n        sum=$(echo \"\
    $sum + $diff\" | bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local\
    \ -a arr=(\"$@\")\n    local mean=$(mean \"${arr[@]}\")\n    local sum=0\n   \
    \ for i in \"${arr[@]}\"; do\n        sum=$(echo \"$sum + abs($i - $mean)\" |\
    \ bc -l)\n    done\n    echo \"$sum / $#\" | bc -l", "    local -a numbers=(\"\
    $@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local sum=0\n    for number\
    \ in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + abs($number - $mean)\"\
    \ | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local\
    \ -a numbers\n    numbers=($(echo \"$@\"))\n    local mean=$(mean \"${numbers[@]}\"\
    )\n    local -a deviations\n    for number in \"${numbers[@]}\"; do\n        local\
    \ deviation=$(echo \"$number - $mean\" | bc -l)\n        local absolute_deviation=$(echo\
    \ \"if ($deviation < 0) $deviation * -1 else $deviation\" | bc -l)\n        deviations+=($absolute_deviation)\n\
    \    done\n    mean \"${deviations[@]}\"", "    local -a numbers\n    numbers=($@)\n\
    \    local mean=$(mean \"${numbers[@]}\")\n    local -a diffs\n    for number\
    \ in \"${numbers[@]}\"; do\n        diffs+=($(echo \"$number - $mean\" | bc -l))\n\
    \    done\n    local -a abs_diffs\n    for diff in \"${diffs[@]}\"; do\n     \
    \   abs_diffs+=($(echo \"if ($diff < 0) $diff * -1 else $diff\" | bc -l))\n  \
    \  done\n    echo $(mean \"${abs_diffs[@]}\")", "    local mean=$(mean \"$@\"\
    )\n    local sum=0\n    for x in \"$@\"; do\n        local diff=$(echo \"$x -\
    \ $mean\" | bc -l)\n        local abs=$(echo \"if ($diff < 0) $diff * -1 else\
    \ $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs\" | bc -l)\n    done\n  \
    \  echo \"$sum / $#\" | bc -l", "    local -a numbers=($@)\n    local -a abs_deviations=()\n\
    \    local mean=$(mean \"${numbers[@]}\")\n    for number in \"${numbers[@]}\"\
    ; do\n        abs_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    mean \"${abs_deviations[@]}\"", "    local x_mean=$(mean\
    \ \"$@\")\n    local x_deviations=$(for x in $@; do echo \"$(echo \"$x - $x_mean\"\
    \ | bc)\"; done)\n    local x_abs_deviations=$(for x in $x_deviations; do echo\
    \ \"$(echo \"if ($x < 0) $x * -1 else $x\" | bc)\"; done)\n    local x_sum_abs_deviations=$(sum\
    \ \"$x_abs_deviations\")\n    local x_count=$(echo \"$@\" | wc -w)\n    echo \"\
    $(echo \"$x_sum_abs_deviations / $x_count\" | bc -l)\"", "    local -a numbers\n\
    \    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean \"${numbers[@]}\"\
    )\n    local -a abs_diffs\n    abs_diffs=($(echo \"${numbers[@]}\" | awk '{for\
    \ (i=1; i<=NF; i++) {print $i - '\"$mean\"'}}' | awk '{for (i=1; i<=NF; i++) {print\
    \ $i < 0 ? -$i : $i}}'))\n    local sum\n    sum=$(echo \"${abs_diffs[@]}\" |\
    \ awk '{sum=0; for (i=1; i<=NF; i++) {sum+=$i}; print sum}')\n    local n\n  \
    \  n=$(echo \"${numbers[@]}\" | wc -w)\n    echo \"$sum / $n\" | bc -l", "   \
    \ local -a xs=($@)\n    local x_mean=$(mean \"${xs[@]}\")\n    local -a abs_diffs=()\n\
    \    for x in \"${xs[@]}\"; do\n        abs_diffs+=($(echo \"scale=2; ${x} - ${x_mean}\"\
    \ | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"$(mean \"${abs_diffs[@]}\"\
    )\"", "    local -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n \
    \   local sum=0\n    for number in \"${numbers[@]}\"; do\n        sum=$(echo \"\
    $sum + abs($number - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\"\
    \ | bc -l", "    local mean=$(mean \"$@\")\n    local abs_diff_sum=0\n    for\
    \ i in \"$@\"; do\n        local abs_diff=$(echo \"$i - $mean\" | bc -l)\n   \
    \     local abs_diff_sum=$(echo \"$abs_diff_sum + $abs_diff\" | bc -l)\n    done\n\
    \    echo \"$abs_diff_sum / $#\" | bc -l", "    local -a x\n    local -a x_mean\n\
    \    x=($1)\n    x_mean=$(mean \"${x[@]}\")\n    local -a x_diff\n    local -a\
    \ x_abs\n    for ((i=0; i<${#x[@]}; i++)); do\n        x_diff[$i]=$(echo \"${x[$i]}\
    \ - $x_mean\" | bc -l)\n        x_abs[$i]=$(echo \"if (${x_diff[$i]} < 0) ${x_diff[$i]}\
    \ * -1 else ${x_diff[$i]}\" | bc -l)\n    done\n    echo $(mean \"${x_abs[@]}\"\
    )", "    local x_mean=$(mean \"$@\")\n    local abs_diff_sum=0\n    for x in $@;\
    \ do\n        abs_diff_sum=$(echo \"$abs_diff_sum + $(abs_diff $x $x_mean)\" |\
    \ bc -l)\n    done\n    echo \"$abs_diff_sum / $#\" | bc -l", "    local -a numbers\n\
    \    numbers=($@)\n    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local\
    \ -a deviations\n    deviations=()\n    for number in \"${numbers[@]}\"; do\n\
    \        local deviation\n        deviation=$(echo \"$number - $mean\" | bc -l)\n\
    \        deviations+=($(echo \"scale=2; $deviation\" | bc -l))\n    done\n   \
    \ echo \"${deviations[@]}\"", "    local -a numbers=(\"$@\")\n    local mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a abs_deviations=()\n    for number in \"${numbers[@]}\"\
    ; do\n        abs_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    echo \"$(mean \"${abs_deviations[@]}\")\"", " \
    \   local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a abs_deviations\n    for number in \"${numbers[@]}\"\
    ; do\n        abs_deviations+=($(echo \"$number - $mean\" | bc -l | awk '{printf\
    \ \"%f\", $0}'))\n    done\n    mean \"${abs_deviations[@]}\"", "    local -a\
    \ numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n    local sum=0\n  \
    \  for number in \"${numbers[@]}\"; do\n        sum=$(bc <<< \"$sum + abs($number\
    \ - $mean)\")\n    done\n    bc <<< \"$sum / ${#numbers[@]}\"", "  local -a numbers=($@)\n\
    \  local -a abs_deviations=()\n  local mean=$(mean \"${numbers[@]}\")\n  for number\
    \ in \"${numbers[@]}\"; do\n    abs_deviations+=($(echo \"$number - $mean\" |\
    \ bc -l | awk '{printf \"%f\", $0}'))\n  done\n  echo \"$(mean \"${abs_deviations[@]}\"\
    )\"", "    local -a nums\n    local -a abs_diffs\n    local sum_abs_diffs\n  \
    \  local mean\n    local mean_abs_deviation\n    local i\n\n    # Read input numbers\
    \ into array\n    read -a nums <<< \"$@\"\n\n    # Calculate mean\n    mean=$(mean\
    \ \"${nums[@]}\")\n\n    # Calculate absolute differences between each element\
    \ and mean\n    for ((i=0; i<${#nums[@]}; i++)); do\n        abs_diffs[$i]=$(echo\
    \ \"${nums[$i]} - $mean\" | bc -l | awk '{printf \"%f\", $0}')\n        abs_diffs[$i]=$(echo\
    \ \"${abs_diffs[$i]} < 0 ? -${abs_diffs[$i]} : ${abs_diffs[$i]}\" | bc -l | awk\
    \ '{printf \"%f\", $0}')\n    done\n\n    # Calculate sum of absolute differences\n\
    \    sum_abs_diffs=$(sum \"${abs_diffs[@]}\")\n\n    # Calculate mean absolute\
    \ deviation\n    mean_abs_deviation=$(echo \"$sum_abs_diffs / ${#nums[@]}\" |\
    \ bc -l | awk '{printf \"%f\", $0}')\n\n    echo \"$mean_abs_deviation\"", " \
    \   local -a numbers=($@)\n    local mean=$(mean \"${numbers[@]}\")\n    local\
    \ abs_deviations=()\n    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo\
    \ \"$number - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo\
    \ \"$(mean \"${abs_deviations[@]}\")\"", "    local mean=$(mean \"$@\")\n    local\
    \ sum=0\n    for x in \"$@\"; do\n        local diff=$(echo \"$x - $mean\" | bc\
    \ -l)\n        local abs_diff=$(echo \"if ($diff < 0) $diff * -1 else $diff\"\
    \ | bc -l)\n        sum=$(echo \"$sum + $abs_diff\" | bc -l)\n    done\n    echo\
    \ \"$sum / $#\" | bc -l", "    local -a numbers\n    numbers=($(echo \"$@\"))\n\
    \    local mean\n    mean=$(mean \"${numbers[@]}\")\n    local sum\n    sum=0\n\
    \    for number in \"${numbers[@]}\"; do\n        sum=$(echo \"$sum + abs($number\
    \ - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#numbers[@]}\" | bc -l",
  "    local mean=$(mean \"$@\")\n    local abs_deviations=$(echo \"$@\" | awk '{for\
    \ (i=1; i<=NF; i++) {printf \"%s \", ($i - '\"$mean\"')}}')\n    echo \"$abs_deviations\"\
    \ | mean", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n\
    \    mean=$(mean \"${numbers[@]}\")\n    local -a absolute_deviations\n    for\
    \ number in \"${numbers[@]}\"; do\n        absolute_deviations+=($(echo \"$number\
    \ - $mean\" | bc -l | awk '{printf \"%f\", $0}'))\n    done\n    echo \"${absolute_deviations[@]}\"",
  "    local -a numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local\
    \ sum=0\n    for number in \"${numbers[@]}\"; do\n        local diff=$(echo \"\
    $number - $mean\" | bc -l)\n        local abs=$(echo \"if ($diff < 0) $diff *\
    \ -1 else $diff\" | bc -l)\n        sum=$(echo \"$sum + $abs\" | bc -l)\n    done\n\
    \    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a numbers=($@)\n   \
    \ local -i n=${#numbers[@]}\n    local -i i\n    local -i sum=0\n    local -i\
    \ mean\n    local -i abs_diff\n    local -i abs_diff_sum=0\n    local -i abs_diff_mean\n\
    \    for ((i=0; i<n; i++)); do\n        sum=$((sum + numbers[i]))\n    done\n\
    \    mean=$((sum / n))\n    for ((i=0; i<n; i++)); do\n        abs_diff=$((numbers[i]\
    \ - mean))\n        abs_diff_sum=$((abs_diff_sum + abs_diff))\n    done\n    abs_diff_mean=$((abs_diff_sum\
    \ / n))\n    echo \"$abs_diff_mean\"", "    local -a input_array\n    input_array=($@)\n\
    \    local -i input_array_size=${#input_array[@]}\n    local -i i\n    local -r\
    \ mean=$(mean \"${input_array[@]}\")\n    local -r mean_absolute_deviation=$(\n\
    \        for ((i=0; i<input_array_size; i++)); do\n            echo \"$(echo \"\
    ${input_array[$i]} - $mean\" | bc -l) < 0\" | bc -l\n        done |\n        awk\
    \ '{s+=$1} END {print s/NR}'\n    )\n    echo \"$mean_absolute_deviation\"", " \
    \   local -a x\n    local -i n\n    local -i i\n    local -i sum\n    local -i\
    \ mean\n    local -i abs_deviation\n    local -i abs_deviation_sum\n    local\
    \ -i abs_deviation_mean\n    x=($@)\n    n=${#x[@]}\n    sum=0\n    for ((i=0;\
    \ i<n; i++)); do\n        sum=$((sum + x[i]))\n    done\n    mean=$((sum / n))\n\
    \    abs_deviation_sum=0\n    for ((i=0; i<n; i++)); do\n        abs_deviation=$((x[i]\
    \ - mean))\n        abs_deviation_sum=$((abs_deviation_sum + abs_deviation))\n\
    \    done\n    abs_deviation_mean=$((abs_deviation_sum / n))\n    echo $abs_deviation_mean",
  "    local mean=$(mean \"$@\")\n    local abs_diff_sum=0\n    for x in \"$@\"; do\n\
    \        local abs_diff=$(echo \"$x - $mean\" | bc -l)\n        abs_diff_sum=$(echo\
    \ \"$abs_diff_sum + $abs_diff\" | bc -l)\n    done\n    echo \"$abs_diff_sum /\
    \ $#\" | bc -l", "    local mean=$(mean \"$@\")\n    local abs_deviations=$(echo\
    \ \"$@\" | awk -v mean=\"$mean\" '{print $1-mean}' | awk '{print $1<0?-$1:$1}')\n\
    \    echo \"$abs_deviations\" | mean", "    local -a numbers\n    local -i i\n\
    \    local -r mean=$(mean \"$@\")\n    local -r n=$#\n    local -r n_minus_1=$((n\
    \ - 1))\n    local -r n_minus_2=$((n - 2))\n    local -r n_minus_3=$((n - 3))\n\
    \    local -r n_minus_4=$((n - 4))\n    local -r n_minus_5=$((n - 5))\n    local\
    \ -r n_minus_6=$((n - 6))\n    local -r n_minus_7=$((n - 7))\n    local -r n_minus_8=$((n\
    \ - 8))\n    local -r n_minus_9=$((n - 9))\n    local -r n_minus_10=$((n - 10))\n\
    \    local -r n_minus_11=$((n - 11))\n    local -r n_minus_12=$((n - 12))\n  \
    \  local -r n_minus_13=$((n - 13))\n    local -r n_minus_14=$((n - 14))\n    local\
    \ -r n_minus_15=$((n - 15))\n    local -r n_minus_16=$((n - 16))\n    local -r\
    \ n_minus_17=$((n - 17))\n    local -r n_minus_18=$((n - 18))\n    local -r n_minus_19=$((n\
    \ - 19))\n    local -r n_minus_20=$((n - 20))\n    local -r n_minus_21=$((n -\
    \ 21))\n    local -r n_minus_22=$((n - 22))\n    local -r n_minus_23=$((n - 23))\n\
    \    local -r n_minus_24=$((n - 24))\n    local -r n_minus_25=$((n - 25))\n  \
    \  local -r n_minus_26=$((n - 26))\n    local -r n_minus_27=$((n - 27))\n    local\
    \ -r n_minus_28=$((n - 28))\n    local -r n_minus_29=$((n - 29))\n    local -r\
    \ n_minus_30=$((n - 30))", "    local -a data=($@)\n    local mean=$(mean \"${data[@]}\"\
    )\n    local sum=0\n    for i in \"${data[@]}\"; do\n        sum=$(echo \"$sum\
    \ + abs($i - $mean)\" | bc -l)\n    done\n    echo \"$sum / ${#data[@]}\" | bc\
    \ -l", "    local numbers=\"$1\"\n    local mean=$(mean \"$numbers\")\n    local\
    \ abs_deviations=$(echo \"$numbers\" | awk -v mean=\"$mean\" '{print $1-mean}'\
    \ | awk '{print $1<0?-$1:$1}')\n    echo \"$abs_deviations\" | mean", "    local\
    \ -a numbers=(\"$@\")\n    local mean=$(mean \"${numbers[@]}\")\n    local -a\
    \ abs_deviations=()\n    for number in \"${numbers[@]}\"; do\n        abs_deviations+=($(echo\
    \ \"scale=2; ${number} - ${mean}\" | bc))\n    done\n    echo $(mean \"${abs_deviations[@]}\"\
    )", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local -a deviations\n    local i\n    for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n        deviations[$i]=$(echo \"${numbers[$i]} - $mean\" | bc -l)\n\
    \    done\n    local -a abs_deviations\n    for ((i=0; i<${#deviations[@]}; i++));\
    \ do\n        abs_deviations[$i]=$(echo \"if (${deviations[$i]} < 0) ${deviations[$i]}\
    \ * -1 else ${deviations[$i]}\" | bc -l)\n    done\n    echo $(mean \"${abs_deviations[@]}\"\
    )", "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n\
    \    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a input_numbers\n  \
    \  input_numbers=($@)\n    local mean\n    mean=$(mean \"${input_numbers[@]}\"\
    )\n    local -a absolute_deviations\n    absolute_deviations=()\n    for number\
    \ in \"${input_numbers[@]}\"; do\n        absolute_deviations+=($(absolute_difference\
    \ \"$number\" \"$mean\"))\n    done\n    mean \"${absolute_deviations[@]}\"",
  "    local -a numbers\n    numbers=($(echo \"$@\"))\n    local mean\n    mean=$(mean\
    \ \"${numbers[@]}\")\n    local sum\n    sum=0\n    for number in \"${numbers[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($number - $mean)\" | bc -l)\n    done\n\
    \    echo \"$sum / ${#numbers[@]}\" | bc -l", "    local -a arr=(\"$@\")\n   \
    \ local mean=$(mean \"${arr[@]}\")\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        sum=$(echo \"$sum + abs($i - $mean)\" | bc -l)\n    done\n    echo\
    \ \"$sum / ${#arr[@]}\" | bc -l", "    local -a numbers\n    numbers=($1)\n  \
    \  local mean=$(mean \"${numbers[@]}\")\n    local -a deviations\n    for number\
    \ in \"${numbers[@]}\"; do\n        deviations+=($(echo \"$number - $mean\" |\
    \ bc -l))\n    done\n    local -a absolute_deviations\n    for deviation in \"\
    ${deviations[@]}\"; do\n        absolute_deviations+=($(echo \"if ($deviation\
    \ < 0) $deviation * -1 else $deviation\" | bc -l))\n    done\n    echo $(mean\
    \ \"${absolute_deviations[@]}\")"]
stop_tokens:
- "\n}"

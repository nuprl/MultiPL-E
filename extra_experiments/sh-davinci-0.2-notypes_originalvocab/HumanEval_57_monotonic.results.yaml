language: sh
name: HumanEval_57_monotonic
results:
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local len=${#list[@]}\n    local i=0\n\
    \    local direction=0\n    local prev=${list[0]}\n    while [ $i -lt $len ];\
    \ do\n        local curr=${list[$i]}\n        if [ $i -gt 0 ]; then\n        \
    \    if [ $direction -eq 0 ]; then\n                if [ $curr -gt $prev ]; then\n\
    \                    direction=1\n                elif [ $curr -lt $prev ]; then\n\
    \                    direction=-1\n                fi\n            elif [ $direction\
    \ -eq 1 ]; then\n                if [ $curr -lt $prev ]; then\n              \
    \      echo \"false\"\n                    return\n                fi\n      \
    \      elif [ $direction -eq -1 ]; then\n                if [ $curr -gt $prev\
    \ ]; then\n                    echo \"false\"\n                    return\n  \
    \              fi\n            fi\n        fi\n        prev=$curr\n        i=$((i+1))\n\
    \    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i=0\n   \
    \ local n=${#list[@]}\n    local prev=${list[0]}\n    local diff\n    local increasing=true\n\
    \    local decreasing=true\n    for ((i=1; i<n; i++)); do\n        diff=$((${list[$i]}\
    \ - $prev))\n        diffs[$i]=$diff\n        if [ $diff -lt 0 ]; then\n     \
    \       increasing=false\n        elif [ $diff -gt 0 ]; then\n            decreasing=false\n\
    \        fi\n        prev=${list[$i]}\n    done\n    if $increasing || $decreasing;\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -i i\n  \
    \  local -i len=${#list[@]}\n    local -i diff\n    local -i prev_diff\n    local\
    \ -i is_monotonic=1\n    for ((i=1; i<len; i++)); do\n        diff=${list[i]}-${list[i-1]}\n\
    \        diffs+=($diff)\n    done\n    prev_diff=${diffs[0]}\n    for ((i=1; i<len-1;\
    \ i++)); do\n        diff=${diffs[i]}\n        if ((prev_diff*diff < 0)); then\n\
    \            is_monotonic=0\n            break\n        fi\n        prev_diff=$diff\n\
    \    done\n    echo $is_monotonic\n}\n\ncandidate() {\n    monotonic \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i len=${#list[@]}\n    local\
    \ -i i\n    local -i incr=0\n    local -i decr=0\n    local -i retval=1\n    if\
    \ (( len < 2 )); then\n        echo \"true\"\n        return 0\n    fi\n    for\
    \ (( i=1; i<len; i++ )); do\n        if (( list[i] > list[i-1] )); then\n    \
    \        (( incr++ ))\n        elif (( list[i] < list[i-1] )); then\n        \
    \    (( decr++ ))\n        fi\n    done\n    if (( incr == len-1 || decr == len-1\
    \ )); then\n        retval=0\n    fi\n    echo \"$retval\"\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -i i\n  \
    \  local -i len=${#list[@]}\n    local -i diff\n    local -i prev_diff\n    local\
    \ -i is_monotonic=1\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\
    \    local -i is_constant=1\n    for ((i=1; i<len; i++)); do\n        diffs[i-1]=$((list[i]-list[i-1]))\n\
    \    done\n    for ((i=1; i<len-1; i++)); do\n        diff=${diffs[i]}\n     \
    \   prev_diff=${diffs[i-1]}\n        if [[ $diff -gt 0 ]]; then\n            is_decreasing=0\n\
    \        elif [[ $diff -lt 0 ]]; then\n            is_increasing=0\n        else\n\
    \            is_constant=1\n        fi\n        if [[ $diff -ne $prev_diff ]];\
    \ then\n            is_monotonic=0\n        fi\n    done\n    if [[ $is_monotonic\
    \ -eq 1 ]]; then\n        if [[ $is_increasing -eq 1 ]]; then\n            echo\
    \ \"true\"\n        elif [[ $is_decreasing -eq 1 ]]; then\n            echo \"\
    true\"\n        elif [[ $is_constant -eq 1 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local increasing=true\n    local decreasing=true\n\
    \    local prev=0\n    for i in $list; do\n        if (( $i > $prev )); then\n\
    \            decreasing=false\n        elif (( $i < $prev )); then\n         \
    \   increasing=false\n        fi\n        prev=$i\n    done\n    if $increasing\
    \ || $decreasing; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local -a array=($list)\n    local -i\
    \ n=${#array[@]}\n    local -i i=0\n    local -i increasing=0\n    local -i decreasing=0\n\
    \    local -i prev=${array[0]}\n    local -i curr=0\n    local -i delta=0\n  \
    \  for ((i=1; i<n; i++)); do\n        curr=${array[i]}\n        delta=$((curr\
    \ - prev))\n        if ((delta > 0)); then\n            ((increasing++))\n   \
    \     elif ((delta < 0)); then\n            ((decreasing++))\n        fi\n   \
    \     prev=$curr\n    done\n    if ((increasing > 0 && decreasing > 0)); then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[$i]=$((list[$i+1]-list[$i]))\n\
    \    done\n    local -a uniq_diffs=($(printf \"%s\\n\" \"${diffs[@]}\" | sort\
    \ -u))\n    if (( ${#uniq_diffs[@]} == 1 )); then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i ret=0\n    local -i cmp=0\n\
    \    local -i cmp_prev=0\n    local -i cmp_next=0\n    local -i cmp_prev_next=0\n\
    \    local -i cmp_curr_next=0\n    local -i cmp_prev_curr=0\n    local -i cmp_prev_curr_next=0\n\
    \    local -i cmp_prev_curr_next_prev=0\n    local -i cmp_prev_curr_next_prev_curr=0\n\
    \    local -i cmp_prev_curr_next_prev_curr_next=0\n    local -i cmp_prev_curr_next_prev_curr_next_prev=0\n\
    \    local -i cmp_prev_curr_next_prev_curr_next_prev_curr=0\n    local -i cmp_prev_curr_next_prev_curr_next_prev_curr_next=0\n\
    \    local -i cmp_prev_curr_next_prev_curr_next_prev_curr_next_prev=0\n    local\
    \ -i cmp_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr=0\n    local -i\
    \ cmp_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr_next=0\n    local\
    \ -i cmp_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr_next_prev=0\n\
    \    local -i cmp_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr=0\n\
    \    local -i\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i increasing=1\n    local -i decreasing=1\n    for ((i=1; i<len; i++));\
    \ do\n        if [[ ${list[i]} -lt ${list[i-1]} ]]; then\n            increasing=0\n\
    \        elif [[ ${list[i]} -gt ${list[i-1]} ]]; then\n            decreasing=0\n\
    \        fi\n    done\n    if [[ $increasing -eq 1 || $decreasing -eq 1 ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i result=0\n\
    \    local -i prev=0\n    local -i curr=0\n    local -i next=0\n    local -i prev_sign=0\n\
    \    local -i curr_sign=0\n    local -i next_sign=0\n    local -i sign=0\n   \
    \ local -i prev_sign_diff=0\n    local -i curr_sign_diff=0\n    local -i next_sign_diff=0\n\
    \    local -i sign_diff=0\n    local -i prev_sign_diff_sign=0\n    local -i curr_sign_diff_sign=0\n\
    \    local -i next_sign_diff_sign=0\n    local -i sign_diff_sign=0\n    local\
    \ -i prev_sign_diff_sign_diff=0\n    local -i curr_sign_diff_sign_diff=0\n   \
    \ local -i next_sign_diff_sign_diff=0\n    local -i sign_diff_sign_diff=0\n  \
    \  local -i prev_sign_diff_sign_diff_sign=0\n    local -i curr_sign_diff_sign_diff_sign=0\n\
    \    local -i next_sign_diff_sign_diff_sign=0\n    local -i sign_diff_sign_diff_sign=0\n\
    \    local -i prev_sign_diff_sign_diff_sign_diff=0\n    local -i curr_sign_diff_sign_diff_sign_diff=0\n\
    \    local -i next_sign_diff_sign_diff_sign_diff=0\n    local -i sign_diff_sign_diff_sign_diff=0\n\
    \    local -i prev_sign_diff_sign_diff_sign_diff_sign=0\n    local -i curr_sign_diff_sign_diff_sign_diff_sign=0\n\
    \    local -i next_sign_diff_sign_diff_sign_diff_sign=0\n    local -i sign_diff_sign_\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local -a arr=($list)\n    local -i len=${#arr[@]}\n\
    \    local -i i\n    local -i prev=${arr[0]}\n    local -i curr\n    local -i\
    \ diff\n    local -i incr=0\n    local -i decr=0\n    for ((i=1; i<len; i++));\
    \ do\n        curr=${arr[i]}\n        diff=$((curr-prev))\n        if ((diff >\
    \ 0)); then\n            incr=1\n        elif ((diff < 0)); then\n           \
    \ decr=1\n        fi\n        if ((incr && decr)); then\n            echo \"false\"\
    \n            return\n        fi\n        prev=$curr\n    done\n    echo \"true\"\
    \n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i sign=0\n    local -i prev_sign=0\n\
    \    local -i curr_sign=0\n    local -i next_sign=0\n    local -i prev_diff=0\n\
    \    local -i curr_diff=0\n    local -i next_diff=0\n    local -i prev_incr=0\n\
    \    local -i curr_incr=0\n    local -i next_incr=0\n    local -i prev_decr=0\n\
    \    local -i curr_decr=0\n    local -i next_decr=0\n    local -i prev_sign_diff=0\n\
    \    local -i curr_sign_diff=0\n    local -i next_sign_diff=0\n    local -i prev_sign_incr=0\n\
    \    local -i curr_sign_incr=0\n    local -i next_sign_incr=0\n    local -i prev_sign_decr=0\n\
    \    local -i curr_sign_decr=0\n    local -i next_sign_decr=0\n    local -i prev_sign_diff_incr=0\n\
    \    local -i curr_sign_diff_incr=0\n    local -i next_sign_diff_incr=0\n    local\
    \ -i prev_sign_diff_decr=0\n    local -i curr_sign_diff_decr=0\n    local -i next_sign_diff_decr=0\n\
    \    local -i prev_sign_incr_decr=0\n    local -i curr_sign_incr_decr=0\n    local\
    \ -i next_sign_incr_decr=0\n    local -i prev_sign_diff_incr_decr=0\n    local\
    \ -i curr_sign_diff_incr_dec\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if (( ${#uniq_diffs[@]} == 1 )); then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=(\"$@\")\n    local -i i=0\n    local -i n=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=0\n    local -i curr=0\n\
    \    local -i next=0\n    local -i sign=0\n    local -i prev_sign=0\n    local\
    \ -i curr_sign=0\n    local -i next_sign=0\n    local -i prev_sign_eq=0\n    local\
    \ -i curr_sign_eq=0\n    local -i next_sign_eq=0\n    local -i prev_sign_ne=0\n\
    \    local -i curr_sign_ne=0\n    local -i next_sign_ne=0\n    local -i prev_sign_gt=0\n\
    \    local -i curr_sign_gt=0\n    local -i next_sign_gt=0\n    local -i prev_sign_lt=0\n\
    \    local -i curr_sign_lt=0\n    local -i next_sign_lt=0\n    local -i prev_sign_ge=0\n\
    \    local -i curr_sign_ge=0\n    local -i next_sign_ge=0\n    local -i prev_sign_le=0\n\
    \    local -i curr_sign_le=0\n    local -i next_sign_le=0\n    local -i prev_sign_eq_gt=0\n\
    \    local -i curr_sign_eq_gt=0\n    local -i next_sign_eq_gt=0\n    local -i\
    \ prev_sign_eq_lt=0\n    local -i curr_sign_eq_lt=0\n    local -i next_sign_eq_lt=0\n\
    \    local -i prev_sign_eq_ge=0\n    local -i curr_sign_eq_ge=0\n    local -i\
    \ next_sign_eq_ge=0\n    local -i prev_sign_eq_le=0\n    local -i curr_sign_eq_le=0\n\
    \    local -i next_sign_eq_le=0\n    local -\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i n=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=0\n    local -i curr=0\n\
    \    local -i next=0\n    local -i is_monotonic=0\n    local -i is_increasing=0\n\
    \    local -i is_decreasing=0\n    local -i is_equal=0\n    local -i is_equal_prev=0\n\
    \    local -i is_equal_next=0\n    local -i is_equal_prev_next=0\n    local -i\
    \ is_equal_curr_next=0\n    local -i is_equal_prev_curr=0\n    local -i is_equal_prev_curr_next=0\n\
    \    local -i is_equal_prev_curr_next_prev=0\n    local -i is_equal_prev_curr_next_prev_curr=0\n\
    \    local -i is_equal_prev_curr_next_prev_curr_next=0\n    local -i is_equal_prev_curr_next_prev_curr_next_prev=0\n\
    \    local -i is_equal_prev_curr_next_prev_curr_next_prev_curr=0\n    local -i\
    \ is_equal_prev_curr_next_prev_curr_next_prev_curr_next=0\n    local -i is_equal_prev_curr_next_prev_curr_next_prev_curr_next_prev=0\n\
    \    local -i is_equal_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr=0\n\
    \    local -i is_equal_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr_next=0\n\
    \    local -i is_equal_prev_curr_next_prev_curr_next_prev_curr_next_prev_curr_next_prev=0\n\
    \    local -i is_equal_prev\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list\n    local -i i\n    local -i len\n    local\
    \ -i inc\n    local -i dec\n    list=($@)\n    len=${#list[@]}\n    if [ $len\
    \ -lt 2 ]; then\n        echo \"true\"\n        return 0\n    fi\n    inc=1\n\
    \    dec=1\n    for ((i=1; i<len; i++)); do\n        if [ ${list[$i]} -lt ${list[$i-1]}\
    \ ]; then\n            inc=0\n        fi\n        if [ ${list[$i]} -gt ${list[$i-1]}\
    \ ]; then\n            dec=0\n        fi\n    done\n    if [ $inc -eq 1 ] || [\
    \ $dec -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i n=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    for ((i=0; i<n-1; i++)); do\n \
    \       if ((list[i] < list[i+1])); then\n            ((incr++))\n        elif\
    \ ((list[i] > list[i+1])); then\n            ((decr++))\n        fi\n    done\n\
    \    if ((incr == n-1 || decr == n-1)); then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") =\
    \ \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$@\"\n    local -a arr=($list)\n    local -a diffs\n\
    \    local -i i\n    local -i len=${#arr[@]}\n    local -i diff\n    local -i\
    \ prev_diff\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    for\
    \ ((i=1; i<len; i++)); do\n        diff=$((${arr[$i]} - ${arr[$((i-1))]}))\n \
    \       diffs+=(\"$diff\")\n        if ((i > 1)); then\n            if ((prev_diff\
    \ > 0 && diff < 0)); then\n                is_increasing=0\n            elif ((prev_diff\
    \ < 0 && diff > 0)); then\n                is_decreasing=0\n            fi\n \
    \       fi\n        prev_diff=$diff\n    done\n    if ((is_increasing || is_decreasing));\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${arr[0]}\n    for\
    \ ((i=1; i<len; i++)); do\n        if ((prev < ${arr[i]})); then\n           \
    \ incr=1\n        elif ((prev > ${arr[i]})); then\n            decr=1\n      \
    \  fi\n        prev=${arr[i]}\n    done\n    if ((incr && decr)); then\n     \
    \   echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4mou72tn.sh: line 15: local: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[$i]=$((list[$i+1]-list[$i]))\n\
    \    done\n    local first_diff=${diffs[0]}\n    for ((i=1; i<${#diffs[@]}; i++));\
    \ do\n        if [[ ${diffs[$i]} -ne $first_diff ]]; then\n            echo \"\
    false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local prev=\n    local curr=\n    local\
    \ -i is_increasing=1\n    for curr in $list; do\n        if [[ -n $prev ]]; then\n\
    \            if (( curr < prev )); then\n                is_increasing=0\n   \
    \         fi\n            if (( curr == prev )); then\n                return\
    \ 1\n            fi\n        fi\n        prev=$curr\n    done\n    if (( is_increasing\
    \ )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#arr[@]}-1; i++)); do\n        diffs[i]=$((${arr[i+1]}-${arr[i]}))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' '))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    for ((i=0; i<len-1; i++)); do\n\
    \        if (( list[i] < list[i+1] )); then\n            (( incr++ ))\n      \
    \  elif (( list[i] > list[i+1] )); then\n            (( decr++ ))\n        fi\n\
    \    done\n    if (( incr == len-1 || decr == len-1 )); then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$@\"\n    local inc=0\n    local dec=0\n    local\
    \ prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [ $curr -gt $prev ]; then\n            inc=1\n        elif [ $curr -lt $prev\
    \ ]; then\n            dec=1\n        fi\n        if [ $inc -eq 1 ] && [ $dec\
    \ -eq 1 ]; then\n            echo \"false\"\n            return\n        fi\n\
    \        prev=$curr\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i prev=${arr[0]}\n    for\
    \ ((i=1; i<len; i++)); do\n        if [[ ${arr[i]} -gt $prev ]]; then\n      \
    \      inc=1\n        elif [[ ${arr[i]} -lt $prev ]]; then\n            dec=1\n\
    \        fi\n        prev=${arr[i]}\n    done\n    if [[ $inc -eq 1 && $dec -eq\
    \ 0 ]]; then\n        echo \"true\"\n    elif [[ $inc -eq 0 && $dec -eq 1 ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqj55eof8.sh: line 15: local: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local i=0\n    local j=1\n    local inc=0\n\
    \    local dec=0\n    local len=${#list[@]}\n    while [ $j -lt $len ]; do\n \
    \       if [ ${list[$i]} -lt ${list[$j]} ]; then\n            inc=1\n        elif\
    \ [ ${list[$i]} -gt ${list[$j]} ]; then\n            dec=1\n        fi\n     \
    \   if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n            echo \"false\"\n  \
    \          return\n        fi\n        i=$((i+1))\n        j=$((j+1))\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -a abs_diffs\n\
    \    local -a abs_diffs_sorted\n    local -a abs_diffs_sorted_uniq\n    local\
    \ -a abs_diffs_sorted_uniq_counts\n    local -a abs_diffs_sorted_uniq_counts_sorted\n\
    \    local -a abs_diffs_sorted_uniq_counts_sorted_uniq\n    local -a abs_diffs_sorted_uniq_counts_sorted_uniq_counts\n\
    \    local -a abs_diffs_sorted_uniq_counts_sorted_uniq_counts_sorted\n    local\
    \ -a abs_diffs_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq\n    local -a\
    \ abs_diffs_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts\n    local\
    \ -a abs_diffs_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted\n\
    \    local -a abs_diffs_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq\n\
    \    local -a abs_diffs_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts\n\
    \    local -a abs_diffs_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted\n\
    \    local -a abs_diffs_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq\n\
    \    local -a abs_diffs_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts_sorted_uniq_counts\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i prev=${list[0]}\n\
    \    local -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n\
    \        if ((prev < curr)); then\n            increasing=1\n        elif ((prev\
    \ > curr)); then\n            decreasing=1\n        fi\n        if ((increasing\
    \ && decreasing)); then\n            echo \"false\"\n            return\n    \
    \    fi\n        prev=$curr\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -a abs_diffs\n\
    \    local -a sign_diffs\n    local -a abs_sign_diffs\n    local -a abs_sign_diffs_unique\n\
    \    local -a abs_sign_diffs_unique_counts\n    local -a abs_sign_diffs_unique_counts_sorted\n\
    \    local -a abs_sign_diffs_unique_counts_sorted_first\n    local -a abs_sign_diffs_unique_counts_sorted_first_count\n\
    \    local -a abs_sign_diffs_unique_counts_sorted_first_count_first\n    local\
    \ -a abs_sign_diffs_unique_counts_sorted_first_count_first_sign\n    local -a\
    \ abs_sign_diffs_unique_counts_sorted_first_count_first_sign_abs\n    local -a\
    \ abs_sign_diffs_unique_counts_sorted_first_count_first_sign_abs_count\n    local\
    \ -a abs_sign_diffs_unique_counts_sorted_first_count_first_sign_abs_count_first\n\
    \    local -a abs_sign_diffs_unique_counts_sorted_first_count_first_sign_abs_count_first_sign\n\
    \    local -a abs_sign_diffs_unique_counts_sorted_first_count_first_sign_abs_count_first_sign_abs\n\
    \    local -a abs_sign_diffs_unique_counts_sorted_first_count_first_sign_abs_count_first_sign_abs_count\n\
    \    local -a abs_sign_diffs_unique_counts_sorted_first_count_first_sign_abs_count_first_sign_abs_count_first\n\
    \    local -a abs_sign_diffs_unique_counts_sorted_first_count_first_sign_abs_count_first_sign_abs_count_first_sign\n\
    \    local -a abs_sign_diffs_unique_counts_sorted_first_count_first_sign_abs_count_first_\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n  local list=\"$@\"\n  local n=0\n  local prev=0\n  local increasing=false\n\
    \  local decreasing=false\n  for i in $list; do\n    if [[ $n -eq 0 ]]; then\n\
    \      prev=$i\n    else\n      if [[ $i -gt $prev ]]; then\n        increasing=true\n\
    \      elif [[ $i -lt $prev ]]; then\n        decreasing=true\n      fi\n    \
    \  if [[ $increasing == true && $decreasing == true ]]; then\n        echo \"\
    false\"\n        return\n      fi\n      prev=$i\n    fi\n    n=$((n+1))\n  done\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local i=0\n    local n=${#list[@]}\n \
    \   local direction=0\n    local prev=${list[0]}\n    while [ $i -lt $n ]; do\n\
    \        local curr=${list[$i]}\n        if [ $i -gt 0 ]; then\n            if\
    \ [ $direction -eq 0 ]; then\n                if [ $curr -gt $prev ]; then\n \
    \                   direction=1\n                elif [ $curr -lt $prev ]; then\n\
    \                    direction=-1\n                fi\n            elif [ $direction\
    \ -eq 1 ]; then\n                if [ $curr -lt $prev ]; then\n              \
    \      echo \"false\"\n                    return\n                fi\n      \
    \      elif [ $direction -eq -1 ]; then\n                if [ $curr -gt $prev\
    \ ]; then\n                    echo \"false\"\n                    return\n  \
    \              fi\n            fi\n        fi\n        prev=$curr\n        i=$((i+1))\n\
    \    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    for\
    \ ((i=1; i<len; i++)); do\n        local -i curr=${list[i]}\n        if ((curr\
    \ > prev)); then\n            ((incr++))\n        elif ((curr < prev)); then\n\
    \            ((decr++))\n        fi\n        prev=$curr\n    done\n    if ((incr\
    \ > 0 && decr > 0)); then\n        echo \"false\"\n    else\n        echo \"true\"\
    \n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i prev=0\n    local -i first=0\n    local -i last=0\n    local -i\
    \ ret=0\n    local -i is_monotonic=0\n    local -i is_decreasing=0\n    local\
    \ -i is_increasing=0\n\n    if [ $len -eq 0 ]; then\n        echo \"false\"\n\
    \        return\n    fi\n\n    first=${arr[0]}\n    last=${arr[$((len-1))]}\n\n\
    \    if [ $len -eq 1 ]; then\n        echo \"true\"\n        return\n    fi\n\n\
    \    if [ $first -lt $last ]; then\n        is_increasing=1\n    elif [ $first\
    \ -gt $last ]; then\n        is_decreasing=1\n    else\n        echo \"true\"\n\
    \        return\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        curr=${arr[$i]}\n\
    \        next=${arr[$((i+1))]}\n        if [ $is_increasing -eq 1 ]; then\n  \
    \          if [ $curr -gt $next ]; then\n                ret=1\n             \
    \   break\n            fi\n        elif [ $is_decreasing -eq 1 ]; then\n     \
    \       if [ $curr -lt $next ]; then\n                ret=1\n                break\n\
    \            fi\n        fi\n    done\n\n    if [ $ret -eq 0 ]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpff9sju7c.sh: line 30: 1 2 4 10: syntax error in expression (error
    token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i n=${#list[@]}\n    local -i\
    \ i=0\n    local -i increasing=0\n    local -i decreasing=0\n    local -i diff=0\n\
    \    local -i prev=0\n    local -i curr=0\n    local -i next=0\n    if (( n <\
    \ 3 )); then\n        echo \"true\"\n        return\n    fi\n    prev=${list[i]}\n\
    \    (( i++ ))\n    curr=${list[i]}\n    (( i++ ))\n    next=${list[i]}\n    ((\
    \ i++ ))\n    diff=$(( curr - prev ))\n    if (( diff > 0 )); then\n        increasing=1\n\
    \    elif (( diff < 0 )); then\n        decreasing=1\n    fi\n    while (( i <\
    \ n )); do\n        prev=$curr\n        curr=$next\n        next=${list[i]}\n\
    \        (( i++ ))\n        diff=$(( curr - prev ))\n        if (( diff > 0 ));\
    \ then\n            if (( decreasing )); then\n                echo \"false\"\n\
    \                return\n            fi\n            increasing=1\n        elif\
    \ (( diff < 0 )); then\n            if (( increasing )); then\n              \
    \  echo \"false\"\n                return\n            fi\n            decreasing=1\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i increasing=1\n    local -i decreasing=1\n    for ((i=1; i<len; i++));\
    \ do\n        if ((list[i] > list[i-1])); then\n            decreasing=0\n   \
    \     elif ((list[i] < list[i-1])); then\n            increasing=0\n        fi\n\
    \    done\n    if ((increasing || decreasing)); then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local i=0\n    local n=${#list[@]}\n \
    \   local incr=0\n    local decr=0\n    while [ $i -lt $n ]; do\n        if [\
    \ $i -eq 0 ]; then\n            incr=1\n            decr=1\n        else\n   \
    \         if [ ${list[$i]} -gt ${list[$i-1]} ]; then\n                incr=1\n\
    \            fi\n            if [ ${list[$i]} -lt ${list[$i-1]} ]; then\n    \
    \            decr=1\n            fi\n        fi\n        i=$((i+1))\n    done\n\
    \    if [ $incr -eq 1 ] && [ $decr -eq 1 ]; then\n        echo \"false\"\n   \
    \ else\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n\
    \  local -i incr=0\n  local -i decr=0\n  local -i diff=0\n  local -i prev=0\n\
    \  local -i curr=0\n  local -i next=0\n  local -i is_monotonic=0\n  local -i is_increasing=0\n\
    \  local -i is_decreasing=0\n  local -i is_constant=0\n  local -i is_not_monotonic=0\n\
    \  local -i is_not_increasing=0\n  local -i is_not_decreasing=0\n  local -i is_not_constant=0\n\
    \  local -i is_increasing_or_constant=0\n  local -i is_decreasing_or_constant=0\n\
    \  local -i is_increasing_or_decreasing=0\n  local -i is_increasing_or_decreasing_or_constant=0\n\
    \  local -i is_not_increasing_or_decreasing_or_constant=0\n  local -i is_not_increasing_or_decreasing=0\n\
    \  local -i is_not_increasing_or_constant=0\n  local -i is_not_decreasing_or_constant=0\n\
    \  local -i is_not_increasing_and_not_decreasing=0\n  local -i is_not_increasing_and_not_constant=0\n\
    \  local -i is_not_decreasing_and_not_constant=0\n  local -i is_not_increasing_and_not_decreasing_and_not_constant=0\n\
    \  local -i is_increasing_and_not_decreasing=0\n  local -i is_increasing_and_not_constant=0\n\
    \  local -i is_decreasing_and_not_constant=0\n  local -i is_increasing_and_not_decreasing_and_not_constant=0\n\
    \  local -i is_decreasing_and_not_increasing=0\n\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=$1\n    local -a arr=($list)\n    local -a diffs\n\
    \    local i\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        diffs[i]=$((arr[i+1]-arr[i]))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' '))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    while [ $i -lt $len ]; do\n     \
    \   if [ $i -gt 0 ]; then\n            if [ ${list[$i]} -gt ${list[$i-1]} ]; then\n\
    \                inc=1\n            elif [ ${list[$i]} -lt ${list[$i-1]} ]; then\n\
    \                dec=1\n            fi\n        fi\n        i=$i+1\n    done\n\
    \    if [ $inc -eq 1 ] && [ $dec -eq 0 ]; then\n        echo \"true\"\n    elif\
    \ [ $inc -eq 0 ] && [ $dec -eq 1 ]; then\n        echo \"true\"\n    else\n  \
    \      echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local inc=0\n    local dec=0\n    local\
    \ i=0\n    local j=1\n    local len=${#list[@]}\n    while [ $j -lt $len ]; do\n\
    \        if [ ${list[$i]} -gt ${list[$j]} ]; then\n            inc=1\n       \
    \ elif [ ${list[$i]} -lt ${list[$j]} ]; then\n            dec=1\n        fi\n\
    \        if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n            echo \"false\"\
    \n            return\n        fi\n        i=$j\n        j=$((j+1))\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i n=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i curr=0\n    local -i prev=0\n\
    \    local -i next=0\n    local -i diff=0\n    local -i sign=0\n    local -i prev_sign=0\n\
    \    local -i next_sign=0\n    local -i prev_diff=0\n    local -i next_diff=0\n\
    \    local -i prev_incr=0\n    local -i next_incr=0\n    local -i prev_decr=0\n\
    \    local -i next_decr=0\n    local -i prev_curr=0\n    local -i next_curr=0\n\
    \    local -i prev_prev=0\n    local -i next_next=0\n    local -i prev_next=0\n\
    \    local -i next_prev=0\n    local -i prev_prev_sign=0\n    local -i next_next_sign=0\n\
    \    local -i prev_prev_diff=0\n    local -i next_next_diff=0\n    local -i prev_prev_incr=0\n\
    \    local -i next_next_incr=0\n    local -i prev_prev_decr=0\n    local -i next_next_decr=0\n\
    \    local -i prev_prev_curr=0\n    local -i next_next_curr=0\n    local -i prev_prev_prev=0\n\
    \    local -i next_next_next=0\n    local -i prev_prev_next=0\n    local -i next_next_prev=0\n\
    \    local -i prev_next_prev=0\n    local -i next_prev_next=0\n    local -i prev_next_next=0\n\
    \    local -i next_prev_prev=0\n    local -i prev_prev_prev_sign=0\n    local\
    \ -i next_next_next_sign=0\n    local -i prev_prev_prev_diff=0\n    local -i next_next_next_diff\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if (( ${#uniq_diffs[@]} == 1 )); then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local -a arr=()\n    local -i i=0\n\
    \    local -i len=0\n    local -i inc=0\n    local -i dec=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i ret=0\n    arr=( $list\
    \ )\n    len=${#arr[@]}\n    if [ $len -lt 3 ]; then\n        echo \"true\"\n\
    \        return 0\n    fi\n    prev=${arr[0]}\n    curr=${arr[1]}\n    next=${arr[2]}\n\
    \    if [ $prev -lt $curr ]; then\n        inc=1\n    elif [ $prev -gt $curr ];\
    \ then\n        dec=1\n    fi\n    for (( i=1; i<$len-1; i++ )); do\n        prev=$curr\n\
    \        curr=$next\n        next=${arr[$i+1]}\n        if [ $inc -eq 1 ]; then\n\
    \            if [ $curr -gt $next ]; then\n                ret=1\n           \
    \     break\n            fi\n        elif [ $dec -eq 1 ]; then\n            if\
    \ [ $curr -lt $next ]; then\n                ret=1\n                break\n  \
    \          fi\n        else\n            if [ $curr -lt $next ]; then\n      \
    \          inc=1\n            elif [ $curr -gt $next ]; then\n               \
    \ dec=1\n            fi\n        fi\n    done\n    if [ $ret -eq 0 ]; then\n \
    \       echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local -a arr\n    local -i i\n    local\
    \ -i len\n    local -i increasing\n    local -i decreasing\n    local -i result\n\
    \n    IFS=\" \" read -a arr <<< \"$list\"\n    len=${#arr[@]}\n    increasing=1\n\
    \    decreasing=1\n    for ((i=1; i<len; i++)); do\n        if (( arr[i] < arr[i-1]\
    \ )); then\n            increasing=0\n        fi\n        if (( arr[i] > arr[i-1]\
    \ )); then\n            decreasing=0\n        fi\n    done\n    result=$(( increasing\
    \ || decreasing ))\n    if (( result )); then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") =\
    \ \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i last=0\n    local -i curr=0\n\
    \    local -i next=0\n    local -i diff=0\n    local -i abs=0\n    local -i sign=0\n\
    \    local -i sign_last=0\n    local -i sign_curr=0\n    local -i sign_next=0\n\
    \    local -i sign_diff=0\n    local -i sign_abs=0\n    local -i sign_sign=0\n\
    \    local -i sign_sign_last=0\n    local -i sign_sign_curr=0\n    local -i sign_sign_next=0\n\
    \    local -i sign_sign_diff=0\n    local -i sign_sign_abs=0\n    local -i sign_sign_sign=0\n\
    \    local -i sign_sign_sign_last=0\n    local -i sign_sign_sign_curr=0\n    local\
    \ -i sign_sign_sign_next=0\n    local -i sign_sign_sign_diff=0\n    local -i sign_sign_sign_abs=0\n\
    \    local -i sign_sign_sign_sign=0\n    local -i sign_sign_sign_sign_last=0\n\
    \    local -i sign_sign_sign_sign_curr=0\n    local -i sign_sign_sign_sign_next=0\n\
    \    local -i sign_sign_sign_sign_diff=0\n    local -i sign_sign_sign_sign_abs=0\n\
    \    local -i sign_sign_sign_sign_sign=0\n    local -i sign_sign_sign_sign_sign_last=0\n\
    \    local -i sign_sign_sign_sign_sign_curr=0\n    local -i sign_sign_sign_sign_sign_next=0\n\
    \    local -i sign_sign_sign_sign_sign_diff=0\n    local -i sign_sign_sign_sign_sign_abs=0\n\
    \    local -i sign_\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i diff=0\n \
    \   local -i prev_diff=0\n    local -i prev_diff_sign=0\n    local -i diff_sign=0\n\
    \    local -i prev_diff_sign_changed=0\n    local -i diff_sign_changed=0\n   \
    \ local -i prev_diff_sign_changed_count=0\n    local -i diff_sign_changed_count=0\n\
    \    local -i prev_diff_sign_changed_count_max=0\n    local -i diff_sign_changed_count_max=0\n\
    \    local -i prev_diff_sign_changed_count_min=0\n    local -i diff_sign_changed_count_min=0\n\
    \    local -i prev_diff_sign_changed_count_max_changed=0\n    local -i diff_sign_changed_count_max_changed=0\n\
    \    local -i prev_diff_sign_changed_count_min_changed=0\n    local -i diff_sign_changed_count_min_changed=0\n\
    \    local -i prev_diff_sign_changed_count_max_changed_count=0\n    local -i diff_sign_changed_count_max_changed_count=0\n\
    \    local -i prev_diff_sign_changed_count_min_changed_count=0\n    local -i diff_sign_changed_count_min_changed_count=0\n\
    \    local -i prev_diff_sign_changed_count_max_changed_count_max=0\n    local\
    \ -i diff_sign_changed_count_max_changed_count_max=0\n    local -i prev_diff_sign_changed_count_min_changed_count_max=0\n\
    \    local -i diff_sign_changed_count_min_changed_count_max=0\n    local -i prev_diff_sign_changed_count_max_changed_count_min=0\n\
    \    local -i diff_sign_changed_count_max_changed_count_min=0\n    local\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=(\"$@\")\n    local -a diffs\n    local i\n \
    \   for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[$i]=$((list[$i+1]-list[$i]))\n\
    \    done\n    local first_diff=${diffs[0]}\n    for ((i=1; i<${#diffs[@]}; i++));\
    \ do\n        if [[ ${diffs[$i]} -ne $first_diff ]]; then\n            echo \"\
    false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$@\"\n    local prev=$(echo \"$list\" | head -n\
    \ 1)\n    local increasing=true\n    local decreasing=true\n    for i in $list;\
    \ do\n        if [ $i -gt $prev ]; then\n            decreasing=false\n      \
    \  elif [ $i -lt $prev ]; then\n            increasing=false\n        fi\n   \
    \     prev=$i\n    done\n    if [ $increasing = true ] || [ $decreasing = true\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: 'b''/tmp/tmpa8km6c5z.sh: line 15: [: too many arguments\n/tmp/tmpa8km6c5z.sh:
    line 17: [: too many arguments\n/tmp/tmpa8km6c5z.sh: line 15: [: too many arguments\n/tmp/tmpa8km6c5z.sh:
    line 17: [: too many arguments\n/tmp/tmpa8km6c5z.sh: line 15: [: too many arguments\n/tmp/tmpa8km6c5z.sh:
    line 17: [: too many arguments\n/tmp/tmpa8km6c5z.sh: line 15: [: too many arguments\n/tmp/tmpa8km6c5z.sh:
    line 17: [: too many arguments\n/tmp/tmpa8km6c5z.sh: line 15: [: too many arguments\n/tmp/tmpa8km6c5z.sh:
    line 17: [: too many arguments\n/tmp/tmpa8km6c5z.sh: line 15: [: too many arguments\n/tmp/tmpa8km6c5z.sh:
    line 17: [: too many arguments\n/tmp/tmpa8km6c5z.sh: line 15: [: too many arguments\n/tmp/tmpa8km6c5z.sh:
    line 17: [: too many arguments\n/tmp/tmpa8km6c5z.sh: line 15: [: too many arguments\n/tmp/tmpa8km6c5z.sh:
    line 17: [: too many arguments\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    for ((i=0; i<${#diffs[@]}-1; i++)); do\n        if [[ ${diffs[i]}\
    \ -ne ${diffs[i+1]} ]]; then\n            echo \"false\"\n            return\n\
    \        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=$1\n    local direction=\"$(echo \"$list\" | awk\
    \ '{print $1}')\"\n    local prev=\"$direction\"\n    for i in $list; do\n   \
    \     if [[ \"$i\" -gt \"$prev\" ]]; then\n            if [[ \"$direction\" -lt\
    \ \"$prev\" ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n            direction=\"$i\"\n        elif [[ \"$i\" -lt \"$prev\"\
    \ ]]; then\n            if [[ \"$direction\" -gt \"$prev\" ]]; then\n        \
    \        echo \"false\"\n                return\n            fi\n            direction=\"\
    $i\"\n        fi\n        prev=\"$i\"\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local increasing=true\n    local decreasing=true\n\
    \    local prev=$(echo \"$list\" | head -n 1)\n    for curr in $(echo \"$list\"\
    \ | tail -n +2); do\n        if (( curr < prev )); then\n            increasing=false\n\
    \        elif (( curr > prev )); then\n            decreasing=false\n        fi\n\
    \        prev=$curr\n    done\n    if $increasing || $decreasing; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a a=($@)\n    local -i i=0\n    local -i n=${#a[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i ret=0\n    if (( n < 2\
    \ )); then\n        echo \"true\"\n        return 0\n    fi\n    for (( i=1; i<n;\
    \ i++ )); do\n        if (( a[i] > a[i-1] )); then\n            incr=1\n     \
    \   elif (( a[i] < a[i-1] )); then\n            decr=1\n        fi\n        if\
    \ (( incr && decr )); then\n            ret=1\n            break\n        fi\n\
    \    done\n    if (( ret )); then\n        echo \"false\"\n    else\n        echo\
    \ \"true\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i direction=0\n    local -i curr=0\n    local -i prev=0\n    local\
    \ -i next=0\n    local -i result=0\n    local -i is_monotonic=0\n    if [[ $len\
    \ -lt 3 ]]; then\n        echo \"true\"\n        return 0\n    fi\n    for ((i=0;\
    \ i<len; i++)); do\n        curr=${arr[$i]}\n        prev=${arr[$i-1]}\n     \
    \   next=${arr[$i+1]}\n        if [[ $i -eq 0 ]]; then\n            if [[ $curr\
    \ -lt $next ]]; then\n                direction=1\n            elif [[ $curr -gt\
    \ $next ]]; then\n                direction=-1\n            else\n           \
    \     echo \"false\"\n                return 1\n            fi\n        else\n\
    \            if [[ $direction -eq 1 ]]; then\n                result=$(($curr\
    \ - $prev))\n                if [[ $result -lt 0 ]]; then\n                  \
    \  echo \"false\"\n                    return 1\n                fi\n        \
    \    elif [[ $direction -eq -1 ]]; then\n                result=$(($curr - $prev))\n\
    \                if [[ $result -gt 0 ]]; then\n                    echo \"false\"\
    \n                    return 1\n                fi\n            fi\n        fi\n\
    \    done\n    echo \"true\"\n    return 0\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a sorted=($(sort -n <<< \"${list[*]}\"\
    ))\n    local -a reverse=($(sort -nr <<< \"${list[*]}\"))\n    if [[ \"${list[*]}\"\
    \ == \"${sorted[*]}\" ]] || [[ \"${list[*]}\" == \"${reverse[*]}\" ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i n=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<n; i++)); do\n        curr=${list[i]}\n        if\
    \ ((curr > prev)); then\n            incr=1\n        elif ((curr < prev)); then\n\
    \            decr=1\n        fi\n        prev=$curr\n    done\n    if ((incr &&\
    \ decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i n=${#arr[@]}\n    local\
    \ -i i=0\n    local -i incr=0\n    local -i decr=0\n    local -i eq=0\n    local\
    \ -i ret=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n  \
    \  if [ $n -lt 2 ]; then\n        echo \"true\"\n        return 0\n    fi\n  \
    \  prev=${arr[0]}\n    curr=${arr[1]}\n    if [ $prev -lt $curr ]; then\n    \
    \    incr=1\n    elif [ $prev -gt $curr ]; then\n        decr=1\n    else\n  \
    \      eq=1\n    fi\n    for ((i=2; i<n; i++)); do\n        next=${arr[i]}\n \
    \       if [ $curr -lt $next ]; then\n            if [ $decr -eq 1 ]; then\n \
    \               ret=1\n                break\n            fi\n            incr=1\n\
    \        elif [ $curr -gt $next ]; then\n            if [ $incr -eq 1 ]; then\n\
    \                ret=1\n                break\n            fi\n            decr=1\n\
    \        else\n            eq=1\n        fi\n        prev=$curr\n        curr=$next\n\
    \    done\n    if [ $ret -eq 1 ]; then\n        echo \"false\"\n    else\n   \
    \     echo \"true\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i prev=${list[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n      \
    \  if (( curr > prev )); then\n            inc=1\n        elif (( curr < prev\
    \ )); then\n            dec=1\n        fi\n        prev=$curr\n    done\n    if\
    \ (( inc && dec )); then\n        echo \"false\"\n    else\n        echo \"true\"\
    \n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a a=($@)\n    local -a b=($@)\n    local -a c=($@)\n\
    \    local -a d=($@)\n    local -a e=($@)\n    local -a f=($@)\n    local -a g=($@)\n\
    \    local -a h=($@)\n    local -a i=($@)\n    local -a j=($@)\n    local -a k=($@)\n\
    \    local -a l=($@)\n    local -a m=($@)\n    local -a n=($@)\n    local -a o=($@)\n\
    \    local -a p=($@)\n    local -a q=($@)\n    local -a r=($@)\n    local -a s=($@)\n\
    \    local -a t=($@)\n    local -a u=($@)\n    local -a v=($@)\n    local -a w=($@)\n\
    \    local -a x=($@)\n    local -a y=($@)\n    local -a z=($@)\n    local -a aa=($@)\n\
    \    local -a ab=($@)\n    local -a ac=($@)\n    local -a ad=($@)\n    local -a\
    \ ae=($@)\n    local -a af=($@)\n    local -a ag=($@)\n    local -a ah=($@)\n\
    \    local -a ai=($@)\n    local -a aj=($@)\n    local -a ak=($@)\n    local -a\
    \ al=($@)\n    local -a am=($@)\n    local -a an=($@)\n    local -a ao=($@)\n\
    \    local -a ap=($@)\n    local -a aq=($@)\n    local -a ar=($@)\n    local -a\
    \ as=($@)\n    local -a at=($@)\n    local -a au=($@)\n    local -a av=($@)\n\
    \    local -a aw=($@)\n    local -a ax=($@)\n    local -a ay\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -i i\n  \
    \  local -i len=${#list[@]}\n    local -i prev\n    local -i curr\n    local -i\
    \ diff\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    local\
    \ -i is_monotonic=0\n\n    if (( len < 2 )); then\n        echo \"true\"\n   \
    \     return 0\n    fi\n\n    for (( i=0; i<len-1; i++ )); do\n        prev=${list[i]}\n\
    \        curr=${list[i+1]}\n        diff=$(( curr - prev ))\n        diffs+=($diff)\n\
    \    done\n\n    for (( i=0; i<len-2; i++ )); do\n        if (( ${diffs[i]} *\
    \ ${diffs[i+1]} < 0 )); then\n            is_increasing=0\n            is_decreasing=0\n\
    \            break\n        fi\n    done\n\n    if (( is_increasing || is_decreasing\
    \ )); then\n        is_monotonic=1\n    fi\n\n    echo \"$is_monotonic\"\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i prev=${arr[0]}\n    local\
    \ -i cur=0\n    for ((i=1; i<len; i++)); do\n        cur=${arr[i]}\n        if\
    \ ((cur > prev)); then\n            inc=1\n        elif ((cur < prev)); then\n\
    \            dec=1\n        fi\n        prev=$cur\n    done\n    if ((inc && dec));\
    \ then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu4w6jmj9.sh: line 15: local: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local direction=0\n    local i=0\n   \
    \ local n=${#list[@]}\n    while [ $i -lt $n ]; do\n        if [ $i -gt 0 ]; then\n\
    \            if [ $direction -eq 0 ]; then\n                if [ ${list[$i]} -gt\
    \ ${list[$i-1]} ]; then\n                    direction=1\n                elif\
    \ [ ${list[$i]} -lt ${list[$i-1]} ]; then\n                    direction=-1\n\
    \                fi\n            elif [ $direction -eq 1 ]; then\n           \
    \     if [ ${list[$i]} -lt ${list[$i-1]} ]; then\n                    echo \"\
    false\"\n                    return\n                fi\n            elif [ $direction\
    \ -eq -1 ]; then\n                if [ ${list[$i]} -gt ${list[$i-1]} ]; then\n\
    \                    echo \"false\"\n                    return\n            \
    \    fi\n            fi\n        fi\n        i=$((i+1))\n    done\n    echo \"\
    true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    local\
    \ -i n=${#list[@]}\n    local -i diff\n    local -i prev_diff=0\n    local -i\
    \ monotonic=1\n    for ((i=1; i<n; i++)); do\n        diff=$((${list[$i]} - ${list[$i-1]}))\n\
    \        diffs[$i]=$diff\n        if ((i > 1)); then\n            if ((prev_diff\
    \ * diff < 0)); then\n                monotonic=0\n                break\n   \
    \         fi\n        fi\n        prev_diff=$diff\n    done\n    echo $monotonic\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -i i\n  \
    \  local -i len=${#list[@]}\n    local -i prev\n    local -i curr\n    local -i\
    \ diff\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    for ((i=1;\
    \ i<len; i++)); do\n        prev=${list[i-1]}\n        curr=${list[i]}\n     \
    \   diff=$((curr - prev))\n        diffs+=($diff)\n        if ((diff < 0)); then\n\
    \            is_increasing=0\n        elif ((diff > 0)); then\n            is_decreasing=0\n\
    \        fi\n    done\n    if ((is_increasing || is_decreasing)); then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i n=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<n; i++)); do\n        curr=${list[i]}\n        if\
    \ ((curr > prev)); then\n            incr=1\n        elif ((curr < prev)); then\n\
    \            decr=1\n        fi\n        prev=$curr\n    done\n    if ((incr &&\
    \ decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i first=0\n    local -i last=0\n    local -i\
    \ sign=0\n    local -i sign_prev=0\n    local -i sign_curr=0\n    local -i sign_diff=0\n\
    \    local -i sign_first=0\n    local -i sign_last=0\n    local -i sign_inc=0\n\
    \    local -i sign_dec=0\n    local -i sign_prev_curr=0\n    local -i sign_prev_diff=0\n\
    \    local -i sign_curr_diff=0\n    local -i sign_first_last=0\n    local -i sign_first_diff=0\n\
    \    local -i sign_last_diff=0\n    local -i sign_inc_dec=0\n    local -i sign_inc_diff=0\n\
    \    local -i sign_dec_diff=0\n    local -i sign_prev_curr_diff=0\n    local -i\
    \ sign_first_last_diff=0\n    local -i sign_inc_dec_diff=0\n    local -i sign_prev_curr_diff_inc_dec=0\n\
    \    local -i sign_first_last_diff_inc_dec=0\n    local -i sign_prev_curr_diff_inc_dec_first_last=0\n\
    \    local -i sign_prev_curr_diff_inc_dec_first_last_diff=0\n    local -i sign_prev_curr_diff_inc_dec_first_last_diff_inc_dec=0\n\
    \    local -i sign_prev_curr_diff_inc_dec_first_last_diff_inc_dec_sign=0\n   \
    \ local -i sign_prev_curr_diff_inc_dec_first_last_diff_inc_dec_sign_prev=0\n \
    \   local -i sign_prev_curr_diff_\n}\n\ncandidate() {\n    monotonic \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$@\"\n    local inc=true\n    local dec=true\n\
    \    local prev=0\n    for i in $list; do\n        if (( $i < $prev )); then\n\
    \            inc=false\n        fi\n        if (( $i > $prev )); then\n      \
    \      dec=false\n        fi\n        prev=$i\n    done\n    if $inc || $dec;\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i res=0\n    local -i prev=${arr[0]}\n\
    \    local -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${arr[i]}\n\
    \        if ((curr > prev)); then\n            inc=1\n        elif ((curr < prev));\
    \ then\n            dec=1\n        fi\n        if ((inc && dec)); then\n     \
    \       res=1\n            break\n        fi\n        prev=$curr\n    done\n \
    \   if ((res)); then\n        echo \"false\"\n    else\n        echo \"true\"\n\
    \    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd9ui0ujk.sh: line 16: local: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i is_increasing=1\n    local -i is_decreasing=1\n    local -i prev=${arr[0]}\n\
    \    for ((i=1; i<len; i++)); do\n        if [[ ${arr[i]} -gt $prev ]]; then\n\
    \            is_decreasing=0\n        elif [[ ${arr[i]} -lt $prev ]]; then\n \
    \           is_increasing=0\n        fi\n        prev=${arr[i]}\n    done\n  \
    \  if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe49wy3fg.sh: line 15: local: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    local\
    \ diff\n    local prev_diff\n    local is_increasing\n    local is_decreasing\n\
    \    local is_monotonic\n\n    for ((i=1; i<${#list[@]}; i++)); do\n        diffs[$i]=$((list[$i]\
    \ - list[$i-1]))\n    done\n\n    is_increasing=1\n    is_decreasing=1\n    for\
    \ ((i=1; i<${#diffs[@]}; i++)); do\n        if ((diffs[$i] < 0)); then\n     \
    \       is_increasing=0\n        elif ((diffs[$i] > 0)); then\n            is_decreasing=0\n\
    \        fi\n    done\n\n    if ((is_increasing || is_decreasing)); then\n   \
    \     is_monotonic=1\n    else\n        is_monotonic=0\n    fi\n\n    if ((is_monotonic));\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i prev=${list[0]}\n\
    \    for ((i=1; i<len; i++)); do\n        if ((prev < ${list[i]})); then\n   \
    \         increasing=1\n        elif ((prev > ${list[i]})); then\n           \
    \ decreasing=1\n        fi\n        prev=${list[i]}\n    done\n    if ((increasing\
    \ && decreasing)); then\n        echo \"false\"\n    else\n        echo \"true\"\
    \n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local i=0\n    local inc=0\n    local\
    \ dec=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if\
    \ [ $i -eq 0 ]; then\n            inc=${list[$i]}\n            dec=${list[$i]}\n\
    \        else\n            if [ ${list[$i]} -gt $inc ]; then\n               \
    \ inc=${list[$i]}\n            elif [ ${list[$i]} -lt $dec ]; then\n         \
    \       dec=${list[$i]}\n            else\n                echo \"false\"\n  \
    \              return\n            fi\n        fi\n        i=$((i+1))\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i direction=0\n    local -i prev=0\n    local -i curr=0\n    local\
    \ -i next=0\n    local -i result=0\n    if [ $len -eq 0 ]; then\n        echo\
    \ \"false\"\n        return 1\n    fi\n    for i in $(seq 1 $len); do\n      \
    \  prev=${list[$i-1]}\n        curr=${list[$i]}\n        next=${list[$i+1]}\n\
    \        if [ $i -eq 1 ]; then\n            if [ $curr -gt $next ]; then\n   \
    \             direction=-1\n            elif [ $curr -lt $next ]; then\n     \
    \           direction=1\n            else\n                echo \"false\"\n  \
    \              return 1\n            fi\n        else\n            if [ $direction\
    \ -eq 1 ]; then\n                if [ $curr -gt $next ]; then\n              \
    \      echo \"false\"\n                    return 1\n                fi\n    \
    \        elif [ $direction -eq -1 ]; then\n                if [ $curr -lt $next\
    \ ]; then\n                    echo \"false\"\n                    return 1\n\
    \                fi\n            fi\n        fi\n    done\n    echo \"true\"\n\
    \    return 0\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: -1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local len=${#list[@]}\n    local i=0\n\
    \    local increasing=false\n    local decreasing=false\n    while [ $i -lt $len\
    \ ]; do\n        if [ $i -eq 0 ]; then\n            if [ ${list[$i]} -lt ${list[$i+1]}\
    \ ]; then\n                increasing=true\n            elif [ ${list[$i]} -gt\
    \ ${list[$i+1]} ]; then\n                decreasing=true\n            fi\n   \
    \     else\n            if [ $increasing = true ]; then\n                if [\
    \ ${list[$i]} -lt ${list[$i+1]} ]; then\n                    continue\n      \
    \          else\n                    echo \"false\"\n                    return\n\
    \                fi\n            elif [ $decreasing = true ]; then\n         \
    \       if [ ${list[$i]} -gt ${list[$i+1]} ]; then\n                    continue\n\
    \                else\n                    echo \"false\"\n                  \
    \  return\n                fi\n            fi\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=45>
  stdout: <_io.BufferedReader name=20>
  timestamp: 1660344393
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local\
    \ -i i\n    local -i incr=0\n    local -i decr=0\n    for ((i=0; i<len-1; i++));\
    \ do\n        if (( arr[i] < arr[i+1] )); then\n            (( incr++ ))\n   \
    \     elif (( arr[i] > arr[i+1] )); then\n            (( decr++ ))\n        fi\n\
    \    done\n    if (( incr == len-1 || decr == len-1 )); then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i sign=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    if [ $len -eq 0 ]; then\n     \
    \   echo \"false\"\n        return\n    fi\n    if [ $len -eq 1 ]; then\n    \
    \    echo \"true\"\n        return\n    fi\n    prev=${list[0]}\n    curr=${list[1]}\n\
    \    if [ $prev -lt $curr ]; then\n        incr=1\n    elif [ $prev -gt $curr\
    \ ]; then\n        decr=1\n    fi\n    for ((i=1; i<$len-1; i++)); do\n      \
    \  prev=${list[$i]}\n        next=${list[$i+1]}\n        if [ $prev -lt $next\
    \ ]; then\n            sign=1\n        elif [ $prev -gt $next ]; then\n      \
    \      sign=-1\n        fi\n        if [ $incr -eq 1 ]; then\n            if [\
    \ $sign -eq -1 ]; then\n                echo \"false\"\n                return\n\
    \            fi\n        elif [ $decr -eq 1 ]; then\n            if [ $sign -eq\
    \ 1 ]; then\n                echo \"false\"\n                return\n        \
    \    fi\n        else\n            if [ $sign -eq 1 ]; then\n                incr=1\n\
    \            elif [ $sign -eq -1 ]; then\n                decr=1\n           \
    \ fi\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    for ((i=0; i<len-1; i++)); do\n\
    \        if ((list[i] < list[i+1])); then\n            incr=1\n        elif ((list[i]\
    \ > list[i+1])); then\n            decr=1\n        fi\n    done\n    if ((incr\
    \ && decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n \
    \   fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local\
    \ -i curr=0\n    local -i next=0\n    local -i res=0\n    for ((i=1; i<len; i++));\
    \ do\n        curr=${list[i]}\n        if ((i < len-1)); then\n            next=${list[i+1]}\n\
    \        fi\n        if ((prev < curr)); then\n            incr=1\n        elif\
    \ ((prev > curr)); then\n            decr=1\n        fi\n        if ((incr &&\
    \ decr)); then\n            res=1\n            break\n        fi\n        prev=$curr\n\
    \    done\n    if ((res)); then\n        echo \"false\"\n    else\n        echo\
    \ \"true\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local -i i=0\n    local -i n=$(echo\
    \ \"$list\" | wc -w)\n    local -i prev=$(echo \"$list\" | cut -d' ' -f1)\n  \
    \  local -i curr\n    local -i incr=0\n    local -i decr=0\n    local -i result=0\n\
    \    while (( i < n )); do\n        (( i++ ))\n        curr=$(echo \"$list\" |\
    \ cut -d' ' -f$i)\n        if (( curr > prev )); then\n            (( incr++ ))\n\
    \        elif (( curr < prev )); then\n            (( decr++ ))\n        fi\n\
    \        prev=$curr\n    done\n    if (( incr == n-1 || decr == n-1 )); then\n\
    \        result=1\n    fi\n    echo $result\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i curr=0\n    local -i prev=0\n\
    \    local -i next=0\n    local -i incr_count=0\n    local -i decr_count=0\n \
    \   local -i incr_max=0\n    local -i decr_max=0\n    local -i incr_min=0\n  \
    \  local -i decr_min=0\n    local -i incr_sum=0\n    local -i decr_sum=0\n   \
    \ local -i incr_mean=0\n    local -i decr_mean=0\n    local -i incr_median=0\n\
    \    local -i decr_median=0\n    local -i incr_mode=0\n    local -i decr_mode=0\n\
    \    local -i incr_range=0\n    local -i decr_range=0\n    local -i incr_variance=0\n\
    \    local -i decr_variance=0\n    local -i incr_stdev=0\n    local -i decr_stdev=0\n\
    \    local -i incr_skewness=0\n    local -i decr_skewness=0\n    local -i incr_kurtosis=0\n\
    \    local -i decr_kurtosis=0\n    local -i incr_entropy=0\n    local -i decr_entropy=0\n\
    \    local -i incr_gini=0\n    local -i decr_gini=0\n    local -i incr_mad=0\n\
    \    local -i decr_mad=0\n    local -i incr_q1=0\n    local -i decr_q1=0\n   \
    \ local -i incr_q2=0\n    local -i decr_q2=0\n    local -i incr_q3=0\n    local\
    \ -i decr_q3=0\n    local -i incr_iqr=0\n    local\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n  local -a list=($@)\n  local -a diffs\n  local i\n  for ((i=0;\
    \ i<${#list[@]}-1; i++)); do\n    diffs[$i]=$((list[$i+1]-list[$i]))\n  done\n\
    \  local first_diff=${diffs[0]}\n  for ((i=1; i<${#diffs[@]}; i++)); do\n    if\
    \ [[ ${diffs[$i]} -ne $first_diff ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") =\
    \ \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    if [ $len -le 1 ]; then\n     \
    \   echo \"true\"\n        return\n    fi\n    if [ ${arr[0]} -lt ${arr[1]} ];\
    \ then\n        incr=1\n    else\n        decr=1\n    fi\n    for ((i=1; i<len-1;\
    \ i++)); do\n        if [ $incr -eq 1 ]; then\n            if [ ${arr[i]} -gt\
    \ ${arr[i+1]} ]; then\n                echo \"false\"\n                return\n\
    \            fi\n        else\n            if [ ${arr[i]} -lt ${arr[i+1]} ]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    for ((i=0; i<len-1; i++)); do\n\
    \        if ((list[i] < list[i+1])); then\n            incr=1\n        elif ((list[i]\
    \ > list[i+1])); then\n            decr=1\n        fi\n    done\n    if ((incr\
    \ && decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n \
    \   fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -a diffs\n    local i\n  \
    \  for ((i=0; i<${#arr[@]}-1; i++)); do\n        diffs[i]=$((arr[i+1]-arr[i]))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local -a arr=()\n    local -i i=0\n\
    \    local -i len=0\n    local -i inc=0\n    local -i dec=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i ret=0\n    local -i retval=0\n\
    \    local -i retval_inc=0\n    local -i retval_dec=0\n    local -i retval_inc_dec=0\n\
    \    local -i retval_dec_inc=0\n    local -i retval_inc_inc=0\n    local -i retval_dec_dec=0\n\
    \    local -i retval_inc_dec_inc=0\n    local -i retval_dec_inc_dec=0\n    local\
    \ -i retval_inc_inc_inc=0\n    local -i retval_dec_dec_dec=0\n    local -i retval_inc_inc_inc_inc=0\n\
    \    local -i retval_dec_dec_dec_dec=0\n    local -i retval_inc_inc_inc_inc_inc=0\n\
    \    local -i retval_dec_dec_dec_dec_dec=0\n    local -i retval_inc_inc_inc_inc_inc_inc=0\n\
    \    local -i retval_dec_dec_dec_dec_dec_dec=0\n    local -i retval_inc_inc_inc_inc_inc_inc_inc=0\n\
    \    local -i retval_dec_dec_dec_dec_dec_dec_dec=0\n    local -i retval_inc_inc_inc_inc_inc_inc_inc_inc=0\n\
    \    local -i retval_dec_dec_dec_dec_dec_dec_dec_dec=0\n    local -i retval_inc_inc_inc_inc_inc_inc_inc_inc_inc=0\n\
    \    local -i retval_dec_dec_dec_dec_dec_dec_dec_dec_dec=0\n    local -i retval_inc_inc_inc_inc_inc_inc_inc_inc_\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i first=0\n    local -i\
    \ last=0\n    local -i mid=0\n    local -i mid_prev=0\n    local -i mid_next=0\n\
    \    local -i mid_diff=0\n    local -i mid_diff_prev=0\n    local -i mid_diff_next=0\n\
    \    local -i mid_diff_prev_next=0\n    local -i mid_diff_next_prev=0\n    local\
    \ -i mid_diff_prev_next_diff=0\n    local -i mid_diff_next_prev_diff=0\n    local\
    \ -i mid_diff_prev_next_diff_prev=0\n    local -i mid_diff_next_prev_diff_next=0\n\
    \    local -i mid_diff_prev_next_diff_prev_next=0\n    local -i mid_diff_next_prev_diff_next_prev=0\n\
    \    local -i mid_diff_prev_next_diff_prev_next_diff=0\n    local -i mid_diff_next_prev_diff_next_prev_diff=0\n\
    \    local -i mid_diff_prev_next_diff_prev_next_diff_prev=0\n    local -i mid_diff_next_prev_diff_next_prev_diff_next=0\n\
    \    local -i mid_diff_prev_next_diff_prev_next_diff_prev_next=0\n    local -i\
    \ mid_diff_next_prev_diff_next_prev_diff_next_prev=0\n    local -i mid_diff_prev_next_diff_prev_next_diff_prev_next_diff=0\n\
    \    local -i mid_diff_next_prev_diff_next_prev_diff_next_prev_diff=0\n    local\
    \ -i mid_diff_prev_next_diff_\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    for\
    \ ((i=1; i<len; i++)); do\n        if ((prev < ${list[i]})); then\n          \
    \  ((incr++))\n        elif ((prev > ${list[i]})); then\n            ((decr++))\n\
    \        fi\n        ((prev=${list[i]}))\n    done\n    if ((incr == len-1 ||\
    \ decr == len-1)); then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=0\n    local -i curr=0\n\
    \    local -i next=0\n    local -i diff=0\n    local -i diff_prev=0\n    local\
    \ -i diff_next=0\n    local -i diff_prev_next=0\n    local -i diff_prev_curr=0\n\
    \    local -i diff_curr_next=0\n    local -i diff_prev_next_curr=0\n    local\
    \ -i diff_prev_curr_next=0\n    local -i diff_prev_next_curr_next=0\n    local\
    \ -i diff_prev_curr_next_curr=0\n    local -i diff_prev_curr_next_curr_next=0\n\
    \    local -i diff_prev_curr_next_curr_next_curr=0\n    local -i diff_prev_curr_next_curr_next_curr_next=0\n\
    \    local -i diff_prev_curr_next_curr_next_curr_next_curr=0\n    local -i diff_prev_curr_next_curr_next_curr_next_curr_next=0\n\
    \    local -i diff_prev_curr_next_curr_next_curr_next_curr_next_curr=0\n    local\
    \ -i diff_prev_curr_next_curr_next_curr_next_curr_next_curr_next=0\n    local\
    \ -i diff_prev_curr_next_curr_next_curr_next_curr_next_curr_next_curr=0\n    local\
    \ -i diff_prev_curr_next_curr_next_curr_next_curr_next_curr_next_curr_next=0\n\
    \    local -i diff_prev_curr_next_curr_next_curr_next_curr_next_curr_next_\n}\n\
    \ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=$1\n    local prev=$(echo $list | cut -d ' ' -f\
    \ 1)\n    local incr=0\n    local decr=0\n    for i in $list; do\n        if [[\
    \ $i -gt $prev ]]; then\n            incr=1\n        elif [[ $i -lt $prev ]];\
    \ then\n            decr=1\n        fi\n        prev=$i\n    done\n    if [[ $incr\
    \ -eq 1 && $decr -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $incr -eq\
    \ 0 && $decr -eq 1 ]]; then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local len=${#list[@]}\n    local i=0\n\
    \    local inc=0\n    local dec=0\n    for ((i=0; i<len-1; i++)); do\n       \
    \ if [[ ${list[$i]} -lt ${list[$i+1]} ]]; then\n            inc=1\n        elif\
    \ [[ ${list[$i]} -gt ${list[$i+1]} ]]; then\n            dec=1\n        fi\n \
    \   done\n    if [[ $inc -eq 1 && $dec -eq 0 ]]; then\n        echo \"true\"\n\
    \    elif [[ $inc -eq 0 && $dec -eq 1 ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") =\
    \ \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i prev=${list[0]}\n\
    \    for ((i=1; i<len; i++)); do\n        if ((prev < ${list[i]})); then\n   \
    \         increasing=1\n        elif ((prev > ${list[i]})); then\n           \
    \ decreasing=1\n        fi\n        if ((increasing && decreasing)); then\n  \
    \          echo \"false\"\n            return\n        fi\n        prev=${list[i]}\n\
    \    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i n=${#list[@]}\n    local -i\
    \ i=0\n    local -i incr=0\n    local -i decr=0\n    local -i prev=0\n    local\
    \ -i curr=0\n    local -i next=0\n    local -i is_monotonic=0\n    if [ $n -gt\
    \ 1 ]; then\n        prev=${list[0]}\n        curr=${list[1]}\n        if [ $prev\
    \ -lt $curr ]; then\n            incr=1\n        elif [ $prev -gt $curr ]; then\n\
    \            decr=1\n        fi\n        for ((i=2; i<n; i++)); do\n         \
    \   next=${list[i]}\n            if [ $incr -eq 1 ]; then\n                if\
    \ [ $curr -gt $next ]; then\n                    is_monotonic=0\n            \
    \        break\n                fi\n            elif [ $decr -eq 1 ]; then\n \
    \               if [ $curr -lt $next ]; then\n                    is_monotonic=0\n\
    \                    break\n                fi\n            else\n           \
    \     if [ $curr -lt $next ]; then\n                    incr=1\n             \
    \   elif [ $curr -gt $next ]; then\n                    decr=1\n             \
    \   fi\n            fi\n            prev=$curr\n            curr=$next\n     \
    \   done\n        is_monotonic=1\n    fi\n    echo $is_monotonic\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[$i]=$((list[$i+1]-list[$i]))\n\
    \    done\n    local -a uniq_diffs=($(uniq \"${diffs[@]}\"))\n    if [[ ${#uniq_diffs[@]}\
    \ -eq 1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: 'b"uniq: extra operand \xe2\x80\x986\xe2\x80\x99\nTry ''uniq --help'' for
    more information.\n"'
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n      \
    \  if ((curr > prev)); then\n            ((incr++))\n        elif ((curr < prev));\
    \ then\n            ((decr++))\n        fi\n        prev=$curr\n    done\n   \
    \ if ((incr == len-1)) || ((decr == len-1)); then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i sign=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i result=0\n    if [ $len -lt 3 ]; then\n        echo \"true\"\n \
    \       return\n    fi\n    for (( i=0; i<$len; i++ )); do\n        curr=${list[$i]}\n\
    \        if [ $i -eq 0 ]; then\n            prev=$curr\n            continue\n\
    \        fi\n        if [ $i -eq $((len-1)) ]; then\n            next=$curr\n\
    \            break\n        fi\n        next=${list[$((i+1))]}\n        if [ $curr\
    \ -eq $prev ]; then\n            continue\n        fi\n        if [ $sign -eq\
    \ 0 ]; then\n            if [ $curr -gt $prev ]; then\n                sign=1\n\
    \            else\n                sign=-1\n            fi\n        fi\n     \
    \   if [ $sign -eq 1 ]; then\n            if [ $curr -lt $prev ]; then\n     \
    \           result=1\n                break\n            fi\n        else\n  \
    \          if [ $curr -gt $prev ]; then\n                result=1\n          \
    \      break\n            fi\n        fi\n        prev=$curr\n    done\n    if\
    \ [ $result -eq 1 ]; then\n        echo \"false\"\n    else\n        if [ $sign\
    \ -eq 1 ]; then\n            if [ $curr -gt $next ]; then\n                echo\
    \ \"false\"\n            else\n                echo \"true\"\n            fi\n\
    \        else\n            if [ $curr -lt $next ]; then\n                echo\
    \ \"false\"\n            else\n                echo \"true\"\n            fi\n\
    \        fi\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local incr=0\n    local decr=0\n    local\
    \ i=0\n    local j=1\n    while [ $j -lt ${#list[@]} ]; do\n        if [ ${list[$i]}\
    \ -lt ${list[$j]} ]; then\n            incr=1\n        elif [ ${list[$i]} -gt\
    \ ${list[$j]} ]; then\n            decr=1\n        fi\n        i=$j\n        j=$((j+1))\n\
    \    done\n    if [ $incr -eq 1 -a $decr -eq 0 ]; then\n        echo \"true\"\n\
    \    elif [ $incr -eq 0 -a $decr -eq 1 ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") =\
    \ \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i result=0\n    local -i\
    \ is_monotonic=0\n    if [ $len -gt 1 ]; then\n        prev=${list[0]}\n     \
    \   for ((i=1; i<len; i++)); do\n            curr=${list[$i]}\n            diff=$((curr-prev))\n\
    \            if [ $diff -gt 0 ]; then\n                inc=1\n            elif\
    \ [ $diff -lt 0 ]; then\n                dec=1\n            fi\n            prev=$curr\n\
    \        done\n        result=$((inc+dec))\n        if [ $result -eq 1 ]; then\n\
    \            is_monotonic=1\n        fi\n    else\n        is_monotonic=1\n  \
    \  fi\n    echo $is_monotonic\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=($@)\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${arr[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${arr[i]}\n       \
    \ if ((curr > prev)); then\n            incr=1\n        elif ((curr < prev));\
    \ then\n            decr=1\n        fi\n        prev=$curr\n    done\n    if ((incr\
    \ && decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n \
    \   fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    for ((i=0; i<len-1; i++)); do\n\
    \        (( list[i] < list[i+1] )) && (( incr++ ))\n        (( list[i] > list[i+1]\
    \ )) && (( decr++ ))\n    done\n    (( incr == len-1 || decr == len-1 )) && echo\
    \ \"true\" || echo \"false\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$@\"\n    local inc=0\n    local dec=0\n    local\
    \ prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [ $curr -gt $prev ]; then\n            inc=1\n        elif [ $curr -lt $prev\
    \ ]; then\n            dec=1\n        fi\n        prev=$curr\n    done\n    if\
    \ [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n        echo \"false\"\n    else\n \
    \       echo \"true\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -a diffs\n    local -i i\n\
    \    local -i len=${#arr[@]}\n    local -i sign=0\n    local -i prev=0\n    local\
    \ -i curr=0\n    local -i diff=0\n    local -i absdiff=0\n    local -i absprev=0\n\
    \    local -i abscurr=0\n    local -i absdiff=0\n    local -i absprev=0\n    local\
    \ -i abscurr=0\n    local -i absdiff=0\n    local -i absprev=0\n    local -i abscurr=0\n\
    \    local -i absdiff=0\n    local -i absprev=0\n    local -i abscurr=0\n    local\
    \ -i absdiff=0\n    local -i absprev=0\n    local -i abscurr=0\n    local -i absdiff=0\n\
    \    local -i absprev=0\n    local -i abscurr=0\n    local -i absdiff=0\n    local\
    \ -i absprev=0\n    local -i abscurr=0\n    local -i absdiff=0\n    local -i absprev=0\n\
    \    local -i abscurr=0\n    local -i absdiff=0\n    local -i absprev=0\n    local\
    \ -i abscurr=0\n    local -i absdiff=0\n    local -i absprev=0\n    local -i abscurr=0\n\
    \    local -i absdiff=0\n    local -i absprev=0\n    local -i abscurr=0\n    local\
    \ -i absdiff=0\n    local -i absprev=0\n    local -i abscurr=0\n    local -i absdiff=0\n\
    \    local -i absprev=0\n    local -i abscurr=0\n    local -i absdiff=0\n    local\
    \ -i absprev=0\n    local -i abscurr=0\n    local -i absdiff=0\n    local -i absprev=0\n\
    \    local -i abscurr=0\n    local -i absdiff\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local i\n    local inc=true\n    local\
    \ dec=true\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        if (( ${list[$i]}\
    \ > ${list[$i+1]} )); then\n            inc=false\n        fi\n        if (( ${list[$i]}\
    \ < ${list[$i+1]} )); then\n            dec=false\n        fi\n    done\n    if\
    \ $inc || $dec; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a a=($@)\n    local -i i=0\n    local -i n=${#a[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i i=0\n    local -i n=${#a[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    if (( n < 2 )); then\n        echo\
    \ \"true\"\n        return 0\n    fi\n    for (( i=0; i<n-1; i++ )); do\n    \
    \    prev=${a[i]}\n        curr=${a[i+1]}\n        diff=$(( curr - prev ))\n \
    \       if (( diff > 0 )); then\n            (( incr++ ))\n        elif (( diff\
    \ < 0 )); then\n            (( decr++ ))\n        fi\n    done\n    if (( incr\
    \ == n-1 || decr == n-1 )); then\n        echo \"true\"\n        return 0\n  \
    \  else\n        echo \"false\"\n        return 1\n    fi\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr\n    arr=($@)\n    local -i i\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    for ((i=0; i<len-1; i++)); do\n\
    \        if (( arr[i] < arr[i+1] )); then\n            incr=1\n        elif ((\
    \ arr[i] > arr[i+1] )); then\n            decr=1\n        fi\n    done\n    if\
    \ (( incr && decr )); then\n        echo \"false\"\n    else\n        echo \"\
    true\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -i i\n  \
    \  local -i len=${#list[@]}\n    local -i prev=${list[0]}\n    local -i curr\n\
    \    local -i diff\n    local -i sign=0\n    local -i prev_sign=0\n    local -i\
    \ curr_sign=0\n    local -i diff_sign=0\n    local -i diff_prev_sign=0\n    local\
    \ -i diff_curr_sign=0\n    local -i diff_diff_sign=0\n    local -i diff_diff_prev_sign=0\n\
    \    local -i diff_diff_curr_sign=0\n    local -i diff_diff_diff_sign=0\n    local\
    \ -i diff_diff_diff_prev_sign=0\n    local -i diff_diff_diff_curr_sign=0\n   \
    \ local -i diff_diff_diff_diff_sign=0\n    local -i diff_diff_diff_diff_prev_sign=0\n\
    \    local -i diff_diff_diff_diff_curr_sign=0\n    local -i diff_diff_diff_diff_diff_sign=0\n\
    \    local -i diff_diff_diff_diff_diff_prev_sign=0\n    local -i diff_diff_diff_diff_diff_curr_sign=0\n\
    \    local -i diff_diff_diff_diff_diff_diff_sign=0\n    local -i diff_diff_diff_diff_diff_diff_prev_sign=0\n\
    \    local -i diff_diff_diff_diff_diff_diff_curr_sign=0\n    local -i diff_diff_diff_diff_diff_diff_diff_sign=0\n\
    \    local -i diff_diff_diff_diff_diff_diff_diff_prev_sign=0\n    local -i diff_diff_diff_diff_diff_diff_diff_curr_sign=0\n\
    \    local -i diff_diff_diff_diff_diff_diff_diff_diff_sign=0\n    local -i diff_diff_diff_diff_diff_diff_diff_diff_prev_sign=0\n\
    \n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    local\
    \ diff\n    local prev_diff\n    local increasing\n    local decreasing\n    for\
    \ ((i=1; i<${#list[@]}; i++)); do\n        diff=$((${list[$i]} - ${list[$i-1]}))\n\
    \        diffs+=($diff)\n    done\n    prev_diff=${diffs[0]}\n    for diff in\
    \ \"${diffs[@]}\"; do\n        if [[ $diff -gt 0 ]]; then\n            increasing=true\n\
    \        elif [[ $diff -lt 0 ]]; then\n            decreasing=true\n        fi\n\
    \        if [[ $prev_diff -gt 0 && $diff -lt 0 ]]; then\n            echo false\n\
    \            return\n        elif [[ $prev_diff -lt 0 && $diff -gt 0 ]]; then\n\
    \            echo false\n            return\n        fi\n        prev_diff=$diff\n\
    \    done\n    echo true\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i increasing=1\n    local -i decreasing=1\n    local -i prev=${arr[0]}\n\
    \    for ((i=1; i<len; i++)); do\n        if [[ ${arr[i]} -gt $prev ]]; then\n\
    \            decreasing=0\n        elif [[ ${arr[i]} -lt $prev ]]; then\n    \
    \        increasing=0\n        fi\n        prev=${arr[i]}\n    done\n    if [[\
    \ $increasing -eq 1 || $decreasing -eq 1 ]]; then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkqyal_b_.sh: line 15: local: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i last=0\n    local -i first=0\n\
    \    local -i mid=0\n    local -i mid_prev=0\n    local -i mid_next=0\n    local\
    \ -i mid_diff=0\n    local -i mid_prev_diff=0\n    local -i mid_next_diff=0\n\
    \    local -i mid_prev_diff_sign=0\n    local -i mid_next_diff_sign=0\n    local\
    \ -i mid_diff_sign=0\n    local -i mid_prev_diff_sign_same=0\n    local -i mid_next_diff_sign_same=0\n\
    \    local -i mid_diff_sign_same=0\n    local -i mid_prev_diff_sign_same_mid_next_diff_sign=0\n\
    \    local -i mid_prev_diff_sign_same_mid_diff_sign=0\n    local -i mid_next_diff_sign_same_mid_diff_sign=0\n\
    \    local -i mid_prev_diff_sign_same_mid_next_diff_sign_same_mid_diff_sign=0\n\
    \    local -i mid_prev_diff_sign_same_mid_next_diff_sign_same_mid_diff_sign_same=0\n\
    \    local -i mid_prev_diff_sign_same_mid_next_diff_sign_same_mid_diff_sign_same_inc=0\n\
    \    local -i mid_prev_diff_sign_same_mid_next_diff_sign_same_mid_diff_sign_same_dec=0\n\
    \    local -i mid_prev_diff_sign_same_mid_next_diff_sign_same_mid_diff_sign_same_inc_dec=0\n\
    \    local -i mid_prev_diff_sign_same_mid_next_diff_sign_same\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=1\n    local -i prev=${list[0]}\n    if [[ $prev -gt ${list[1]}\
    \ ]]; then\n        incr=-1\n    fi\n    for ((i=1; i<len; i++)); do\n       \
    \ if [[ $prev -ne $(( ${list[i]} - incr )) ]]; then\n            echo \"false\"\
    \n            return\n        fi\n        prev=${list[i]}\n    done\n    echo\
    \ \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local -i n=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i increasing=0\n    local -i decreasing=0\n \
    \   for n in $list; do\n        if (( n < prev )); then\n            decreasing=1\n\
    \        elif (( n > prev )); then\n            increasing=1\n        fi\n   \
    \     prev=$n\n    done\n    if (( increasing && decreasing )); then\n       \
    \ echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local first=${diffs[0]}\n    for ((i=1; i<${#diffs[@]}; i++));\
    \ do\n        if [[ ${diffs[i]} -ne $first ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i direction=0\n    local -i prev=0\n    local -i curr=0\n    local\
    \ -i next=0\n    local -i is_monotonic=1\n    while [[ $i -lt $len ]]; do\n  \
    \      prev=${list[$i]}\n        curr=${list[$i+1]}\n        next=${list[$i+2]}\n\
    \        if [[ $direction -eq 0 ]]; then\n            if [[ $curr -gt $prev ]];\
    \ then\n                direction=1\n            elif [[ $curr -lt $prev ]]; then\n\
    \                direction=-1\n            fi\n        elif [[ $direction -eq\
    \ 1 ]]; then\n            if [[ $curr -lt $prev ]]; then\n                is_monotonic=0\n\
    \                break\n            fi\n        elif [[ $direction -eq -1 ]];\
    \ then\n            if [[ $curr -gt $prev ]]; then\n                is_monotonic=0\n\
    \                break\n            fi\n        fi\n        i=$i+1\n    done\n\
    \    echo $is_monotonic\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a a=($@)\n    local -a b=($@)\n    local -a c=($@)\n\
    \    local -a d=($@)\n    local -a e=($@)\n    local -a f=($@)\n    local -a g=($@)\n\
    \    local -a h=($@)\n    local -a i=($@)\n    local -a j=($@)\n    local -a k=($@)\n\
    \    local -a l=($@)\n    local -a m=($@)\n    local -a n=($@)\n    local -a o=($@)\n\
    \    local -a p=($@)\n    local -a q=($@)\n    local -a r=($@)\n    local -a s=($@)\n\
    \    local -a t=($@)\n    local -a u=($@)\n    local -a v=($@)\n    local -a w=($@)\n\
    \    local -a x=($@)\n    local -a y=($@)\n    local -a z=($@)\n    local -a aa=($@)\n\
    \    local -a ab=($@)\n    local -a ac=($@)\n    local -a ad=($@)\n    local -a\
    \ ae=($@)\n    local -a af=($@)\n    local -a ag=($@)\n    local -a ah=($@)\n\
    \    local -a ai=($@)\n    local -a aj=($@)\n    local -a ak=($@)\n    local -a\
    \ al=($@)\n    local -a am=($@)\n    local -a an=($@)\n    local -a ao=($@)\n\
    \    local -a ap=($@)\n    local -a aq=($@)\n    local -a ar=($@)\n    local -a\
    \ as=($@)\n    local -a at=($@)\n    local -a au=($@)\n    local -a av=($@)\n\
    \    local -a aw=($@)\n    local -a ax=($@)\n    local -a ay\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: -1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local i=0\n    local len=${#list[@]}\n\
    \    local inc=0\n    local dec=0\n    while [ $i -lt $len ]; do\n        if [\
    \ $i -eq 0 ]; then\n            if [ ${list[$i]} -lt ${list[$i+1]} ]; then\n \
    \               inc=1\n            elif [ ${list[$i]} -gt ${list[$i+1]} ]; then\n\
    \                dec=1\n            fi\n        else\n            if [ $inc -eq\
    \ 1 ]; then\n                if [ ${list[$i]} -lt ${list[$i+1]} ]; then\n    \
    \                continue\n                else\n                    echo \"false\"\
    \n                    return\n                fi\n            elif [ $dec -eq\
    \ 1 ]; then\n                if [ ${list[$i]} -gt ${list[$i+1]} ]; then\n    \
    \                continue\n                else\n                    echo \"false\"\
    \n                    return\n                fi\n            fi\n        fi\n\
    \        i=$((i+1))\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=41>
  stdout: <_io.BufferedReader name=12>
  timestamp: 1660344393
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -a diffs\n    local i\n  \
    \  local len=${#arr[@]}\n    local -i prev\n    local -i curr\n    local -i diff\n\
    \    local -i max_diff=0\n    local -i min_diff=0\n    local -i sum_diff=0\n \
    \   local -i abs_sum_diff=0\n    local -i abs_max_diff=0\n    local -i abs_min_diff=0\n\
    \    local -i abs_diff\n    local -i abs_prev\n    local -i abs_curr\n    local\
    \ -i abs_diff\n    local -i abs_max_diff=0\n    local -i abs_min_diff=0\n    local\
    \ -i abs_sum_diff=0\n    local -i abs_abs_sum_diff=0\n    local -i abs_abs_max_diff=0\n\
    \    local -i abs_abs_min_diff=0\n    local -i abs_abs_diff\n    local -i abs_abs_prev\n\
    \    local -i abs_abs_curr\n    local -i abs_abs_diff\n    local -i abs_abs_max_diff=0\n\
    \    local -i abs_abs_min_diff=0\n    local -i abs_abs_sum_diff=0\n    local -i\
    \ abs_abs_abs_sum_diff=0\n    local -i abs_abs_abs_max_diff=0\n    local -i abs_abs_abs_min_diff=0\n\
    \    local -i abs_abs_abs_diff\n    local -i abs_abs_abs_prev\n    local -i abs_abs_abs_curr\n\
    \    local -i abs_abs_abs_diff\n    local -i abs_abs_abs_max_diff=0\n    local\
    \ -i abs_abs_abs_min_diff=0\n    local -i abs_abs_abs_sum_diff=0\n    local -i\
    \ abs_abs_abs_abs_sum_diff=0\n    local -i abs_abs_abs_abs_max_diff=0\n    local\
    \ -i abs_abs_abs_abs_min_diff=0\n\n}\n\ncandidate() {\n    monotonic \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local n=${#list[@]}\n    local i=0\n \
    \   local increasing=0\n    local decreasing=0\n    while [ $i -lt $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            if [ ${list[$i]} -lt ${list[$i+1]}\
    \ ]; then\n                increasing=1\n            elif [ ${list[$i]} -gt ${list[$i+1]}\
    \ ]; then\n                decreasing=1\n            fi\n        else\n      \
    \      if [ $increasing -eq 1 ]; then\n                if [ ${list[$i]} -lt ${list[$i+1]}\
    \ ]; then\n                    increasing=1\n                else\n          \
    \          increasing=0\n                fi\n            elif [ $decreasing -eq\
    \ 1 ]; then\n                if [ ${list[$i]} -gt ${list[$i+1]} ]; then\n    \
    \                decreasing=1\n                else\n                    decreasing=0\n\
    \                fi\n            fi\n        fi\n        i=$((i+1))\n    done\n\
    \    if [ $increasing -eq 1 ] || [ $decreasing -eq 1 ]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp4v6p44bj.sh: line 24: [: 10: unary operator expected\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i sign=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i is_monotonic=1\n    if (( len < 2 )); then\n        echo \"true\"\
    \n        return\n    fi\n    prev=${arr[0]}\n    curr=${arr[1]}\n    if (( curr\
    \ > prev )); then\n        sign=1\n    elif (( curr < prev )); then\n        sign=-1\n\
    \    fi\n    for (( i=1; i<len-1; i++ )); do\n        prev=${arr[i]}\n       \
    \ next=${arr[i+1]}\n        if (( next > prev )); then\n            if (( sign\
    \ < 0 )); then\n                is_monotonic=0\n                break\n      \
    \      fi\n        elif (( next < prev )); then\n            if (( sign > 0 ));\
    \ then\n                is_monotonic=0\n                break\n            fi\n\
    \        fi\n    done\n    if (( is_monotonic )); then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i is_increasing=1\n    local -i is_decreasing=1\n    local -i prev=${list[0]}\n\
    \    local -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n\
    \        if ((curr > prev)); then\n            is_decreasing=0\n        elif ((curr\
    \ < prev)); then\n            is_increasing=0\n        fi\n        prev=$curr\n\
    \    done\n    if ((is_increasing || is_decreasing)); then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    if [ $len -lt 2 ]; then\n        echo \"true\"\n   \
    \     return 0\n    fi\n    for i in $(seq 1 $(($len - 1))); do\n        prev=${list[$(($i\
    \ - 1))]}\n        curr=${list[$i]}\n        diff=$(($curr - $prev))\n       \
    \ if [ $diff -gt 0 ]; then\n            incr=1\n        elif [ $diff -lt 0 ];\
    \ then\n            decr=1\n        fi\n        if [ $incr -eq 1 ] && [ $decr\
    \ -eq 1 ]; then\n            echo \"false\"\n            return 1\n        fi\n\
    \    done\n    echo \"true\"\n    return 0\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n      \
    \  if ((prev < curr)); then\n            ((incr++))\n        elif ((prev > curr));\
    \ then\n            ((decr++))\n        fi\n        prev=$curr\n    done\n   \
    \ if ((incr == len-1)) || ((decr == len-1)); then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($1)\n    local -a diffs\n    local -i i\n  \
    \  local -i len=${#list[@]}\n    local -i diff\n    local -i prev_diff=0\n   \
    \ local -i is_increasing=1\n    local -i is_decreasing=1\n    for ((i=1; i<len;\
    \ i++)); do\n        diff=$((${list[$i]} - ${list[$i-1]}))\n        diffs+=($diff)\n\
    \        if (($i > 1)); then\n            if (($prev_diff > 0)); then\n      \
    \          is_increasing=0\n            elif (($prev_diff < 0)); then\n      \
    \          is_decreasing=0\n            fi\n        fi\n        prev_diff=$diff\n\
    \    done\n    if (($is_increasing || $is_decreasing)); then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -i i\n  \
    \  local -i n=${#list[@]}\n    local -i d\n    local -i prev_d\n    local -i is_monotonic=1\n\
    \    for ((i=1; i<n; i++)); do\n        d=${list[i]}-${list[i-1]}\n        diffs+=($d)\n\
    \    done\n    prev_d=${diffs[0]}\n    for ((i=1; i<n-1; i++)); do\n        d=${diffs[i]}\n\
    \        if (( d*prev_d < 0 )); then\n            is_monotonic=0\n           \
    \ break\n        fi\n        prev_d=$d\n    done\n    echo $is_monotonic\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[$i]=$((list[$i+1]-list[$i]))\n\
    \    done\n    local -a uniq_diffs=($(uniq \"${diffs[@]}\"))\n    if [[ ${#uniq_diffs[@]}\
    \ -eq 1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: 'b"uniq: extra operand \xe2\x80\x986\xe2\x80\x99\nTry ''uniq --help'' for
    more information.\n"'
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -i i=0\n\
    \    local -i n=${#list[@]}\n    local -i diff\n    local -i prev_diff=0\n   \
    \ local -i increasing=0\n    local -i decreasing=0\n    local -i monotonic=0\n\
    \    local -i first_diff=0\n    local -i first_diff_set=0\n    local -i first_diff_is_positive=0\n\
    \    local -i first_diff_is_negative=0\n    local -i first_diff_is_zero=0\n  \
    \  local -i all_diffs_are_positive=0\n    local -i all_diffs_are_negative=0\n\
    \    local -i all_diffs_are_zero=0\n    local -i all_diffs_are_positive_or_zero=0\n\
    \    local -i all_diffs_are_negative_or_zero=0\n    local -i all_diffs_are_non_zero=0\n\
    \    local -i all_diffs_are_zero=0\n    local -i all_diffs_are_positive_or_negative=0\n\
    \    local -i all_diffs_are_positive_or_negative_or_zero=0\n    local -i all_diffs_are_positive_or_negative_or_zero_or_non_zero=0\n\
    \    local -i all_diffs_are_positive_or_negative_or_non_zero=0\n    local -i all_diffs_are_positive_or_zero_or_non_zero=0\n\
    \    local -i all_diffs_are_negative_or_zero_or_non_zero=0\n    local -i all_diffs_are_positive_or_negative_or_zero_or_non_zero=0\n\
    \    local -i all_diffs_are_positive_or_negative_or_zero_or_non_zero=0\n    local\
    \ -i all_diffs_are_positive_or_negative_or_zero_or_non_zero=0\n    local -i all_diffs_are_positive_or_negative_or_\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local i=0\n    local len=${#list[@]}\n\
    \    local inc=0\n    local dec=0\n    local res=0\n    while [ $i -lt $len ];\
    \ do\n        if [ $i -eq 0 ]; then\n            inc=$(echo \"${list[$i]} < ${list[$i+1]}\"\
    \ | bc)\n            dec=$(echo \"${list[$i]} > ${list[$i+1]}\" | bc)\n      \
    \  else\n            inc=$(echo \"$inc && ${list[$i]} < ${list[$i+1]}\" | bc)\n\
    \            dec=$(echo \"$dec && ${list[$i]} > ${list[$i+1]}\" | bc)\n      \
    \  fi\n        i=$((i+1))\n    done\n    res=$(echo \"$inc || $dec\" | bc)\n \
    \   if [ $res -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''(standard_in) 2: syntax error\n(standard_in) 2: syntax error\n(standard_in)
    1: syntax error\n/tmp/tmp920uyq6_.sh: line 27: [: -eq: unary operator expected\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -a diffs\n    local -i i\n\
    \    local -i len=${#arr[@]}\n    local -i incr=0\n    local -i decr=0\n    for\
    \ ((i=0; i<len-1; i++)); do\n        diffs[i]=$((arr[i+1] - arr[i]))\n    done\n\
    \    for ((i=0; i<len-2; i++)); do\n        if ((diffs[i] > 0)); then\n      \
    \      ((incr++))\n        elif ((diffs[i] < 0)); then\n            ((decr++))\n\
    \        fi\n    done\n    if ((incr == len-2)) || ((decr == len-2)); then\n \
    \       echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i ret=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    if [ $len -lt 3 ]; then\n     \
    \   echo \"true\"\n        return 0\n    fi\n    for ((i=0; i<len; i++)); do\n\
    \        curr=${arr[$i]}\n        if [ $i -eq 0 ]; then\n            prev=$curr\n\
    \            continue\n        fi\n        if [ $i -eq $((len-1)) ]; then\n  \
    \          next=$curr\n            break\n        fi\n        next=${arr[$((i+1))]}\n\
    \        if [ $prev -lt $curr ]; then\n            incr=1\n        elif [ $prev\
    \ -gt $curr ]; then\n            decr=1\n        fi\n        if [ $incr -eq 1\
    \ ] && [ $decr -eq 1 ]; then\n            ret=1\n            break\n        fi\n\
    \        prev=$curr\n    done\n    if [ $ret -eq 1 ]; then\n        echo \"false\"\
    \n    else\n        if [ $incr -eq 1 ] && [ $next -lt $curr ]; then\n        \
    \    echo \"false\"\n        elif [ $decr -eq 1 ] && [ $next -gt $curr ]; then\n\
    \            echo \"false\"\n        else\n            echo \"true\"\n       \
    \ fi\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=(\"$@\")\n    local -a diffs\n    local -i i\n\
    \    local -i n=${#list[@]}\n    local -i diff\n    local -i prev_diff=0\n   \
    \ local -i is_increasing=1\n    local -i is_decreasing=1\n    for ((i=1; i<n;\
    \ i++)); do\n        diff=$((${list[$i]} - ${list[$((i-1))]}))\n        diffs+=($diff)\n\
    \        if ((i > 1)); then\n            if ((diff > 0)); then\n             \
    \   is_decreasing=0\n            elif ((diff < 0)); then\n                is_increasing=0\n\
    \            fi\n        fi\n        prev_diff=$diff\n    done\n    if ((is_increasing\
    \ || is_decreasing)); then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i increasing=1\n    local -i decreasing=1\n    for ((i=1; i<len; i++));\
    \ do\n        if [[ ${list[i]} -lt ${list[i-1]} ]]; then\n            increasing=0\n\
    \        elif [[ ${list[i]} -gt ${list[i-1]} ]]; then\n            decreasing=0\n\
    \        fi\n    done\n    if [[ $increasing -eq 1 || $decreasing -eq 1 ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local -a arr=($list)\n    local -a diffs\n\
    \    local i\n    local prev\n    local curr\n    local diff\n    local is_increasing\n\
    \    local is_decreasing\n    local is_monotonic\n\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        curr=${arr[$i]}\n        if [[ $i -gt 0 ]]; then\n      \
    \      diff=$((curr - prev))\n            diffs+=($diff)\n        fi\n       \
    \ prev=$curr\n    done\n\n    is_increasing=true\n    is_decreasing=true\n   \
    \ for diff in \"${diffs[@]}\"; do\n        if [[ $diff -lt 0 ]]; then\n      \
    \      is_increasing=false\n        fi\n        if [[ $diff -gt 0 ]]; then\n \
    \           is_decreasing=false\n        fi\n    done\n\n    if $is_increasing\
    \ || $is_decreasing; then\n        is_monotonic=true\n    else\n        is_monotonic=false\n\
    \    fi\n\n    echo \"$is_monotonic\"\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local direction=0\n    local last=${list[0]}\n\
    \    for i in \"${list[@]:1}\"; do\n        if [[ $i -eq $last ]]; then\n    \
    \        continue\n        elif [[ $i -gt $last ]]; then\n            if [[ $direction\
    \ -eq 0 ]]; then\n                direction=1\n            elif [[ $direction\
    \ -eq -1 ]]; then\n                echo \"false\"\n                return\n  \
    \          fi\n        elif [[ $i -lt $last ]]; then\n            if [[ $direction\
    \ -eq 0 ]]; then\n                direction=-1\n            elif [[ $direction\
    \ -eq 1 ]]; then\n                echo \"false\"\n                return\n   \
    \         fi\n        fi\n        last=$i\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i direction=0\n    local -i prev=0\n    local -i curr=0\n    local\
    \ -i next=0\n    local -i is_monotonic=0\n    local -i is_increasing=0\n    local\
    \ -i is_decreasing=0\n    local -i is_constant=0\n    local -i is_non_constant=0\n\
    \    local -i is_non_increasing=0\n    local -i is_non_decreasing=0\n    local\
    \ -i is_strictly_increasing=0\n    local -i is_strictly_decreasing=0\n    local\
    \ -i is_strictly_non_increasing=0\n    local -i is_strictly_non_decreasing=0\n\
    \    local -i is_strictly_monotonic=0\n    local -i is_strictly_non_monotonic=0\n\
    \    local -i is_non_monotonic=0\n    local -i is_non_strictly_monotonic=0\n \
    \   local -i is_non_strictly_increasing=0\n    local -i is_non_strictly_decreasing=0\n\
    \    local -i is_non_strictly_non_increasing=0\n    local -i is_non_strictly_non_decreasing=0\n\
    \    local -i is_non_strictly_non_monotonic=0\n    local -i is_non_strictly_monotonic=0\n\
    \    local -i is_strictly_non_monotonic=0\n    local -i is_strictly_monotonic=0\n\
    \    local -i is_non_monotonic=0\n    local -i is_monotonic=0\n    local -i is_non_decreasing=0\n\
    \    local -i is_decreasing=0\n    local -i is_non_increasing=0\n    local -i\
    \ is_increasing=0\n    local -i is_constant=0\n    local -i\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 2
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=0\n    local -i curr=0\n\
    \    local -i next=0\n    local -i first=0\n    local -i last=0\n    local -i\
    \ ret=0\n    local -i i=0\n    local -i len=${#list[@]}\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i first=0\n    local -i last=0\n    local -i ret=0\n    if [ $len\
    \ -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n    if [ $len\
    \ -eq 1 ]; then\n        echo \"true\"\n        return\n    fi\n    if [ $len\
    \ -eq 2 ]; then\n        if [ ${list[0]} -eq ${list[1]} ]; then\n            echo\
    \ \"true\"\n            return\n        fi\n        if [ ${list[0]} -lt ${list[1]}\
    \ ]; then\n            echo \"true\"\n            return\n        fi\n       \
    \ if [ ${list[0]} -gt ${list[1]} ]; then\n            echo \"true\"\n        \
    \    return\n        fi\n    fi\n    first=${list[0]}\n    last=${list[$len-1]}\n\
    \    if [ $first -lt $last ]; then\n        incr=1\n    fi\n    if [ $first -gt\
    \ $last ]; then\n        decr=1\n    fi\n    if [ $incr -eq 1 ]; then\n      \
    \  for ((i=0; i<len-1; i++)); do\n            prev=${list[$i]}\n            curr=${list[$i+1]}\n\
    \            if [ $prev -gt $curr ]; then\n                ret=1\n           \
    \     break\n            fi\n        done\n    fi\n    if [ $decr -eq 1 ]; then\n\
    \        for ((i=0; i<len-1; i++)); do\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpyhi8p9et.sh: line 73: syntax error near unexpected token `}''\n/tmp/tmpyhi8p9et.sh:
    line 73: `}''\n"'
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[$i]=$((list[$i+1]-list[$i]))\n\
    \    done\n    local first_diff=${diffs[0]}\n    for ((i=1; i<${#diffs[@]}; i++));\
    \ do\n        if [[ ${diffs[$i]} -ne $first_diff ]]; then\n            echo \"\
    false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i res=0\n    local -i prev=${arr[0]}\n\
    \    local -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${arr[i]}\n\
    \        if ((curr > prev)); then\n            inc=1\n        elif ((curr < prev));\
    \ then\n            dec=1\n        fi\n        prev=$curr\n    done\n    ((inc\
    \ == 1 && dec == 0)) && res=1\n    ((inc == 0 && dec == 1)) && res=1\n    ((res\
    \ == 1)) && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0i39m2e5.sh: line 16: local: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a a=($@)\n    local -i i\n    local -i n=${#a[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    for ((i=1; i<n; i++)); do\n   \
    \     if ((a[i] > a[i-1])); then\n            ((incr++))\n        elif ((a[i]\
    \ < a[i-1])); then\n            ((decr++))\n        fi\n    done\n    if ((incr\
    \ == n-1 || decr == n-1)); then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    if [ $len -lt 2 ]; then\n     \
    \   echo \"true\"\n        return 0\n    fi\n    for ((i=1; i<len; i++)); do\n\
    \        if [ ${list[$i]} -gt ${list[$i-1]} ]; then\n            incr=1\n    \
    \    elif [ ${list[$i]} -lt ${list[$i-1]} ]; then\n            decr=1\n      \
    \  fi\n    done\n    if [ $incr -eq 1 -a $decr -eq 1 ]; then\n        echo \"\
    false\"\n        return 1\n    else\n        echo \"true\"\n        return 0\n\
    \    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i dir=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i is_monotonic=1\n    if [[ $len -lt 2 ]]; then\n        echo \"true\"\
    \n        return 0\n    fi\n    for ((i=0; i<len; i++)); do\n        curr=${arr[$i]}\n\
    \        if [[ $i -eq 0 ]]; then\n            prev=$curr\n            continue\n\
    \        fi\n        if [[ $i -eq $((len-1)) ]]; then\n            next=$curr\n\
    \            break\n        fi\n        next=${arr[$((i+1))]}\n        if [[ $dir\
    \ -eq 0 ]]; then\n            if [[ $curr -gt $prev ]]; then\n               \
    \ dir=1\n            elif [[ $curr -lt $prev ]]; then\n                dir=-1\n\
    \            fi\n        else\n            if [[ $dir -eq 1 ]]; then\n       \
    \         if [[ $curr -lt $prev ]]; then\n                    is_monotonic=0\n\
    \                    break\n                fi\n            elif [[ $dir -eq -1\
    \ ]]; then\n                if [[ $curr -gt $prev ]]; then\n                 \
    \   is_monotonic=0\n                    break\n                fi\n          \
    \  fi\n        fi\n        prev=$curr\n    done\n    if [[ $is_monotonic -eq 1\
    \ ]]; then\n        if [[ $dir -eq 1 ]]; then\n            if [[ $next -lt $curr\
    \ ]]; then\n                is_monotonic=0\n            fi\n        elif [[ $dir\
    \ -eq -1 ]]; then\n            if [[ $next -gt $curr ]]; then\n              \
    \  is_monotonic=0\n            fi\n        fi\n    fi\n    if [[ $is_monotonic\
    \ -eq 1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local direction=0\n    local last=${list[0]}\n\
    \    for i in ${list[@]:1}; do\n        if [[ $i -eq $last ]]; then\n        \
    \    continue\n        elif [[ $i -gt $last ]]; then\n            if [[ $direction\
    \ -eq 0 ]]; then\n                direction=1\n            elif [[ $direction\
    \ -eq -1 ]]; then\n                echo \"false\"\n                return\n  \
    \          fi\n        elif [[ $i -lt $last ]]; then\n            if [[ $direction\
    \ -eq 0 ]]; then\n                direction=-1\n            elif [[ $direction\
    \ -eq 1 ]]; then\n                echo \"false\"\n                return\n   \
    \         fi\n        fi\n        last=$i\n    done\n    echo \"true\"\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i prev=${arr[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${arr[i]}\n       \
    \ if ((curr > prev)); then\n            inc=1\n        elif ((curr < prev)); then\n\
    \            dec=1\n        fi\n        if ((inc && dec)); then\n            echo\
    \ \"false\"\n            return 1\n        fi\n        prev=$curr\n    done\n\
    \    echo \"true\"\n    return 0\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") =\
    \ \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfarp8e00.sh: line 15: local: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i prev=${list[0]}\n    for\
    \ ((i=1; i<len; i++)); do\n        if [[ ${list[i]} -gt $prev ]]; then\n     \
    \       inc=1\n        elif [[ ${list[i]} -lt $prev ]]; then\n            dec=1\n\
    \        fi\n        prev=${list[i]}\n    done\n    if [[ $inc -eq 1 && $dec -eq\
    \ 1 ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    local\
    \ diff\n    local prev_diff\n    local prev_sign\n    local sign\n    local result=\"\
    true\"\n    for ((i=1; i<${#list[@]}; i++)); do\n        diff=$((${list[$i]} -\
    \ ${list[$i-1]}))\n        diffs+=(\"$diff\")\n        sign=$(echo \"$diff\" |\
    \ awk '{if ($1 > 0) print \"+\"; else print \"-\"}')\n        if [[ $i -gt 1 ]];\
    \ then\n            if [[ \"$sign\" != \"$prev_sign\" ]]; then\n             \
    \   result=\"false\"\n                break\n            fi\n        fi\n    \
    \    prev_sign=\"$sign\"\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${arr[0]}\n    for\
    \ ((i=1; i<len; i++)); do\n        if ((prev < ${arr[i]})); then\n           \
    \ incr=1\n        elif ((prev > ${arr[i]})); then\n            decr=1\n      \
    \  fi\n        prev=${arr[i]}\n    done\n    ((incr + decr == 1)) && echo \"true\"\
    \ || echo \"false\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzwxs4r4f.sh: line 15: local: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local -a array=($list)\n    local -i\
    \ len=${#array[@]}\n    local -i i=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i sign=0\n    local -i prev_sign=0\n    local\
    \ -i curr_sign=0\n    local -i prev_diff=0\n    local -i curr_diff=0\n    local\
    \ -i prev_sign_diff=0\n    local -i curr_sign_diff=0\n    local -i prev_sign_diff_sign=0\n\
    \    local -i curr_sign_diff_sign=0\n    local -i prev_sign_diff_sign_diff=0\n\
    \    local -i curr_sign_diff_sign_diff=0\n    local -i prev_sign_diff_sign_diff_sign=0\n\
    \    local -i curr_sign_diff_sign_diff_sign=0\n    local -i prev_sign_diff_sign_diff_sign_diff=0\n\
    \    local -i curr_sign_diff_sign_diff_sign_diff=0\n    local -i prev_sign_diff_sign_diff_sign_diff_sign=0\n\
    \    local -i curr_sign_diff_sign_diff_sign_diff_sign=0\n    local -i prev_sign_diff_sign_diff_sign_diff_sign_diff=0\n\
    \    local -i curr_sign_diff_sign_diff_sign_diff_sign_diff=0\n    local -i prev_sign_diff_sign_diff_sign_diff_sign_diff_sign=0\n\
    \    local -i curr_sign_diff_sign_diff_sign_diff_sign_diff_sign=0\n    local -i\
    \ prev_sign_diff_sign_diff_sign_diff_sign_diff_sign_diff=0\n    local -i curr_sign_diff_sign_diff_sign_diff_sign_diff_sign_diff=0\n\
    \    local -i prev_sign_diff_sign_diff_sign_diff_sign_diff_sign_diff_sign=\n}\n\
    \ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a a=($@)\n    local -a b=($@)\n    local -a c=($@)\n\
    \    local -a d=($@)\n    local -a e=($@)\n    local -a f=($@)\n    local -a g=($@)\n\
    \    local -a h=($@)\n    local -a i=($@)\n    local -a j=($@)\n    local -a k=($@)\n\
    \    local -a l=($@)\n    local -a m=($@)\n    local -a n=($@)\n    local -a o=($@)\n\
    \    local -a p=($@)\n    local -a q=($@)\n    local -a r=($@)\n    local -a s=($@)\n\
    \    local -a t=($@)\n    local -a u=($@)\n    local -a v=($@)\n    local -a w=($@)\n\
    \    local -a x=($@)\n    local -a y=($@)\n    local -a z=($@)\n    local -a aa=($@)\n\
    \    local -a ab=($@)\n    local -a ac=($@)\n    local -a ad=($@)\n    local -a\
    \ ae=($@)\n    local -a af=($@)\n    local -a ag=($@)\n    local -a ah=($@)\n\
    \    local -a ai=($@)\n    local -a aj=($@)\n    local -a ak=($@)\n    local -a\
    \ al=($@)\n    local -a am=($@)\n    local -a an=($@)\n    local -a ao=($@)\n\
    \    local -a ap=($@)\n    local -a aq=($@)\n    local -a ar=($@)\n    local -a\
    \ as=($@)\n    local -a at=($@)\n    local -a au=($@)\n    local -a av=($@)\n\
    \    local -a aw=($@)\n    local -a ax=($@)\n    local -a ay\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local len=${#list[@]}\n    local i=0\n\
    \    local inc=0\n    local dec=0\n    local prev=${list[0]}\n    for ((i=1; i<len;\
    \ i++)); do\n        if [[ ${list[i]} -gt $prev ]]; then\n            inc=1\n\
    \        elif [[ ${list[i]} -lt $prev ]]; then\n            dec=1\n        fi\n\
    \        prev=${list[i]}\n    done\n    if [[ $inc -eq 1 && $dec -eq 0 ]]; then\n\
    \        echo \"true\"\n    elif [[ $inc -eq 0 && $dec -eq 1 ]]; then\n      \
    \  echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if (( ${#uniq_diffs[@]} == 1 )); then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$@\"\n    local inc=0\n    local dec=0\n    local\
    \ prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [ $prev -eq 0 ]; then\n            prev=$curr\n            continue\n      \
    \  fi\n        if [ $prev -lt $curr ]; then\n            inc=1\n        elif [\
    \ $prev -gt $curr ]; then\n            dec=1\n        fi\n        if [ $inc -eq\
    \ 1 ] && [ $dec -eq 1 ]; then\n            echo \"false\"\n            return\n\
    \        fi\n        prev=$curr\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i ret=0\n    local -i prev=0\n\
    \    local -i curr=0\n    if [ $len -eq 0 ]; then\n        echo \"false\"\n  \
    \      return\n    fi\n    prev=${arr[0]}\n    for ((i=1; i<len; i++)); do\n \
    \       curr=${arr[i]}\n        if [ $curr -gt $prev ]; then\n            incr=1\n\
    \        elif [ $curr -lt $prev ]; then\n            decr=1\n        fi\n    \
    \    if [ $incr -eq 1 ] && [ $decr -eq 1 ]; then\n            ret=1\n        \
    \    break\n        fi\n        prev=$curr\n    done\n    if [ $ret -eq 0 ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ybr3xt8.sh: line 22: 1 2 4 10: syntax error in expression (error
    token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=(\"$@\")\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i is_monotonic=0\n    if\
    \ [ $len -lt 3 ]; then\n        echo \"true\"\n        return 0\n    fi\n    for\
    \ ((i=0; i<len; i++)); do\n        curr=${list[$i]}\n        if [ $i -eq 0 ];\
    \ then\n            prev=$curr\n            continue\n        fi\n        if [\
    \ $i -eq $((len-1)) ]; then\n            next=$curr\n            break\n     \
    \   fi\n        next=${list[$((i+1))]}\n        diff=$((next-curr))\n        if\
    \ [ $diff -gt 0 ]; then\n            inc=1\n        elif [ $diff -lt 0 ]; then\n\
    \            dec=1\n        fi\n        if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n\
    \            is_monotonic=1\n            break\n        fi\n    done\n    if [\
    \ $is_monotonic -eq 1 ]; then\n        echo \"false\"\n    else\n        echo\
    \ \"true\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i n=${#list[@]}\n    local -i\
    \ i=0\n    local -i increasing=0\n    local -i decreasing=0\n    local -i delta=0\n\
    \    local -i prev=0\n    local -i curr=0\n    local -i next=0\n    if (( n <\
    \ 3 )); then\n        echo \"true\"\n        return 0\n    fi\n    prev=${list[0]}\n\
    \    curr=${list[1]}\n    next=${list[2]}\n    if (( curr > prev )); then\n  \
    \      increasing=1\n    elif (( curr < prev )); then\n        decreasing=1\n\
    \    fi\n    for (( i=1; i<n-1; i++ )); do\n        prev=${list[i]}\n        curr=${list[i+1]}\n\
    \        next=${list[i+2]}\n        if (( increasing )); then\n            if\
    \ (( curr < prev )); then\n                echo \"false\"\n                return\
    \ 1\n            fi\n        elif (( decreasing )); then\n            if (( curr\
    \ > prev )); then\n                echo \"false\"\n                return 1\n\
    \            fi\n        else\n            if (( curr > prev )); then\n      \
    \          increasing=1\n            elif (( curr < prev )); then\n          \
    \      decreasing=1\n            fi\n        fi\n    done\n    echo \"true\"\n\
    \    return 0\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i n=${#list[@]}\n\
    \    local -i direction=0\n    local -i prev=${list[0]}\n    local -i curr=0\n\
    \    for ((i=1; i<n; i++)); do\n        curr=${list[i]}\n        if [[ $direction\
    \ == 0 ]]; then\n            if [[ $curr -gt $prev ]]; then\n                direction=1\n\
    \            elif [[ $curr -lt $prev ]]; then\n                direction=-1\n\
    \            fi\n        elif [[ $direction == 1 ]]; then\n            if [[ $curr\
    \ -lt $prev ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        elif [[ $direction == -1 ]]; then\n            if [[\
    \ $curr -gt $prev ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        fi\n        prev=$curr\n    done\n    echo \"true\"\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    local\
    \ diff\n    local prev\n    local -i is_monotonic=1\n    local -i is_increasing=1\n\
    \    local -i is_decreasing=1\n    local -i is_constant=1\n    local -i is_non_constant=1\n\
    \    local -i is_non_monotonic=1\n    local -i is_non_increasing=1\n    local\
    \ -i is_non_decreasing=1\n    local -i is_strictly_increasing=1\n    local -i\
    \ is_strictly_decreasing=1\n    local -i is_non_strictly_increasing=1\n    local\
    \ -i is_non_strictly_decreasing=1\n    local -i is_strictly_monotonic=1\n    local\
    \ -i is_non_strictly_monotonic=1\n    local -i is_strictly_increasing_or_decreasing=1\n\
    \    local -i is_non_strictly_increasing_or_decreasing=1\n    local -i is_strictly_increasing_or_constant=1\n\
    \    local -i is_non_strictly_increasing_or_constant=1\n    local -i is_strictly_decreasing_or_constant=1\n\
    \    local -i is_non_strictly_decreasing_or_constant=1\n    local -i is_strictly_monotonic_or_constant=1\n\
    \    local -i is_non_strictly_monotonic_or_constant=1\n    local -i is_strictly_increasing_or_non_decreasing=1\n\
    \    local -i is_non_strictly_increasing_or_non_decreasing=1\n    local -i is_strictly_decreasing_or_non_increasing=1\n\
    \    local -i is_non_strictly_decreasing_or_non_increasing=1\n    local -i is_strictly_monotonic_or_non_constant=1\n\
    \   \n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -i i=0\n    local -i j=1\n    local -i len=$#\n    local\
    \ -i incr=0\n    local -i decr=0\n    while (( i < len )); do\n        if (( $i\
    \ == 0 )); then\n            (( incr++ ))\n            (( decr++ ))\n        elif\
    \ (( ${@:i:1} > ${@:j:1} )); then\n            (( incr++ ))\n        elif (( ${@:i:1}\
    \ < ${@:j:1} )); then\n            (( decr++ ))\n        fi\n        (( i++ ))\n\
    \        (( j++ ))\n    done\n    if (( incr == len || decr == len )); then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local inc=0\n    local dec=0\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        if ((list[i] < list[i+1])); then\n\
    \            inc=1\n        elif ((list[i] > list[i+1])); then\n            dec=1\n\
    \        fi\n    done\n    if ((inc && dec)); then\n        echo \"false\"\n \
    \   else\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i n=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i prev=0\n    local -i first=0\n    local -i last=0\n    local -i\
    \ delta=0\n    local -i sign=0\n    local -i is_monotonic=0\n    if [[ $n -eq\
    \ 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n    if [[ $n -eq\
    \ 1 ]]; then\n        echo \"true\"\n        return 0\n    fi\n    first=${arr[0]}\n\
    \    last=${arr[$((n-1))]}\n    delta=$((last-first))\n    sign=$((delta/abs(delta)))\n\
    \    for ((i=0; i<n-1; i++)); do\n        curr=${arr[$i]}\n        next=${arr[$((i+1))]}\n\
    \        delta=$((next-curr))\n        if [[ $delta -eq 0 ]]; then\n         \
    \   continue\n        fi\n        if [[ $delta -gt 0 ]]; then\n            incr=1\n\
    \        else\n            decr=1\n        fi\n        if [[ $incr -eq 1 && $decr\
    \ -eq 1 ]]; then\n            is_monotonic=0\n            break\n        fi\n\
    \        if [[ $sign -ne $((delta/abs(delta))) ]]; then\n            is_monotonic=0\n\
    \            break\n        fi\n    done\n    if [[ $is_monotonic -eq 0 ]]; then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i n=${#list[@]}\n\
    \    local -i increasing=1\n    local -i decreasing=1\n    for ((i=1; i<n; i++));\
    \ do\n        if ((list[i] < list[i-1])); then\n            increasing=0\n   \
    \     fi\n        if ((list[i] > list[i-1])); then\n            decreasing=0\n\
    \        fi\n    done\n    if ((increasing || decreasing)); then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=($@)\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${arr[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${arr[i]}\n       \
    \ if ((curr > prev)); then\n            incr=1\n        elif ((curr < prev));\
    \ then\n            decr=1\n        fi\n        prev=$curr\n    done\n    if ((incr\
    \ && decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n \
    \   fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n  local -a list=($@)\n  local -a diffs\n  local i\n  local -i n=${#list[@]}\n\
    \  local -i d\n  local -i sign=0\n  for ((i=1; i<n; i++)); do\n    d=${list[i]}-${list[i-1]}\n\
    \    if ((sign==0)); then\n      ((sign=d>0?1:-1))\n    elif ((sign*d<0)); then\n\
    \      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -i i\n  \
    \  local -i n=${#list[@]}\n    local -i d\n    local -i prev\n    local -i curr\n\
    \    local -i incr=0\n    local -i decr=0\n    for ((i=1; i<n; i++)); do\n   \
    \     prev=${list[$((i-1))]}\n        curr=${list[$i]}\n        d=$((curr-prev))\n\
    \        if ((d>0)); then\n            incr=1\n        elif ((d<0)); then\n  \
    \          decr=1\n        fi\n        diffs+=($d)\n    done\n    if ((incr &&\
    \ decr)); then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a a=($@)\n    local -i i=0\n    local -i n=${#a[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${a[0]}\n    for\
    \ ((i=1; i<n; i++)); do\n        if ((a[i] > prev)); then\n            incr=1\n\
    \        elif ((a[i] < prev)); then\n            decr=1\n        fi\n        prev=${a[i]}\n\
    \    done\n    ((incr + decr == 1)) && echo \"true\" || echo \"false\"\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=0\n    local -i curr=0\n\
    \    local -i next=0\n    local -i max=0\n    local -i min=0\n    local -i max_idx=0\n\
    \    local -i min_idx=0\n    local -i max_idx_next=0\n    local -i min_idx_next=0\n\
    \    local -i max_idx_prev=0\n    local -i min_idx_prev=0\n    local -i max_idx_prev_prev=0\n\
    \    local -i min_idx_prev_prev=0\n    local -i max_idx_next_next=0\n    local\
    \ -i min_idx_next_next=0\n    local -i max_idx_prev_prev_prev=0\n    local -i\
    \ min_idx_prev_prev_prev=0\n    local -i max_idx_next_next_next=0\n    local -i\
    \ min_idx_next_next_next=0\n    local -i max_idx_prev_prev_prev_prev=0\n    local\
    \ -i min_idx_prev_prev_prev_prev=0\n    local -i max_idx_next_next_next_next=0\n\
    \    local -i min_idx_next_next_next_next=0\n    local -i max_idx_prev_prev_prev_prev_prev=0\n\
    \    local -i min_idx_prev_prev_prev_prev_prev=0\n    local -i max_idx_next_next_next_next_next=0\n\
    \    local -i min_idx_next_next_next_next_next=0\n    local -i max_idx_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i min_idx_prev_prev_prev_prev_prev_prev=0\n    local -i max_idx_next_next_\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${arr[0]}\n    local\
    \ -i curr=0\n    if [ $len -eq 1 ]; then\n        echo \"true\"\n        return\
    \ 0\n    fi\n    for ((i=1; i<len; i++)); do\n        curr=${arr[$i]}\n      \
    \  if [ $curr -gt $prev ]; then\n            incr=1\n        elif [ $curr -lt\
    \ $prev ]; then\n            decr=1\n        fi\n        if [ $incr -eq 1 ] &&\
    \ [ $decr -eq 1 ]; then\n            echo \"false\"\n            return 1\n  \
    \      fi\n        prev=$curr\n    done\n    echo \"true\"\n    return 0\n}\n\n\
    candidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy4taf3ht.sh: line 15: local: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i sign=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n\
    \    local -i ret=0\n    local -i is_monotonic=0\n\n    if [[ $len -lt 2 ]]; then\n\
    \        echo \"true\"\n        return 0\n    fi\n\n    prev=${arr[0]}\n    curr=${arr[1]}\n\
    \    if [[ $prev -lt $curr ]]; then\n        sign=1\n    elif [[ $prev -gt $curr\
    \ ]]; then\n        sign=-1\n    else\n        echo \"true\"\n        return 0\n\
    \    fi\n\n    for ((i=1; i<len-1; i++)); do\n        prev=${arr[i-1]}\n     \
    \   curr=${arr[i]}\n        next=${arr[i+1]}\n        if [[ $sign -eq 1 ]]; then\n\
    \            if [[ $curr -gt $next ]]; then\n                is_monotonic=1\n\
    \                break\n            fi\n        elif [[ $sign -eq -1 ]]; then\n\
    \            if [[ $curr -lt $next ]]; then\n                is_monotonic=1\n\
    \                break\n            fi\n        fi\n    done\n\n    if [[ $is_monotonic\
    \ -eq 1 ]]; then\n        echo \"false\"\n        return 1\n    else\n       \
    \ echo \"true\"\n        return 0\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    local\
    \ diff\n\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n\n    diff=${diffs[0]}\n    for ((i=1; i<${#diffs[@]}; i++)); do\n\
    \        if [[ ${diffs[i]} -ne $diff ]]; then\n            echo \"false\"\n  \
    \          return\n        fi\n    done\n\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i cur=0\n    local -i prev=0\n\
    \    local -i next=0\n    local -i ret=0\n    if [[ $len -lt 2 ]]; then\n    \
    \    echo \"true\"\n        return 0\n    fi\n    prev=${list[0]}\n    for ((i=1;\
    \ i<len; i++)); do\n        cur=${list[i]}\n        if [[ $cur -gt $prev ]]; then\n\
    \            inc=1\n        elif [[ $cur -lt $prev ]]; then\n            dec=1\n\
    \        fi\n        if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n            ret=1\n\
    \            break\n        fi\n        prev=$cur\n    done\n    if [[ $ret -eq\
    \ 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local -a uniq_diffs=($(printf \"%s\\n\" \"${diffs[@]}\" | sort\
    \ -u))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list\n    list=($@)\n    local -i i\n    local -i\
    \ len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n\
    \    for ((i=1; i<len; i++)); do\n        local -i curr=${list[i]}\n        if\
    \ ((curr > prev)); then\n            ((incr++))\n        elif ((curr < prev));\
    \ then\n            ((decr++))\n        fi\n        ((prev=curr))\n    done\n\
    \    if ((incr > 0 && decr > 0)); then\n        echo \"false\"\n    else\n   \
    \     echo \"true\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i increasing=1\n    local -i decreasing=1\n    local -i prev=${list[0]}\n\
    \    for ((i=1; i<len; i++)); do\n        if [[ ${list[i]} -gt $prev ]]; then\n\
    \            decreasing=0\n        elif [[ ${list[i]} -lt $prev ]]; then\n   \
    \         increasing=0\n        fi\n        prev=${list[i]}\n    done\n    [[\
    \ $increasing -eq 1 || $decreasing -eq 1 ]] && echo \"true\" || echo \"false\"\
    \n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local -a array=($list)\n    local length=${#array[@]}\n\
    \    local -a diffs\n    local i\n    for ((i=0; i<length-1; i++)); do\n     \
    \   diffs[i]=$((${array[i+1]} - ${array[i]}))\n    done\n    local diff=${diffs[0]}\n\
    \    for ((i=1; i<length-1; i++)); do\n        if [[ ${diffs[i]} -ne $diff ]];\
    \ then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\"\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i inc=0\n    local -i dec=0\n    local -i cur=0\n    local -i next=0\n\
    \    local -i prev=0\n    local -i first=0\n    local -i last=0\n    local -i\
    \ diff=0\n    local -i sign=0\n    local -i prev_sign=0\n    local -i prev_diff=0\n\
    \    local -i prev_first=0\n    local -i prev_last=0\n    local -i prev_inc=0\n\
    \    local -i prev_dec=0\n    local -i prev_cur=0\n    local -i prev_next=0\n\
    \    local -i prev_prev=0\n    local -i prev_len=0\n    local -i prev_i=0\n  \
    \  local -i prev_prev_sign=0\n    local -i prev_prev_diff=0\n    local -i prev_prev_first=0\n\
    \    local -i prev_prev_last=0\n    local -i prev_prev_inc=0\n    local -i prev_prev_dec=0\n\
    \    local -i prev_prev_cur=0\n    local -i prev_prev_next=0\n    local -i prev_prev_prev=0\n\
    \    local -i prev_prev_len=0\n    local -i prev_prev_i=0\n    local -i prev_prev_prev_sign=0\n\
    \    local -i prev_prev_prev_diff=0\n    local -i prev_prev_prev_first=0\n   \
    \ local -i prev_prev_prev_last=0\n    local -i prev_prev_prev_inc=0\n    local\
    \ -i prev_prev_prev_dec=0\n    local -i prev_prev_prev_cur=0\n    local -i prev_prev_prev_next=0\n\
    \    local -i prev_prev_prev_prev=0\n    local -i prev_prev_prev_len=0\n    local\
    \ -i prev_prev_prev_i=0\n    local -i prev_prev_prev_prev_\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -a diffs\n    local i\n  \
    \  for ((i=0; i<${#arr[@]}-1; i++)); do\n        diffs+=($((arr[i+1]-arr[i])))\n\
    \    done\n    if [[ ${diffs[@]} =~ ^([+-]?[0-9]*[1-9][0-9]*(\\.[0-9]+)?|[+-]?[0-9]*\\\
    .[0-9]+)(e[+-]?[0-9]+)?$ ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -i i\n  \
    \  for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((list[i+1]-list[i]))\n\
    \    done\n    if [[ ${diffs[@]} =~ ^([+-]?[0-9]+ )*[+-]?[0-9]+$ ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=$1\n    local -a arr=($list)\n    local -i i=0\n\
    \    local -i len=${#arr[@]}\n    local -i incr=0\n    local -i decr=0\n    local\
    \ -i prev=${arr[0]}\n    local -i curr=0\n    local -i next=0\n    local -i is_monotonic=0\n\
    \    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_constant=0\n\
    \    local -i is_non_constant=0\n    local -i is_increasing_or_constant=0\n  \
    \  local -i is_decreasing_or_constant=0\n    local -i is_non_decreasing=0\n  \
    \  local -i is_non_increasing=0\n    local -i is_strictly_increasing=0\n    local\
    \ -i is_strictly_decreasing=0\n    local -i is_strictly_increasing_or_constant=0\n\
    \    local -i is_strictly_decreasing_or_constant=0\n    local -i is_strictly_non_decreasing=0\n\
    \    local -i is_strictly_non_increasing=0\n    local -i is_strictly_increasing_or_decreasing=0\n\
    \    local -i is_strictly_non_increasing_or_decreasing=0\n    local -i is_strictly_increasing_or_non_decreasing=0\n\
    \    local -i is_strictly_decreasing_or_non_increasing=0\n    local -i is_strictly_non_increasing_or_non_decreasing=0\n\
    \    local -i is_strictly_increasing_or_decreasing_or_constant=0\n    local -i\
    \ is_strictly_non_increasing_or_decreasing_or_constant=0\n    local -i is_strictly_increasing_or_non_decreasing_or_constant=0\n\
    \    local -i is_strictly_decreasing_or_non_\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=($@)\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${arr[0]}\n    for\
    \ ((i=1; i<len; i++)); do\n        if ((prev < arr[i])); then\n            incr=1\n\
    \        elif ((prev > arr[i])); then\n            decr=1\n        fi\n      \
    \  prev=${arr[i]}\n    done\n    if ((incr && decr)); then\n        echo \"false\"\
    \n    else\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((${list[i+1]}-${list[i]}))\n\
    \    done\n    local first_diff=${diffs[0]}\n    for ((i=1; i<${#diffs[@]}; i++));\
    \ do\n        if [[ ${diffs[i]} != $first_diff ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    if [ $len -eq 0 ]; then\n        echo \"false\"\n  \
    \      return\n    fi\n    prev=${list[0]}\n    for ((i=1; i<len; i++)); do\n\
    \        curr=${list[i]}\n        diff=$((curr-prev))\n        if [ $diff -gt\
    \ 0 ]; then\n            incr=1\n        elif [ $diff -lt 0 ]; then\n        \
    \    decr=1\n        fi\n        prev=$curr\n    done\n    if [ $incr -eq 1 -a\
    \ $decr -eq 0 ]; then\n        echo \"true\"\n    elif [ $incr -eq 0 -a $decr\
    \ -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n   \
    \ fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local\
    \ -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n      \
    \  if ((curr > prev)); then\n            ((incr++))\n        elif ((curr < prev));\
    \ then\n            ((decr++))\n        fi\n        prev=$curr\n    done\n   \
    \ if ((incr == len-1)) || ((decr == len-1)); then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local direction=0\n    local last=$(echo\
    \ \"${list[0]}\" | bc)\n    for i in \"${list[@]:1}\"; do\n        local next=$(echo\
    \ \"$i\" | bc)\n        if [[ $direction == 0 ]]; then\n            if [[ $next\
    \ -gt $last ]]; then\n                direction=1\n            elif [[ $next -lt\
    \ $last ]]; then\n                direction=-1\n            fi\n        elif [[\
    \ $direction == 1 ]]; then\n            if [[ $next -lt $last ]]; then\n     \
    \           echo \"false\"\n                return\n            fi\n        elif\
    \ [[ $direction == -1 ]]; then\n            if [[ $next -gt $last ]]; then\n \
    \               echo \"false\"\n                return\n            fi\n     \
    \   fi\n        last=$next\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    if [ $len -eq 1 ]; then\n     \
    \   echo \"true\"\n        return\n    fi\n    for ((i=0; i<$len-1; i++)); do\n\
    \        if [ ${list[$i]} -lt ${list[$i+1]} ]; then\n            incr=1\n    \
    \    elif [ ${list[$i]} -gt ${list[$i+1]} ]; then\n            decr=1\n      \
    \  fi\n    done\n    if [ $incr -eq 1 -a $decr -eq 0 ]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -a diffs\n    local i\n  \
    \  local diff\n    local prev_diff\n    local prev_sign\n    local sign\n    local\
    \ prev_val\n    local val\n    local prev_i\n    local is_monotonic=true\n   \
    \ local is_increasing=true\n    local is_decreasing=true\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        val=${arr[$i]}\n        if [[ $i -gt 0 ]]; then\n       \
    \     diff=$((val - prev_val))\n            diffs+=($diff)\n            sign=$(sign\
    \ $diff)\n            if [[ $i -gt 1 ]]; then\n                if [[ $sign !=\
    \ $prev_sign ]]; then\n                    is_monotonic=false\n              \
    \      break\n                fi\n            fi\n            prev_sign=$sign\n\
    \        fi\n        prev_val=$val\n    done\n    if [[ $is_monotonic == true\
    \ ]]; then\n        for ((i=0; i<${#diffs[@]}; i++)); do\n            diff=${diffs[$i]}\n\
    \            if [[ $i -gt 0 ]]; then\n                if [[ $diff -lt $prev_diff\
    \ ]]; then\n                    is_increasing=false\n                    break\n\
    \                fi\n            fi\n            prev_diff=$diff\n        done\n\
    \        for ((i=0; i<${#diffs[@]}; i++)); do\n            diff=${diffs[$i]}\n\
    \            if [[ $i -gt 0 ]]; then\n                if [[ $diff -gt $prev_diff\
    \ ]]; then\n                    is_decreasing=false\n                    break\n\
    \                fi\n            fi\n            prev_diff=$diff\n        done\n\
    \    fi\n    if [[ $is_increasing == true ]]; then\n        echo true\n    elif\
    \ [[ $is_decreasing == true ]]; then\n        echo true\n    else\n        echo\
    \ false\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$@\"\n    local n=$(echo \"$list\" | wc -w)\n\
    \    local i=1\n    local prev=$(echo \"$list\" | cut -d' ' -f1)\n    local inc=0\n\
    \    local dec=0\n    while [ $i -lt $n ]; do\n        local curr=$(echo \"$list\"\
    \ | cut -d' ' -f$((i+1)))\n        if [ $curr -gt $prev ]; then\n            inc=$((inc+1))\n\
    \        elif [ $curr -lt $prev ]; then\n            dec=$((dec+1))\n        fi\n\
    \        prev=$curr\n        i=$((i+1))\n    done\n    if [ $inc -eq $((n-1))\
    \ ] || [ $dec -eq $((n-1)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i prev=${list[0]}\n\
    \    local -i curr=0\n    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n\
    \        if ((curr > prev)); then\n            increasing=1\n        elif ((curr\
    \ < prev)); then\n            decreasing=1\n        fi\n        if ((increasing\
    \ && decreasing)); then\n            echo \"false\"\n            return\n    \
    \    fi\n        prev=$curr\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i sign=0\n    local -i result=1\n    local -i prev=0\n    local -i\
    \ curr=0\n    if (( len < 2 )); then\n        echo \"true\"\n        return\n\
    \    fi\n    prev=${list[0]}\n    for (( i=1; i<len; i++ )); do\n        curr=${list[i]}\n\
    \        if (( prev == curr )); then\n            continue\n        fi\n     \
    \   if (( sign == 0 )); then\n            if (( prev < curr )); then\n       \
    \         sign=1\n            else\n                sign=-1\n            fi\n\
    \        fi\n        if (( sign == 1 && prev > curr )); then\n            result=0\n\
    \            break\n        elif (( sign == -1 && prev < curr )); then\n     \
    \       result=0\n            break\n        fi\n        prev=$curr\n    done\n\
    \    if (( result == 1 )); then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n  \
    \  [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local i\n    for\
    \ ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[$i]=$((list[$i+1]-list[$i]))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$1\"\n    local incr=0\n    local decr=0\n   \
    \ local prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n  \
    \      if [ $prev -eq 0 ]; then\n            prev=$curr\n            continue\n\
    \        fi\n        if [ $prev -lt $curr ]; then\n            incr=1\n      \
    \  elif [ $prev -gt $curr ]; then\n            decr=1\n        fi\n        if\
    \ [ $incr -eq 1 ] && [ $decr -eq 1 ]; then\n            echo \"false\"\n     \
    \       return\n        fi\n        prev=$curr\n    done\n    echo \"true\"\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local direction=0\n    local last=${list[0]}\n\
    \    for i in ${list[@]:1}; do\n        if [[ $i -gt $last ]]; then\n        \
    \    if [[ $direction -lt 0 ]]; then\n                echo \"false\"\n       \
    \         return\n            fi\n            direction=1\n        elif [[ $i\
    \ -lt $last ]]; then\n            if [[ $direction -gt 0 ]]; then\n          \
    \      echo \"false\"\n                return\n            fi\n            direction=-1\n\
    \        fi\n        last=$i\n    done\n    echo \"true\"\n}\n\ncandidate() {\n\
    \    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2\
    \ 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a a=($@)\n    local -a b=($@)\n    local -a c=($@)\n\
    \    local -a d=($@)\n    local -a e=($@)\n    local -a f=($@)\n    local -a g=($@)\n\
    \    local -a h=($@)\n    local -a i=($@)\n    local -a j=($@)\n    local -a k=($@)\n\
    \    local -a l=($@)\n    local -a m=($@)\n    local -a n=($@)\n    local -a o=($@)\n\
    \    local -a p=($@)\n    local -a q=($@)\n    local -a r=($@)\n    local -a s=($@)\n\
    \    local -a t=($@)\n    local -a u=($@)\n    local -a v=($@)\n    local -a w=($@)\n\
    \    local -a x=($@)\n    local -a y=($@)\n    local -a z=($@)\n    local -a A=($@)\n\
    \    local -a B=($@)\n    local -a C=($@)\n    local -a D=($@)\n    local -a E=($@)\n\
    \    local -a F=($@)\n    local -a G=($@)\n    local -a H=($@)\n    local -a I=($@)\n\
    \    local -a J=($@)\n    local -a K=($@)\n    local -a L=($@)\n    local -a M=($@)\n\
    \    local -a N=($@)\n    local -a O=($@)\n    local -a P=($@)\n    local -a Q=($@)\n\
    \    local -a R=($@)\n    local -a S=($@)\n    local -a T=($@)\n    local -a U=($@)\n\
    \    local -a V=($@)\n    local -a W=($@)\n    local -a X=($@)\n    local -a Y=($@)\n\
    \   \n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a arr=(\"$@\")\n    local -a diffs\n    local i\n  \
    \  for ((i=0; i<${#arr[@]}-1; i++)); do\n        diffs[i]=$((arr[i+1]-arr[i]))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u))\n    if (( ${#uniq_diffs[@]} == 1 )); then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -a diffs\n    local -i i\n  \
    \  local -i len=${#list[@]}\n    local -i d\n    local -i prev_d\n    local -i\
    \ is_monotonic=1\n    for ((i=1; i<len; i++)); do\n        d=${list[i]}-${list[i-1]}\n\
    \        diffs+=($d)\n    done\n    for ((i=1; i<len-1; i++)); do\n        d=${diffs[i]}\n\
    \        prev_d=${diffs[i-1]}\n        if ((d*prev_d < 0)); then\n           \
    \ is_monotonic=0\n            break\n        fi\n    done\n    echo $is_monotonic\n\
    }\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0\
    \ -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5\
    \ 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=\"$@\"\n    local prev=$(echo \"$list\" | head -n\
    \ 1)\n    local increasing=true\n    local decreasing=true\n    for i in $list;\
    \ do\n        if [[ $i -lt $prev ]]; then\n            increasing=false\n    \
    \    fi\n        if [[ $i -gt $prev ]]; then\n            decreasing=false\n \
    \       fi\n        prev=$i\n    done\n    if [[ $increasing == true || $decreasing\
    \ == true ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2\
    \ 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: 'b''/tmp/tmp_tb58xcw.sh: line 15: [[: 1 2 4 10: syntax error in expression
    (error token is "2 4 10")\n/tmp/tmp_tb58xcw.sh: line 18: [[: 1 2 4 10: syntax
    error in expression (error token is "2 4 10")\n/tmp/tmp_tb58xcw.sh: line 15: [[:
    1 2 4 20: syntax error in expression (error token is "2 4 20")\n/tmp/tmp_tb58xcw.sh:
    line 18: [[: 1 2 4 20: syntax error in expression (error token is "2 4 20")\n/tmp/tmp_tb58xcw.sh:
    line 15: [[: 1 20 4 10: syntax error in expression (error token is "20 4 10")\n/tmp/tmp_tb58xcw.sh:
    line 18: [[: 1 20 4 10: syntax error in expression (error token is "20 4 10")\n/tmp/tmp_tb58xcw.sh:
    line 15: [[: 4 1 0 -10: syntax error in expression (error token is "1 0 -10")\n/tmp/tmp_tb58xcw.sh:
    line 18: [[: 4 1 0 -10: syntax error in expression (error token is "1 0 -10")\n/tmp/tmp_tb58xcw.sh:
    line 15: [[: 4 1 1 0: syntax error in expression (error token is "1 1 0")\n/tmp/tmp_tb58xcw.sh:
    line 18: [[: 4 1 1 0: syntax error in expression (error token is "1 1 0")\n/tmp/tmp_tb58xcw.sh:
    line 15: [[: 1 2 3 2 5 60: syntax error in expression (error token is "2 3 2 5
    60")\n/tmp/tmp_tb58xcw.sh: line 18: [[: 1 2 3 2 5 60: syntax error in expression
    (error token is "2 3 2 5 60")\n/tmp/tmp_tb58xcw.sh: line 15: [[: 1 2 3 4 5 60:
    syntax error in expression (error token is "2 3 4 5 60")\n/tmp/tmp_tb58xcw.sh:
    line 18: [[: 1 2 3 4 5 60: syntax error in expression (error token is "2 3 4 5
    60")\n/tmp/tmp_tb58xcw.sh: line 15: [[: 9 9 9 9: syntax error in expression (error
    token is "9 9 9")\n/tmp/tmp_tb58xcw.sh: line 18: [[: 9 9 9 9: syntax error in
    expression (error token is "9 9 9")\n'''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i diff=0\n \
    \   local -i prev_diff=0\n    local -i first_diff=0\n    local -i first_diff_set=0\n\
    \    local -i first_diff_increasing=0\n    local -i first_diff_decreasing=0\n\
    \    local -i first_diff_zero=0\n    local -i first_diff_nonzero=0\n    local\
    \ -i first_diff_positive=0\n    local -i first_diff_negative=0\n    local -i first_diff_nonpositive=0\n\
    \    local -i first_diff_nonnegative=0\n    local -i first_diff_nonzero_positive=0\n\
    \    local -i first_diff_nonzero_negative=0\n    local -i first_diff_nonzero_nonpositive=0\n\
    \    local -i first_diff_nonzero_nonnegative=0\n    local -i first_diff_zero_positive=0\n\
    \    local -i first_diff_zero_negative=0\n    local -i first_diff_zero_nonpositive=0\n\
    \    local -i first_diff_zero_nonnegative=0\n    local -i first_diff_nonzero_positive_increasing=0\n\
    \    local -i first_diff_nonzero_negative_increasing=0\n    local -i first_diff_nonzero_nonpositive_increasing=0\n\
    \    local -i first_diff_nonzero_nonnegative_increasing=0\n    local -i first_diff_zero_positive_increasing=0\n\
    \    local -i first_diff_zero_negative_increasing=0\n    local -i first_diff_zero_nonpositive_increasing=0\n\
    \    local -i first_diff_zero_nonnegative_increasing=0\n    local -i first_diff_nonzero_positive_decreasing=0\n\
    \    local -i first_diff_nonzero_negative_decreasing=0\n    local -i first_diff_nonzero_nonpositive_decreasing=0\n\
    \    local -i first_diff_non\n}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n\
    \    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i ret=0\n    local -i is_monotonic=0\n\
    \    local -i is_increasing=0\n    local -i is_decreasing=0\n\n    if [ $len -lt\
    \ 2 ]; then\n        echo \"true\"\n        return 0\n    fi\n\n    for ((i=0;\
    \ i<len; i++)); do\n        curr=${list[$i]}\n        if [ $i -eq 0 ]; then\n\
    \            prev=$curr\n            continue\n        fi\n        if [ $i -eq\
    \ $((len-1)) ]; then\n            next=$curr\n            break\n        fi\n\
    \        next=${list[$((i+1))]}\n        if [ $curr -eq $prev ]; then\n      \
    \      continue\n        fi\n        if [ $curr -gt $prev ]; then\n          \
    \  incr=1\n        else\n            decr=1\n        fi\n        if [ $incr -eq\
    \ 1 ] && [ $decr -eq 1 ]; then\n            echo \"false\"\n            return\
    \ 1\n        fi\n        prev=$curr\n    done\n\n    if [ $incr -eq 1 ]; then\n\
    \        if [ $curr -gt $next ]; then\n            echo \"false\"\n          \
    \  return 1\n        fi\n    fi\n    if [ $decr -eq 1 ]; then\n        if [ $curr\
    \ -lt $next ]; then\n            echo \"false\"\n            return 1\n      \
    \  fi\n    fi\n    echo \"true\"\n    return 0\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 1
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a a=($@)\n    local -a b=($@)\n    local -a c=($@)\n\
    \    local -a d=($@)\n    local -a e=($@)\n    local -a f=($@)\n    local -a g=($@)\n\
    \    local -a h=($@)\n    local -a i=($@)\n    local -a j=($@)\n    local -a k=($@)\n\
    \    local -a l=($@)\n    local -a m=($@)\n    local -a n=($@)\n    local -a o=($@)\n\
    \    local -a p=($@)\n    local -a q=($@)\n    local -a r=($@)\n    local -a s=($@)\n\
    \    local -a t=($@)\n    local -a u=($@)\n    local -a v=($@)\n    local -a w=($@)\n\
    \    local -a x=($@)\n    local -a y=($@)\n    local -a z=($@)\n    local -a aa=($@)\n\
    \    local -a ab=($@)\n    local -a ac=($@)\n    local -a ad=($@)\n    local -a\
    \ ae=($@)\n    local -a af=($@)\n    local -a ag=($@)\n    local -a ah=($@)\n\
    \    local -a ai=($@)\n    local -a aj=($@)\n    local -a ak=($@)\n    local -a\
    \ al=($@)\n    local -a am=($@)\n    local -a an=($@)\n    local -a ao=($@)\n\
    \    local -a ap=($@)\n    local -a aq=($@)\n    local -a ar=($@)\n    local -a\
    \ as=($@)\n    local -a at=($@)\n    local -a au=($@)\n    local -a av=($@)\n\
    \    local -a aw=($@)\n    local -a ax=($@)\n    local -a ay\n}\n\ncandidate()\
    \ {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\
    \ 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[\
    \ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\"\
    ) = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"\
    true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local list=($@)\n    local i=0\n    local len=${#list[@]}\n\
    \    local inc=0\n    local dec=0\n    local prev=${list[0]}\n    while [ $i -lt\
    \ $len ]; do\n        local curr=${list[$i]}\n        if [ $curr -gt $prev ];\
    \ then\n            inc=1\n        elif [ $curr -lt $prev ]; then\n          \
    \  dec=1\n        fi\n        if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n    \
    \        echo \"false\"\n            return\n        fi\n        prev=$curr\n\
    \        i=$((i+1))\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    monotonic\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20\
    \ 4 10\") = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n  \
    \  [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388
- exit_code: 0
  program: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
    \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
    \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n\
    monotonic() {\n    local -a list=($@)\n    local -i i\n    local -i n=${#list[@]}\n\
    \    local -i increasing=1\n    local -i decreasing=1\n    for ((i=1; i<n; i++));\
    \ do\n        if ((list[i] < list[i-1])); then\n            increasing=0\n   \
    \     elif ((list[i] > list[i-1])); then\n            decreasing=0\n        fi\n\
    \    done\n    if ((increasing || decreasing)); then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    monotonic \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 10\") = \"true\" ]]\n\
    \    [[ $(candidate \"1 2 4 20\") = \"true\" ]]\n    [[ $(candidate \"1 20 4 10\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4 1 1 0\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 2 5 60\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"\
    9 9 9 9\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660344388

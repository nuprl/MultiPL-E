language: sh
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local factor=2\n\
    \    while [ $((n % factor)) -eq 0 ]; do\n        n=$((n / factor))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            largest_prime_factor\
    \ $(( n / i ))\n            return\n        fi\n        (( i++ ))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            largest_prime_factor\
    \ $(( n / i ))\n            return\n        fi\n        (( i++ ))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  local\
    \ max=0\n  while [ $i -le $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n      max=$i\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $max\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=\"$1\"\n    local\
    \ i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n  \
    \          largest_prime_factor $((n / i))\n            return\n        fi\n \
    \       i=$((i + 1))\n    done\n    echo \"$n\"\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    if [\
    \ $n -eq 1 ]; then\n        echo $i\n    else\n        echo $(largest_prime_factor\
    \ $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=41>
  stdout: <_io.BufferedReader name=39>
  timestamp: 1660340859
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( n > 1 )); do\n        while (( n % i == 0 )); do\n            n=$((\
    \ n / i ))\n        done\n        (( i++ ))\n    done\n    echo $(( i - 1 ))\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n     \
    \ i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    if [\
    \ $n -eq 1 ]; then\n        echo $i\n    else\n        echo $(largest_prime_factor\
    \ $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=41>
  stdout: <_io.BufferedReader name=39>
  timestamp: 1660340859
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local factor=2\n\
    \    while [ $((n % factor)) -eq 0 ]; do\n        n=$((n / factor))\n    done\n\
    \    if [ $n -eq 1 ]; then\n        echo $factor\n    else\n        factor=$((factor\
    \ + 1))\n        while [ $((n % factor)) -ne 0 ]; do\n            factor=$((factor\
    \ + 1))\n        done\n        largest_prime_factor $n\n    fi\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340859
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=\"$1\"\n    local\
    \ i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n  \
    \  echo \"$n\"\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  local\
    \ max=0\n  while [ $i -le $n ]; do\n    if [ $(($n % $i)) -eq 0 ]; then\n    \
    \  max=$i\n      n=$(($n / $i))\n    else\n      i=$(($i + 1))\n    fi\n  done\n\
    \  echo $max\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=\"$1\"\n    local\
    \ i=2\n    while ((i * i <= n)); do\n        if ((n % i == 0)); then\n       \
    \     n=$((n / i))\n        else\n            ((i++))\n        fi\n    done\n\
    \    echo \"$n\"\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( n > 1 )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( n > 1 )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n     \
    \ i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( n > 1 )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local factor=2\n\
    \    while (( n % factor != 0 )); do\n        (( factor++ ))\n    done\n    if\
    \ (( n == factor )); then\n        echo \"$n\"\n    else\n        largest_prime_factor\
    \ $(( n / factor ))\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( n > 1 )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            i=$(( i + 1 ))\n        fi\n    done\n \
    \   echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $i -lt $n ]; do\n    if [ $(($n % $i)) -eq 0 ]; then\n      n=$(($n / $i))\n\
    \    else\n      i=$(($i + 1))\n    fi\n  done\n  echo $n\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n / i))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        while (( n % i == 0 )); do\n        \
    \    n=$(( n / i ))\n        done\n        i=$(( i + 1 ))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local factor=2\n\
    \    while (( n > 1 )); do\n        while (( n % factor == 0 )); do\n        \
    \    n=$(( n / factor ))\n        done\n        factor=$(( factor + 1 ))\n   \
    \ done\n    echo $(( factor - 1 ))\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( n > 1 )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $i -lt $n ]; do\n    if [ $(($n % $i)) -eq 0 ]; then\n      n=$(($n / $i))\n\
    \    else\n      i=$(($i + 1))\n    fi\n  done\n  echo $n\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n    \
    \  i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local p=2\n\
    \    while (( n > 1 )); do\n        if (( n % p == 0 )); then\n            n=$((\
    \ n / p ))\n        else\n            p=$(( p + 1 ))\n        fi\n    done\n \
    \   echo $p\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n      \
    \      n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n \
    \   done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    local largest=1\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            largest=$i\n            n=$(( n / i ))\n        else\n   \
    \         i=$(( i + 1 ))\n        fi\n    done\n    echo $largest\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i * i <= n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n\
    \    else\n      (( i++ ))\n    fi\n  done\n  echo \"$n\"\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            local\
    \ n=$(( n / i ))\n            local i=$(( i - 1 ))\n        fi\n        local\
    \ i=$(( i + 1 ))\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i * i <= n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n\
    \    else\n      (( i++ ))\n    fi\n  done\n  echo \"$n\"\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n     \
    \ i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n      \
    \      n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n \
    \   done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            largest_prime_factor\
    \ $(( n / i ))\n            return\n        fi\n        (( i++ ))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while ((i < n)); do\n        if ((n % i == 0)); then\n            n=$((n\
    \ / i))\n        else\n            ((i++))\n        fi\n    done\n    echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            largest_prime_factor\
    \ $(( n / i ))\n            return\n        fi\n        (( i++ ))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    if [\
    \ $n -gt 1 ]; then\n        largest_prime_factor $n\n    else\n        echo $i\n\
    \    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340859
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n     \
    \ i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i * i <= n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n\
    \    else\n      (( i++ ))\n    fi\n  done\n  echo \"$n\"\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local factor=2\n\
    \  while [[ $((n % factor)) -eq 0 ]]; do\n    n=$((n / factor))\n  done\n  if\
    \ [[ $n -eq 1 ]]; then\n    echo $factor\n  else\n    factor=$((factor + 1))\n\
    \    while [[ $((n % factor)) -ne 0 ]]; do\n      factor=$((factor + 1))\n   \
    \ done\n    largest_prime_factor $n\n  fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340858
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        while (( n % i == 0 )); do\n            n=$((\
    \ n / i ))\n        done\n        (( i++ ))\n    done\n    echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n     \
    \ i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n      n=$((n / i))\n \
    \   else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    local max_prime=1\n    while [ $i -le $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            max_prime=$i\n            n=$((n / i))\n        else\n\
    \            i=$((i + 1))\n        fi\n    done\n    echo $max_prime\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local factor=2\n\
    \    while (( n % factor != 0 )); do\n        (( factor++ ))\n    done\n    if\
    \ (( n == factor )); then\n        echo \"$n\"\n    else\n        largest_prime_factor\
    \ $(( n / factor ))\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            local\
    \ n=$(( n / i ))\n            local i=2\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    if [\
    \ $n -eq 1 ]; then\n        echo $i\n    else\n        echo $(largest_prime_factor\
    \ $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=41>
  stdout: <_io.BufferedReader name=39>
  timestamp: 1660340859
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    if [\
    \ $n -eq 1 ]; then\n        echo $i\n    else\n        echo $(largest_prime_factor\
    \ $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=41>
  stdout: <_io.BufferedReader name=39>
  timestamp: 1660340859
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n     \
    \ i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i * i <= n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n\
    \    else\n      (( i++ ))\n    fi\n  done\n  echo \"$n\"\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            largest_prime_factor\
    \ $(( n / i ))\n            return\n        fi\n        (( i++ ))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n     \
    \ i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n / i))\n        i=$((i +\
    \ 1))\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    local max_prime=1\n    while (( n > 1 )); do\n        while (( n % i == 0\
    \ )); do\n            max_prime=$i\n            n=$(( n / i ))\n        done\n\
    \        i=$(( i + 1 ))\n    done\n    echo $max_prime\n}\n\ncandidate() {\n \
    \   largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [[ $((n % i)) -eq 0 ]]; do\n    n=$((n / i))\n    i=$((i + 1))\n  done\n  echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    if [\
    \ $n -eq 1 ]; then\n        echo $i\n    else\n        largest_prime_factor $n\n\
    \    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340859
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n / i))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n / i))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n     \
    \ i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            largest_prime_factor\
    \ $(( n / i ))\n            return\n        fi\n        (( i++ ))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=\"$1\"\n    local\
    \ i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n  \
    \  if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo $(largest_prime_factor\
    \ $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=29>
  stdout: <_io.BufferedReader name=16>
  timestamp: 1660340860
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while ((i < n)); do\n        if ((n % i == 0)); then\n            n=$((n\
    \ / i))\n        else\n            ((i++))\n        fi\n    done\n    echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        while (( n % i == 0 )); do\n        \
    \    n=$(( n / i ))\n        done\n        i=$(( i + 1 ))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $i -lt $n ]; do\n    if [ $(($n % $i)) -eq 0 ]; then\n      n=$(($n / $i))\n\
    \    else\n      i=$(($i + 1))\n    fi\n  done\n  echo $n\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n      \
    \      n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n \
    \   done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n     \
    \ i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if [ $n -eq 1 ]; then\n\
    \    echo $i\n  else\n    echo $n\n  fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n      \
    \      n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n \
    \   done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n / i))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n    if [\
    \ $n -eq 1 ]; then\n        echo $i\n    else\n        echo $(largest_prime_factor\
    \ $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=41>
  stdout: <_io.BufferedReader name=39>
  timestamp: 1660340859
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if [ $n -eq 1 ]; then\n\
    \    echo $i\n  else\n    echo $(largest_prime_factor $n)\n  fi\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=45>
  stdout: <_io.BufferedReader name=35>
  timestamp: 1660340859
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local p=2\n\
    \    while (( n % p == 0 )); do\n        n=$(( n / p ))\n    done\n    if (( n\
    \ == 1 )); then\n        echo $p\n    else\n        p=$(( p + 1 ))\n        while\
    \ (( n % p != 0 )); do\n            p=$(( p + 1 ))\n        done\n        largest_prime_factor\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340858
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        while (( n % i == 0 )); do\n        \
    \    n=$(( n / i ))\n        done\n        i=$(( i + 1 ))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            largest_prime_factor\
    \ $(( n / i ))\n            return\n        fi\n        (( i++ ))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    local n=$((n / i))\n            local i=2\n        else\n            local\
    \ i=$((i + 1))\n        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n / i))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i * i <= n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n\
    \    else\n      (( i++ ))\n    fi\n  done\n  echo \"$n\"\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $i -lt $n ]; do\n    if [ $(($n % $i)) -eq 0 ]; then\n      n=$(($n / $i))\n\
    \    else\n      i=$(($i + 1))\n    fi\n  done\n  echo $n\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n      \
    \      n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n \
    \   done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n     \
    \ i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    local max=0\n    while [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ];\
    \ then\n            max=$i\n            n=$((n / i))\n        else\n         \
    \   i=$((i + 1))\n        fi\n    done\n    echo $max\n}\n\ncandidate() {\n  \
    \  largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        while (( n % i == 0 )); do\n        \
    \    n=$(( n / i ))\n        done\n        i=$(( i + 1 ))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        while (( n % i == 0 )); do\n        \
    \    n=$(( n / i ))\n        done\n        i=$(( i + 1 ))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local p=2\n  while\
    \ ((n > 1)); do\n    if ((n % p == 0)); then\n      n=$((n / p))\n    else\n \
    \     p=$((p + 1))\n    fi\n  done\n  echo $p\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( n % i != 0 )); do\n        (( i++ ))\n    done\n    if (( n == i\
    \ )); then\n        echo \"$n\"\n    else\n        largest_prime_factor $(( n\
    \ / i ))\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $i -lt $n ]; do\n    if [ $(($n % $i)) -eq 0 ]; then\n      local n=$(($n\
    \ / $i))\n    else\n      local i=$(($i + 1))\n    fi\n  done\n  echo $n\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n      \
    \      n=$(($n / $i))\n        else\n            i=$(($i + 1))\n        fi\n \
    \   done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=\"$1\"\n    local\
    \ i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n    done\n  \
    \  echo \"$n\"\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n / i))\n        i=$((i +\
    \ 1))\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if [ $n -eq 1 ]; then\n\
    \    echo $i\n  else\n    echo $(largest_prime_factor $n)\n  fi\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=45>
  stdout: <_io.BufferedReader name=35>
  timestamp: 1660340859
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n    \
    \  i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $i\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  local\
    \ max=0\n  while [ $i -le $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n      max=$i\n\
    \      n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $max\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if [ $n -eq 1 ]; then\n\
    \    echo $i\n  else\n    largest_prime_factor $n\n  fi\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340859
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n    \
    \  i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            largest_prime_factor\
    \ $(( n / i ))\n            return\n        fi\n        (( i++ ))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$(( n / i ))\n    \
    \  i=2\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    largest_prime_factor $((n / i))\n            return\n        fi\n       \
    \ i=$((i + 1))\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i * i <= n )); do\n        if (( n % i == 0 )); then\n         \
    \   n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i < n )); do\n        if (( n % i == 0 )); then\n            largest_prime_factor\
    \ $(( n / i ))\n            return\n        fi\n        (( i++ ))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=\"$1\"\n  local i=2\n\
    \  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  echo \"$n\"\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [[ $((n % i)) -eq 0 ]]; do\n        n=$((n / i))\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n  local n=$1\n  local i=2\n  while\
    \ [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local factor=2\n\
    \    while (( n > 1 )); do\n        while (( n % factor == 0 )); do\n        \
    \    n=$(( n / factor ))\n        done\n        factor=$(( factor + 1 ))\n   \
    \ done\n    echo $(( factor - 1 ))\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while ((i * i <= n)); do\n        while ((n % i == 0)); do\n            n=$((n\
    \ / i))\n        done\n        i=$((i + 1))\n    done\n    echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340855
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n# >>> $(largest_prime_factor \"13195\")\n# \"29\"\n# >>> $(largest_prime_factor\
    \ \"2048\")\n# \"2\"\nlargest_prime_factor() {\n    local n=$1\n    local i=2\n\
    \    while (( i <= n )); do\n        if (( n % i == 0 )); then\n            n=$((\
    \ n / i ))\n            i=2\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660340854

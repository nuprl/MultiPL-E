language: notypes.py
name: HumanEval_157_right_angle_triangle
results:
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # Write your code here\n    if a**2 + b**2 ==\
    \ c**2:\n        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcqou1scx.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpcqou1scx.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpcqou1scx.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_x9sh3t.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpr_x9sh3t.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpr_x9sh3t.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        if a**2 == b**2\
    \ + c**2:\n            return True\n        else:\n            return False\n\
    \    elif b > a and b > c:\n        if b**2 == a**2 + c**2:\n            return\
    \ True\n        else:\n            return False\n    elif c > a and c > b:\n \
    \       if c**2 == a**2 + b**2:\n            return True\n        else:\n    \
    \        return False\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvlj4kjhb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpvlj4kjhb.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpvlj4kjhb.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Implement me\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj8mmelnp.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpj8mmelnp.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpj8mmelnp.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        if a**2 == b**2\
    \ + c**2:\n            return True\n        else:\n            return False\n\
    \    elif b > a and b > c:\n        if b**2 == a**2 + c**2:\n            return\
    \ True\n        else:\n            return False\n    elif c > a and c > b:\n \
    \       if c**2 == a**2 + b**2:\n            return True\n        else:\n    \
    \        return False\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        if a**2 == b**2\
    \ + c**2:\n            return True\n        else:\n            return False\n\
    \    elif b > a and b > c:\n        if b**2 == a**2 + c**2:\n            return\
    \ True\n        else:\n            return False\n    elif c > a and c > b:\n \
    \       if c**2 == a**2 + b**2:\n            return True\n        else:\n    \
    \        return False\n    else:\n        return False\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    sides = [a, b, c]\n    sides.sort()\n    return\
    \ sides[0]**2 + sides[1]**2 == sides[2]**2\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert\
    \ candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert\
    \ candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert\
    \ candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert\
    \ candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert\
    \ candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a**2 == b**2\
    \ + c**2\n    elif b > a and b > c:\n        return b**2 == a**2 + c**2\n    elif\
    \ c > a and c > b:\n        return c**2 == a**2 + b**2\n    else:\n        return\
    \ False\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n  \
    \  assert candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n\
    \    assert candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n\
    \    assert candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n\
    \    assert candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) ==\
    \ True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10)\
    \ == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: write your code here\n    if a**2 + b**2\
    \ == c**2:\n        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe996mlv4.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpe996mlv4.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpe996mlv4.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    return a**2 + b**2 == c**2\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9fdy4t9u.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9fdy4t9u.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp9fdy4t9u.py\"\
    , line 18, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    return False\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n\
    \    assert candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n\
    \    assert candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n\
    \    assert candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n\
    \    assert candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) ==\
    \ True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10)\
    \ == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp6egmeek.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpp6egmeek.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpp6egmeek.py\"\
    , line 20, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n    raise NotImplementedError()\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73ma4myz.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp73ma4myz.py\", line 35,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp73ma4myz.py\"\
    , line 24, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    if a**2 + b**2\
    \ == c**2:\n        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyavknpgq.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpyavknpgq.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpyavknpgq.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a**2 == b**2\
    \ + c**2\n    elif b > a and b > c:\n        return b**2 == a**2 + c**2\n    elif\
    \ c > a and c > b:\n        return c**2 == a**2 + b**2\n    else:\n        return\
    \ False\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert\
    \ candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert\
    \ candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert\
    \ candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert\
    \ candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) == True\n   \
    \ assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\
    \ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a**2 == b**2\
    \ + c**2\n    elif b > a and b > c:\n        return b**2 == a**2 + c**2\n    elif\
    \ c > a and c > b:\n        return c**2 == a**2 + b**2\n    else:\n        return\
    \ False\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert\
    \ candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert\
    \ candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert\
    \ candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert\
    \ candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) == True\n   \
    \ assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\
    \ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    return (a**2\
    \ + b**2 == c**2) or (a**2 + c**2 == b**2) or (b**2 + c**2 == a**2)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a**2 == b**2\
    \ + c**2\n    elif b > a and b > c:\n        return b**2 == a**2 + c**2\n    elif\
    \ c > a and c > b:\n        return c**2 == a**2 + b**2\n    else:\n        return\
    \ False\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert\
    \ candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert\
    \ candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert\
    \ candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert\
    \ candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) == True\n   \
    \ assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\
    \ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # Write your code here\n    if a**2 + b**2 ==\
    \ c**2:\n        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcqou1scx.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpcqou1scx.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpcqou1scx.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a ** 2 ==\
    \ b ** 2 + c ** 2\n    elif b > a and b > c:\n        return b ** 2 == a ** 2\
    \ + c ** 2\n    elif c > a and c > b:\n        return c ** 2 == a ** 2 + b **\
    \ 2\n    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a**2 == b**2\
    \ + c**2\n    elif b > a and b > c:\n        return b**2 == a**2 + c**2\n    elif\
    \ c > a and c > b:\n        return c**2 == a**2 + b**2\n    else:\n        return\
    \ False\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n  \
    \  assert candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n\
    \    assert candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n\
    \    assert candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n\
    \    assert candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) ==\
    \ True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10)\
    \ == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a ** 2 ==\
    \ b ** 2 + c ** 2\n    elif b > a and b > c:\n        return b ** 2 == a ** 2\
    \ + c ** 2\n    elif c > a and c > b:\n        return c ** 2 == a ** 2 + b **\
    \ 2\n    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a ** 2 ==\
    \ b ** 2 + c ** 2\n    elif b > a and b > c:\n        return b ** 2 == a ** 2\
    \ + c ** 2\n    elif c > a and c > b:\n        return c ** 2 == a ** 2 + b **\
    \ 2\n    else:\n        return False\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvlj4kjhb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpvlj4kjhb.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpvlj4kjhb.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a > b and a > c:\n \
    \       if a**2 == b**2 + c**2:\n            return True\n        else:\n    \
    \        return False\n    elif b > a and b > c:\n        if b**2 == a**2 + c**2:\n\
    \            return True\n        else:\n            return False\n    elif c\
    \ > a and c > b:\n        if c**2 == a**2 + b**2:\n            return True\n \
    \       else:\n            return False\n    else:\n        return False\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_x9sh3t.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpr_x9sh3t.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpr_x9sh3t.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    if a**2 + b**2\
    \ == c**2:\n        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyavknpgq.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpyavknpgq.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpyavknpgq.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_x9sh3t.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpr_x9sh3t.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpr_x9sh3t.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvlj4kjhb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpvlj4kjhb.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpvlj4kjhb.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_x9sh3t.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpr_x9sh3t.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpr_x9sh3t.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: write your code here\n    if a**2 + b**2\
    \ == c**2:\n        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe996mlv4.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpe996mlv4.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpe996mlv4.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_x9sh3t.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpr_x9sh3t.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpr_x9sh3t.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    return (a**2 + b**2 == c**2) or (a**2 + c**2\
    \ == b**2) or (b**2 + c**2 == a**2)\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    return a**2 + b**2 == c**2\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9fdy4t9u.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9fdy4t9u.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp9fdy4t9u.py\"\
    , line 18, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_x9sh3t.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpr_x9sh3t.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpr_x9sh3t.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a**2 == b**2\
    \ + c**2\n    elif b > a and b > c:\n        return b**2 == a**2 + c**2\n    elif\
    \ c > a and c > b:\n        return c**2 == a**2 + b**2\n    else:\n        return\
    \ False\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert\
    \ candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert\
    \ candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert\
    \ candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert\
    \ candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) == True\n   \
    \ assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\
    \ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    return a**2 + b**2 == c**2\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9fdy4t9u.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9fdy4t9u.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp9fdy4t9u.py\"\
    , line 18, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # Your code here\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3_jbmrgy.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp3_jbmrgy.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp3_jbmrgy.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: implement this function\n    if a**2\
    \ + b**2 == c**2:\n        return True\n    else:\n        return False\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zo6dkdb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp4zo6dkdb.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp4zo6dkdb.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a**2 == b**2\
    \ + c**2\n    elif b > a and b > c:\n        return b**2 == a**2 + c**2\n    elif\
    \ c > a and c > b:\n        return c**2 == a**2 + b**2\n    else:\n        return\
    \ False\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert\
    \ candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert\
    \ candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert\
    \ candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert\
    \ candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) == True\n   \
    \ assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\
    \ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_x9sh3t.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpr_x9sh3t.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpr_x9sh3t.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # Write your code here\n    if a**2 + b**2 ==\
    \ c**2:\n        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcqou1scx.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpcqou1scx.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpcqou1scx.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo96ni6fe.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpo96ni6fe.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpo96ni6fe.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: implement the function\n    if (a**2\
    \ + b**2 == c**2) or (a**2 + c**2 == b**2) or (b**2 + c**2 == a**2):\n       \
    \ return True\n    else:\n        return False\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert\
    \ candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert\
    \ candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert\
    \ candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert\
    \ candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert\
    \ candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_x9sh3t.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpr_x9sh3t.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpr_x9sh3t.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: write code here\n    if a**2 + b**2 ==\
    \ c**2:\n        return True\n    else:\n        return False\n    \n    \ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1kvajd12.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp1kvajd12.py\", line 34,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp1kvajd12.py\"\
    , line 23, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo96ni6fe.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpo96ni6fe.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpo96ni6fe.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: implement this function\n    if a**2\
    \ + b**2 == c**2:\n        return True\n    else:\n        return False\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zo6dkdb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp4zo6dkdb.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp4zo6dkdb.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: implement this function\n    pass\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3x71f_vr.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp3x71f_vr.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp3x71f_vr.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a**2 == b**2\
    \ + c**2\n    elif b > a and b > c:\n        return b**2 == a**2 + c**2\n    elif\
    \ c > a and c > b:\n        return c**2 == a**2 + b**2\n    else:\n        return\
    \ False\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert\
    \ candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert\
    \ candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert\
    \ candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert\
    \ candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) == True\n   \
    \ assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\
    \ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a ** 2 ==\
    \ b ** 2 + c ** 2\n    elif b > a and b > c:\n        return b ** 2 == a ** 2\
    \ + c ** 2\n    elif c > a and c > b:\n        return c ** 2 == a ** 2 + b **\
    \ 2\n    else:\n        return False\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: implement the function\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3vmnb1jm.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp3vmnb1jm.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp3vmnb1jm.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # Your code here\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3_jbmrgy.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp3_jbmrgy.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp3_jbmrgy.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        if a**2 == b**2\
    \ + c**2:\n            return True\n        else:\n            return False\n\
    \    elif b > a and b > c:\n        if b**2 == a**2 + c**2:\n            return\
    \ True\n        else:\n            return False\n    elif c > a and c > b:\n \
    \       if c**2 == a**2 + b**2:\n            return True\n        else:\n    \
    \        return False\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a ** 2 ==\
    \ b ** 2 + c ** 2\n    elif b > a and b > c:\n        return b ** 2 == a ** 2\
    \ + c ** 2\n    elif c > a and c > b:\n        return c ** 2 == a ** 2 + b **\
    \ 2\n    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        if a ** 2 == b **\
    \ 2 + c ** 2:\n            return True\n        else:\n            return False\n\
    \    elif b > a and b > c:\n        if b ** 2 == a ** 2 + c ** 2:\n          \
    \  return True\n        else:\n            return False\n    elif c > a and c\
    \ > b:\n        if c ** 2 == a ** 2 + b ** 2:\n            return True\n     \
    \   else:\n            return False\n    else:\n        return False\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n    raise NotImplementedError()\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73ma4myz.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp73ma4myz.py\", line 35,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp73ma4myz.py\"\
    , line 24, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a**2 == b**2\
    \ + c**2\n    elif b > a and b > c:\n        return b**2 == a**2 + c**2\n    elif\
    \ c > a and c > b:\n        return c**2 == a**2 + b**2\n    else:\n        return\
    \ False\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert\
    \ candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert\
    \ candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert\
    \ candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert\
    \ candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) == True\n   \
    \ assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\
    \ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    return False\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuh51ysbk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpuh51ysbk.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuh51ysbk.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    return (a**2\
    \ + b**2 == c**2) or (a**2 + c**2 == b**2) or (b**2 + c**2 == a**2)\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvlj4kjhb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpvlj4kjhb.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpvlj4kjhb.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_x9sh3t.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpr_x9sh3t.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpr_x9sh3t.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if (a**2 + b**2 == c**2)\
    \ or (a**2 + c**2 == b**2) or (b**2 + c**2 == a**2):\n        return True\n  \
    \  else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a < 0 or b < 0 or c < 0:\n        return False\n\
    \    if a > b and a > c:\n        return a**2 == b**2 + c**2\n    elif b > a and\
    \ b > c:\n        return b**2 == a**2 + c**2\n    elif c > a and c > b:\n    \
    \    return c**2 == a**2 + b**2\n    else:\n        return False\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    return a**2 + b**2 == c**2\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9fdy4t9u.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9fdy4t9u.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp9fdy4t9u.py\"\
    , line 18, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: write your code here\n    if a > b and\
    \ a > c:\n        if a**2 == b**2 + c**2:\n            return True\n        else:\n\
    \            return False\n    elif b > a and b > c:\n        if b**2 == a**2\
    \ + c**2:\n            return True\n        else:\n            return False\n\
    \    elif c > a and c > b:\n        if c**2 == a**2 + b**2:\n            return\
    \ True\n        else:\n            return False\n    else:\n        return False\n\
    \ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: write your code here\n    if a > b and\
    \ a > c:\n        return a**2 == b**2 + c**2\n    elif b > a and b > c:\n    \
    \    return b**2 == a**2 + c**2\n    elif c > a and c > b:\n        return c**2\
    \ == a**2 + b**2\n    else:\n        return False\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        return a**2 == b**2\
    \ + c**2\n    elif b > a and b > c:\n        return b**2 == a**2 + c**2\n    elif\
    \ c > a and c > b:\n        return c**2 == a**2 + b**2\n    else:\n        return\
    \ False\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert\
    \ candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert\
    \ candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert\
    \ candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert\
    \ candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) == True\n   \
    \ assert candidate(1, 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\
    \ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    return False\n\
    \n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuh51ysbk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpuh51ysbk.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuh51ysbk.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    if a**2 + b**2\
    \ == c**2:\n        return True\n    return False\n\ndef check(candidate):\n \
    \   assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmyidb4bo.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpmyidb4bo.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpmyidb4bo.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: implement this function\n    pass\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3x71f_vr.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp3x71f_vr.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp3x71f_vr.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a > b and a > c:\n        if a**2 == b**2\
    \ + c**2:\n            return True\n        else:\n            return False\n\
    \    elif b > a and b > c:\n        if b**2 == a**2 + c**2:\n            return\
    \ True\n        else:\n            return False\n    elif c > a and c > b:\n \
    \       if c**2 == a**2 + b**2:\n            return True\n        else:\n    \
    \        return False\n    else:\n        return False\n    \n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2uhuf1p6.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp2uhuf1p6.py\", line 35,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp2uhuf1p6.py\"\
    , line 24, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvlj4kjhb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpvlj4kjhb.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpvlj4kjhb.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: 0
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # check if the three sides form a triangle\n\
    \    if a + b <= c or a + c <= b or b + c <= a:\n        return False\n    # check\
    \ if the three sides form a right-angled triangle\n    if a ** 2 + b ** 2 == c\
    \ ** 2 or a ** 2 + c ** 2 == b ** 2 or b ** 2 + c ** 2 == a ** 2:\n        return\
    \ True\n    return False\n\ndef check(candidate):\n    assert candidate(3, 4,\
    \ 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo96ni6fe.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpo96ni6fe.py\", line 30,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpo96ni6fe.py\"\
    , line 17, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\n\
    def check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu0ca08gf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpu0ca08gf.py\", line 31,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpu0ca08gf.py\"\
    , line 18, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprr61kn71.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprr61kn71.py\", line 29,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmprr61kn71.py\"\
    , line 16, in check\n    assert candidate(3, 4, 5) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # YOUR CODE HERE\n    if a**2 + b**2 == c**2:\n\
    \        return True\n    else:\n        return False\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == True\n    assert candidate(1, 2, 3) == False\n\
    \    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n\
    \    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n\
    \    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n\
    \    assert candidate(48, 55, 73) == True\n    assert candidate(1, 1, 1) == False\n\
    \    assert candidate(2, 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwgh40x0.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpuwgh40x0.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmpuwgh40x0.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    if a**2 + b**2 == c**2:\n        return True\n\
    \    else:\n        return False\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == True\n    assert candidate(1, 2, 3) == False\n    assert candidate(10,\
    \ 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7,\
    \ 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5,\
    \ 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48,\
    \ 55, 73) == True\n    assert candidate(1, 1, 1) == False\n    assert candidate(2,\
    \ 2, 10) == False\n\ndef test_check():\n    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8qx6a5k.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmps8qx6a5k.py\", line 32,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmps8qx6a5k.py\"\
    , line 21, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127
- exit_code: -1
  program: "def right_angle_triangle(a, b, c):\n    \"\"\"\n    Given the lengths\
    \ of the three sides of a triangle. Return True if the three\n    sides form a\
    \ right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle\
    \ in which one angle is right angle or \n    90 degree.\n    Example:\n    >>>\
    \ right_angle_triangle(3, 4, 5)\n    True\n    >>> right_angle_triangle(1, 2,\
    \ 3)\n    False\n    \"\"\"\n    # TODO: implement this function\n    if a**2\
    \ + b**2 == c**2:\n        return True\n    else:\n        return False\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == True\n    assert candidate(1,\
    \ 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2,\
    \ 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10,\
    \ 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15,\
    \ 8, 17) == True\n    assert candidate(48, 55, 73) == True\n    assert candidate(1,\
    \ 1, 1) == False\n    assert candidate(2, 2, 10) == False\n\ndef test_check():\n\
    \    check(right_angle_triangle)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zo6dkdb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp4zo6dkdb.py\", line 33,\
    \ in test_check\n    check(right_angle_triangle)\n  File \"/tmp/tmp4zo6dkdb.py\"\
    , line 22, in check\n    assert candidate(10, 6, 8) == True\nAssertionError\n"
  stdout: ''
  timestamp: 1660271127

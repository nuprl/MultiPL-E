language: notypes.py
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: -1
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    # TODO: implement this function\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv8fdilal.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpv8fdilal.py\", line 20,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpv8fdilal.py\"\
    , line 13, in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    # TODO: implement this function\n    return len(set(string.lower()))\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    # TODO: implement this function\n    return len(set(string.lower()))\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: -1
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    # TODO: Write your code here\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaasobqhr.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpaasobqhr.py\", line 20,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpaasobqhr.py\"\
    , line 13, in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    # TODO: implement this\n    return len(set(string.lower()))\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: -1
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    # TODO: implement this function\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv8fdilal.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpv8fdilal.py\", line 20,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpv8fdilal.py\"\
    , line 13, in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: -1
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    # TODO: implement this function\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv8fdilal.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpv8fdilal.py\", line 20,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpv8fdilal.py\"\
    , line 13, in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: -1
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    # TODO: implement this function\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpds44whbo.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpds44whbo.py\", line 19,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpds44whbo.py\"\
    , line 12, in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: -1
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    # TODO: implement this function\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv8fdilal.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpv8fdilal.py\", line 20,\
    \ in test_check\n    check(count_distinct_characters)\n  File \"/tmp/tmpv8fdilal.py\"\
    , line 13, in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    # TODO: implement this function\n    return len(set(string.lower()))\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    string = string.lower()\n    return len(set(string))\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde')\
    \ == 5\n    assert candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa')\
    \ == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n\
    \    check(count_distinct_characters)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005
- exit_code: 0
  program: "def count_distinct_characters(string):\n    \"\"\" Given a string, find\
    \ out how many distinct characters (regardless of case) does it consist of\n \
    \   >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n\
    \    4\n    \"\"\"\n    return len(set(string.lower()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert\
    \ candidate('abcdecadeCADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n\
    \    assert candidate('Jerry jERRY JeRRRY') == 5\n\ndef test_check():\n    check(count_distinct_characters)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271005

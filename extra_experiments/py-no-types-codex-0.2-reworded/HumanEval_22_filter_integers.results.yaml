language: notypes.py
name: HumanEval_22_filter_integers
results:
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [v for v in values if isinstance(v, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return list(filter(lambda x: isinstance(x, int), values))\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [i for i in values if isinstance(i, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [value for value in values if isinstance(value, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def filter_integers(values):\n    \"\"\" Filter given list of any python\
    \ values only for integers\n    >>> filter_integers(['a', 3.14, 5])\n    [5]\n\
    \    >>> filter_integers([1, 2, 3, 'abc', {  }, []])\n    [1, 2, 3]\n    \"\"\"\
    \n    return [x for x in values if isinstance(x, int)]\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([4, {  }, [], 23.2, 9, 'adasd'])\
    \ == [4, 9]\n    assert candidate([3, 'c', 3, 3, 'a', 'b']) == [3, 3, 3]\n\ndef\
    \ test_check():\n    check(filter_integers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067

language: notypes.py
name: HumanEval_9_rolling_max
results:
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        result.append(max_so_far)\n    return result\n\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc9h1er6i.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc9h1er6i.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphl2wdoxk.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphl2wdoxk.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphl2wdoxk.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphl2wdoxk.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    result.append(max_value)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnm3rq7a4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpnm3rq7a4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpnm3rq7a4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnm3rq7a4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    max_list.append(max_value)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpymrkxf52.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpymrkxf52.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    current_max = numbers[0]\n    for number in numbers:\n\
    \        if number > current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6lg4ccv7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6lg4ccv7.py\"\
    , line 8, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w4vbqo4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w4vbqo4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = 0\n    for number in numbers:\n     \
    \   if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        result.append(max_number)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4ksqpafh.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4ksqpafh.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        result.append(max_so_far)\n    return result\n\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc9h1er6i.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc9h1er6i.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphl2wdoxk.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphl2wdoxk.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphl2wdoxk.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphl2wdoxk.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    for i in range(len(numbers)):\n        max_list.append(max(numbers[:i+1]))\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_numbers = []\n    max_number = 0\n    for number in numbers:\n \
    \       if number > max_number:\n            max_number = number\n        max_numbers.append(max_number)\n\
    \    return max_numbers\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_number = 0\n    for number in numbers:\n    \
    \    if number > max_number:\n            max_number = number\n        max_list.append(max_number)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjebx9e2c.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjebx9e2c.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjebx9e2c.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjebx9e2c.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_element = numbers[0]\n    for element in numbers:\n\
    \        if element > max_element:\n            max_element = element\n      \
    \  max_list.append(max_element)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzczm038a.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpzczm038a.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpzczm038a.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpzczm038a.py\"\
    , line 8, in rolling_max\n    max_element = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_elements = []\n    max_element = numbers[0]\n    for number in numbers:\n\
    \        if number > max_element:\n            max_element = number\n        max_elements.append(max_element)\n\
    \    return max_elements\n\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpttro_es2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpttro_es2.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpttro_es2.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpttro_es2.py\"\
    , line 8, in rolling_max\n    max_element = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for number\
    \ in numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        max_list.append(max_so_far)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zfmn24_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4zfmn24_.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4zfmn24_.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4zfmn24_.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_so_far_list = [max_so_far]\n    for\
    \ i in range(1, len(numbers)):\n        if numbers[i] > max_so_far:\n        \
    \    max_so_far = numbers[i]\n        max_so_far_list.append(max_so_far)\n   \
    \ return max_so_far_list\n\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_jfxn49m.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_jfxn49m.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp_jfxn49m.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_jfxn49m.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = -1\n    for number in numbers:\n     \
    \   if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    rolling_max = []\n    max_so_far = numbers[0]\n    rolling_max.append(max_so_far)\n\
    \    for i in range(1, len(numbers)):\n        if numbers[i] > max_so_far:\n \
    \           max_so_far = numbers[i]\n        rolling_max.append(max_so_far)\n\
    \    return rolling_max\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpngpo86h4.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpngpo86h4.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpngpo86h4.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpngpo86h4.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for number\
    \ in numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        max_list.append(max_so_far)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zfmn24_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4zfmn24_.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4zfmn24_.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4zfmn24_.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3aln1vga.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3aln1vga.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3aln1vga.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3aln1vga.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = 0\n    for number in numbers:\n     \
    \   if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        result.append(max_number)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4ksqpafh.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4ksqpafh.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    for i in range(1, len(numbers)):\n    \
    \    if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n      \
    \  numbers[i] = max_so_far\n    return numbers\n\n\ndef check(candidate):\n  \
    \  assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3,\
    \ 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqcm1fqc5.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpqcm1fqc5.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqcm1fqc5.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqcm1fqc5.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for number\
    \ in numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        max_list.append(max_so_far)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zfmn24_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4zfmn24_.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4zfmn24_.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4zfmn24_.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        max_so_far = max(max_so_far, numbers[i])\n        max_list.append(max_so_far)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbgni8reo.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpbgni8reo.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpbgni8reo.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpbgni8reo.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    maximum = numbers[0]\n    for number in numbers:\n\
    \        if number > maximum:\n            maximum = number\n        result.append(maximum)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2_v5tud4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2_v5tud4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp2_v5tud4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2_v5tud4.py\"\
    , line 8, in rolling_max\n    maximum = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_numbers = []\n    max_number = 0\n    for number in numbers:\n \
    \       if number > max_number:\n            max_number = number\n        max_numbers.append(max_number)\n\
    \    return max_numbers\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w4vbqo4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w4vbqo4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    current_max = numbers[0]\n    for number in numbers:\n\
    \        if number > current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6lg4ccv7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6lg4ccv7.py\"\
    , line 8, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_number = 0\n    for number in numbers:\n    \
    \    if number > max_number:\n            max_number = number\n        max_list.append(max_number)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    rolling_max = [max_so_far]\n    for i in\
    \ range(1, len(numbers)):\n        max_so_far = max(max_so_far, numbers[i])\n\
    \        rolling_max.append(max_so_far)\n    return rolling_max\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptcj7kk_g.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmptcj7kk_g.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmptcj7kk_g.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmptcj7kk_g.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        max_list.append(max_number)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl7_xoci5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpl7_xoci5.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpl7_xoci5.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpl7_xoci5.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_so_far = 0\n    for number in numbers:\n    \
    \    if number > max_so_far:\n            max_so_far = number\n        max_list.append(max_so_far)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w4vbqo4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w4vbqo4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        result.append(max_number)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4ksqpafh.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4ksqpafh.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_numbers = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        max_numbers.append(max_number)\n\
    \    return max_numbers\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplep2s_pv.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmplep2s_pv.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_numbers = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        max_numbers.append(max_number)\n\
    \    return max_numbers\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplep2s_pv.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmplep2s_pv.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_numbers = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        max_numbers.append(max_number)\n\
    \    return max_numbers\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplep2s_pv.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmplep2s_pv.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        result.append(max_so_far)\n    return result\n\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc9h1er6i.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc9h1er6i.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for n in numbers:\n  \
    \      max_so_far = max(max_so_far, n)\n        result.append(max_so_far)\n  \
    \  return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphjg6uy7p.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmphjg6uy7p.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphjg6uy7p.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphjg6uy7p.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_list.append(numbers[0])\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_list[i-1]:\n            max_list.append(numbers[i])\n\
    \        else:\n            max_list.append(max_list[i-1])\n    return max_list\n\
    \n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6145nhn_.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp6145nhn_.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6145nhn_.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6145nhn_.py\"\
    , line 8, in rolling_max\n    max_list.append(numbers[0])\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    if not numbers:\n        return []\n    result = [numbers[0]]\n    for\
    \ i in range(1, len(numbers)):\n        result.append(max(result[i - 1], numbers[i]))\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    # TODO: implement me\n    return []\n\n\ndef check(candidate):\n   \
    \ assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3,\
    \ 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8nghf06q.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmp8nghf06q.py\", line 18,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp8nghf06q.py\", line\
    \ 13, in check\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    max_list.append(max_value)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpymrkxf52.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpymrkxf52.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ymtffua.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ymtffua.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        max_list.append(max_number)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl7_xoci5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpl7_xoci5.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpl7_xoci5.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpl7_xoci5.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    current_max = numbers[0]\n    for number in numbers:\n\
    \        if number > current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6lg4ccv7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6lg4ccv7.py\"\
    , line 8, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w4vbqo4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w4vbqo4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w4vbqo4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w4vbqo4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        result.append(max_so_far)\n    return result\n\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc9h1er6i.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc9h1er6i.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_num = numbers[0]\n    for num in numbers:\n \
    \       if num > max_num:\n            max_num = num\n        max_list.append(max_num)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm8e8o8rm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm8e8o8rm.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpm8e8o8rm.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpm8e8o8rm.py\"\
    , line 8, in rolling_max\n    max_num = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w4vbqo4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w4vbqo4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_numbers = []\n    for i in range(len(numbers)):\n        max_numbers.append(max(numbers[:i+1]))\n\
    \    return max_numbers\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    max_list.append(max_value)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpymrkxf52.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpymrkxf52.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    rolling_max = [max_so_far]\n    for i in\
    \ range(1, len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        rolling_max.append(max_so_far)\n    return rolling_max\n\
    \n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyvatzz7o.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpyvatzz7o.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpyvatzz7o.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpyvatzz7o.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_element = numbers[0]\n    for i in range(1, len(numbers)):\n   \
    \     if numbers[i] > max_element:\n            max_element = numbers[i]\n   \
    \     numbers[i] = max_element\n    return numbers\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9utgybp3.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp9utgybp3.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp9utgybp3.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp9utgybp3.py\"\
    , line 7, in rolling_max\n    max_element = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        max_so_far = max(max_so_far, numbers[i])\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w6y14eu.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3w6y14eu.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w6y14eu.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w6y14eu.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    if not numbers:\n        return []\n    result = [numbers[0]]\n    for\
    \ n in numbers[1:]:\n        result.append(max(result[-1], n))\n    return result\n\
    \n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for n in numbers[1:]:\n\
    \        max_so_far = max(max_so_far, n)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn2zacy0r.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpn2zacy0r.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpn2zacy0r.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpn2zacy0r.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ymtffua.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ymtffua.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    for i in range(len(numbers)):\n        max_list.append(max(numbers[:i+1]))\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        max_list.append(max_number)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl7_xoci5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpl7_xoci5.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpl7_xoci5.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpl7_xoci5.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    max_list.append(max_value)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpymrkxf52.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpymrkxf52.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    result.append(max_value)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnm3rq7a4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpnm3rq7a4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpnm3rq7a4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnm3rq7a4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for n in numbers:\n  \
    \      max_so_far = max(max_so_far, n)\n        result.append(max_so_far)\n  \
    \  return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphjg6uy7p.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmphjg6uy7p.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphjg6uy7p.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphjg6uy7p.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for n in numbers:\n   \
    \     if n > max_value:\n            max_value = n\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplqrwiyg8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplqrwiyg8.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmplqrwiyg8.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmplqrwiyg8.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    maximum = 0\n    for number in numbers:\n        if\
    \ number > maximum:\n            maximum = number\n        result.append(maximum)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    result.append(max_value)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnm3rq7a4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpnm3rq7a4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpnm3rq7a4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnm3rq7a4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ymtffua.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ymtffua.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    current_max = numbers[0]\n    for number in numbers:\n\
    \        if number > current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6lg4ccv7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6lg4ccv7.py\"\
    , line 8, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = 0\n    for number in numbers:\n     \
    \   if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        result.append(max_so_far)\n    return result\n\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc9h1er6i.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc9h1er6i.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w4vbqo4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w4vbqo4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    current_max = numbers[0]\n    for number in numbers:\n\
    \        if number > current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6lg4ccv7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6lg4ccv7.py\"\
    , line 8, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        max_list.append(max_so_far)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpps8p0prf.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpps8p0prf.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpps8p0prf.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpps8p0prf.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ymtffua.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ymtffua.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    for i in range(1, len(numbers)):\n    \
    \    if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n      \
    \  numbers[i] = max_so_far\n    return numbers\n\n\ndef check(candidate):\n  \
    \  assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3,\
    \ 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqcm1fqc5.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpqcm1fqc5.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqcm1fqc5.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqcm1fqc5.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphl2wdoxk.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphl2wdoxk.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphl2wdoxk.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphl2wdoxk.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ymtffua.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ymtffua.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        result.append(max_so_far)\n    return result\n\n\ndef\
    \ check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc9h1er6i.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpc9h1er6i.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpc9h1er6i.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    current_max = numbers[0]\n    for number in numbers:\n\
    \        if number > current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6lg4ccv7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6lg4ccv7.py\"\
    , line 8, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ymtffua.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ymtffua.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ymtffua.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ymtffua.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w4vbqo4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w4vbqo4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_num = numbers[0]\n    for num in numbers:\n \
    \       if num > max_num:\n            max_num = num\n        max_list.append(max_num)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm8e8o8rm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm8e8o8rm.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpm8e8o8rm.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpm8e8o8rm.py\"\
    , line 8, in rolling_max\n    max_num = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    current_max = numbers[0]\n    for number in numbers:\n\
    \        if number > current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6lg4ccv7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6lg4ccv7.py\"\
    , line 8, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    for i in range(len(numbers)):\n        max_list.append(max(numbers[:i+1]))\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        max_so_far = max(max_so_far, numbers[i])\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w6y14eu.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3w6y14eu.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w6y14eu.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w6y14eu.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_so_far_list = [max_so_far]\n    for\
    \ i in range(1, len(numbers)):\n        if numbers[i] > max_so_far:\n        \
    \    max_so_far = numbers[i]\n        max_so_far_list.append(max_so_far)\n   \
    \ return max_so_far_list\n\n\ndef check(candidate):\n    assert candidate([])\
    \ == []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_jfxn49m.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp_jfxn49m.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp_jfxn49m.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp_jfxn49m.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        result.append(max_number)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4ksqpafh.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4ksqpafh.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        max_so_far = max(max_so_far, numbers[i])\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w6y14eu.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3w6y14eu.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w6y14eu.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w6y14eu.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    result.append(max_value)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnm3rq7a4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpnm3rq7a4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpnm3rq7a4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnm3rq7a4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for n in numbers:\n  \
    \      max_so_far = max(max_so_far, n)\n        result.append(max_so_far)\n  \
    \  return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphjg6uy7p.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmphjg6uy7p.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphjg6uy7p.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphjg6uy7p.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_numbers = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        max_numbers.append(max_number)\n\
    \    return max_numbers\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplep2s_pv.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmplep2s_pv.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_number = numbers[0]\n    max_numbers = [max_number]\n    for number\
    \ in numbers[1:]:\n        if number > max_number:\n            max_number = number\n\
    \        max_numbers.append(max_number)\n    return max_numbers\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprlzq6nfq.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmprlzq6nfq.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmprlzq6nfq.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmprlzq6nfq.py\"\
    , line 7, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      max_list.append(max_so_far)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphl2wdoxk.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphl2wdoxk.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphl2wdoxk.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphl2wdoxk.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for n in numbers:\n  \
    \      if n > max_so_far:\n            max_so_far = n\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo7cmyfnz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpo7cmyfnz.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpo7cmyfnz.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpo7cmyfnz.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_numbers = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        max_numbers.append(max_number)\n\
    \    return max_numbers\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplep2s_pv.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmplep2s_pv.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        max_value = max(max_value, number)\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2pqfl29m.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp2pqfl29m.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp2pqfl29m.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp2pqfl29m.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    for i in range(len(numbers)):\n        result.append(max(numbers[:i+1]))\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for number\
    \ in numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        max_list.append(max_so_far)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zfmn24_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4zfmn24_.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4zfmn24_.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4zfmn24_.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        result.append(max_number)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4ksqpafh.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4ksqpafh.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_num = numbers[0]\n    for num in numbers:\n \
    \       if num > max_num:\n            max_num = num\n        max_list.append(max_num)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm8e8o8rm.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm8e8o8rm.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpm8e8o8rm.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpm8e8o8rm.py\"\
    , line 8, in rolling_max\n    max_num = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjebx9e2c.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjebx9e2c.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjebx9e2c.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjebx9e2c.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = []\n    max_so_far.append(numbers[0])\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far[i - 1]:\n            max_so_far.append(numbers[i])\n\
    \        else:\n            max_so_far.append(max_so_far[i - 1])\n    return max_so_far\n\
    \n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz6464ym.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpnz6464ym.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpnz6464ym.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpnz6464ym.py\"\
    , line 8, in rolling_max\n    max_so_far.append(numbers[0])\nIndexError: list\
    \ index out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ymtffua.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ymtffua.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_numbers = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        max_numbers.append(max_number)\n\
    \    return max_numbers\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplep2s_pv.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmplep2s_pv.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmplep2s_pv.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqwybfd85.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpqwybfd85.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpqwybfd85.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    current_max = numbers[0]\n    for number in numbers:\n\
    \        if number > current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6lg4ccv7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6lg4ccv7.py\"\
    , line 8, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ymtffua.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ymtffua.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w4vbqo4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w4vbqo4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_so_far:\n            max_so_far = numbers[i]\n  \
    \      result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjebx9e2c.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjebx9e2c.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjebx9e2c.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjebx9e2c.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    max_list.append(max_value)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpymrkxf52.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpymrkxf52.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_number = numbers[0]\n    for number in numbers:\n\
    \        if number > max_number:\n            max_number = number\n        result.append(max_number)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4ksqpafh.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4ksqpafh.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4ksqpafh.py\"\
    , line 8, in rolling_max\n    max_number = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    result = [max_so_far]\n    for number in\
    \ numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        result.append(max_so_far)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpb3p4i5cy.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpb3p4i5cy.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpb3p4i5cy.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    for i in range(len(numbers)):\n        max_list.append(max(numbers[:i+1]))\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    rolling_max = []\n    max_so_far = numbers[0]\n    rolling_max.append(max_so_far)\n\
    \    for i in range(1, len(numbers)):\n        if numbers[i] > max_so_far:\n \
    \           max_so_far = numbers[i]\n        rolling_max.append(max_so_far)\n\
    \    return rolling_max\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ []\n    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpngpo86h4.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpngpo86h4.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpngpo86h4.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpngpo86h4.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > max_so_far:\n            max_so_far\
    \ = numbers[i]\n        max_list.append(max_so_far)\n    return max_list\n\n\n\
    def check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjq3mw40x.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpjq3mw40x.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpjq3mw40x.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    max_list.append(max_value)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpymrkxf52.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpymrkxf52.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for n in numbers:\n  \
    \      max_so_far = max(max_so_far, n)\n        result.append(max_so_far)\n  \
    \  return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphjg6uy7p.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmphjg6uy7p.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphjg6uy7p.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphjg6uy7p.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = numbers[0]\n    for number in numbers:\n\
    \        max_so_far = max(max_so_far, number)\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp3ymtffua.py\", line 22,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3ymtffua.py\", line\
    \ 16, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3ymtffua.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    current_max = numbers[0]\n    for number in numbers:\n\
    \        if number > current_max:\n            current_max = number\n        result.append(current_max)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6lg4ccv7.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp6lg4ccv7.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp6lg4ccv7.py\"\
    , line 8, in rolling_max\n    current_max = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3w4vbqo4.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp3w4vbqo4.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp3w4vbqo4.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = 0\n    for number in numbers:\n     \
    \   if number > max_value:\n            max_value = number\n        max_list.append(max_value)\n\
    \    return max_list\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_list = []\n    max_value = numbers[0]\n    for i in range(len(numbers)):\n\
    \        if numbers[i] > max_value:\n            max_value = numbers[i]\n    \
    \    max_list.append(max_value)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpymrkxf52.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpymrkxf52.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpymrkxf52.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    rolling_max = []\n    max_so_far = numbers[0]\n    rolling_max.append(max_so_far)\n\
    \    for number in numbers[1:]:\n        if number > max_so_far:\n           \
    \ max_so_far = number\n        rolling_max.append(max_so_far)\n    return rolling_max\n\
    \n\ndef check(candidate):\n    assert candidate([]) == []\n    assert candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n\
    \    assert candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n\
    \    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphwxfih9q.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmphwxfih9q.py\", line 24,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmphwxfih9q.py\", line\
    \ 18, in check\n    assert candidate([]) == []\n  File \"/tmp/tmphwxfih9q.py\"\
    , line 8, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = 0\n    for number in numbers:\n       \
    \ if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    max_so_far = numbers[0]\n    max_list = [max_so_far]\n    for number\
    \ in numbers[1:]:\n        if number > max_so_far:\n            max_so_far = number\n\
    \        max_list.append(max_so_far)\n    return max_list\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zfmn24_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4zfmn24_.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmp4zfmn24_.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmp4zfmn24_.py\"\
    , line 7, in rolling_max\n    max_so_far = numbers[0]\nIndexError: list index\
    \ out of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_so_far = -1\n    for number in numbers:\n     \
    \   if number > max_so_far:\n            max_so_far = number\n        result.append(max_so_far)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    maximum = numbers[0]\n    result = [maximum]\n    for i in range(1,\
    \ len(numbers)):\n        if numbers[i] > maximum:\n            maximum = numbers[i]\n\
    \        result.append(maximum)\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == []\n    assert candidate([1, 2, 3, 4]) == [1, 2,\
    \ 3, 4]\n    assert candidate([4, 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3,\
    \ 2, 3, 100, 3]) == [3, 3, 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeqynsw2e.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpeqynsw2e.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpeqynsw2e.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpeqynsw2e.py\"\
    , line 7, in rolling_max\n    maximum = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def rolling_max(numbers):\n    \"\"\" From a given list of integers, generate\
    \ a list of rolling maximum element found until given moment\n    in the sequence.\n\
    \    >>> rolling_max([1, 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\
    \"\"\n    result = []\n    max_value = numbers[0]\n    for number in numbers:\n\
    \        if number > max_value:\n            max_value = number\n        result.append(max_value)\n\
    \    return result\n\n\ndef check(candidate):\n    assert candidate([]) == []\n\
    \    assert candidate([1, 2, 3, 4]) == [1, 2, 3, 4]\n    assert candidate([4,\
    \ 3, 2, 1]) == [4, 4, 4, 4]\n    assert candidate([3, 2, 3, 100, 3]) == [3, 3,\
    \ 3, 100, 100]\n\ndef test_check():\n    check(rolling_max)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpesk7wxbp.py\", line 23,\
    \ in test_check\n    check(rolling_max)\n  File \"/tmp/tmpesk7wxbp.py\", line\
    \ 17, in check\n    assert candidate([]) == []\n  File \"/tmp/tmpesk7wxbp.py\"\
    , line 8, in rolling_max\n    max_value = numbers[0]\nIndexError: list index out\
    \ of range\n"
  stdout: ''
  timestamp: 1660271006

name: HumanEval_144_simplify
language: notypes.py
prompt: "def simplify(x, n):\n    \"\"\"Your task is to implement a function that\
  \ will simplify the expression\n    x * n. The function returns True if x * n evaluates\
  \ to a whole number and False\n    otherwise. Both x and n, are string representation\
  \ of a fraction, and have the following format,\n    <numerator>/<denominator> where\
  \ both numerator and denominator are positive whole numbers.\n\n    You can assume\
  \ that x, and n are valid fractions, and do not have zero as denominator.\n\n  \
  \  >>> simplify('1/5', '5/1')\n    True\n    >>> simplify('1/6', '2/1')\n    False\n\
  \    >>> simplify('7/10', '10/2')\n    False\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('1/5', '5/1') == True\n    assert\
  \ candidate('1/6', '2/1') == False\n    assert candidate('5/1', '3/1') == True\n\
  \    assert candidate('7/10', '10/2') == False\n    assert candidate('2/10', '50/10')\
  \ == True\n    assert candidate('7/2', '4/2') == True\n    assert candidate('11/6',\
  \ '6/1') == True\n    assert candidate('2/3', '5/2') == False\n    assert candidate('5/2',\
  \ '3/5') == False\n    assert candidate('2/4', '8/4') == True\n    assert candidate('2/4',\
  \ '4/2') == True\n    assert candidate('1/5', '5/1') == True\n    assert candidate('1/5',\
  \ '1/5') == False\n\ndef test_check():\n    check(simplify)\n\ntest_check()\n"
completions: ["    x_numerator, x_denominator = [int(i) for i in x.split('/')]\n \
    \   n_numerator, n_denominator = [int(i) for i in n.split('/')]\n    return (x_numerator\
    \ * n_numerator) % (x_denominator * n_denominator) == 0\n\n", "    x_numerator,\
    \ x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int,\
    \ n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator * n_denominator)\
    \ == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    x_numerator,\
    \ x_denominator, n_numerator, n_denominator = int(x_numerator), int(x_denominator),\
    \ int(n_numerator), int(n_denominator)\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = [int(i) for i in x.split('/')]\n    n_numerator, n_denominator = [int(i) for\
    \ i in n.split('/')]\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_num, x_den = map(int, x.split('/'))\n   \
    \ n_num, n_den = map(int, n.split('/'))\n    return (x_num * n_num) % (x_den *\
    \ n_den) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n\
    \    x_num, x_den, n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_num, x_den = x.split('/')\n\
    \    n_num, n_den = n.split('/')\n    x_num, x_den, n_num, n_den = int(x_num),\
    \ int(x_den), int(n_num), int(n_den)\n    return (x_num * n_num) % (x_den * n_den)\
    \ == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator,\
    \ n_denominator = n.split('/')\n    return (int(x_numerator) * int(n_numerator))\
    \ % (int(x_denominator) * int(n_denominator)) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return x_numerator * n_denominator * n_numerator * x_denominator % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    x_numerator, x_denominator,\
    \ n_numerator, n_denominator = int(x_numerator), int(x_denominator), int(n_numerator),\
    \ int(n_denominator)\n    if x_numerator * n_denominator * n_numerator * x_denominator\
    \ % (x_denominator * n_denominator) == 0:\n        return True\n    else:\n  \
    \      return False\n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator,\
    \ n_denominator = n.split('/')\n    x_numerator, x_denominator = int(x_numerator),\
    \ int(x_denominator)\n    n_numerator, n_denominator = int(n_numerator), int(n_denominator)\n\
    \    return (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\n\
    \n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_num, x_den = x.split('/')\n\
    \    n_num, n_den = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den)\
    \ == 0\n\n", "    x_numerator, x_denominator = [int(i) for i in x.split('/')]\n\
    \    n_numerator, n_denominator = [int(i) for i in n.split('/')]\n    return (x_numerator\
    \ * n_numerator) % (x_denominator * n_denominator) == 0\n\n", "    x_numerator,\
    \ x_denominator = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n\
    \    x_numerator, x_denominator = int(x_numerator), int(x_denominator)\n    n_numerator,\
    \ n_denominator = int(n_numerator), int(n_denominator)\n    return (x_numerator\
    \ * n_denominator) % (x_denominator * n_numerator) == 0\n\n", "    x_numerator,\
    \ x_denominator = [int(i) for i in x.split('/')]\n    n_numerator, n_denominator\
    \ = [int(i) for i in n.split('/')]\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    return (int(x_numerator) *\
    \ int(n_numerator)) % (int(x_denominator) * int(n_denominator)) == 0\n\n", " \
    \   x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    x_numerator, x_denominator = int(x_numerator), int(x_denominator)\n\
    \    n_numerator, n_denominator = int(n_numerator), int(n_denominator)\n    return\
    \ (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\n", " \
    \   x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    x_numerator, x_denominator\
    \ = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator = int(n_numerator),\
    \ int(n_denominator)\n    return (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n \
    \   n_numerator, n_denominator = n.split('/')\n    x_numerator, x_denominator\
    \ = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator = int(n_numerator),\
    \ int(n_denominator)\n    return (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den\
    \ = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\n",
  "    x_num, x_den = map(int, x.split('/'))\n    n_num, n_den = map(int, n.split('/'))\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    x_numerator, x_denominator = int(x_numerator), int(x_denominator)\n\
    \    n_numerator, n_denominator = int(n_numerator), int(n_denominator)\n    return\
    \ (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\n\n", " \
    \   x_num, x_den = [int(i) for i in x.split('/')]\n    n_num, n_den = [int(i)\
    \ for i in n.split('/')]\n    return (x_num * n_num) % (x_den * n_den) == 0\n\n",
  "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_num, x_den = map(int, x.split('/'))\n   \
    \ n_num, n_den = map(int, n.split('/'))\n    return (x_num * n_num) % (x_den *\
    \ n_den) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n\
    \    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\n", "    x = x.split('/')\n\
    \    n = n.split('/')\n    x = int(x[0]) * int(n[1])\n    n = int(n[0]) * int(x[1])\n\
    \    return x == n\n\n", "    x_num, x_den = map(int, x.split('/'))\n    n_num,\
    \ n_den = map(int, n.split('/'))\n    return (x_num * n_num) % (x_den * n_den)\
    \ == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n\
    \    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\n", "    x_numerator,\
    \ x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int,\
    \ n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator * n_denominator)\
    \ == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator,\
    \ n_denominator = n.split('/')\n    x_numerator, x_denominator = int(x_numerator),\
    \ int(x_denominator)\n    n_numerator, n_denominator = int(n_numerator), int(n_denominator)\n\
    \    return (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\n\
    \n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    return (int(x_numerator) * int(n_numerator)) % (int(x_denominator)\
    \ * int(n_denominator)) == 0\n\n", "    # TODO: Your code here\n    x_num, x_den\
    \ = x.split('/')\n    n_num, n_den = n.split('/')\n    x_num, x_den, n_num, n_den\
    \ = int(x_num), int(x_den), int(n_num), int(n_den)\n    return (x_num * n_num)\
    \ % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    return int(x_numerator) *\
    \ int(n_denominator) % int(x_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    x_numerator,\
    \ x_denominator = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator\
    \ = int(n_numerator), int(n_denominator)\n    return (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\n\n", "    x_numerator, x_denominator =\
    \ x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    return (int(x_numerator)\
    \ * int(n_numerator)) % (int(x_denominator) * int(n_denominator)) == 0\n\n", " \
    \   x = Fraction(x)\n    n = Fraction(n)\n    return x * n == int(x * n)\n\n",
  "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    x_numerator, x_denominator\
    \ = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator = int(n_numerator),\
    \ int(n_denominator)\n    x_numerator *= n_denominator\n    x_denominator *= n_numerator\n\
    \    return x_numerator % x_denominator == 0\n\n", "    x = Fraction(x)\n    n\
    \ = Fraction(n)\n    return x * n == int(x * n)\n\n", "    x_numerator, x_denominator\
    \ = [int(i) for i in x.split('/')]\n    n_numerator, n_denominator = [int(i) for\
    \ i in n.split('/')]\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0", "    x_num, x_denom = x.split('/')\n    n_num, n_denom\
    \ = n.split('/')\n    return (int(x_num) * int(n_num)) % (int(x_denom) * int(n_denom))\
    \ == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    return\
    \ (int(x_num) * int(n_den)) % int(x_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = [int(i) for i in x.split('/')]\n    n_numerator, n_denominator = [int(i) for\
    \ i in n.split('/')]\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_num, x_den = [int(i) for i in x.split('/')]\n\
    \    n_num, n_den = [int(i) for i in n.split('/')]\n    return (x_num * n_num)\
    \ % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n\
    \    n_numerator, n_denominator = map(int, n.split('/'))\n    return (x_numerator\
    \ * n_numerator) % (x_denominator * n_denominator) == 0\n\n", "    x_numerator,\
    \ x_denominator = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n\
    \    x_numerator, x_denominator, n_numerator, n_denominator = int(x_numerator),\
    \ int(x_denominator), int(n_numerator), int(n_denominator)\n    return (x_numerator\
    \ * n_numerator) % (x_denominator * n_denominator) == 0\n\n", "    x_numerator,\
    \ x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int,\
    \ n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator * n_denominator)\
    \ == 0\n\n", "    x_num, x_den = map(int, x.split('/'))\n    n_num, n_den = map(int,\
    \ n.split('/'))\n    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "   \
    \ x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    return (int(x_numerator) *\
    \ int(n_numerator)) % (int(x_denominator) * int(n_denominator)) == 0\n\n", " \
    \   x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    return (int(x_num)\
    \ * int(n_den)) % int(x_den) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    return (int(x_numerator) *\
    \ int(n_numerator)) % (int(x_denominator) * int(n_denominator)) == 0\n\n", " \
    \   x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    return (int(x_numerator) *\
    \ int(n_numerator)) % (int(x_denominator) * int(n_denominator)) == 0\n\n", " \
    \   x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    return (int(x_num)\
    \ * int(n_den)) % int(x_den) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    return (int(x_numerator) *\
    \ int(n_numerator)) % (int(x_denominator) * int(n_denominator)) == 0\n\n", " \
    \   x_num, x_den = map(int, x.split('/'))\n    n_num, n_den = map(int, n.split('/'))\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = [int(i) for i in x.split('/')]\n    n_numerator, n_denominator = [int(i) for\
    \ i in n.split('/')]\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den\
    \ = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\n",
  "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n\
    \    n_numerator, n_denominator = map(int, n.split('/'))\n    return (x_numerator\
    \ * n_numerator) % (x_denominator * n_denominator) == 0\n\n", "    x_numerator,\
    \ x_denominator = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n\
    \    x_numerator, x_denominator = int(x_numerator), int(x_denominator)\n    n_numerator,\
    \ n_denominator = int(n_numerator), int(n_denominator)\n    return (x_numerator\
    \ * n_denominator) % (x_denominator * n_numerator) == 0\n\n", "    x_numerator,\
    \ x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int,\
    \ n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator * n_denominator)\
    \ == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n\
    \    x_num, x_den, n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    return\
    \ (int(x_num) * int(n_den)) % int(x_den) == 0\n\n", "    x = Fraction(x)\n   \
    \ n = Fraction(n)\n    return x * n == int(x * n)\n\n", "    x = Fraction(x)\n\
    \    n = Fraction(n)\n    return x * n == int(x * n)\n\n", "    x_num, x_den =\
    \ x.split('/')\n    n_num, n_den = n.split('/')\n    x_num, x_den, n_num, n_den\
    \ = int(x_num), int(x_den), int(n_num), int(n_den)\n    return (x_num * n_num)\
    \ % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n\
    \    n_numerator, n_denominator = map(int, n.split('/'))\n    return (x_numerator\
    \ * n_numerator) % (x_denominator * n_denominator) == 0\n\n", "    x_num, x_den\
    \ = map(int, x.split('/'))\n    n_num, n_den = map(int, n.split('/'))\n    return\
    \ x_num * n_num % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator =\
    \ [int(i) for i in x.split('/')]\n    n_numerator, n_denominator = [int(i) for\
    \ i in n.split('/')]\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = [int(i) for i\
    \ in x.split('/')]\n    n_numerator, n_denominator = [int(i) for i in n.split('/')]\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_numerator, x_denominator = [int(i) for i in x.split('/')]\n    n_numerator,\
    \ n_denominator = [int(i) for i in n.split('/')]\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_num, x_den = map(int, x.split('/'))\n\
    \    n_num, n_den = map(int, n.split('/'))\n    return (x_num * n_num) % (x_den\
    \ * n_den) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n\
    \    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\n", "    x_numerator,\
    \ x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int,\
    \ n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator * n_denominator)\
    \ == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n\
    \    x_num, x_den, n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_num, x_den = x.split('/')\n\
    \    n_num, n_den = n.split('/')\n    x_num, x_den, n_num, n_den = int(x_num),\
    \ int(x_den), int(n_num), int(n_den)\n    return (x_num * n_num) % (x_den * n_den)\
    \ == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n\
    \    x_num, x_den, n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    return (int(x_numerator)\
    \ * int(n_numerator)) % (int(x_denominator) * int(n_denominator)) == 0\n\n", " \
    \   x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    return float(x_num)\
    \ * float(n_den) * float(n_num) / float(x_den) % 1 == 0\n\n", "    x_numerator,\
    \ x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int,\
    \ n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator * n_denominator)\
    \ == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    x_numerator, x_denominator, n_numerator, n_denominator =\
    \ int(x_numerator), int(x_denominator), int(n_numerator), int(n_denominator)\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    x_num,\
    \ x_den, n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n    return\
    \ (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = [int(i) for i in x.split('/')]\n    n_numerator, n_denominator = [int(i) for\
    \ i in n.split('/')]\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    x_numerator, x_denominator\
    \ = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator = int(n_numerator),\
    \ int(n_denominator)\n    return (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den\
    \ = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\n",
  "    x_num, x_den = map(int, x.split('/'))\n    n_num, n_den = map(int, n.split('/'))\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    return (int(x_numerator)\
    \ * int(n_numerator)) % (int(x_denominator) * int(n_denominator)) == 0\n\n", " \
    \   x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    return (int(x_num)\
    \ * int(n_den)) % int(x_den) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    x_numerator, x_denominator\
    \ = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator = int(n_numerator),\
    \ int(n_denominator)\n    return (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n \
    \   n_numerator, n_denominator = n.split('/')\n    x_numerator, x_denominator\
    \ = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator = int(n_numerator),\
    \ int(n_denominator)\n    return (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den\
    \ = n.split('/')\n    x_num, x_den, n_num, n_den = int(x_num), int(x_den), int(n_num),\
    \ int(n_den)\n    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_num,\
    \ x_den = map(int, x.split('/'))\n    n_num, n_den = map(int, n.split('/'))\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_num, x_den = x.split('/')\n\
    \    n_num, n_den = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den)\
    \ == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n\
    \    x_num, x_den, n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = [int(i) for i in x.split('/')]\n    n_numerator, n_denominator = [int(i) for\
    \ i in n.split('/')]\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den\
    \ = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\n",
  "    x_num, x_den = [int(i) for i in x.split('/')]\n    n_num, n_den = [int(i) for\
    \ i in n.split('/')]\n    return (x_num * n_num) % (x_den * n_den) == 0\n\n",
  "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    x_num, x_den,\
    \ n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n    return (x_num\
    \ * n_num) % (x_den * n_den) == 0\n\n", "    x_num, x_den = map(int, x.split('/'))\n\
    \    n_num, n_den = map(int, n.split('/'))\n    return x_num * n_num % (x_den\
    \ * n_den) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator,\
    \ n_denominator = n.split('/')\n    return (int(x_numerator) * int(n_numerator))\
    \ % (int(x_denominator) * int(n_denominator)) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x = Fraction(x)\n    n = Fraction(n)\n    return x * n == int(x * n)\n\
    \n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    return\
    \ (int(x_num) * int(n_den)) % int(x_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    return (int(x_numerator)\
    \ * int(n_numerator)) % (int(x_denominator) * int(n_denominator)) == 0\n\n", " \
    \   x = Fraction(x)\n    n = Fraction(n)\n    return x * n == int(x * n)\n\n",
  "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = [int(i) for i\
    \ in x.split('/')]\n    n_numerator, n_denominator = [int(i) for i in n.split('/')]\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    x_numerator, x_denominator = int(x_numerator), int(x_denominator)\n\
    \    n_numerator, n_denominator = int(n_numerator), int(n_denominator)\n    return\
    \ (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\n\n", " \
    \   x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den\
    \ = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\n",
  "    x_numerator, x_denominator = [int(i) for i in x.split('/')]\n    n_numerator,\
    \ n_denominator = [int(i) for i in n.split('/')]\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    return (int(x_numerator) * int(n_numerator)) % (int(x_denominator)\
    \ * int(n_denominator)) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num,\
    \ n_den = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\
    \n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    return\
    \ (int(x_num) * int(n_den)) % int(x_den) == 0\n\n", "    x_num, x_den = map(int,\
    \ x.split('/'))\n    n_num, n_den = map(int, n.split('/'))\n    return (x_num\
    \ * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator = map(int,\
    \ x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n   \
    \ return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\n",
  "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    x_num, x_den,\
    \ n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n    return (x_num\
    \ * n_num) % (x_den * n_den) == 0\n\n", "    x_num, x_den = map(int, x.split('/'))\n\
    \    n_num, n_den = map(int, n.split('/'))\n    return (x_num * n_num) % (x_den\
    \ * n_den) == 0\n\n", "    x_num, x_denom = map(int, x.split('/'))\n    n_num,\
    \ n_denom = map(int, n.split('/'))\n    return (x_num * n_num) % (x_denom * n_denom)\
    \ == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return x_numerator * n_denominator\
    \ * n_numerator * x_denominator % (x_denominator * n_denominator) == 0\n\n", " \
    \   x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = [int(i) for i\
    \ in x.split('/')]\n    n_numerator, n_denominator = [int(i) for i in n.split('/')]\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    return (int(x_numerator) * int(n_numerator)) % (int(x_denominator)\
    \ * int(n_denominator)) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num,\
    \ n_den = n.split('/')\n    x_num, x_den, n_num, n_den = int(x_num), int(x_den),\
    \ int(n_num), int(n_den)\n    return (x_num * n_num) % (x_den * n_den) == 0\n\n",
  "    x_numerator, x_denominator = [int(i) for i in x.split('/')]\n    n_numerator,\
    \ n_denominator = [int(i) for i in n.split('/')]\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_num, x_den = x.split('/')\n\
    \    n_num, n_den = n.split('/')\n    x_num, x_den, n_num, n_den = int(x_num),\
    \ int(x_den), int(n_num), int(n_den)\n    return (x_num * n_num) % (x_den * n_den)\
    \ == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_num, x_den = x.split('/')\n\
    \    n_num, n_den = n.split('/')\n    x_num, x_den, n_num, n_den = int(x_num),\
    \ int(x_den), int(n_num), int(n_den)\n    return (x_num * n_num) % (x_den * n_den)\
    \ == 0\n\n", "    x_num, x_den = map(int, x.split('/'))\n    n_num, n_den = map(int,\
    \ n.split('/'))\n    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "   \
    \ x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator =\
    \ n.split('/')\n    x_numerator, x_denominator = int(x_numerator), int(x_denominator)\n\
    \    n_numerator, n_denominator = int(n_numerator), int(n_denominator)\n    return\
    \ (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\n\n", " \
    \   x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den\
    \ = n.split('/')\n    return int(x_num) * int(n_den) % int(x_den) == 0\n\n", " \
    \   x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    x_numerator, x_denominator = int(x_numerator), int(x_denominator)\n\
    \    n_numerator, n_denominator = int(n_numerator), int(n_denominator)\n    return\
    \ (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\n", " \
    \   x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    return int(x_num)\
    \ * int(n_den) % int(x_den) == 0\n\n", "    x_num, x_den = map(int, x.split('/'))\n\
    \    n_num, n_den = map(int, n.split('/'))\n    return x_num * n_num % (x_den\
    \ * n_den) == 0\n\n", "    x_num, x_den = map(int, x.split('/'))\n    n_num, n_den\
    \ = map(int, n.split('/'))\n    return x_num * n_num % (x_den * n_den) == 0\n\n",
  "    x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator =\
    \ n.split('/')\n    return (int(x_numerator) * int(n_numerator)) % (int(x_denominator)\
    \ * int(n_denominator)) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num,\
    \ n_den = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\
    \n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    return (int(x_numerator) * int(n_numerator)) % (int(x_denominator)\
    \ * int(n_denominator)) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num,\
    \ n_den = n.split('/')\n    x_num, x_den, n_num, n_den = int(x_num), int(x_den),\
    \ int(n_num), int(n_den)\n    return (x_num * n_num) % (x_den * n_den) == 0\n\n",
  "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    # your code here\n    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    if int(x_numerator)\
    \ * int(n_denominator) == int(n_numerator) * int(x_denominator):\n        return\
    \ True\n    else:\n        return False\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    return (int(x_numerator)\
    \ * int(n_numerator)) % (int(x_denominator) * int(n_denominator)) == 0\n\n", " \
    \   x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    x_numerator, x_denominator = int(x_numerator), int(x_denominator)\n\
    \    n_numerator, n_denominator = int(n_numerator), int(n_denominator)\n    return\
    \ (x_numerator * n_denominator) % (x_denominator * n_numerator) == 0\n\n", " \
    \   x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den\
    \ = n.split('/')\n    x_num, x_den, n_num, n_den = int(x_num), int(x_den), int(n_num),\
    \ int(n_den)\n    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator,\
    \ x_denominator = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n\
    \    x_numerator, x_denominator = int(x_numerator), int(x_denominator)\n    n_numerator,\
    \ n_denominator = int(n_numerator), int(n_denominator)\n    return (x_numerator\
    \ * n_denominator) % (x_denominator * n_numerator) == 0\n\n", "    x_num, x_den\
    \ = x.split('/')\n    n_num, n_den = n.split('/')\n    x_num, x_den, n_num, n_den\
    \ = int(x_num), int(x_den), int(n_num), int(n_den)\n    return (x_num * n_num)\
    \ % (x_den * n_den) == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den\
    \ = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den) == 0\n\n",
  "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = [int(i) for i\
    \ in x.split('/')]\n    n_numerator, n_denominator = [int(i) for i in n.split('/')]\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    x_num,\
    \ x_den, n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n    return\
    \ (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n    x_num,\
    \ x_den, n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n    return\
    \ (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    x_numerator,\
    \ x_denominator = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator\
    \ = int(n_numerator), int(n_denominator)\n    return (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\n\n", "    x_num, x_den = x.split('/')\n\
    \    n_num, n_den = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den)\
    \ == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    x_numerator,\
    \ x_denominator = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator\
    \ = int(n_numerator), int(n_denominator)\n    return (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\n\n", "    x_numerator, x_denominator =\
    \ x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    x_numerator,\
    \ x_denominator = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator\
    \ = int(n_numerator), int(n_denominator)\n    return (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\n\n", "    x_numerator, x_denominator =\
    \ [int(i) for i in x.split('/')]\n    n_numerator, n_denominator = [int(i) for\
    \ i in n.split('/')]\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n\
    \    n_numerator, n_denominator = n.split('/')\n    x_numerator, x_denominator\
    \ = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator = int(n_numerator),\
    \ int(n_denominator)\n    return (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n \
    \   n_numerator, n_denominator = n.split('/')\n    x_numerator, x_denominator\
    \ = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator = int(n_numerator),\
    \ int(n_denominator)\n    return (x_numerator * n_denominator) % (x_denominator\
    \ * n_numerator) == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n\
    \    n_numerator, n_denominator = map(int, n.split('/'))\n    return (x_numerator\
    \ * n_numerator) % (x_denominator * n_denominator) == 0\n\n", "    x_numerator,\
    \ x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int,\
    \ n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator * n_denominator)\
    \ == 0\n\n", "    x_num, x_den = x.split('/')\n    n_num, n_den = n.split('/')\n\
    \    x_num, x_den, n_num, n_den = int(x_num), int(x_den), int(n_num), int(n_den)\n\
    \    return (x_num * n_num) % (x_den * n_den) == 0\n\n", "    x_num, x_den = x.split('/')\n\
    \    n_num, n_den = n.split('/')\n    x_num, x_den, n_num, n_den = int(x_num),\
    \ int(x_den), int(n_num), int(n_den)\n    return (x_num * n_num) % (x_den * n_den)\
    \ == 0\n\n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator,\
    \ n_denominator = n.split('/')\n    return (int(x_numerator) * int(n_numerator))\
    \ % (int(x_denominator) * int(n_denominator)) == 0\n\n", "    x_numerator, x_denominator\
    \ = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n\
    \    return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\
    \n", "    x_numerator, x_denominator = x.split('/')\n    n_numerator, n_denominator\
    \ = n.split('/')\n    return (int(x_numerator) * int(n_numerator)) % (int(x_denominator)\
    \ * int(n_denominator)) == 0\n\n", "    x_numerator, x_denominator = map(int,\
    \ x.split('/'))\n    n_numerator, n_denominator = map(int, n.split('/'))\n   \
    \ return (x_numerator * n_numerator) % (x_denominator * n_denominator) == 0\n\n",
  "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator\
    \ = map(int, n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n\
    \    n_numerator, n_denominator = map(int, n.split('/'))\n    return (x_numerator\
    \ * n_numerator) % (x_denominator * n_denominator) == 0\n\n", "    x_numerator,\
    \ x_denominator = map(int, x.split('/'))\n    n_numerator, n_denominator = map(int,\
    \ n.split('/'))\n    return (x_numerator * n_numerator) % (x_denominator * n_denominator)\
    \ == 0\n\n", "    x = Fraction(x)\n    n = Fraction(n)\n    return x * n == int(x\
    \ * n)\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    x_numerator,\
    \ x_denominator = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator\
    \ = int(n_numerator), int(n_denominator)\n    return (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\n\n", "    x_num, x_den = x.split('/')\n\
    \    n_num, n_den = n.split('/')\n    return (int(x_num) * int(n_den)) % int(x_den)\
    \ == 0\n\n", "    x_numerator, x_denominator = map(int, x.split('/'))\n    n_numerator,\
    \ n_denominator = map(int, n.split('/'))\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    x_numerator,\
    \ x_denominator, n_numerator, n_denominator = int(x_numerator), int(x_denominator),\
    \ int(n_numerator), int(n_denominator)\n    return (x_numerator * n_numerator)\
    \ % (x_denominator * n_denominator) == 0\n\n", "    x_numerator, x_denominator\
    \ = x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    x_numerator,\
    \ x_denominator = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator\
    \ = int(n_numerator), int(n_denominator)\n    return (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\n\n", "    x_numerator, x_denominator =\
    \ x.split('/')\n    n_numerator, n_denominator = n.split('/')\n    x_numerator,\
    \ x_denominator = int(x_numerator), int(x_denominator)\n    n_numerator, n_denominator\
    \ = int(n_numerator), int(n_denominator)\n    return (x_numerator * n_denominator)\
    \ % (x_denominator * n_numerator) == 0\n\n", "    x_num, x_den = x.split('/')\n\
    \    n_num, n_den = n.split('/')\n    return float(x_num) * float(n_den) % float(x_den)\
    \ == 0 and float(n_num) * float(x_den) % float(n_den) == 0\n\n", "    x_numerator,\
    \ x_denominator = [int(i) for i in x.split('/')]\n    n_numerator, n_denominator\
    \ = [int(i) for i in n.split('/')]\n    return (x_numerator * n_numerator) % (x_denominator\
    \ * n_denominator) == 0\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_156_int_to_mini_roman
language: rkt
prompt: "#lang racket\n\n#| Given a positive integer, obtain its roman numeral equivalent\
  \ as a string,\nand return it in lowercase.\nRestrictions: 1 <= num <= 1000\nExamples:\n\
  >>> (int_to_mini_roman 19)\n\"xix\"\n>>> (int_to_mini_roman 152)\n\"clii\"\n>>>\
  \ (int_to_mini_roman 426)\n\"cdxxvi\"|#\n(define (int_to_mini_roman number)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate int_to_mini_roman))\n\
  \    (check-equal? (candidate 19) \"xix\")\n    (check-equal? (candidate 152) \"\
  clii\")\n    (check-equal? (candidate 251) \"ccli\")\n    (check-equal? (candidate\
  \ 426) \"cdxxvi\")\n    (check-equal? (candidate 500) \"d\")\n    (check-equal?\
  \ (candidate 1) \"i\")\n    (check-equal? (candidate 4) \"iv\")\n    (check-equal?\
  \ (candidate 43) \"xliii\")\n    (check-equal? (candidate 90) \"xc\")\n    (check-equal?\
  \ (candidate 94) \"xciv\")\n    (check-equal? (candidate 532) \"dxxxii\")\n    (check-equal?\
  \ (candidate 900) \"cm\")\n    (check-equal? (candidate 994) \"cmxciv\")\n    (check-equal?\
  \ (candidate 1000) \"m\")\n))\n\n(test-humaneval)"
completions: ["  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number\
    \ 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number\
    \ 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n     \
    \ [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v\
    \ i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(=\
    \ number 11) '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x\
    \ i i i)]\n      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n    \
    \  [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number\
    \ 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x\
    \ x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n\
    \      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number\
    \ 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number\
    \ 4000) '(m m m m)]\n      [(= number 5000) '(m v)]\n      [(= number 6000) '(v",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n      [(= number 70)\
    \ \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n      [(= number 300)\
    \ \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n    \
    \  [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n      [(= number 800)\
    \ \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(<= number 3) (append (make-list number 'i) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 8) (append (make-list (- number 5) 'i) (list 'v) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 9) (append (make-list (- number 5) 'i) (list 'x) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 39) (append (make-list (/ number 10) 'x) (int_to_mini_roman_helper\
    \ (modulo number 10)))]\n      [(<= number 49) (append (make-list (- (/ number\
    \ 10) 5) 'x) (list 'l) (int_to_mini_roman_helper (modulo number 10)))]\n     \
    \ [(<= number 89) (append (make-list (/ number 10) 'x) (list 'l) (int_to_mini_roman_helper\
    \ (modulo number 10)))]\n      [(<= number 99) (append (make-list (- (/ number\
    \ 10) 5) 'x) (list 'c) (int_to_mini_roman_helper (modulo number 10)))]\n     \
    \ [(<= number 399) (append (make-list (/ number 100) 'c) (int_to_mini_roman_helper\
    \ (modulo number 100)))]\n      [(<= number 499) (append (make-list (- (/ number\
    \ 100) 5) 'c) (list 'd) (int_to_mini_roman_helper (modulo number 100)))]\n   \
    \   [(<= number 899) (append (make-list (/ number 100) 'c) (list 'd) (int_to_mini_roman_helper\
    \ (modulo number 100)))]\n      [(<= number 999) (append (make-list (- (/ number\
    \ 100) 5) 'c) (list 'm) (int_to_mini_roman_helper (modulo number 100)))]\n   \
    \   [(<= number 1000) (append (make-list", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10)) (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (append (int_to_mini_roman-helper (quotient number\
    \ 10))\n                    (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3)\
    \ \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number\
    \ 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(=\
    \ number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n \
    \   [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14)\
    \ \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number\
    \ 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n\
    \    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"\
    xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70)\
    \ \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(=\
    \ number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"\
    ]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600)\
    \ \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(=\
    \ number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"\
    ]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number\
    \ 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n\
    \    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [else (error\
    \ \"Invalid number\")]))\n", "  (define (int_to_mini_roman-helper number)\n  \
    \  (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number\
    \ 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n   \
    \   [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v\
    \ i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(=\
    \ number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n\
    \      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number\
    \ 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n\
    \      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(=\
    \ number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x\
    \ x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(=\
    \ number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90)\
    \ '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(=\
    \ number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500)\
    \ '(c d)]\n      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(=\
    \ number 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000)\
    \ '(m)]\n      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n  \
    \    [(= number 4000) '(m m m m)]\n      [(= number 5000) '(m m m m m)]\n    \
    \  [(= number 6000", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i\
    \ i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n      [(=\
    \ number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number 15)\
    \ '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n\
    \      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(=\
    \ number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x\
    \ x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(=\
    \ number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90)\
    \ '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(=\
    \ number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500)\
    \ '(c d)]\n      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(=\
    \ number 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000)\
    \ '(m)]\n      [else (append (int_to_mini_roman-helper (quotient number 10))\n\
    \                    (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-join\
    \ (int_to", "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(=\
    \ number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n   \
    \   [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number 5)\
    \ '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(=\
    \ number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n\
    \      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number\
    \ 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n\
    \      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number\
    \ 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x\
    \ x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n\
    \      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number\
    \ 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number\
    \ 4000) '(m m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(= number 6000",
  "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3)\
    \ \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number\
    \ 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(=\
    \ number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n \
    \   [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14)\
    \ \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number\
    \ 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n\
    \    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"\
    xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70)\
    \ \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(=\
    \ number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"\
    ]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600)\
    \ \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(=\
    \ number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [else (string-append (int_to_mini_roman\
    \ (/ number 10)) (int_to_mini_roman (modulo number 10)))])\n  )\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 21) '(x x i)]\n      [(= number 22) '(x x i i)]\n      [(= number\
    \ 23) '(x x i i i)]\n      [(= number 24) '(x x i v)]\n      [(= number 25) '(x\
    \ x v)]\n      [(= number 26) '(x x v i)]\n      [(= number 27) '(x x v i i)]\n\
    \      [(= number 28) '(x x v i i i)]\n      [(= number 29) '(x x i x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 31) '(x x x i)]\n      [(= number\
    \ 32) '(x x x i i)]\n      [(= number 33) '(x x x i i i)]\n      [(= number 34)\
    \ '(x x x i v)]\n      [(= number 35) '(x x x v)]\n      [(= number 36) '(x x\
    \ x v i)]\n      [(= number 37) '(x x x v i i)]\n      [(= number 38) '(x x x\
    \ v i i i)]\n      [(=", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 0) empty]\n      [(= number 1) \"i\"]\n      [(= number 2) \"\
    ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n     \
    \ [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"\
    x\"]\n      [(= number 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n   \
    \   [(= number 70) \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n \
    \     [(= number 300) \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n\
    \      [(= number 800) \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 1000) \"m\"]\n      [(= number 2000) \"mm\"]\n      [(= number 3000) \"mmm\"\
    ]\n      [else (error \"number out of range\")]))\n  (string-downcase (int_to_mini_roman-helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n    \
    \  [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n\
    \      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n\
    \      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number\
    \ 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n  \
    \    [(= number 300) '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number\
    \ 500) '(d)]\n      [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n\
    \      [(= number 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number\
    \ 1000) '(m)]\n      [else (append (int_to_mini_roman-helper (quotient number\
    \ 10))\n                    (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-join (int_to_mini_roman-helper number) \"\"))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                    (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-join (int_to_mini_roman-helper number) \"\"))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(= number\
    \ 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000) '(m\
    \ m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(= number 6000", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n   \
    \   [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(= number\
    \ 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000) '(m\
    \ m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(= number 6000", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond [(= number 0) \"\"]\n         \
    \ [(= number 1) \"i\"]\n          [(= number 2) \"ii\"]\n          [(= number\
    \ 3) \"iii\"]\n          [(= number 4) \"iv\"]\n          [(= number 5) \"v\"\
    ]\n          [(= number 6) \"vi\"]\n          [(= number 7) \"vii\"]\n       \
    \   [(= number 8) \"viii\"]\n          [(= number 9) \"ix\"]\n          [(= number\
    \ 10) \"x\"]\n          [(= number 20) \"xx\"]\n          [(= number 30) \"xxx\"\
    ]\n          [(= number 40) \"xl\"]\n          [(= number 50) \"l\"]\n       \
    \   [(= number 60) \"lx\"]\n          [(= number 70) \"lxx\"]\n          [(= number\
    \ 80) \"lxxx\"]\n          [(= number 90) \"xc\"]\n          [(= number 100) \"\
    c\"]\n          [(= number 200) \"cc\"]\n          [(= number 300) \"ccc\"]\n\
    \          [(= number 400) \"cd\"]\n          [(= number 500) \"d\"]\n       \
    \   [(= number 600) \"dc\"]\n          [(= number 700) \"dcc\"]\n          [(=\
    \ number 800) \"dccc\"]\n          [(= number 900) \"cm\"]\n          [(= number\
    \ 1000) \"m\"]\n          [else (string-append (int_to_mini_roman-helper (/ number\
    \ 10))\n                               (int_to_mini_roman-helper (modulo number\
    \ 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n   \
    \   [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 20)\
    \ '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x l)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n    \
    \  [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [else\
    \ (append (int_to_mini_roman-helper (/ number 10))\n                    (int_to_mini_roman-helper\
    \ (modulo number 10)))]))\n  (string-join (int_to_mini_roman-helper number) \"\
    \"))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number\
    \ 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number\
    \ 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n     \
    \ [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v\
    \ i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(=\
    \ number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x\
    \ l)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number\
    \ 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n\
    \      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number\
    \ 300) '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n\
    \      [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]))\n\
    \  (string-join (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12)\
    \ '(x i i)]\n      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n\
    \      [(= number 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number\
    \ 17) '(x v i i)]\n      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x\
    \ i x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l\
    \ x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n    \
    \  [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200)\
    \ '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n\
    \      [(= number 500) '(c d)]\n      [(= number 600) '(d)]\n      [(= number\
    \ 700) '(d c)]\n      [(= number 800) '(d c c)]\n      [(= number 900) '(c m)]\n\
    \      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                    (int_to_mini_roman_helper (remainder number\
    \ 10)))]))\n  (string-join (int_to", "  (define (int_to_mini_roman_helper number)\n\
    \    (cond [(= number 1000) \"m\"]\n          [(= number 900) \"cm\"]\n      \
    \    [(= number 500) \"d\"]\n          [(= number 400) \"cd\"]\n          [(=\
    \ number 100) \"c\"]\n          [(= number 90) \"xc\"]\n          [(= number 50)\
    \ \"l\"]\n          [(= number 40) \"xl\"]\n          [(= number 10) \"x\"]\n\
    \          [(= number 9) \"ix\"]\n          [(= number 5) \"v\"]\n          [(=\
    \ number 4) \"iv\"]\n          [(= number 1) \"i\"]\n          [else (string-append\
    \ (int_to_mini_roman_helper (quotient number 10))\n                          \
    \     (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                    (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-join (int_to_mini_roman_helper number) \"\"))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n      [(= number 70)\
    \ \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n      [(= number 300)\
    \ \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n    \
    \  [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n      [(= number 800)\
    \ \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]\n  \
    \    [else (error \"number out of range\")]))\n  (string-downcase (int_to_mini_roman-helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond ((= number\
    \ 1000) \"m\")\n          ((= number 900) \"cm\")\n          ((= number 500) \"\
    d\")\n          ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n  \
    \        ((= number 90) \"xc\")\n          ((= number 50) \"l\")\n          ((=\
    \ number 40) \"xl\")\n          ((= number 10) \"x\")\n          ((= number 9)\
    \ \"ix\")\n          ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n \
    \         ((= number 1) \"i\")))\n  (define (int_to_mini_roman-helper-2 number)\n\
    \    (cond ((= number 1000) \"m\")\n          ((= number 900) \"mcm\")\n     \
    \     ((= number 500) \"mcd\")\n          ((= number 400) \"mccd\")\n        \
    \  ((= number 100) \"cc\")\n          ((= number 90) \"ccxc\")\n          ((=\
    \ number 50) \"l\")\n          ((= number 40) \"xl\")\n          ((= number 10)\
    \ \"xx\")\n          ((= number 9) \"xxix\")\n          ((= number 5) \"v\")\n\
    \          ((= number 4) \"iv\")\n          ((= number 1) \"ii\")))\n  (define\
    \ (int_to_mini_roman-helper-3 number)\n    (cond ((= number 1000) \"m\")\n   \
    \       ((= number 900) \"mcm\")\n          ((= number 500) \"mcd\")\n       \
    \   ((= number 400) \"mccd\")\n          ((= number 100) \"ccc\")\n          ((=\
    \ number 90) \"ccccxc\")\n          ((= number 50) \"l\")\n          ((= number\
    \ 40) \"xl\")\n          ((= number 10) \"xxx\")\n          ((= number 9) \"xxxix\"\
    )\n          ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n         \
    \ ((= number 1) \"iii\")))\n  (define (int_to_mini_roman-helper-4 number)\n  \
    \  (cond ((= number 1000) \"m\")\n          ((= number 900) \"mcm", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n   \
    \   [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 20)\
    \ '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x l)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n    \
    \  [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [else (append (int_to_mini_roman-helper (quotient number 10))\n       \
    \             (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-join\
    \ (int_to_mini_roman-helper number) \"\"))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 11) \"xi\"]\n      [(= number 12) \"xii\"]\n      [(= number 13) \"xiii\"]\n\
    \      [(= number 14) \"xiv\"]\n      [(= number 15) \"xv\"]\n      [(= number\
    \ 16) \"xvi\"]\n      [(= number 17) \"xvii\"]\n      [(= number 18) \"xviii\"\
    ]\n      [(= number 19) \"xix\"]\n      [(= number 20) \"xx\"]\n      [(= number\
    \ 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n  \
    \    [(= number 60) \"lx\"]\n      [(= number 70) \"lxx\"]\n      [(= number 80)\
    \ \"lxxx\"]\n      [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n    \
    \  [(= number 200) \"cc\"]\n      [(= number 300) \"ccc\"]\n      [(= number 400)\
    \ \"cd\"]\n      [(= number 500) \"d\"]\n      [(= number 600) \"dc\"]\n     \
    \ [(= number 700) \"dcc\"]\n      [(= number 800) \"dccc\"]\n      [(= number\
    \ 900) \"cm\"]\n      [(= number 1000) \"m\"]\n      [(= number 2000) \"mm\"]\n\
    \      [(= number 3000) \"mmm\"]\n      [(= number 4000) \"mv\"]\n      [(= number\
    \ 5000) \"v\"]\n      [(= number 6000) \"vm\"]\n      [(= number 7000) \"vmm\"\
    ]\n      [(= number 8000) \"vmmm\"]\n      [(= number 9000) \"mx\"]\n      [(=\
    \ number 10000) \"x", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i\
    \ i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n\
    \      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number\
    \ 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n  \
    \    [(= number 300) '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number\
    \ 500) '(d)]\n      [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n\
    \      [(= number 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number\
    \ 1000) '(m)]\n      [else (int_to_mini_roman-helper (quotient number 10))\n \
    \           (int_to_mini_roman-helper (remainder number 10))]))\n  (string-join\
    \ (int_to_mini_roman-helper number)))\n", "  (cond\n    [(= number 1) \"i\"]\n\
    \    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"]\n    [(= number 4) \"iv\"\
    ]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"]\n    [(= number 7) \"vii\"\
    ]\n    [(= number 8) \"viii\"]\n    [(= number 9) \"ix\"]\n    [(= number 10)\
    \ \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number 12) \"xii\"]\n    [(= number\
    \ 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n    [(= number 15) \"xv\"]\n   \
    \ [(= number 16) \"xvi\"]\n    [(= number 17) \"xvii\"]\n    [(= number 18) \"\
    xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number 20) \"xx\"]\n    [(= number\
    \ 30) \"xxx\"]\n    [(= number 40) \"xl\"]\n    [(= number 50) \"l\"]\n    [(=\
    \ number 60) \"lx\"]\n    [(= number 70) \"lxx\"]\n    [(= number 80) \"lxxx\"\
    ]\n    [(= number 90) \"xc\"]\n    [(= number 100) \"c\"]\n    [(= number 200)\
    \ \"cc\"]\n    [(= number 300) \"ccc\"]\n    [(= number 400) \"cd\"]\n    [(=\
    \ number 500) \"d\"]\n    [(= number 600) \"dc\"]\n    [(= number 700) \"dcc\"\
    ]\n    [(= number 800) \"dccc\"]\n    [(= number 900) \"cm\"]\n    [(= number\
    \ 1000) \"m\"]\n    [(= number 2000) \"mm\"]\n    [(= number 3000) \"mmm\"]\n\
    \    [(= number 4000) \"mv\"]\n    [(= number 5000) \"v\"]\n    [(= number 6000)\
    \ \"vm\"]\n    [(= number 7000) \"vmm\"]\n    [(= number 8000) \"vmmm\"]\n   \
    \ [(= number 9000) \"mx\"]\n    [(= number 10000) \"x\"]\n    [(= number 20000)\
    \ \"xx\"]\n    [(= number 30000) \"xxx\"]\n    [(", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(<= number 3) (append (make-list number 'i) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 8) (append (make-list (- number 5) 'i) (list 'v) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 9) (append (make-list (- number 5) 'i) (list 'x) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 39) (append (make-list (- number 10) 'x) (list 'x) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 49) (append (make-list (- number 40) 'x) (list 'l) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 89) (append (make-list (- number 50) 'x) (list 'l) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 99) (append (make-list (- number 90) 'x) (list 'c) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 399) (append (make-list (- number 100) 'c) (list 'c)\
    \ (int_to_mini_roman_helper 0))]\n      [(<= number 499) (append (make-list (-\
    \ number 400) 'c) (list 'd) (int_to_mini_roman_helper 0))]\n      [(<= number\
    \ 899) (append (make-list (- number 500) 'c) (list 'd) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 999) (append (make-list (- number 900) 'c) (list 'm)\
    \ (int_to_mini_roman_helper 0))]\n      [(<= number 1000) (append (make-list (-\
    \ number 1000) 'm) (list 'm) (int_to_mini_roman_helper 0))]))\n  (string-join\
    \ (", "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number\
    \ 3) \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number\
    \ 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(=\
    \ number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n \
    \   [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14)\
    \ \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number\
    \ 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n\
    \    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"\
    xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70)\
    \ \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(=\
    \ number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"\
    ]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600)\
    \ \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(=\
    \ number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"\
    ]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number\
    \ 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n\
    \    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number\
    \ 10000) \"x\"]\n    [(= number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"\
    ]\n    [(", "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(=\
    \ number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n   \
    \   [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number 5)\
    \ '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(=\
    \ number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n\
    \      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number\
    \ 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n\
    \      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number\
    \ 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x\
    \ x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n\
    \      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number\
    \ 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [else (append (int_to_mini_roman-helper (quotient number 10))\n       \
    \             (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-join\
    \ (int_to", "  (define (int_to_mini_roman-helper number)\n    (cond ((= number\
    \ 0) \"\")\n          ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n\
    \          ((= number 3) \"iii\")\n          ((= number 4) \"iv\")\n         \
    \ ((= number 5) \"v\")\n          ((= number 6) \"vi\")\n          ((= number\
    \ 7) \"vii\")\n          ((= number 8) \"viii\")\n          ((= number 9) \"ix\"\
    )\n          ((= number 10) \"x\")\n          ((= number 40) \"xl\")\n       \
    \   ((= number 50) \"l\")\n          ((= number 90) \"xc\")\n          ((= number\
    \ 100) \"c\")\n          ((= number 400) \"cd\")\n          ((= number 500) \"\
    d\")\n          ((= number 900) \"cm\")\n          ((= number 1000) \"m\")))\n\
    \  (define (int_to_mini_roman-helper-2 number)\n    (cond ((= number 0) \"\")\n\
    \          ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n          ((=\
    \ number 3) \"iii\")\n          ((= number 4) \"iv\")\n          ((= number 5)\
    \ \"v\")\n          ((= number 6) \"vi\")\n          ((= number 7) \"vii\")\n\
    \          ((= number 8) \"viii\")\n          ((= number 9) \"ix\")))\n  (define\
    \ (int_to_mini_roman-helper-3 number)\n    (cond ((= number 0) \"\")\n       \
    \   ((= number 1) \"x\")\n          ((= number 2) \"xx\")\n          ((= number\
    \ 3) \"xxx\")\n          ((= number 4) \"xl\")\n          ((= number 5) \"l\"\
    )\n          ((= number 6) \"lx\")\n          ((= number 7) \"lxx\")\n       \
    \   ((= number 8) \"lxxx\")\n          ((= number 9) \"xc\")))\n  (define (int_to_mini_roman-helper-4\
    \ number)\n    (cond ((= number 0) \"\")\n          ((= number 1) \"c\")\n   \
    \       ((= number 2) \"cc\")\n         ", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (append (int_to_mini_roman-helper (quotient number\
    \ 10))\n                    (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3)\
    \ \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number\
    \ 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(=\
    \ number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n \
    \   [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14)\
    \ \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number\
    \ 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n\
    \    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"\
    xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70)\
    \ \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(=\
    \ number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"\
    ]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600)\
    \ \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(=\
    \ number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"\
    ]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number\
    \ 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n\
    \    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number\
    \ 10000) \"x\"]\n    [(= number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"\
    ]\n    [(", "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(=\
    \ number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n   \
    \   [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number 5)\
    \ '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(=\
    \ number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n\
    \      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number\
    \ 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n\
    \      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number\
    \ 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x\
    \ x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n\
    \      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number\
    \ 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [else (append (int_to_mini_roman_helper (quotient number 10))\n       \
    \             (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-join\
    \ (int_to", "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(=\
    \ number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n   \
    \   [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number 5)\
    \ '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(=\
    \ number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n\
    \      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number\
    \ 40) '(x l)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n    \
    \  [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number\
    \ 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n  \
    \    [(= number 300) '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number\
    \ 500) '(d)]\n      [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n\
    \      [(= number 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number\
    \ 1000) '(m)]\n      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n\
    \      [else (append (int_to_mini_roman_helper (/ number 10))\n              \
    \      (int_to_mini_roman_helper (modulo number 10)))]))\n  (string-join (int_to_mini_roman_helper\
    \ number) \"\"))\n", "  (define (int_to_mini_roman_helper number)\n    (cond\n\
    \      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i\
    \ i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n\
    \      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number\
    \ 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n  \
    \    [(= number 300) '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number\
    \ 500) '(d)]\n      [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n\
    \      [(= number 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number\
    \ 1000) '(m)]\n      [else (append (int_to_mini_roman_helper (quotient number\
    \ 10))\n                    (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-join (int_to_mini_roman_helper number) \"\"))\n", "  (cond\n    [(=\
    \ number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"]\n  \
    \  [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"]\n\
    \    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9) \"\
    ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number 12)\
    \ \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n    [(=\
    \ number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"xvii\"\
    ]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number\
    \ 20) \"xx\"]\n    [(= number 21) \"xxi\"]\n    [(= number 22) \"xxii\"]\n   \
    \ [(= number 23) \"xxiii\"]\n    [(= number 24) \"xxiv\"]\n    [(= number 25)\
    \ \"xxv\"]\n    [(= number 26) \"xxvi\"]\n    [(= number 27) \"xxvii\"]\n    [(=\
    \ number 28) \"xxviii\"]\n    [(= number 29) \"xxix\"]\n    [(= number 30) \"\
    xxx\"]\n    [(= number 31) \"xxxi\"]\n    [(= number 32) \"xxxii\"]\n    [(= number\
    \ 33) \"xxxiii\"]\n    [(= number 34) \"xxxiv\"]\n    [(= number 35) \"xxxv\"\
    ]\n    [(= number 36) \"xxxvi\"]\n    [(= number 37) \"xxxvii\"]\n    [(= number\
    \ 38) \"xxxviii\"]\n    [(= number 39) \"xxxix\"]\n    [(= number 40) \"xl\"]\n\
    \    [(= number 41) \"xli\"]\n    [(= number 42) \"xlii\"]\n    [(= number 43)\
    \ \"xliii\"]\n    [(= number 44) \"xliv\"]\n    [(= number 45) \"xlv\"]\n    [(=\
    \ number 46) \"xlvi\"]\n    [(=", "  (define (int_to_mini_roman_helper number)\n\
    \    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n   \
    \   [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100)\
    \ \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(=\
    \ number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1)\
    \ \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient number\
    \ 10))\n                           (int_to_mini_roman_helper (remainder number\
    \ 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10)) (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond ((= number 0) \"\")\n          ((= number 1) \"i\")\n   \
    \       ((= number 2) \"ii\")\n          ((= number 3) \"iii\")\n          ((=\
    \ number 4) \"iv\")\n          ((= number 5) \"v\")\n          ((= number 6) \"\
    vi\")\n          ((= number 7) \"vii\")\n          ((= number 8) \"viii\")\n \
    \         ((= number 9) \"ix\")\n          ((= number 10) \"x\")\n          ((=\
    \ number 20) \"xx\")\n          ((= number 30) \"xxx\")\n          ((= number\
    \ 40) \"xl\")\n          ((= number 50) \"l\")\n          ((= number 60) \"lx\"\
    )\n          ((= number 70) \"lxx\")\n          ((= number 80) \"lxxx\")\n   \
    \       ((= number 90) \"xc\")\n          ((= number 100) \"c\")\n          ((=\
    \ number 200) \"cc\")\n          ((= number 300) \"ccc\")\n          ((= number\
    \ 400) \"cd\")\n          ((= number 500) \"d\")\n          ((= number 600) \"\
    dc\")\n          ((= number 700) \"dcc\")\n          ((= number 800) \"dccc\"\
    )\n          ((= number 900) \"cm\")\n          ((= number 1000) \"m\")\n    \
    \      ((= number 2000) \"mm\")\n          ((= number 3000) \"mmm\")\n       \
    \   (else (error \"Number out of range\"))))\n  (string-downcase (int_to_mini_roman_helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond [(= number\
    \ 0) \"\"]\n          [(= number 1) \"i\"]\n          [(= number 2) \"ii\"]\n\
    \          [(= number 3) \"iii\"]\n          [(= number 4) \"iv\"]\n         \
    \ [(= number 5) \"v\"]\n          [(= number 6) \"vi\"]\n          [(= number\
    \ 7) \"vii\"]\n          [(= number 8) \"viii\"]\n          [(= number 9) \"ix\"\
    ]\n          [(= number 10) \"x\"]\n          [(= number 20) \"xx\"]\n       \
    \   [(= number 30) \"xxx\"]\n          [(= number 40) \"xl\"]\n          [(= number\
    \ 50) \"l\"]\n          [(= number 60) \"lx\"]\n          [(= number 70) \"lxx\"\
    ]\n          [(= number 80) \"lxxx\"]\n          [(= number 90) \"xc\"]\n    \
    \      [(= number 100) \"c\"]\n          [(= number 200) \"cc\"]\n          [(=\
    \ number 300) \"ccc\"]\n          [(= number 400) \"cd\"]\n          [(= number\
    \ 500) \"d\"]\n          [(= number 600) \"dc\"]\n          [(= number 700) \"\
    dcc\"]\n          [(= number 800) \"dccc\"]\n          [(= number 900) \"cm\"\
    ]\n          [(= number 1000) \"m\"]\n          [else (string-append (int_to_mini_roman-helper\
    \ (/ number 10))\n                               (int_to_mini_roman-helper (modulo\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 20)\
    \ '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x l)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n    \
    \  [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [else\
    \ (append (int_to_mini_roman-helper (quotient number 10))\n                  \
    \  (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-join (int_to_mini_roman-helper\
    \ number) \"\"))\n", "  (let ([roman-numerals (list (list 1 \"i\") (list 5 \"\
    v\") (list 10 \"x\") (list 50 \"l\") (list 100 \"c\") (list 500 \"d\") (list 1000\
    \ \"m\"))])\n    (define (int-to-mini-roman-helper number roman-numerals)\n  \
    \    (cond [(empty? roman-numerals) \"\"]\n            [(<= number (first (first\
    \ roman-numerals)))\n             (string-append (make-string (/ number (first\
    \ (first roman-numerals))) (second (first roman-numerals)))\n                \
    \            (int-to-mini-roman-helper (remainder number (first (first roman-numerals)))\
    \ (rest roman-numerals)))]\n            [else (int-to-mini-roman-helper number\
    \ (rest roman-numerals))]))\n    (string->symbol (string-downcase (int-to-mini-roman-helper\
    \ number roman-numerals)))))\n", "  (define (int_to_mini_roman-helper number)\n\
    \    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n   \
    \   [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100)\
    \ \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(=\
    \ number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1)\
    \ \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient number\
    \ 10))\n                           (int_to_mini_roman-helper (remainder number\
    \ 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n   \
    \   [(<= number 3) (append (make-list number 'i) (int_to_mini_roman_helper 0))]\n\
    \      [(<= number 8) (append (make-list (- number 5) 'i) (list 'v) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 9) (append (make-list (- number 5) 'i) (list 'x) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 39) (append (make-list (/ number 10) 'x) (int_to_mini_roman_helper\
    \ (- number (* 10 (/ number 10)))))]\n      [(<= number 49) (append (make-list\
    \ (- number 40) 'x) (list 'l) (int_to_mini_roman_helper 0))]\n      [(<= number\
    \ 89) (append (make-list (- number 50) 'x) (list 'l) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 99) (append (make-list (- number 50) 'x) (list 'c) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 399) (append (make-list (/ number 100) 'c) (int_to_mini_roman_helper\
    \ (- number (* 100 (/ number 100)))))]\n      [(<= number 499) (append (make-list\
    \ (- number 400) 'c) (list 'd) (int_to_mini_roman_helper 0))]\n      [(<= number\
    \ 899) (append (make-list (- number 500) 'c) (list 'd) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 999) (append (make-list (- number 500) 'c) (list 'm)\
    \ (int_to_mini_roman_helper 0))]\n      [(<= number 1000) (append (make-list (/\
    \ number 1000) 'm) (int_to_mini_roman_helper (- number (* 1000 (/ number 1000)))))]))\n\
    \  (string", "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(=\
    \ number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"\
    d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n   \
    \   [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"\
    v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                          \
    \ (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper\
    \ number)))\n", "  (define (int_to_mini_roman_helper number)\n    (cond\n    \
    \  [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n\
    \      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n      [(=\
    \ number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number 15)\
    \ '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n\
    \      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(=\
    \ number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x\
    \ x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(=\
    \ number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90)\
    \ '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(=\
    \ number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500)\
    \ '(c d)]\n      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(=\
    \ number 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000)\
    \ '(m)]\n      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n  \
    \    [(= number 4000) '(m m m m)]\n      [(= number 5000) '(m m m m m)]\n    \
    \  [(= number 6000", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 0) '()]\n      [(= number 1000) (cons 'm (int_to_mini_roman-helper\
    \ (- number 1000)))]\n      [(= number 900) (cons 'c (cons 'm (int_to_mini_roman-helper\
    \ (- number 900))))]\n      [(= number 500) (cons 'd (int_to_mini_roman-helper\
    \ (- number 500)))]\n      [(= number 400) (cons 'c (cons 'd (int_to_mini_roman-helper\
    \ (- number 400))))]\n      [(= number 100) (cons 'c (int_to_mini_roman-helper\
    \ (- number 100)))]\n      [(= number 90) (cons 'x (cons 'c (int_to_mini_roman-helper\
    \ (- number 90))))]\n      [(= number 50) (cons 'l (int_to_mini_roman-helper (-\
    \ number 50)))]\n      [(= number 40) (cons 'x (cons 'l (int_to_mini_roman-helper\
    \ (- number 40))))]\n      [(= number 10) (cons 'x (int_to_mini_roman-helper (-\
    \ number 10)))]\n      [(= number 9) (cons 'i (cons 'x (int_to_mini_roman-helper\
    \ (- number 9))))]\n      [(= number 5) (cons 'v (int_to_mini_roman-helper (-\
    \ number 5)))]\n      [(= number 4) (cons 'i (cons 'v (int_to_mini_roman-helper\
    \ (- number 4))))]\n      [(= number 1) (cons 'i (int_to_mini_roman-helper (-\
    \ number 1)))]))\n  (string-join (int_to_mini_roman-helper number)))\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n   \
    \   [(= number 1000) (cons 'm (int_to_mini_roman-helper (- number 1000)))]\n \
    \     [(= number 900) (cons 'c (cons 'm (int_to_mini_roman-helper (- number 900))))]\n\
    \      [(= number 500) (cons 'd (int_to_mini_roman-helper (- number 500)))]\n\
    \      [(= number 400) (cons 'c (cons 'd (int_to_mini_roman-helper (- number 400))))]\n\
    \      [(= number 100) (cons 'c (int_to_mini_roman-helper (- number 100)))]\n\
    \      [(= number 90) (cons 'x (cons 'c (int_to_mini_roman-helper (- number 90))))]\n\
    \      [(= number 50) (cons 'l (int_to_mini_roman-helper (- number 50)))]\n  \
    \    [(= number 40) (cons 'x (cons 'l (int_to_mini_roman-helper (- number 40))))]\n\
    \      [(= number 10) (cons 'x (int_to_mini_roman-helper (- number 10)))]\n  \
    \    [(= number 9) (cons 'i (cons 'x (int_to_mini_roman-helper (- number 9))))]\n\
    \      [(= number 5) (cons 'v (int_to_mini_roman-helper (- number 5)))]\n    \
    \  [(= number 4) (cons 'i (cons 'v (int_to_mini_roman-helper (- number 4))))]\n\
    \      [(= number 1) (cons 'i (int_to_mini_roman-helper (- number 1)))]))\n  (string-join\
    \ (int_to_mini_roman-helper number)))\n", "  (cond\n    [(= number 1) \"i\"]\n\
    \    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"]\n    [(= number 4) \"iv\"\
    ]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"]\n    [(= number 7) \"vii\"\
    ]\n    [(= number 8) \"viii\"]\n    [(= number 9) \"ix\"]\n    [(= number 10)\
    \ \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number 12) \"xii\"]\n    [(= number\
    \ 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n    [(= number 15) \"xv\"]\n   \
    \ [(= number 16) \"xvi\"]\n    [(= number 17) \"xvii\"]\n    [(= number 18) \"\
    xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number 20) \"xx\"]\n    [(= number\
    \ 30) \"xxx\"]\n    [(= number 40) \"xl\"]\n    [(= number 50) \"l\"]\n    [(=\
    \ number 60) \"lx\"]\n    [(= number 70) \"lxx\"]\n    [(= number 80) \"lxxx\"\
    ]\n    [(= number 90) \"xc\"]\n    [(= number 100) \"c\"]\n    [(= number 200)\
    \ \"cc\"]\n    [(= number 300) \"ccc\"]\n    [(= number 400) \"cd\"]\n    [(=\
    \ number 500) \"d\"]\n    [(= number 600) \"dc\"]\n    [(= number 700) \"dcc\"\
    ]\n    [(= number 800) \"dccc\"]\n    [(= number 900) \"cm\"]\n    [(= number\
    \ 1000) \"m\"]\n    [(= number 2000) \"mm\"]\n    [(= number 3000) \"mmm\"]\n\
    \    [(= number 4000) \"mv\"]\n    [(= number 5000) \"v\"]\n    [(= number 6000)\
    \ \"vm\"]\n    [(= number 7000) \"vmm\"]\n    [(= number 8000) \"vmmm\"]\n   \
    \ [(= number 9000) \"mx\"]\n    [(= number 10000) \"x\"]\n    [(= number 20000)\
    \ \"xx\"]\n    [(= number 30000) \"xxx\"]\n    [(", "  (cond\n    [(= number 1)\
    \ \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"]\n    [(= number\
    \ 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"]\n    [(= number\
    \ 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9) \"ix\"]\n    [(=\
    \ number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number 12) \"xii\"]\n\
    \    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n    [(= number 15)\
    \ \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"xvii\"]\n    [(=\
    \ number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number 20) \"xx\"\
    ]\n    [(= number 21) \"xxi\"]\n    [(= number 22) \"xxii\"]\n    [(= number 23)\
    \ \"xxiii\"]\n    [(= number 24) \"xxiv\"]\n    [(= number 25) \"xxv\"]\n    [(=\
    \ number 26) \"xxvi\"]\n    [(= number 27) \"xxvii\"]\n    [(= number 28) \"xxviii\"\
    ]\n    [(= number 29) \"xxix\"]\n    [(= number 30) \"xxx\"]\n    [(= number 31)\
    \ \"xxxi\"]\n    [(= number 32) \"xxxii\"]\n    [(= number 33) \"xxxiii\"]\n \
    \   [(= number 34) \"xxxiv\"]\n    [(= number 35) \"xxxv\"]\n    [(= number 36)\
    \ \"xxxvi\"]\n    [(= number 37) \"xxxvii\"]\n    [(= number 38) \"xxxviii\"]\n\
    \    [(= number 39) \"xxxix\"]\n    [(= number 40) \"xl\"]\n    [(= number 41)\
    \ \"xli\"]\n    [(= number 42) \"xlii\"]\n    [(= number 43) \"xliii\"]\n    [(=\
    \ number 44) \"xliv\"]\n    [(= number 45) \"xlv\"]\n    [(= number 46) \"xlvi\"\
    ]\n    [(=", "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(=\
    \ number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"\
    d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n   \
    \   [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"\
    v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                          \
    \ (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n    \
    \  [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500)\
    \ \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(=\
    \ number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else\
    \ (append (int_to_mini_roman-helper (quotient number 10))\n                  \
    \  (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n    \
    \  [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500)\
    \ \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(=\
    \ number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else\
    \ (string-append (int_to_mini_roman-helper (quotient number 10))\n           \
    \                (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append\n              (int_to_mini_roman-helper\
    \ (quotient number 10))\n              (int_to_mini_roman-helper (remainder number\
    \ 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                    (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(= number\
    \ 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000) '(m\
    \ m m m)]\n      [(= number 5000) '(m v)]\n      [(= number 6000) '(v", "  (cond\n\
    \    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"\
    ]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"\
    ]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9)\
    \ \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number\
    \ 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n  \
    \  [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"\
    xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number\
    \ 20) \"xx\"]\n    [(= number 21) \"xxi\"]\n    [(= number 22) \"xxii\"]\n   \
    \ [(= number 23) \"xxiii\"]\n    [(= number 24) \"xxiv\"]\n    [(= number 25)\
    \ \"xxv\"]\n    [(= number 26) \"xxvi\"]\n    [(= number 27) \"xxvii\"]\n    [(=\
    \ number 28) \"xxviii\"]\n    [(= number 29) \"xxix\"]\n    [(= number 30) \"\
    xxx\"]\n    [(= number 31) \"xxxi\"]\n    [(= number 32) \"xxxii\"]\n    [(= number\
    \ 33) \"xxxiii\"]\n    [(= number 34) \"xxxiv\"]\n    [(= number 35) \"xxxv\"\
    ]\n    [(= number 36) \"xxxvi\"]\n    [(= number 37) \"xxxvii\"]\n    [(= number\
    \ 38) \"xxxviii\"]\n    [(= number 39) \"xxxix\"]\n    [(= number 40) \"xl\"]\n\
    \    [(= number 41) \"xli\"]\n    [(= number 42) \"xlii\"]\n    [(= number 43)\
    \ \"xliii\"]\n    [(= number 44) \"xliv\"]\n    [(= number 45) \"xlv\"]\n    [(=\
    \ number 46) \"xlvi\"]\n    [(=", "  (define (int_to_mini_roman_helper number)\n\
    \    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n   \
    \   [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100)\
    \ \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(=\
    \ number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1)\
    \ \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient number\
    \ 10))\n                           (int_to_mini_roman_helper (remainder number\
    \ 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n   \
    \   [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 20)\
    \ '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x l)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n    \
    \  [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]))\n\
    \  (string-join (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12)\
    \ '(x i i)]\n      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n\
    \      [(= number 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number\
    \ 17) '(x v i i)]\n      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x\
    \ i x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l\
    \ x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n    \
    \  [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200)\
    \ '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n\
    \      [(= number 500) '(c d)]\n      [(= number 600) '(d)]\n      [(= number\
    \ 700) '(d c)]\n      [(= number 800) '(d c c)]\n      [(= number 900) '(c m)]\n\
    \      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                    (int_to_mini_roman_helper (remainder number\
    \ 10)))]))\n  (string-join (int_to", "  (define (int_to_mini_roman-iter number\
    \ result)\n    (cond\n      [(= number 0) result]\n      [(< number 4)\n     \
    \  (int_to_mini_roman-iter (- number 1) (string-append result \"i\"))]\n     \
    \ [(< number 5)\n       (int_to_mini_roman-iter (- number 5) (string-append result\
    \ \"v\"))]\n      [(< number 9)\n       (int_to_mini_roman-iter (- number 1) (string-append\
    \ result \"i\"))]\n      [(< number 10)\n       (int_to_mini_roman-iter (- number\
    \ 10) (string-append result \"x\"))]\n      [(< number 40)\n       (int_to_mini_roman-iter\
    \ (- number 10) (string-append result \"x\"))]\n      [(< number 50)\n       (int_to_mini_roman-iter\
    \ (- number 50) (string-append result \"l\"))]\n      [(< number 90)\n       (int_to_mini_roman-iter\
    \ (- number 10) (string-append result \"x\"))]\n      [(< number 100)\n      \
    \ (int_to_mini_roman-iter (- number 100) (string-append result \"c\"))]\n    \
    \  [(< number 400)\n       (int_to_mini_roman-iter (- number 100) (string-append\
    \ result \"c\"))]\n      [(< number 500)\n       (int_to_mini_roman-iter (- number\
    \ 500) (string-append result \"d\"))]\n      [(< number 900)\n       (int_to_mini_roman-iter\
    \ (- number 100) (string-append result \"c\"))]\n      [(< number 1000)\n    \
    \   (int_to_mini_roman-iter (- number 1000) (string-append result \"m\"))]\n \
    \     [else result]))\n  (int_to_mini_roman-iter number \"\"))\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                    (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                    (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 0) \"\")\n  \
    \        ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n          ((=\
    \ number 3) \"iii\")\n          ((= number 4) \"iv\")\n          ((= number 5)\
    \ \"v\")\n          ((= number 6) \"vi\")\n          ((= number 7) \"vii\")\n\
    \          ((= number 8) \"viii\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 10) \"x\")\n          ((= number 20) \"xx\")\n          ((= number\
    \ 30) \"xxx\")\n          ((= number 40) \"xl\")\n          ((= number 50) \"\
    l\")\n          ((= number 60) \"lx\")\n          ((= number 70) \"lxx\")\n  \
    \        ((= number 80) \"lxxx\")\n          ((= number 90) \"xc\")\n        \
    \  ((= number 100) \"c\")\n          ((= number 200) \"cc\")\n          ((= number\
    \ 300) \"ccc\")\n          ((= number 400) \"cd\")\n          ((= number 500)\
    \ \"d\")\n          ((= number 600) \"dc\")\n          ((= number 700) \"dcc\"\
    )\n          ((= number 800) \"dccc\")\n          ((= number 900) \"cm\")\n  \
    \        ((= number 1000) \"m\")\n          (else (string-append (int_to_mini_roman-helper\
    \ (/ number 10))\n                               (int_to_mini_roman-helper (modulo\
    \ number 10))))))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond [(= number 0) '()]\n   \
    \       [(= number 1) '(i)]\n          [(= number 2) '(i i)]\n          [(= number\
    \ 3) '(i i i)]\n          [(= number 4) '(i v)]\n          [(= number 5) '(v)]\n\
    \          [(= number 6) '(v i)]\n          [(= number 7) '(v i i)]\n        \
    \  [(= number 8) '(v i i i)]\n          [(= number 9) '(i x)]\n          [(= number\
    \ 10) '(x)]\n          [(= number 20) '(x x)]\n          [(= number 30) '(x x\
    \ x)]\n          [(= number 40) '(x l)]\n          [(= number 50) '(l)]\n    \
    \      [(= number 60) '(l x)]\n          [(= number 70) '(l x x)]\n          [(=\
    \ number 80) '(l x x x)]\n          [(= number 90) '(x c)]\n          [(= number\
    \ 100) '(c)]\n          [(= number 200) '(c c)]\n          [(= number 300) '(c\
    \ c c)]\n          [(= number 400) '(c d)]\n          [(= number 500) '(d)]\n\
    \          [(= number 600) '(d c)]\n          [(= number 700) '(d c c)]\n    \
    \      [(= number 800) '(d c c c)]\n          [(= number 900) '(c m)]\n      \
    \    [(= number 1000) '(m)]\n          [else (append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                        (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-join (int_to_mini_roman-helper number) \"\"))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                    (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-join (int_to", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12)\
    \ '(x i i)]\n      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n\
    \      [(= number 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number\
    \ 17) '(x v i i)]\n      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x\
    \ i x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l\
    \ x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n    \
    \  [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200)\
    \ '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n\
    \      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(= number\
    \ 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900) '(c\
    \ m)]\n      [(= number 1000) '(m)]\n      [(= number 2000) '(m m)]\n      [(=\
    \ number 3000) '(m m m)]\n      [(= number 4000) '(m m m m)]\n      [(= number\
    \ 5000) '(m m m m m)]\n      [(=", "  (define (int_to_mini_roman-helper number)\n\
    \    (cond\n      [(= number 0) empty]\n      [(= number 1) \"i\"]\n      [(=\
    \ number 2) \"ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4) \"iv\"\
    ]\n      [(= number 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(= number 7)\
    \ \"vii\"]\n      [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"]\n     \
    \ [(= number 10) \"x\"]\n      [(= number 20) \"xx\"]\n      [(= number 30) \"\
    xxx\"]\n      [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number\
    \ 60) \"lx\"]\n      [(= number 70) \"lxx\"]\n      [(= number 80) \"lxxx\"]\n\
    \      [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n      [(= number\
    \ 200) \"cc\"]\n      [(= number 300) \"ccc\"]\n      [(= number 400) \"cd\"]\n\
    \      [(= number 500) \"d\"]\n      [(= number 600) \"dc\"]\n      [(= number\
    \ 700) \"dcc\"]\n      [(= number 800) \"dccc\"]\n      [(= number 900) \"cm\"\
    ]\n      [(= number 1000) \"m\"]\n      [else empty]))\n  (define (int_to_mini_roman-helper2\
    \ number)\n    (cond\n      [(= number 0) empty]\n      [(= number 1) \"i\"]\n\
    \      [(= number 2) \"ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4)\
    \ \"iv\"]\n      [(= number 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(=\
    \ number 7) \"vii\"]\n      [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 20) \"xx\"]\n      [(= number\
    \ 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n  \
    \    [(= number 60) \"lx\"]", "  (define (int_to_mini_roman_helper number)\n \
    \   (cond\n      [(= number 0) '()]\n      [(<= number 3) (append (make-list number\
    \ 'i) (int_to_mini_roman_helper 0))]\n      [(<= number 8) (append (make-list\
    \ (- number 5) 'i) (list 'v) (int_to_mini_roman_helper 0))]\n      [(<= number\
    \ 9) (append (make-list (- number 5) 'i) (list 'x) (int_to_mini_roman_helper 0))]\n\
    \      [(<= number 39) (append (make-list (- number 10) 'x) (list 'x) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 49) (append (make-list (- number 10) 'x) (list 'l) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 89) (append (make-list (- number 50) 'x) (list 'l) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 99) (append (make-list (- number 50) 'x) (list 'c) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 399) (append (make-list (- number 100) 'c) (list 'c)\
    \ (int_to_mini_roman_helper 0))]\n      [(<= number 499) (append (make-list (-\
    \ number 100) 'c) (list 'd) (int_to_mini_roman_helper 0))]\n      [(<= number\
    \ 899) (append (make-list (- number 500) 'c) (list 'd) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 999) (append (make-list (- number 500) 'c) (list 'm)\
    \ (int_to_mini_roman_helper 0))]\n      [(<= number 1000) (append (make-list (-\
    \ number 1000) 'm) (list 'm) (int_to_mini_roman_helper 0))]))\n  (string-join\
    \ (", "  (define (int_to_mini_roman_helper number)\n    (cond [(= number 0) \"\
    \"]\n          [(= number 1) \"i\"]\n          [(= number 2) \"ii\"]\n       \
    \   [(= number 3) \"iii\"]\n          [(= number 4) \"iv\"]\n          [(= number\
    \ 5) \"v\"]\n          [(= number 6) \"vi\"]\n          [(= number 7) \"vii\"\
    ]\n          [(= number 8) \"viii\"]\n          [(= number 9) \"ix\"]\n      \
    \    [(= number 10) \"x\"]\n          [(= number 20) \"xx\"]\n          [(= number\
    \ 30) \"xxx\"]\n          [(= number 40) \"xl\"]\n          [(= number 50) \"\
    l\"]\n          [(= number 60) \"lx\"]\n          [(= number 70) \"lxx\"]\n  \
    \        [(= number 80) \"lxxx\"]\n          [(= number 90) \"xc\"]\n        \
    \  [(= number 100) \"c\"]\n          [(= number 200) \"cc\"]\n          [(= number\
    \ 300) \"ccc\"]\n          [(= number 400) \"cd\"]\n          [(= number 500)\
    \ \"d\"]\n          [(= number 600) \"dc\"]\n          [(= number 700) \"dcc\"\
    ]\n          [(= number 800) \"dccc\"]\n          [(= number 900) \"cm\"]\n  \
    \        [(= number 1000) \"m\"]\n          [(= number 2000) \"mm\"]\n       \
    \   [(= number 3000) \"mmm\"]\n          [(= number 4000) \"mv\"]\n          [(=\
    \ number 5000) \"v\"]\n          [(= number 6000) \"vm\"]\n          [(= number\
    \ 7000) \"vmm\"]\n          [(= number 8000) \"vmmm\"]\n          [(= number 9000)\
    \ \"mx\"]))\n  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(d)]\n      [(= number\
    \ 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number 800) '(d c c\
    \ c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(=\
    \ number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000)\
    \ '(m m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(=", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                    (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-join (int_to_mini_roman-helper number) \"\"))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                    (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-join (int_to", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                    (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 20)\
    \ '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x l)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n    \
    \  [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [else (append (int_to_mini_roman_helper (quotient number 10))\n       \
    \             (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-join\
    \ (int_to_mini_roman_helper number) \"\"))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3)\
    \ \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number\
    \ 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(=\
    \ number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n \
    \   [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14)\
    \ \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number\
    \ 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n\
    \    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"\
    xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70)\
    \ \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(=\
    \ number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"\
    ]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600)\
    \ \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(=\
    \ number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"\
    ]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number\
    \ 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n\
    \    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number\
    \ 10000) \"x\"]\n    [(= number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"\
    ]\n    [(", "  (define (int_to_mini_roman-helper number)\n    (cond ((= number\
    \ 0) \"\")\n          ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n\
    \          ((= number 3) \"iii\")\n          ((= number 4) \"iv\")\n         \
    \ ((= number 5) \"v\")\n          ((= number 6) \"vi\")\n          ((= number\
    \ 7) \"vii\")\n          ((= number 8) \"viii\")\n          ((= number 9) \"ix\"\
    )\n          ((= number 10) \"x\")\n          ((= number 40) \"xl\")\n       \
    \   ((= number 50) \"l\")\n          ((= number 90) \"xc\")\n          ((= number\
    \ 100) \"c\")\n          ((= number 400) \"cd\")\n          ((= number 500) \"\
    d\")\n          ((= number 900) \"cm\")\n          ((= number 1000) \"m\")))\n\
    \  (define (int_to_mini_roman-helper2 number)\n    (cond ((= number 0) \"\")\n\
    \          ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n          ((=\
    \ number 3) \"iii\")\n          ((= number 4) \"iv\")\n          ((= number 5)\
    \ \"v\")\n          ((= number 6) \"vi\")\n          ((= number 7) \"vii\")\n\
    \          ((= number 8) \"viii\")\n          ((= number 9) \"ix\")))\n  (define\
    \ (int_to_mini_roman-helper3 number)\n    (cond ((= number 0) \"\")\n        \
    \  ((= number 1) \"x\")\n          ((= number 2) \"xx\")\n          ((= number\
    \ 3) \"xxx\")\n          ((= number 4) \"xl\")\n          ((= number 5) \"l\"\
    )\n          ((= number 6) \"lx\")\n          ((= number 7) \"lxx\")\n       \
    \   ((= number 8) \"lxxx\")\n          ((= number 9) \"xc\")))\n  (define (int_to_mini_roman-helper4\
    \ number)\n    (cond ((= number 0) \"\")\n          ((= number 1) \"c\")\n   \
    \       ((= number 2) \"cc\")\n          ((= number", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12)\
    \ '(x i i)]\n      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n\
    \      [(= number 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number\
    \ 17) '(x v i i)]\n      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x\
    \ i x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l\
    \ x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n    \
    \  [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200)\
    \ '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n\
    \      [(= number 500) '(c d)]\n      [(= number 600) '(d)]\n      [(= number\
    \ 700) '(d c)]\n      [(= number 800) '(d c c)]\n      [(= number 900) '(c m)]\n\
    \      [(= number 1000) '(m)]\n      [(= number 2000) '(m m)]\n      [(= number\
    \ 3000) '(m m m)]\n      [(= number 4000) '(m m m m)]\n      [(= number 5000)\
    \ '(m m m m m)]\n      [(= number 6000", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12)\
    \ '(x i i)]\n      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n\
    \      [(= number 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number\
    \ 17) '(x v i i)]\n      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x\
    \ i x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l\
    \ x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n    \
    \  [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200)\
    \ '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n\
    \      [(= number 500) '(c d)]\n      [(= number 600) '(d)]\n      [(= number\
    \ 700) '(d c)]\n      [(= number 800) '(d c c)]\n      [(= number 900) '(c m)]\n\
    \      [(= number 1000) '(m)]\n      [(= number 2000) '(m m)]\n      [(= number\
    \ 3000) '(m m m)]\n      [(= number 4000) '(m m m m)]\n      [(= number 5000)\
    \ '(m m m m m)]\n      [(= number 6000", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 11) \"xi\"]\n      [(= number 12) \"xii\"]\n      [(= number 13) \"xiii\"]\n\
    \      [(= number 14) \"xiv\"]\n      [(= number 15) \"xv\"]\n      [(= number\
    \ 16) \"xvi\"]\n      [(= number 17) \"xvii\"]\n      [(= number 18) \"xviii\"\
    ]\n      [(= number 19) \"xix\"]\n      [(= number 20) \"xx\"]\n      [(= number\
    \ 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n  \
    \    [(= number 60) \"lx\"]\n      [(= number 70) \"lxx\"]\n      [(= number 80)\
    \ \"lxxx\"]\n      [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n    \
    \  [(= number 200) \"cc\"]\n      [(= number 300) \"ccc\"]\n      [(= number 400)\
    \ \"cd\"]\n      [(= number 500) \"d\"]\n      [(= number 600) \"dc\"]\n     \
    \ [(= number 700) \"dcc\"]\n      [(= number 800) \"dccc\"]\n      [(= number\
    \ 900) \"cm\"]\n      [(= number 1000) \"m\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 1000))\n                           (int_to_mini_roman_helper\
    \ (remainder number 1000)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(= number\
    \ 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000) '(m\
    \ m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(= number 6000", "  (cond\n\
    \    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"\
    ]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"\
    ]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9)\
    \ \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number\
    \ 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n  \
    \  [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"\
    xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number\
    \ 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"xl\"]\n    [(=\
    \ number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70) \"lxx\"]\n\
    \    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(= number 100)\
    \ \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"]\n    [(= number\
    \ 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600) \"dc\"]\n    [(=\
    \ number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(= number 900) \"\
    cm\"]\n    [(= number 1000) \"m\"]\n    [else (string-append\n            (int_to_mini_roman\
    \ (/ number 1000))\n            (int_to_mini_roman (* 1000 (% number 1000))))]))\n",
  "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3)\
    \ \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number\
    \ 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(=\
    \ number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n \
    \   [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14)\
    \ \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number\
    \ 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n\
    \    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"\
    xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70)\
    \ \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(=\
    \ number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"\
    ]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600)\
    \ \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(=\
    \ number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [else (string-append (int_to_mini_roman\
    \ (quotient number 1000))\n                         (int_to_mini_roman (remainder\
    \ number 1000)))])\n  )\n", "  (define (int_to_mini_roman-helper number roman-string)\n\
    \    (cond\n      [(= number 0) roman-string]\n      [(>= number 1000) (int_to_mini_roman-helper\
    \ (- number 1000) (string-append roman-string \"m\"))]\n      [(>= number 900)\
    \ (int_to_mini_roman-helper (- number 900) (string-append roman-string \"cm\"\
    ))]\n      [(>= number 500) (int_to_mini_roman-helper (- number 500) (string-append\
    \ roman-string \"d\"))]\n      [(>= number 400) (int_to_mini_roman-helper (- number\
    \ 400) (string-append roman-string \"cd\"))]\n      [(>= number 100) (int_to_mini_roman-helper\
    \ (- number 100) (string-append roman-string \"c\"))]\n      [(>= number 90) (int_to_mini_roman-helper\
    \ (- number 90) (string-append roman-string \"xc\"))]\n      [(>= number 50) (int_to_mini_roman-helper\
    \ (- number 50) (string-append roman-string \"l\"))]\n      [(>= number 40) (int_to_mini_roman-helper\
    \ (- number 40) (string-append roman-string \"xl\"))]\n      [(>= number 10) (int_to_mini_roman-helper\
    \ (- number 10) (string-append roman-string \"x\"))]\n      [(>= number 9) (int_to_mini_roman-helper\
    \ (- number 9) (string-append roman-string \"ix\"))]\n      [(>= number 5) (int_to_mini_roman-helper\
    \ (- number 5) (string-append roman-string \"v\"))]\n      [(>= number 4) (int_to_mini_roman-helper\
    \ (- number 4) (string-append roman-string \"iv\"))]\n      [(>= number 1) (int_to_mini_roman-helper\
    \ (- number 1) (string-append roman-string \"i\"))]))\n  (int_to_mini_roman-helper\
    \ number \"\"))\n\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (string-append (int_to_mini_roman-helper (quotient number 10))\n\
    \                           (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]\n      [(= number 2000) '(m m)]\n    \
    \  [(= number 3000) '(m m m)]\n      [else (append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                    (int_to_mini_roman-helper (remainder number\
    \ 10)))]))\n  (string-join (int_to_mini_roman-helper number) \"\"))\n", "  (cond\n\
    \    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"\
    ]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"\
    ]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9)\
    \ \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number\
    \ 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n  \
    \  [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"\
    xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number\
    \ 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"xl\"]\n    [(=\
    \ number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70) \"lxx\"]\n\
    \    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(= number 100)\
    \ \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"]\n    [(= number\
    \ 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600) \"dc\"]\n    [(=\
    \ number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(= number 900) \"\
    cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"]\n    [(= number\
    \ 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number 5000) \"v\"]\n\
    \    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n    [(= number 8000)\
    \ \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number 10000) \"x\"]\n    [(=\
    \ number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"]\n    [(", "  (cond\n \
    \   [(= number 1000) \"m\"]\n    [(= number 900) \"cm\"]\n    [(= number 500)\
    \ \"d\"]\n    [(= number 400) \"cd\"]\n    [(= number 100) \"c\"]\n    [(= number\
    \ 90) \"xc\"]\n    [(= number 50) \"l\"]\n    [(= number 40) \"xl\"]\n    [(=\
    \ number 10) \"x\"]\n    [(= number 9) \"ix\"]\n    [(= number 5) \"v\"]\n   \
    \ [(= number 4) \"iv\"]\n    [(= number 1) \"i\"]\n    [else (string-append (int_to_mini_roman\
    \ (quotient number 10))\n                         (int_to_mini_roman (remainder\
    \ number 10)))]))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (string-append (int_to_mini_roman-helper (quotient number 10))\n\
    \                           (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(= number\
    \ 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000) '(m\
    \ m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(= number 6000", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n   \
    \   [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman_helper (quotient number 10))\n                    (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-join (int_to", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman-helper\
    \ (modulo number 10))\n                    (int_to_mini_roman-helper (quotient\
    \ number 10)))]))\n  (string-join (int_to_mini_roman-helper number) \"\"))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond [(= number 0) '()]\n   \
    \       [(= number 1) '(i)]\n          [(= number 2) '(i i)]\n          [(= number\
    \ 3) '(i i i)]\n          [(= number 4) '(i v)]\n          [(= number 5) '(v)]\n\
    \          [(= number 6) '(v i)]\n          [(= number 7) '(v i i)]\n        \
    \  [(= number 8) '(v i i i)]\n          [(= number 9) '(i x)]\n          [(= number\
    \ 10) '(x)]\n          [(= number 11) '(x i)]\n          [(= number 12) '(x i\
    \ i)]\n          [(= number 13) '(x i i i)]\n          [(= number 14) '(x i v)]\n\
    \          [(= number 15) '(x v)]\n          [(= number 16) '(x v i)]\n      \
    \    [(= number 17) '(x v i i)]\n          [(= number 18) '(x v i i i)]\n    \
    \      [(= number 19) '(x i x)]\n          [(= number 20) '(x x)]\n          [(=\
    \ number 30) '(x x x)]\n          [(= number 40) '(x x x x)]\n          [(= number\
    \ 50) '(l)]\n          [(= number 60) '(l x)]\n          [(= number 70) '(l x\
    \ x)]\n          [(= number 80) '(l x x x)]\n          [(= number 90) '(x c)]\n\
    \          [(= number 100) '(c)]\n          [(= number 200) '(c c)]\n        \
    \  [(= number 300) '(c c c)]\n          [(= number 400) '(c c c c)]\n        \
    \  [(= number 500) '(c d)]\n          [(= number 600) '(d)]\n          [(= number\
    \ 700) '(d c)]\n          [(= number 800) '(d c c)]\n          [(= number 900)\
    \ '(c m)]\n          [(= number 1000) '(m)]\n          [(= number 2000) '(m m)]\n\
    \          [(= number 3000) '(m m m)]\n          [(= number 4000) '(m m m m)]\n\
    \          [(= number 5000) '(m v)]\n          [(= number 6000) '(v)]\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond [(= number 0) '()]\n   \
    \       [(= number 1) '(i)]\n          [(= number 2) '(i i)]\n          [(= number\
    \ 3) '(i i i)]\n          [(= number 4) '(i v)]\n          [(= number 5) '(v)]\n\
    \          [(= number 6) '(v i)]\n          [(= number 7) '(v i i)]\n        \
    \  [(= number 8) '(v i i i)]\n          [(= number 9) '(i x)]\n          [(= number\
    \ 10) '(x)]\n          [(= number 20) '(x x)]\n          [(= number 30) '(x x\
    \ x)]\n          [(= number 40) '(x l)]\n          [(= number 50) '(l)]\n    \
    \      [(= number 60) '(l x)]\n          [(= number 70) '(l x x)]\n          [(=\
    \ number 80) '(l x x x)]\n          [(= number 90) '(x c)]\n          [(= number\
    \ 100) '(c)]\n          [(= number 200) '(c c)]\n          [(= number 300) '(c\
    \ c c)]\n          [(= number 400) '(c d)]\n          [(= number 500) '(d)]\n\
    \          [(= number 600) '(d c)]\n          [(= number 700) '(d c c)]\n    \
    \      [(= number 800) '(d c c c)]\n          [(= number 900) '(c m)]\n      \
    \    [(= number 1000) '(m)]\n          [else (append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                        (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-join (int_to_mini_roman-helper number) \"\"))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(d)]\n      [(= number\
    \ 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number 800) '(d c c\
    \ c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(=\
    \ number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000)\
    \ '(m m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(=", "  (cond\n  \
    \  [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"\
    ]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"\
    ]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9)\
    \ \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number\
    \ 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n  \
    \  [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"\
    xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number\
    \ 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"xl\"]\n    [(=\
    \ number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70) \"lxx\"]\n\
    \    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(= number 100)\
    \ \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"]\n    [(= number\
    \ 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600) \"dc\"]\n    [(=\
    \ number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(= number 900) \"\
    cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"]\n    [(= number\
    \ 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number 5000) \"v\"]\n\
    \    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n    [(= number 8000)\
    \ \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number 10000) \"x\"]\n    [(=\
    \ number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"]\n    [(", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman_helper (quotient number 10))\n                    (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-join (int_to", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                    (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-join (int_to_mini_roman-helper number) \"\"))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(= number\
    \ 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000) '(m\
    \ m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(= number 6000", "  (define\
    \ (int_to_mini_roman-helper number roman-string)\n    (cond ((= number 0) roman-string)\n\
    \          ((= number 1) (string-append roman-string \"i\"))\n          ((= number\
    \ 2) (string-append roman-string \"ii\"))\n          ((= number 3) (string-append\
    \ roman-string \"iii\"))\n          ((= number 4) (string-append roman-string\
    \ \"iv\"))\n          ((= number 5) (string-append roman-string \"v\"))\n    \
    \      ((= number 6) (string-append roman-string \"vi\"))\n          ((= number\
    \ 7) (string-append roman-string \"vii\"))\n          ((= number 8) (string-append\
    \ roman-string \"viii\"))\n          ((= number 9) (string-append roman-string\
    \ \"ix\"))\n          ((= number 10) (string-append roman-string \"x\"))\n   \
    \       ((= number 11) (string-append roman-string \"xi\"))\n          ((= number\
    \ 12) (string-append roman-string \"xii\"))\n          ((= number 13) (string-append\
    \ roman-string \"xiii\"))\n          ((= number 14) (string-append roman-string\
    \ \"xiv\"))\n          ((= number 15) (string-append roman-string \"xv\"))\n \
    \         ((= number 16) (string-append roman-string \"xvi\"))\n          ((=\
    \ number 17) (string-append roman-string \"xvii\"))\n          ((= number 18)\
    \ (string-append roman-string \"xviii\"))\n          ((= number 19) (string-append\
    \ roman-string \"xix\"))\n          ((= number 20) (string-append roman-string\
    \ \"xx\"))\n          ((= number 30) (string-append roman-string \"xxx\"))\n \
    \         ((= number 40) (string-append roman-string \"xl\"))\n          ((= number\
    \ 50) (string-append roman-string \"l\"))\n          ((= number 60) (string-append\
    \ roman-string \"lx\"))\n          ((= number 70) (string-append roman-string\
    \ \"lxx\"))\n          ((= number 80) (string-append r", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (cond ((= number 0) \"\")\n        ((= number 1) (int_to_mini_roman-helper\
    \ 1))\n        ((= number 2) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 3) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper 1)))\n\
    \        ((= number 7) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 8) (string-append (int_to_mini_roman-helper\
    \ 5) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 9) (int_to_mini_roman-helper 9))\n        ((= number\
    \ 10) (int_to_mini_roman-helper 10))\n        ((= number 11) (string-append (int",
  "  (define (int_to_mini_roman-helper number roman-string)\n    (cond\n      [(=\
    \ number 0) roman-string]\n      [(>= number 1000) (int_to_mini_roman-helper (-\
    \ number 1000) (string-append roman-string \"m\"))]\n      [(>= number 900) (int_to_mini_roman-helper\
    \ (- number 900) (string-append roman-string \"cm\"))]\n      [(>= number 500)\
    \ (int_to_mini_roman-helper (- number 500) (string-append roman-string \"d\"))]\n\
    \      [(>= number 400) (int_to_mini_roman-helper (- number 400) (string-append\
    \ roman-string \"cd\"))]\n      [(>= number 100) (int_to_mini_roman-helper (-\
    \ number 100) (string-append roman-string \"c\"))]\n      [(>= number 90) (int_to_mini_roman-helper\
    \ (- number 90) (string-append roman-string \"xc\"))]\n      [(>= number 50) (int_to_mini_roman-helper\
    \ (- number 50) (string-append roman-string \"l\"))]\n      [(>= number 40) (int_to_mini_roman-helper\
    \ (- number 40) (string-append roman-string \"xl\"))]\n      [(>= number 10) (int_to_mini_roman-helper\
    \ (- number 10) (string-append roman-string \"x\"))]\n      [(>= number 9) (int_to_mini_roman-helper\
    \ (- number 9) (string-append roman-string \"ix\"))]\n      [(>= number 5) (int_to_mini_roman-helper\
    \ (- number 5) (string-append roman-string \"v\"))]\n      [(>= number 4) (int_to_mini_roman-helper\
    \ (- number 4) (string-append roman-string \"iv\"))]\n      [(>= number 1) (int_to_mini_roman-helper\
    \ (- number 1) (string-append roman-string \"i\"))]))\n  (int_to_mini_roman-helper\
    \ number \"\"))\n\n", "  (define (int_to_mini_roman_helper number)\n    (cond\n\
    \      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (append (int_to_mini_roman_helper (quotient number 10))\n       \
    \             (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) \"\"]\n      [(= number 1) \"i\"]\n\
    \      [(= number 2) \"ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4)\
    \ \"iv\"]\n      [(= number 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(=\
    \ number 7) \"vii\"]\n      [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 11) \"xi\"]\n      [(= number\
    \ 12) \"xii\"]\n      [(= number 13) \"xiii\"]\n      [(= number 14) \"xiv\"]\n\
    \      [(= number 15) \"xv\"]\n      [(= number 16) \"xvi\"]\n      [(= number\
    \ 17) \"xvii\"]\n      [(= number 18) \"xviii\"]\n      [(= number 19) \"xix\"\
    ]\n      [(= number 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n   \
    \   [(= number 70) \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n \
    \     [(= number 300) \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n\
    \      [(= number 800) \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 1000) \"m\"]\n      [(= number 2000) \"mm\"]\n      [(= number 3000) \"mmm\"\
    ]\n      [(= number 4000) \"mmmm\"]\n      [(= number 5000) \"mmmmm\"]\n     \
    \ [(= number 6000) \"mmmmmm\"]\n      [(= number 7000) \"mmmmmmm\"]\n      [(=\
    \ number 8000) \"mmmmmmmm\"]\n      [(= number 9000) \"mmmmmmmmm\"]\n      [(=\
    \ number 10000", "  (define (int_to_mini_roman-helper number)\n    (cond\n   \
    \   [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n\
    \      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n\
    \      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number\
    \ 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n  \
    \    [(= number 300) '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number\
    \ 500) '(d)]\n      [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n\
    \      [(= number 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number\
    \ 1000) '(m)]\n      [else (append (int_to_mini_roman-helper (quotient number\
    \ 10))\n                    (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-join (int_to_mini_roman-helper number) \"\"))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) empty]\n      [(= number 1) \"i\"]\n\
    \      [(= number 2) \"ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4)\
    \ \"iv\"]\n      [(= number 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(=\
    \ number 7) \"vii\"]\n      [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 20) \"xx\"]\n      [(= number\
    \ 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n  \
    \    [(= number 60) \"lx\"]\n      [(= number 70) \"lxx\"]\n      [(= number 80)\
    \ \"lxxx\"]\n      [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n    \
    \  [(= number 200) \"cc\"]\n      [(= number 300) \"ccc\"]\n      [(= number 400)\
    \ \"cd\"]\n      [(= number 500) \"d\"]\n      [(= number 600) \"dc\"]\n     \
    \ [(= number 700) \"dcc\"]\n      [(= number 800) \"dccc\"]\n      [(= number\
    \ 900) \"cm\"]\n      [(= number 1000) \"m\"]\n      [else (error \"number out\
    \ of range\")]))\n  (define (int_to_mini_roman_helper2 number)\n    (cond\n  \
    \    [(= number 0) empty]\n      [(= number 1) \"i\"]\n      [(= number 2) \"\
    ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n     \
    \ [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"\
    x\"]\n      [(= number 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(=", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (cond ((<= number 0) \"\")\n        ((<= number 1000) (string-append\
    \ (int_to_mini_roman-helper number)\n                                        \
    \ (int_to_mini_roman (- number number))))\n        (else \"?\")))\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10)) (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman_helper\
    \ (modulo number 1000))\n                    (int_to_mini_roman_helper (/ number\
    \ 1000)))]))\n  (string-join (int_to_mini_roman_helper number) \"\"))\n", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(d)]\n      [(= number\
    \ 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number 800) '(d c c\
    \ c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(=\
    \ number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000)\
    \ '(m m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(=", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]))\n  (string-join (int_to_mini_roman-helper\
    \ number)))\n", "  (define (helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (helper\
    \ (quotient number 10)) (helper (remainder number 10)))]))\n  (string-downcase\
    \ (helper number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (string-append (int_to_mini_roman-helper (quotient number 10))\n\
    \                           (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 20)\
    \ '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x l)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n    \
    \  [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [else\n\
    \       (append\n        (int_to_mini_roman_helper (quotient number 10))\n   \
    \     (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-join (int_to_mini_roman_helper\
    \ number) \"\"))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i\
    \ i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n\
    \      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number\
    \ 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n  \
    \    [(= number 300) '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number\
    \ 500) '(d)]\n      [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n\
    \      [(= number 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number\
    \ 1000) '(m)]\n      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n\
    \      [else (append (int_to_mini_roman-helper (modulo number 10))\n         \
    \           (int_to_mini_roman-helper (quotient number 10)))]))\n  (string-join\
    \ (int_to_mini_roman-helper number) \"\"))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                    (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (list->string (int_to", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                    (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-join (int_to_mini_roman_helper number) \"\"))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman-helper (- number (remainder number 10)))\n              \
    \      (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-join (int",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                    (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-join (int_to", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond [(= number 0) empty]\n          [(= number 1) \"i\"]\n  \
    \        [(= number 2) \"ii\"]\n          [(= number 3) \"iii\"]\n          [(=\
    \ number 4) \"iv\"]\n          [(= number 5) \"v\"]\n          [(= number 6) \"\
    vi\"]\n          [(= number 7) \"vii\"]\n          [(= number 8) \"viii\"]\n \
    \         [(= number 9) \"ix\"]\n          [(= number 10) \"x\"]\n          [(=\
    \ number 40) \"xl\"]\n          [(= number 50) \"l\"]\n          [(= number 90)\
    \ \"xc\"]\n          [(= number 100) \"c\"]\n          [(= number 400) \"cd\"\
    ]\n          [(= number 500) \"d\"]\n          [(= number 900) \"cm\"]\n     \
    \     [(= number 1000) \"m\"]\n          [else (string-append\n              \
    \   (int_to_mini_roman_helper (quotient number 10))\n                 (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper numeral)\n    (cond\n      [(= numeral 1) \"\
    i\"]\n      [(= numeral 2) \"ii\"]\n      [(= numeral 3) \"iii\"]\n      [(= numeral\
    \ 4) \"iv\"]\n      [(= numeral 5) \"v\"]\n      [(= numeral 6) \"vi\"]\n    \
    \  [(= numeral 7) \"vii\"]\n      [(= numeral 8) \"viii\"]\n      [(= numeral\
    \ 9) \"ix\"]\n      [(= numeral 10) \"x\"]\n      [(= numeral 20) \"xx\"]\n  \
    \    [(= numeral 30) \"xxx\"]\n      [(= numeral 40) \"xl\"]\n      [(= numeral\
    \ 50) \"l\"]\n      [(= numeral 60) \"lx\"]\n      [(= numeral 70) \"lxx\"]\n\
    \      [(= numeral 80) \"lxxx\"]\n      [(= numeral 90) \"xc\"]\n      [(= numeral\
    \ 100) \"c\"]\n      [(= numeral 200) \"cc\"]\n      [(= numeral 300) \"ccc\"\
    ]\n      [(= numeral 400) \"cd\"]\n      [(= numeral 500) \"d\"]\n      [(= numeral\
    \ 600) \"dc\"]\n      [(= numeral 700) \"dcc\"]\n      [(= numeral 800) \"dccc\"\
    ]\n      [(= numeral 900) \"cm\"]\n      [(= numeral 1000) \"m\"]))\n  (define\
    \ (int_to_mini_roman_helper2 number)\n    (cond\n      [(= number 0) \"\"]\n \
    \     [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3) \"\
    iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"]\n  \
    \    [(= number 9) \"ix\"]))\n  (define (int_to_mini_roman_helper3 number)\n \
    \   (cond\n      [(= number 0) \"\"]\n      [(= number 1) \"x\"]\n      [(= number\
    \ 2", "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number\
    \ 0) '()]\n      [(<= number 3) (append (list \"i\") (int_to_mini_roman_helper\
    \ (- number 1)))]\n      [(= number 4) (list \"iv\")]\n      [(<= number 8) (append\
    \ (list \"v\") (int_to_mini_roman_helper (- number 5)))]\n      [(= number 9)\
    \ (list \"ix\")]\n      [(<= number 39) (append (list \"x\") (int_to_mini_roman_helper\
    \ (- number 10)))]\n      [(<= number 49) (append (list \"xl\") (int_to_mini_roman_helper\
    \ (- number 40)))]\n      [(<= number 89) (append (list \"l\") (int_to_mini_roman_helper\
    \ (- number 50)))]\n      [(<= number 99) (append (list \"xc\") (int_to_mini_roman_helper\
    \ (- number 90)))]\n      [(<= number 399) (append (list \"c\") (int_to_mini_roman_helper\
    \ (- number 100)))]\n      [(<= number 499) (append (list \"cd\") (int_to_mini_roman_helper\
    \ (- number 400)))]\n      [(<= number 899) (append (list \"d\") (int_to_mini_roman_helper\
    \ (- number 500)))]\n      [(<= number 999) (append (list \"cm\") (int_to_mini_roman_helper\
    \ (- number 900)))]\n      [(= number 1000) (list \"m\")]))\n  (string-join (int_to_mini_roman_helper\
    \ number) \"\"))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i\
    \ i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n      [(=\
    \ number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number 15)\
    \ '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n\
    \      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(=\
    \ number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x\
    \ x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(=\
    \ number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90)\
    \ '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(=\
    \ number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500)\
    \ '(c d)]\n      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(=\
    \ number 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000)\
    \ '(m)]\n      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n  \
    \    [(= number 4000) '(m m m m)]\n      [(= number 5000) '(m m m m m)]\n    \
    \  [(= number 6000", "  (define (int_to_mini_roman_helper number)\n    (cond\n\
    \      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (append (int_to_mini_roman_helper (quotient number 10))\n       \
    \             (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12)\
    \ '(x i i)]\n      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n\
    \      [(= number 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number\
    \ 17) '(x v i i)]\n      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x\
    \ i x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l\
    \ x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n    \
    \  [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200)\
    \ '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n\
    \      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(= number\
    \ 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900) '(c\
    \ m)]\n      [(= number 1000) '(m)]\n      [(= number 2000) '(m m)]\n      [(=\
    \ number 3000) '(m m m)]\n      [(= number 4000) '(m m m m)]\n      [(= number\
    \ 5000) '(m m m m m)]\n      [(=", "  (define (int_to_mini_roman-helper number)\n\
    \    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number\
    \ 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n   \
    \   [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v\
    \ i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(=\
    \ number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n\
    \      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number\
    \ 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n\
    \      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(=\
    \ number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x\
    \ x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(=\
    \ number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90)\
    \ '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(=\
    \ number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500)\
    \ '(c d)]\n      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(=\
    \ number 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000)\
    \ '(m)]\n      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n  \
    \    [(= number 4000) '(m m m m)]\n      [(= number 5000) '(m m m m m)]\n    \
    \  [(= number 6000", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i\
    \ i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n\
    \      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number\
    \ 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n  \
    \    [(= number 300) '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number\
    \ 500) '(d)]\n      [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n\
    \      [(= number 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number\
    \ 1000) '(m)]\n      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n\
    \      [(= number 4000) '(m v)]\n      [(= number 5000) '(v)]\n      [(= number\
    \ 6000) '(v m)]\n      [(= number 7000) '(v m m)]\n      [(= number 8000) '(v\
    \ m m m)]\n      [(= number 9000) '(m x)]\n      [(= number 10000) '(x)]\n   \
    \   [(= number 20000) '(x x)]\n      [(= number 30000) '(x x x)]\n      [(= number\
    \ 40000) '(x l)]\n      [(= number 50000) '(l)]\n      [(= number 60000) '(l x)]\n\
    \      [(= number 70000", "  (define (int_to_mini_roman_helper number)\n    (cond\n\
    \      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i\
    \ i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n      [(=\
    \ number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number 15)\
    \ '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n\
    \      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(=\
    \ number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x\
    \ x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(=\
    \ number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90)\
    \ '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(=\
    \ number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500)\
    \ '(d)]\n      [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n    \
    \  [(= number 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number\
    \ 1000) '(m)]\n      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n\
    \      [(= number 4000) '(m m m m)]\n      [(= number 5000) '(m m m m m)]\n  \
    \    [(=", "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(=\
    \ number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"\
    d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n   \
    \   [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"\
    v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append\
    \ (int_to_mini_roman_helper (quotient number 10))\n                          \
    \ (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond [(= number\
    \ 1000) \"m\"]\n          [(= number 900) \"cm\"]\n          [(= number 500) \"\
    d\"]\n          [(= number 400) \"cd\"]\n          [(= number 100) \"c\"]\n  \
    \        [(= number 90) \"xc\"]\n          [(= number 50) \"l\"]\n          [(=\
    \ number 40) \"xl\"]\n          [(= number 10) \"x\"]\n          [(= number 9)\
    \ \"ix\"]\n          [(= number 5) \"v\"]\n          [(= number 4) \"iv\"]\n \
    \         [(= number 1) \"i\"]\n          [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                               (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10)) (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(>= number 1000) (list \"m\" (int_to_mini_roman-helper\
    \ (- number 1000)))]\n      [(>= number 900) (list \"cm\" (int_to_mini_roman-helper\
    \ (- number 900)))]\n      [(>= number 500) (list \"d\" (int_to_mini_roman-helper\
    \ (- number 500)))]\n      [(>= number 400) (list \"cd\" (int_to_mini_roman-helper\
    \ (- number 400)))]\n      [(>= number 100) (list \"c\" (int_to_mini_roman-helper\
    \ (- number 100)))]\n      [(>= number 90) (list \"xc\" (int_to_mini_roman-helper\
    \ (- number 90)))]\n      [(>= number 50) (list \"l\" (int_to_mini_roman-helper\
    \ (- number 50)))]\n      [(>= number 40) (list \"xl\" (int_to_mini_roman-helper\
    \ (- number 40)))]\n      [(>= number 10) (list \"x\" (int_to_mini_roman-helper\
    \ (- number 10)))]\n      [(>= number 9) (list \"ix\" (int_to_mini_roman-helper\
    \ (- number 9)))]\n      [(>= number 5) (list \"v\" (int_to_mini_roman-helper\
    \ (- number 5)))]\n      [(>= number 4) (list \"iv\" (int_to_mini_roman-helper\
    \ (- number 4)))]\n      [(>= number 1) (list \"i\" (int_to_mini_roman-helper\
    \ (- number 1)))]\n      [else '()]))\n  (string-join (int_to_mini_roman-helper\
    \ number) \"\"))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (string-append (int_to_mini_roman-helper (quotient number 10))\n\
    \                           (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(<= number 3) (append (make-list number 'i) (int_to_mini_roman_helper\
    \ 0))]\n      [(<= number 5) (append (make-list (- 5 number) 'i) (int_to_mini_roman_helper\
    \ 5))]\n      [(<= number 8) (append (make-list (- number 5) 'i) (int_to_mini_roman_helper\
    \ 5))]\n      [(<= number 10) (append (make-list (- 10 number) 'i) (int_to_mini_roman_helper\
    \ 10))]\n      [(<= number 40) (append (make-list (/ number 10) 'x) (int_to_mini_roman_helper\
    \ (- number (* (/ number 10) 10))))]\n      [(<= number 50) (append (make-list\
    \ (- 5 (/ number 10)) 'x) (int_to_mini_roman_helper 50))]\n      [(<= number 90)\
    \ (append (make-list (- (/ number 10) 5) 'x) (int_to_mini_roman_helper 50))]\n\
    \      [(<= number 100) (append (make-list (- 10 (/ number 10)) 'x) (int_to_mini_roman_helper\
    \ 100))]\n      [(<= number 400) (append (make-list (/ number 100) 'c) (int_to_mini_roman_helper\
    \ (- number (* (/ number 100) 100))))]\n      [(<= number 500) (append (make-list\
    \ (- 5 (/ number 100)) 'c) (int_to_mini_roman_helper 500))]\n      [(<= number\
    \ 900) (append (make-list (- (/ number 100) 5) 'c) (int_to_mini_roman_helper 500))]\n\
    \      [(<= number 1000) (append (make-list (- 10 (/ number 100)) 'c) (int_to_mini_roman_helper\
    \ 1000))]))\n  (string-join (int_to_mini_roman_helper number) \"\"))\n", "  (cond\n\
    \    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"\
    ]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"\
    ]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9)\
    \ \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number\
    \ 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n  \
    \  [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"\
    xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number\
    \ 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"xl\"]\n    [(=\
    \ number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70) \"lxx\"]\n\
    \    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(= number 100)\
    \ \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"]\n    [(= number\
    \ 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600) \"dc\"]\n    [(=\
    \ number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(= number 900) \"\
    cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"]\n    [(= number\
    \ 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number 5000) \"v\"]\n\
    \    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n    [(= number 8000)\
    \ \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number 10000) \"x\"]\n    [(=\
    \ number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"]\n    [(", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(<= number 3) (append (make-list\
    \ number 'i) (int_to_mini_roman-helper 0))]\n      [(= number 4) (list 'i 'v)]\n\
    \      [(<= number 8) (append (list 'v) (int_to_mini_roman-helper (- number 5)))]\n\
    \      [(= number 9) (list 'i 'x)]\n      [(<= number 39) (append (make-list (/\
    \ number 10) 'x) (int_to_mini_roman-helper (modulo number 10)))]\n      [(<= number\
    \ 49) (append (list 'x 'l) (int_to_mini_roman-helper (- number 40)))]\n      [(<=\
    \ number 89) (append (list 'l) (int_to_mini_roman-helper (- number 50)))]\n  \
    \    [(<= number 99) (append (list 'x 'c) (int_to_mini_roman-helper (- number\
    \ 90)))]\n      [(<= number 399) (append (make-list (/ number 100) 'c) (int_to_mini_roman-helper\
    \ (modulo number 100)))]\n      [(<= number 499) (append (list 'c 'd) (int_to_mini_roman-helper\
    \ (- number 400)))]\n      [(<= number 899) (append (list 'd) (int_to_mini_roman-helper\
    \ (- number 500)))]\n      [(<= number 999) (append (list 'c 'm) (int_to_mini_roman-helper\
    \ (- number 900)))]\n      [(<= number 1000) (append (list 'm) (int_to_mini_roman-helper\
    \ (- number 1000)))]))\n  (string-join (int_to_mini_roman-helper number) \"\"\
    ))\n", "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number\
    \ 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number\
    \ 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n     \
    \ [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v\
    \ i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(=\
    \ number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x\
    \ l)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number\
    \ 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n\
    \      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number\
    \ 300) '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n\
    \      [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [else (append (int_to_mini_roman_helper (quotient number 10))\n       \
    \             (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-join\
    \ (int_to_mini_roman_helper number) \"\"))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]\n      [else\n       (append\n       \
    \ (int_to_mini_roman-helper (quotient number 10))\n        (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-join (int_to_mini_roman-helper number)\
    \ \"\"))\n", "  (define (int_to_mini_roman_helper number)\n    (cond ((= number\
    \ 0) \"\")\n          ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n\
    \          ((= number 3) \"iii\")\n          ((= number 4) \"iv\")\n         \
    \ ((= number 5) \"v\")\n          ((= number 6) \"vi\")\n          ((= number\
    \ 7) \"vii\")\n          ((= number 8) \"viii\")\n          ((= number 9) \"ix\"\
    )\n          ((= number 10) \"x\")\n          ((= number 20) \"xx\")\n       \
    \   ((= number 30) \"xxx\")\n          ((= number 40) \"xl\")\n          ((= number\
    \ 50) \"l\")\n          ((= number 60) \"lx\")\n          ((= number 70) \"lxx\"\
    )\n          ((= number 80) \"lxxx\")\n          ((= number 90) \"xc\")\n    \
    \      ((= number 100) \"c\")\n          ((= number 200) \"cc\")\n          ((=\
    \ number 300) \"ccc\")\n          ((= number 400) \"cd\")\n          ((= number\
    \ 500) \"d\")\n          ((= number 600) \"dc\")\n          ((= number 700) \"\
    dcc\")\n          ((= number 800) \"dccc\")\n          ((= number 900) \"cm\"\
    )\n          ((= number 1000) \"m\")\n          (else (string-append (int_to_mini_roman_helper\
    \ (/ number 10))\n                               (int_to_mini_roman_helper (modulo\
    \ number 10))))))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(= number\
    \ 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000) '(m\
    \ m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(= number 6000", "  (cond\n\
    \    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"\
    ]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"\
    ]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9)\
    \ \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number\
    \ 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n  \
    \  [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"\
    xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number\
    \ 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"xl\"]\n    [(=\
    \ number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70) \"lxx\"]\n\
    \    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(= number 100)\
    \ \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"]\n    [(= number\
    \ 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600) \"dc\"]\n    [(=\
    \ number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(= number 900) \"\
    cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"]\n    [(= number\
    \ 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number 5000) \"v\"]\n\
    \    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n    [(= number 8000)\
    \ \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number 10000) \"x\"]\n    [(=\
    \ number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"]\n    [(", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(d)]\n      [(= number\
    \ 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number 800) '(d c c\
    \ c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(=\
    \ number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000)\
    \ '(m m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(=", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30)\
    \ '(x x x)]\n      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(=\
    \ number 60) '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l\
    \ x x x)]\n      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(=\
    \ number 200) '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400)\
    \ '(c d)]\n      [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(=\
    \ number 700) '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900)\
    \ '(c m)]\n      [(= number 1000) '(m)]))\n  (string-join (int_to_mini_roman-helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n    \
    \  [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500)\
    \ \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(=\
    \ number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else\
    \ (string-append (int_to_mini_roman-helper (quotient number 10))\n           \
    \                (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12)\
    \ '(x i i)]\n      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n\
    \      [(= number 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number\
    \ 17) '(x v i i)]\n      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x\
    \ i x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l\
    \ x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n    \
    \  [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200)\
    \ '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n\
    \      [(= number 500) '(c d)]\n      [(= number 600) '(d)]\n      [(= number\
    \ 700) '(d c)]\n      [(= number 800) '(d c c)]\n      [(= number 900) '(c m)]\n\
    \      [(= number 1000) '(m)]\n      [(= number 2000) '(m m)]\n      [(= number\
    \ 3000) '(m m m)]\n      [(= number 4000) '(m m m m)]\n      [(= number 5000)\
    \ '(m m m m m)]\n      [(= number 6000", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 20)\
    \ '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x l)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n    \
    \  [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [else (append (int_to_mini_roman-helper (quotient number 10))\n       \
    \             (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-join\
    \ (int_to_mini_roman-helper number) \"\"))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond ((= number 0) \"\")\n          ((= number 1) \"i\")\n   \
    \       ((= number 2) \"ii\")\n          ((= number 3) \"iii\")\n          ((=\
    \ number 4) \"iv\")\n          ((= number 5) \"v\")\n          ((= number 6) \"\
    vi\")\n          ((= number 7) \"vii\")\n          ((= number 8) \"viii\")\n \
    \         ((= number 9) \"ix\")\n          ((= number 10) \"x\")\n          ((=\
    \ number 20) \"xx\")\n          ((= number 30) \"xxx\")\n          ((= number\
    \ 40) \"xl\")\n          ((= number 50) \"l\")\n          ((= number 60) \"lx\"\
    )\n          ((= number 70) \"lxx\")\n          ((= number 80) \"lxxx\")\n   \
    \       ((= number 90) \"xc\")\n          ((= number 100) \"c\")\n          ((=\
    \ number 200) \"cc\")\n          ((= number 300) \"ccc\")\n          ((= number\
    \ 400) \"cd\")\n          ((= number 500) \"d\")\n          ((= number 600) \"\
    dc\")\n          ((= number 700) \"dcc\")\n          ((= number 800) \"dccc\"\
    )\n          ((= number 900) \"cm\")\n          ((= number 1000) \"m\")\n    \
    \      (else (string-append\n                 (int_to_mini_roman-helper (quotient\
    \ number 1000))\n                 (int_to_mini_roman-helper (remainder number\
    \ 1000))))))\n  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n   \
    \   [(<= number 3) (append (make-list number 'i) (int_to_mini_roman-helper (-\
    \ number number)))]\n      [(<= number 4) (append (list 'i 'v) (int_to_mini_roman-helper\
    \ (- number 4)))]\n      [(<= number 8) (append (make-list (- number 5) 'i) (list\
    \ 'v) (int_to_mini_roman-helper (- number (- number 5))))]\n      [(<= number\
    \ 9) (append (list 'i 'x) (int_to_mini_roman-helper (- number 9)))]\n      [(<=\
    \ number 39) (append (make-list (/ number 10) 'x) (int_to_mini_roman-helper (-\
    \ number (* 10 (/ number 10)))))]\n      [(<= number 40) (append (list 'x 'l)\
    \ (int_to_mini_roman-helper (- number 40)))]\n      [(<= number 89) (append (make-list\
    \ (- (/ number 10) 4) 'x) (list 'l) (int_to_mini_roman-helper (- number (* 10\
    \ (- (/ number 10) 4)))))]\n      [(<= number 90) (append (list 'x 'c) (int_to_mini_roman-helper\
    \ (- number 90)))]\n      [(<= number 399) (append (make-list (/ number 100) 'c)\
    \ (int_to_mini_roman-helper (- number (* 100 (/ number 100)))))]\n      [(<= number\
    \ 400) (append (list 'c 'd) (int_to_mini_roman-helper (- number 400)))]\n    \
    \  [(<= number 899) (append (make-list (- (/ number 100) 4) 'c) (list 'd) (int_to_mini_roman-helper\
    \ (- number (* 100 (- (/ number 100) 4)))))]\n      [(<= number 900) (append (list\
    \ 'c 'm) (int_to_mini_roman-helper (- number 900)))]\n      [(<= number 999) (append\
    \ (make-list (/ number 100)", "  (define (int_to_mini_roman-helper number)\n \
    \   (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n    \
    \  [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100)\
    \ \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(=\
    \ number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1)\
    \ \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient number\
    \ 10))\n                           (int_to_mini_roman-helper (remainder number\
    \ 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond ((= number 0) \"\")\n         \
    \ ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n          ((= number\
    \ 3) \"iii\")\n          ((= number 4) \"iv\")\n          ((= number 5) \"v\"\
    )\n          ((= number 6) \"vi\")\n          ((= number 7) \"vii\")\n       \
    \   ((= number 8) \"viii\")\n          ((= number 9) \"ix\")\n          ((= number\
    \ 10) \"x\")\n          ((= number 20) \"xx\")\n          ((= number 30) \"xxx\"\
    )\n          ((= number 40) \"xl\")\n          ((= number 50) \"l\")\n       \
    \   ((= number 60) \"lx\")\n          ((= number 70) \"lxx\")\n          ((= number\
    \ 80) \"lxxx\")\n          ((= number 90) \"xc\")\n          ((= number 100) \"\
    c\")\n          ((= number 200) \"cc\")\n          ((= number 300) \"ccc\")\n\
    \          ((= number 400) \"cd\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 600) \"dc\")\n          ((= number 700) \"dcc\")\n          ((=\
    \ number 800) \"dccc\")\n          ((= number 900) \"cm\")\n          ((= number\
    \ 1000) \"m\")\n          (else (string-append (int_to_mini_roman-helper (/ number\
    \ 10))\n                               (int_to_mini_roman-helper (modulo number\
    \ 10))))))\n  (string-downcase (int_to_mini_roman-helper number)))\n", "  (cond\n\
    \    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"\
    ]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"\
    ]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9)\
    \ \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number\
    \ 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n  \
    \  [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"\
    xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number\
    \ 20) \"xx\"]\n    [(= number 21) \"xxi\"]\n    [(= number 22) \"xxii\"]\n   \
    \ [(= number 23) \"xxiii\"]\n    [(= number 24) \"xxiv\"]\n    [(= number 25)\
    \ \"xxv\"]\n    [(= number 26) \"xxvi\"]\n    [(= number 27) \"xxvii\"]\n    [(=\
    \ number 28) \"xxviii\"]\n    [(= number 29) \"xxix\"]\n    [(= number 30) \"\
    xxx\"]\n    [(= number 31) \"xxxi\"]\n    [(= number 32) \"xxxii\"]\n    [(= number\
    \ 33) \"xxxiii\"]\n    [(= number 34) \"xxxiv\"]\n    [(= number 35) \"xxxv\"\
    ]\n    [(= number 36) \"xxxvi\"]\n    [(= number 37) \"xxxvii\"]\n    [(= number\
    \ 38) \"xxxviii\"]\n    [(= number 39) \"xxxix\"]\n    [(= number 40) \"xl\"]\n\
    \    [(= number 41) \"xli\"]\n    [(= number 42) \"xlii\"]\n    [(= number 43)\
    \ \"xliii\"]\n    [(= number 44) \"xliv\"]\n    [(= number 45) \"xlv\"]\n    [(=\
    \ number 46) \"xlvi\"]\n    [(=", "  (define (int_to_mini_roman-helper number)\n\
    \    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number\
    \ 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n   \
    \   [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v\
    \ i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(=\
    \ number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n\
    \      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number\
    \ 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n\
    \      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(=\
    \ number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x\
    \ x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(=\
    \ number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90)\
    \ '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(=\
    \ number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500)\
    \ '(c d)]\n      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(=\
    \ number 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000)\
    \ '(m)]\n      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n  \
    \    [(= number 4000) '(m m m m)]\n      [(= number 5000) '(m v)]\n      [(= number\
    \ 6000) '(v"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

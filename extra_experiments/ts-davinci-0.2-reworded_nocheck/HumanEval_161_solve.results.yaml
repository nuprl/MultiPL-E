language: ts
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ letters: string = \"abcdefghijklmnopqrstuvwxyz\";\n    let lettersUpper: string\
    \ = letters.toUpperCase();\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (letters.indexOf(s[i]) !== -1) {\n            result += lettersUpper[letters.indexOf(s[i])];\n\
    \        } else if (lettersUpper.indexOf(s[i]) !== -1) {\n            result +=\
    \ letters[lettersUpper.indexOf(s[i])];\n        } else {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"1234\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpzmcckc4j.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzmcckc4j.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n  let result = '';\n  for (let i = 0; i\
    \ < s.length; i++) {\n    if (s[i] === s[i].toUpperCase()) {\n      result +=\
    \ s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase()) {\n      result\
    \ += s[i].toUpperCase();\n    } else {\n      result += s[i];\n    }\n  }\n  return\
    \ result;\n}\n\nconsole.log(solve('1234'));\nconsole.log(solve('ab'));\nconsole.log(solve('#a@C'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpdujyfj3n.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdujyfj3n.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    let isLetter:\
    \ boolean = false;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split('').reverse().join('');\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = \"\";\n    let isLetter\
    \ = false;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split(\"\").reverse().join(\"\");\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    let isLetter:\
    \ boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n       \
    \ if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n            if (s[i]\
    \ === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n \
    \           } else {\n                result += s[i].toUpperCase();\n        \
    \    }\n        } else {\n            result += s[i];\n        }\n    }\n    if\
    \ (isLetter) {\n        return result;\n    } else {\n        return s.split('').reverse().join('');\n\
    \    }\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let isLetter\
    \ = false;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split('').reverse().join('');\n    }\n    return result;\n}\n\
    \nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].toLowerCase() !== s[i].toUpperCase()) {\n            isLetter\
    \ = true;\n            if (s[i] === s[i].toLowerCase()) {\n                result\
    \ += s[i].toUpperCase();\n            } else {\n                result += s[i].toLowerCase();\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    if (!isLetter) {\n        result = result.split(\"\").reverse().join(\"\
    \");\n    }\n    return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 2
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"#a@C\"));\nconsole.log(solve\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpzgkula7o.ts(62,1): error TS1005: '','' expected.

    ../../../../tmp/tmpzgkula7o.ts(62,9): error TS1005: '','' expected.

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp5sye6_x5.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5sye6_x5.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    let letters:\
    \ string = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (letters.indexOf(s[i]) !== -1) {\n \
    \           if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpvqyyvrgr.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvqyyvrgr.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    if\
    \ (s.match(/[a-z]/i)) {\n        for (let i: number = 0; i < s.length; i++) {\n\
    \            if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        }\n    } else {\n        for (let i: number = s.length - 1; i\
    \ >= 0; i--) {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = \"\";\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n    \
    \        result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmparm2n3w4.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmparm2n3w4.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp5sye6_x5.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5sye6_x5.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i: number = 0; i < s.length; i++) {\n        if (s[i] >= \"a\" && s[i]\
    \ <= \"z\") {\n            result += s[i].toUpperCase();\n        } else if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n            result += s[i].toLowerCase();\n  \
    \      } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpdxc7qj1o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdxc7qj1o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ letters: string = \"\";\n    for (let i = 0; i < s.length; i++) {\n        if\
    \ (s[i].match(/[a-z]/i)) {\n            letters += s[i];\n        } else {\n \
    \           result += s[i];\n        }\n    }\n    if (letters.length > 0) {\n\
    \        for (let i = 0; i < letters.length; i++) {\n            if (letters[i]\
    \ === letters[i].toUpperCase()) {\n                result += letters[i].toLowerCase();\n\
    \            } else {\n                result += letters[i].toUpperCase();\n \
    \           }\n        }\n    } else {\n        for (let i = s.length - 1; i >=\
    \ 0; i--) {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'12344321'\n\n\
    should loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpdku3twt0.js:46:12)\n\
    \    at Object.<anonymous> (/tmp/tmpdku3twt0.js:54:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '12344321',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i: number = 0; i < s.length; i++) {\n        if (s[i] >= \"a\" && s[i]\
    \ <= \"z\") {\n            result += s[i].toUpperCase();\n        } else if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n            result += s[i].toLowerCase();\n  \
    \      } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpy5692uq9.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy5692uq9.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpminu5spc.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpminu5spc.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let letters =\
    \ 'abcdefghijklmnopqrstuvwxyz';\n    for (let i = 0; i < s.length; i++) {\n  \
    \      if (letters.includes(s[i].toLowerCase())) {\n            if (s[i] === s[i].toLowerCase())\
    \ {\n                result += s[i].toUpperCase();\n            } else {\n   \
    \             result += s[i].toLowerCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpv2729dwm.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpv2729dwm.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let newString: string = \"\";\n   \
    \ for (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase())\
    \ {\n            newString += s[i].toLowerCase();\n        } else if (s[i] ===\
    \ s[i].toLowerCase()) {\n            newString += s[i].toUpperCase();\n      \
    \  } else {\n            newString += s[i];\n        }\n    }\n    return newString;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp7w7z8cwc.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7w7z8cwc.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp5sye6_x5.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5sye6_x5.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i: number = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase())\
    \ {\n            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp3j137un_.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3j137un_.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpminu5spc.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpminu5spc.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    let letters:\
    \ string = 'abcdefghijklmnopqrstuvwxyz';\n    let lettersUpper: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (letters.includes(s[i]))\
    \ {\n            result += lettersUpper[letters.indexOf(s[i])];\n        } else\
    \ if (lettersUpper.includes(s[i])) {\n            result += letters[lettersUpper.indexOf(s[i])];\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpemlei1lm.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpemlei1lm.js:46:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348992
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let letters =\
    \ 'abcdefghijklmnopqrstuvwxyz';\n    for (let i = 0; i < s.length; i++) {\n  \
    \      if (letters.includes(s[i].toLowerCase())) {\n            if (s[i] === s[i].toLowerCase())\
    \ {\n                result += s[i].toUpperCase();\n            } else {\n   \
    \             result += s[i].toLowerCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpv2729dwm.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpv2729dwm.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ letters: string = \"\";\n    let numbers: string = \"\";\n    for (let i: number\
    \ = 0; i < s.length; i++) {\n        if (isNaN(Number(s[i]))) {\n            letters\
    \ += s[i];\n        } else {\n            numbers += s[i];\n        }\n    }\n\
    \    if (letters === \"\") {\n        result = numbers.split(\"\").reverse().join(\"\
    \");\n    } else {\n        for (let i: number = 0; i < s.length; i++) {\n   \
    \         if (isNaN(Number(s[i]))) {\n                if (s[i] === s[i].toUpperCase())\
    \ {\n                    result += s[i].toLowerCase();\n                } else\
    \ {\n                    result += s[i].toUpperCase();\n                }\n  \
    \          } else {\n                result += s[i];\n            }\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#6@2'\n\nshould\
    \ loosely deep-equal\n\n'2@6#'\n    at test (/tmp/tmp4lxisi2e.js:54:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4lxisi2e.js:58:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#6@2',\n\
    \  expected: '2@6#',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpnlfb6wqd.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpnlfb6wqd.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '#A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ letters: string = \"\";\n    let numbers: string = \"\";\n    for (let i: number\
    \ = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n    \
    \        letters += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            letters += s[i].toUpperCase();\n        } else {\n          \
    \  numbers += s[i];\n        }\n    }\n    if (letters.length === 0) {\n     \
    \   for (let i: number = numbers.length - 1; i >= 0; i--) {\n            result\
    \ += numbers[i];\n        }\n    } else {\n        result = letters;\n    }\n\
    \    return result;\n}\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmppalpb_l7.js:46:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppalpb_l7.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        const char = s[i];\n        if (char.match(/[a-z]/i))\
    \ {\n            result += char.toUpperCase() === char ? char.toLowerCase() :\
    \ char.toUpperCase();\n        } else {\n            result += char;\n       \
    \ }\n    }\n    return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpgw8igmcn.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgw8igmcn.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpr0v8k5pl.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpr0v8k5pl.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] == s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] == s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpd6r1alu5.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpd6r1alu5.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        const char = s[i];\n        if (char.match(/[a-z]/i))\
    \ {\n            result += char.toUpperCase() === char ? char.toLowerCase() :\
    \ char.toUpperCase();\n        } else {\n            result += char;\n       \
    \ }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpu9b2trh0.js:31:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu9b2trh0.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ letters: string = \"abcdefghijklmnopqrstuvwxyz\";\n    let lettersUpper: string\
    \ = letters.toUpperCase();\n    let lettersLower: string = letters.toLowerCase();\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (letters.includes(s[i]))\
    \ {\n            if (lettersUpper.includes(s[i])) {\n                result +=\
    \ lettersLower[lettersUpper.indexOf(s[i])];\n            } else {\n          \
    \      result += lettersUpper[lettersLower.indexOf(s[i])];\n            }\n  \
    \      } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ASDF'\n\nshould\
    \ loosely deep-equal\n\n'aSdF'\n    at test (/tmp/tmpwmph337s.js:40:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwmph337s.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ASDF',\n\
    \  expected: 'aSdF',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@C

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ letters: string = \"abcdefghijklmnopqrstuvwxyz\";\n    let lettersUpper: string\
    \ = letters.toUpperCase();\n    let lettersLower: string = letters.toLowerCase();\n\
    \    for (let i: number = 0; i < s.length; i++) {\n        if (letters.includes(s[i]))\
    \ {\n            if (lettersUpper.includes(s[i])) {\n                result +=\
    \ lettersLower[lettersUpper.indexOf(s[i])];\n            } else {\n          \
    \      result += lettersUpper[lettersLower.indexOf(s[i])];\n            }\n  \
    \      } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ASDF'\n\nshould\
    \ loosely deep-equal\n\n'aSdF'\n    at test (/tmp/tmp0rj2r2ud.js:40:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0rj2r2ud.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ASDF',\n\
    \  expected: 'aSdF',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@C

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let letters =\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (let i = 0;\
    \ i < s.length; i++) {\n        if (letters.includes(s[i])) {\n            if\
    \ (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpvsqbn16t.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvsqbn16t.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let isLetter\
    \ = false;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split('').reverse().join('');\n    }\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ letters: string = \"\";\n    let numbers: string = \"\";\n    for (let i: number\
    \ = 0; i < s.length; i++) {\n        if (s[i] >= \"a\" && s[i] <= \"z\") {\n \
    \           letters += s[i].toUpperCase();\n        } else if (s[i] >= \"A\" &&\
    \ s[i] <= \"Z\") {\n            letters += s[i].toLowerCase();\n        } else\
    \ {\n            numbers += s[i];\n        }\n    }\n    if (letters.length >\
    \ 0) {\n        result = letters;\n    } else {\n        result = numbers;\n \
    \   }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmporifkoyh.js:41:12)\n    at\
    \ Object.<anonymous> (/tmp/tmporifkoyh.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        const char = s[i];\n        if (char.match(/[a-z]/i))\
    \ {\n            result += char.toUpperCase() === char ? char.toLowerCase() :\
    \ char.toUpperCase();\n        } else {\n            result += char;\n       \
    \ }\n    }\n    return result.length > 0 ? result : s.split('').reverse().join('');\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\nconsole.log(solve(\"\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpge_xx2ln.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpge_xx2ln.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c


    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp52sac48d.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp52sac48d.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpminu5spc.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpminu5spc.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        const char = s[i];\n        if (char.match(/[a-z]/i))\
    \ {\n            result += char.toUpperCase() === char ? char.toLowerCase() :\
    \ char.toUpperCase();\n        } else {\n            result += char;\n       \
    \ }\n    }\n    return result.length === 0 ? s.split('').reverse().join('') :\
    \ result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmppm2y6mrt.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppm2y6mrt.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] >= \"a\" && s[i] <= \"z\"\
    ) {\n            result += s[i].toUpperCase();\n        } else if (s[i] >= \"\
    A\" && s[i] <= \"Z\") {\n            result += s[i].toLowerCase();\n        }\
    \ else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpa_12frrv.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa_12frrv.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    let isLetter:\
    \ boolean = false;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split('').reverse().join('');\n    }\n    return result;\n}\n\
    \nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let letters =\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (let i = 0;\
    \ i < s.length; i++) {\n        if (letters.includes(s[i])) {\n            if\
    \ (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpvsqbn16t.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvsqbn16t.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let letters =\
    \ 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (let i = 0;\
    \ i < s.length; i++) {\n        if (letters.includes(s[i])) {\n            if\
    \ (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpvsqbn16t.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvsqbn16t.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let isLetter\
    \ = false;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split('').reverse().join('');\n    }\n    return result;\n}\n\
    \nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpr0v8k5pl.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpr0v8k5pl.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    let letters:\
    \ string = 'abcdefghijklmnopqrstuvwxyz';\n    let lettersUpper: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    for (let i = 0; i < s.length; i++) {\n        if (letters.includes(s[i]))\
    \ {\n            result += lettersUpper[letters.indexOf(s[i])];\n        } else\
    \ if (lettersUpper.includes(s[i])) {\n            result += letters[lettersUpper.indexOf(s[i])];\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp3n4ay639.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3n4ay639.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ letters: string = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i: number =\
    \ 0; i < s.length; i++) {\n        if (letters.includes(s[i].toLowerCase())) {\n\
    \            if (s[i] === s[i].toLowerCase()) {\n                result += s[i].toUpperCase();\n\
    \            } else {\n                result += s[i].toLowerCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"\
    ));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n \
    \ assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpjzjhqliy.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjzjhqliy.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n  let result = '';\n  for (let i = 0; i\
    \ < s.length; i++) {\n    if (s[i] === s[i].toUpperCase()) {\n      result +=\
    \ s[i].toLowerCase();\n    } else if (s[i] === s[i].toLowerCase()) {\n      result\
    \ += s[i].toUpperCase();\n    } else {\n      result += s[i];\n    }\n  }\n  return\
    \ result;\n}\n\nconsole.log(solve('1234'));\nconsole.log(solve('ab'));\nconsole.log(solve('#a@C'));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpdujyfj3n.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdujyfj3n.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    let isLetter:\
    \ boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n       \
    \ if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n            if (s[i]\
    \ === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n \
    \           } else {\n                result += s[i].toUpperCase();\n        \
    \    }\n        } else {\n            result += s[i];\n        }\n    }\n    if\
    \ (isLetter) {\n        return result;\n    } else {\n        return s.split('').reverse().join('');\n\
    \    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    let isLetter:\
    \ boolean = false;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split('').reverse().join('');\n    }\n    return result;\n}\n\
    \nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let str = '';\n    for (let i = 0;\
    \ i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n         \
    \   str += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            str += s[i].toUpperCase();\n        } else {\n            str\
    \ += s[i];\n        }\n    }\n    return str;\n}\n\nconsole.log(solve(\"1234\"\
    ));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpum7pyhex.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpum7pyhex.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let isLetter\
    \ = false;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i].match(/[a-z]/i))\
    \ {\n            isLetter = true;\n            if (s[i] === s[i].toUpperCase())\
    \ {\n                result += s[i].toLowerCase();\n            } else {\n   \
    \             result += s[i].toUpperCase();\n            }\n        } else {\n\
    \            result += s[i];\n        }\n    }\n    if (!isLetter) {\n       \
    \ result = result.split('').reverse().join('');\n    }\n    return result;\n}\n\
    \nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"\
    #a@C\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"\
    AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] >= \"a\" && s[i] <= \"z\"\
    ) {\n            result += s[i].toUpperCase();\n        } else if (s[i] >= \"\
    A\" && s[i] <= \"Z\") {\n            result += s[i].toLowerCase();\n        }\
    \ else {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
    aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpwvudzrmd.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwvudzrmd.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348994
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return result.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348995
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n  \
    \          result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp8d15ah5u.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp8d15ah5u.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return result.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348995
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let letters = s.match(/[a-z]/gi);\n\
    \    if (letters) {\n        let result = '';\n        for (let i = 0; i < s.length;\
    \ i++) {\n            if (letters.includes(s[i])) {\n                result +=\
    \ s[i].toUpperCase();\n            } else {\n                result += s[i];\n\
    \            }\n        }\n        return result;\n    } else {\n        return\
    \ s.split('').reverse().join('');\n    }\n}\n\nconsole.log(solve(\"1234\"));\n\
    console.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'ASDF'\n\nshould\
    \ loosely deep-equal\n\n'aSdF'\n    at test (/tmp/tmpbrvgrx1q.js:38:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbrvgrx1q.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'ASDF',\n\
    \  expected: 'aSdF',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '4321

    AB

    #A@C

    '
  timestamp: 1660348995
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ letters: string = \"\";\n    let numbers: string = \"\";\n    for (let i: number\
    \ = 0; i < s.length; i++) {\n        if (isNaN(parseInt(s[i]))) {\n          \
    \  letters += s[i];\n        } else {\n            numbers += s[i];\n        }\n\
    \    }\n    for (let i: number = 0; i < letters.length; i++) {\n        if (letters[i]\
    \ === letters[i].toUpperCase()) {\n            result += letters[i].toLowerCase();\n\
    \        } else {\n            result += letters[i].toUpperCase();\n        }\n\
    \    }\n    if (letters.length === 0) {\n        for (let i: number = numbers.length\
    \ - 1; i >= 0; i--) {\n            result += numbers[i];\n        }\n    } else\
    \ {\n        result += numbers;\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'#@62'\n\nshould\
    \ loosely deep-equal\n\n'2@6#'\n    at test (/tmp/tmpxgde4cu2.js:52:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxgde4cu2.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '#@62',\n\
    \  expected: '2@6#',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348995
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let letters =\
    \ 'abcdefghijklmnopqrstuvwxyz';\n    for (let i = 0; i < s.length; i++) {\n  \
    \      if (letters.includes(s[i].toLowerCase())) {\n            result += s[i].toUpperCase()\
    \ === s[i] ? s[i].toLowerCase() : s[i].toUpperCase();\n        } else {\n    \
    \        result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpdn67mopn.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdn67mopn.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348995
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = '';\n    for (let\
    \ i: number = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase())\
    \ {\n            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmp3j137un_.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3j137un_.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348993
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = \"\";\n    for (let i\
    \ = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n    \
    \        result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpez1a2ehv.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpez1a2ehv.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348995
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    let\
    \ isLetter: boolean = false;\n    for (let i: number = 0; i < s.length; i++) {\n\
    \        if (s[i].match(/[a-z]/i)) {\n            isLetter = true;\n         \
    \   if (s[i] === s[i].toUpperCase()) {\n                result += s[i].toLowerCase();\n\
    \            } else {\n                result += s[i].toUpperCase();\n       \
    \     }\n        } else {\n            result += s[i];\n        }\n    }\n   \
    \ if (isLetter) {\n        return result;\n    } else {\n        return s.split(\"\
    \").reverse().join(\"\");\n    }\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    let letter =\
    \ /[a-zA-Z]/;\n    for (let i = 0; i < s.length; i++) {\n        if (letter.test(s[i]))\
    \ {\n            if (s[i] === s[i].toUpperCase()) {\n                result +=\
    \ s[i].toLowerCase();\n            } else {\n                result += s[i].toUpperCase();\n\
    \            }\n        } else {\n            result += s[i];\n        }\n   \
    \ }\n    return result;\n}\n\nconsole.log(solve(\"1234\"));\nconsole.log(solve(\"\
    ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = solve;\n\
    \  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\");\n  assert.deepEqual(candidate(\"\
    1234\"),\"4321\");\n  assert.deepEqual(candidate(\"ab\"),\"AB\");\n  assert.deepEqual(candidate(\"\
    #a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"#AsdfW^45\"),\"#aSDFw^45\"\
    );\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n  assert.deepEqual(candidate(\"\
    #$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"#ccc\"),\"#CCC\");\n}\n\n\
    test();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpwjq9a4s4.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwjq9a4s4.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348995
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result: string = \"\";\n    for\
    \ (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n\
    \            result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpecgchx0q.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpecgchx0q.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//You are given a string s.\n// if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n// otherwise keep it as\
    \ it is.\n// If the string contains no letters, reverse the string.\n// The function\
    \ should return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n//\
    \ \"4321\"\n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\
    \nfunction solve(s: string): string {\n    let result = '';\n    for (let i =\
    \ 0; i < s.length; i++) {\n        if (s[i] === s[i].toUpperCase()) {\n      \
    \      result += s[i].toLowerCase();\n        } else if (s[i] === s[i].toLowerCase())\
    \ {\n            result += s[i].toUpperCase();\n        } else {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n\nconsole.log(solve(\"\
    1234\"));\nconsole.log(solve(\"ab\"));\nconsole.log(solve(\"#a@C\"));\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"aSdF\"\
    );\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
    ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
    #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\"\
    );\n  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
    #ccc\"),\"#CCC\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'1234'\n\nshould\
    \ loosely deep-equal\n\n'4321'\n    at test (/tmp/tmpe1jggv9o.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe1jggv9o.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '1234',\n\
    \  expected: '4321',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '1234

    AB

    #A@c

    '
  timestamp: 1660348989

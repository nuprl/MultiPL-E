language: ts
name: HumanEval_20_find_closest_elements
results:
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            const distance = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (distance < closest_distance) {\n             \
    \   closest = [numbers[i], numbers[j]];\n                closest_distance = distance;\n\
    \            }\n        }\n    }\n    return closest;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjr9ybxj4.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjr9ybxj4.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Number.MAX_VALUE;\n    let\
    \ min_pair: [number, number] = [0, 0];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      const diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff <\
    \ min_diff) {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmps5_m9brv.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmps5_m9brv.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 0
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    const sorted_numbers = numbers.sort();\n\
    \    let closest_pair: [number, number] = [sorted_numbers[0], sorted_numbers[1]];\n\
    \    let closest_difference = Math.abs(sorted_numbers[0] - sorted_numbers[1]);\n\
    \    for (let i = 1; i < sorted_numbers.length - 1; i++) {\n        const difference\
    \ = Math.abs(sorted_numbers[i] - sorted_numbers[i + 1]);\n        if (difference\
    \ < closest_difference) {\n            closest_difference = difference;\n    \
    \        closest_pair = [sorted_numbers[i], sorted_numbers[i + 1]];\n        }\n\
    \    }\n    return closest_pair;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Number.MAX_VALUE;\n    let\
    \ closest_elements: [number, number] = [0, 0];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                closest_elements = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqc38skjj.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqc38skjj.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            const distance = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (distance < closest_distance) {\n             \
    \   closest = [numbers[i], numbers[j]];\n                closest_distance = distance;\n\
    \            }\n        }\n    }\n    return closest;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjr9ybxj4.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjr9ybxj4.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_distance = distance;\n            }\n\
    \        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwxahuitd.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwxahuitd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest = [numbers[0], numbers[1]];\n\
    \    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (let i\
    \ = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            const distance = Math.abs(numbers[i] - numbers[j]);\n  \
    \          if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmprv989vp_.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmprv989vp_.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_diff = Math.abs(closest[0] - closest[1]);\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j <\
    \ numbers.length; j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqyskt8dy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqyskt8dy.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_numbers: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance: number = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (distance < closest_distance) {\n           \
    \     closest_distance = distance;\n                closest_numbers = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest_numbers;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp4s6kjpqm.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4s6kjpqm.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let min_diff = Math.abs(closest[0] - closest[1]);\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < min_diff) {\n                min_diff = diff;\n              \
    \  closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpumyflpna.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpumyflpna.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_distance = distance;\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpm1xfe4_x.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpm1xfe4_x.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min = Math.abs(numbers[0] - numbers[1]);\n\
    \    let result = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9nx7gpme.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9nx7gpme.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        let diff = Math.abs(numbers[i] - numbers[i + 1]);\n   \
    \     if (diff < min_diff) {\n            min_diff = diff;\n            min_pair\
    \ = [numbers[i], numbers[i + 1]];\n        }\n    }\n    return min_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp6buftpnu.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6buftpnu.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            const distance = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (distance < closest_distance) {\n             \
    \   closest = [numbers[i], numbers[j]];\n                closest_distance = distance;\n\
    \            }\n        }\n    }\n    return closest;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjr9ybxj4.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjr9ybxj4.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let min_diff = Math.abs(closest[0] - closest[1]);\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < min_diff) {\n                min_diff = diff;\n              \
    \  closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpumyflpna.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpumyflpna.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest = [numbers[0], numbers[1]];\n\
    \    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (let i\
    \ = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n    \
    \        if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0_de_eao.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0_de_eao.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_diff_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_diff_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_diff_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmplbejxzpe.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbejxzpe.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            const difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0wc9q7i0.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0wc9q7i0.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let result = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                result = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp43o_78d0.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp43o_78d0.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_diff_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_diff_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_diff_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmplbejxzpe.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbejxzpe.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest = [numbers[0], numbers[1]];\n\
    \    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (let i\
    \ = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n    \
    \        if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0_de_eao.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0_de_eao.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let min_diff: number = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let diff: number = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (diff < min_diff) {\n                min_diff\
    \ = diff;\n                closest = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpmw7dmetm.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmw7dmetm.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min = Math.abs(numbers[0] - numbers[1]);\n\
    \    let result = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9nx7gpme.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9nx7gpme.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_pair = [numbers[i], numbers[j]];\n     \
    \       }\n        }\n    }\n    return min_pair;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp2wt3czgg.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp2wt3czgg.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_diff = Math.abs(closest[0] - closest[1]);\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j <\
    \ numbers.length; j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqyskt8dy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqyskt8dy.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest_difference = difference;\n                closest_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpztkw19_0.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpztkw19_0.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_distance = distance;\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpm1xfe4_x.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpm1xfe4_x.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_diff = Math.abs(closest[0] - closest[1]);\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j <\
    \ numbers.length; j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqyskt8dy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqyskt8dy.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let min_diff = Math.abs(closest[0] - closest[1]);\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < min_diff) {\n                min_diff = diff;\n              \
    \  closest = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return\
    \ closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpumyflpna.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpumyflpna.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_elements = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_elements = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_elements;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp38bepbl5.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp38bepbl5.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_diff = Math.abs(numbers[0] -\
    \ numbers[1]);\n    let closest_pair = [numbers[0], numbers[1]];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < closest_diff) {\n\
    \                closest_diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \       closest_pair = [numbers[i], numbers[j]];\n            }\n        }\n \
    \   }\n    return closest_pair;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmppyzbzxzc.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmppyzbzxzc.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest = [numbers[0], numbers[1]];\n\
    \    let closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp1tn0kvgn.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1tn0kvgn.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Number.MAX_VALUE;\n    let\
    \ min_pair: [number, number] = [0, 0];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp1iyhpfkt.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1iyhpfkt.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_diff = Math.abs(numbers[0] -\
    \ numbers[1]);\n    let closest_pair = [numbers[0], numbers[1]];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < closest_diff) {\n\
    \                closest_diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \       closest_pair = [numbers[i], numbers[j]];\n            }\n        }\n \
    \   }\n    return closest_pair;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmppyzbzxzc.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmppyzbzxzc.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest = [numbers[0], numbers[1]];\n\
    \    let closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp1tn0kvgn.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1tn0kvgn.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let smallestDifference = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < smallestDifference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                smallestDifference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpelol1cp3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpelol1cp3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min = numbers[0] - numbers[1];\n    let\
    \ minIndex = 0;\n    for (let i = 0; i < numbers.length - 1; i++) {\n        if\
    \ (Math.abs(numbers[i] - numbers[i + 1]) < min) {\n            min = Math.abs(numbers[i]\
    \ - numbers[i + 1]);\n            minIndex = i;\n        }\n    }\n    return\
    \ [numbers[minIndex], numbers[minIndex + 1]];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  3.9,\n  4\n]\n    at test (/tmp/tmp2cc8ojf8.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp2cc8ojf8.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 3.9, 4 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_diff = Math.abs(closest[0] - closest[1]);\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j <\
    \ numbers.length; j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqyskt8dy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqyskt8dy.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_pair = [numbers[i], numbers[j]];\n     \
    \       }\n        }\n    }\n    return min_pair;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp2wt3czgg.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp2wt3czgg.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_distance = distance;\n            }\n\
    \        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwxahuitd.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwxahuitd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest_difference = difference;\n                closest_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpztkw19_0.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpztkw19_0.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min = Number.MAX_VALUE;\n    let min_pair:\
    \ [number, number] = [0, 0];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        for (let j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < min) {\n                min = Math.abs(numbers[i] - numbers[j]);\n\
    \                min_pair = [numbers[i], numbers[j]];\n            }\n       \
    \ }\n    }\n    return min_pair;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp6351d93s.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6351d93s.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_distance = distance;\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpm1xfe4_x.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpm1xfe4_x.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_distance = distance;\n            }\n\
    \        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwxahuitd.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwxahuitd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            const distance = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (distance < closest_distance) {\n             \
    \   closest = [numbers[i], numbers[j]];\n                closest_distance = distance;\n\
    \            }\n        }\n    }\n    return closest;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjr9ybxj4.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjr9ybxj4.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let result = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                result = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp43o_78d0.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp43o_78d0.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                min_pair = [numbers[i], numbers[j]];\n     \
    \       }\n        }\n    }\n    return min_pair;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp2wt3czgg.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp2wt3czgg.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_difference = Math.abs(numbers[0]\
    \ - numbers[1]);\n    let closest_pair = [numbers[0], numbers[1]];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let difference = Math.abs(numbers[i] - numbers[j]);\n  \
    \          if (difference < closest_difference) {\n                closest_difference\
    \ = difference;\n                closest_pair = [numbers[i], numbers[j]];\n  \
    \          }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqrs56507.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqrs56507.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_diff = Math.abs(closest[0] - closest[1]);\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j <\
    \ numbers.length; j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqyskt8dy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqyskt8dy.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_diff = Math.abs(numbers[0] -\
    \ numbers[1]);\n    let closest_pair = [numbers[0], numbers[1]];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < closest_diff) {\n\
    \                closest_diff = Math.abs(numbers[i] - numbers[j]);\n         \
    \       closest_pair = [numbers[i], numbers[j]];\n            }\n        }\n \
    \   }\n    return closest_pair;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmppyzbzxzc.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmppyzbzxzc.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n  let closest = [numbers[0], numbers[1]];\n \
    \ let closest_diff = Math.abs(numbers[0] - numbers[1]);\n  for (let i = 0; i <\
    \ numbers.length; i++) {\n    for (let j = i + 1; j < numbers.length; j++) {\n\
    \      const diff = Math.abs(numbers[i] - numbers[j]);\n      if (diff < closest_diff)\
    \ {\n        closest = [numbers[i], numbers[j]];\n        closest_diff = diff;\n\
    \      }\n    }\n  }\n  return closest;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp8b29v5t3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8b29v5t3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            const distance = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (distance < closest_distance) {\n             \
    \   closest = [numbers[i], numbers[j]];\n                closest_distance = distance;\n\
    \            }\n        }\n    }\n    return closest;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjr9ybxj4.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjr9ybxj4.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closestDistance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            const distance = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (distance < closestDistance) {\n              \
    \  closest = [numbers[i], numbers[j]];\n                closestDistance = distance;\n\
    \            }\n        }\n    }\n    return closest;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpi1bze72w.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpi1bze72w.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Number.MAX_VALUE;\n    let\
    \ min_pair: [number, number] = [0, 0];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      const diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff <\
    \ min_diff) {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmps5_m9brv.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmps5_m9brv.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    if (numbers.length < 2) {\n        throw\
    \ new Error(\"Array must have at least two elements\");\n    }\n    let minDiff\
    \ = Math.abs(numbers[0] - numbers[1]);\n    let minPair = [numbers[0], numbers[1]];\n\
    \    for (let i = 0; i < numbers.length - 1; i++) {\n        for (let j = i +\
    \ 1; j < numbers.length; j++) {\n            let diff = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (diff < minDiff) {\n                minDiff = diff;\n\
    \                minPair = [numbers[i], numbers[j]];\n            }\n        }\n\
    \    }\n    return minPair;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp_91g4qso.js:29:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_91g4qso.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_numbers = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_numbers = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_numbers;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpsmscrnkz.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpsmscrnkz.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest = [numbers[0], numbers[1]];\n\
    \    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n    for (let i\
    \ = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n    \
    \        if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest = [numbers[i], numbers[j]];\n         \
    \   }\n        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0_de_eao.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0_de_eao.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_distance = distance;\n            }\n\
    \        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwxahuitd.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwxahuitd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let current_difference:\
    \ number = Math.abs(numbers[i] - numbers[j]);\n            if (current_difference\
    \ < closest_difference) {\n                closest_difference = current_difference;\n\
    \                closest_elements = [numbers[i], numbers[j]];\n            }\n\
    \        }\n    }\n    return closest_elements;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpo6h1sdyl.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpo6h1sdyl.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_diff_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_diff_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_diff_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmplbejxzpe.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmplbejxzpe.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest_difference = difference;\n                closest_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpztkw19_0.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpztkw19_0.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        let diff = Math.abs(numbers[i] - numbers[i + 1]);\n   \
    \     if (diff < min_diff) {\n            min_diff = diff;\n            min_pair\
    \ = [numbers[i], numbers[i + 1]];\n        }\n    }\n    return min_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp6buftpnu.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6buftpnu.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_difference = Math.abs(numbers[0]\
    \ - numbers[1]);\n    let closest_elements = [numbers[0], numbers[1]];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let difference = Math.abs(numbers[i] - numbers[j]);\n  \
    \          if (difference < closest_difference) {\n                closest_difference\
    \ = difference;\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpurxv7c9p.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpurxv7c9p.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            const difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0wc9q7i0.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0wc9q7i0.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_diff = Math.abs(closest[0] - closest[1]);\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j <\
    \ numbers.length; j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqyskt8dy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqyskt8dy.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_distance = distance;\n            }\n\
    \        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwxahuitd.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwxahuitd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let smallest_difference = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            if (Math.abs(numbers[i] - numbers[j])\
    \ < smallest_difference) {\n                closest_pair = [numbers[i], numbers[j]];\n\
    \                smallest_difference = Math.abs(numbers[i] - numbers[j]);\n  \
    \          }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0wv1n4s4.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0wv1n4s4.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_difference = Math.abs(numbers[0]\
    \ - numbers[1]);\n    let closest_elements = [numbers[0], numbers[1]];\n    for\
    \ (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let difference = Math.abs(numbers[i] - numbers[j]);\n  \
    \          if (difference < closest_difference) {\n                closest_difference\
    \ = difference;\n                closest_elements = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpurxv7c9p.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpurxv7c9p.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_distance = Math.abs(numbers[0]\
    \ - numbers[1]);\n    let closest_pair = [numbers[0], numbers[1]];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n    \
    \        if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmplyudkzge.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmplyudkzge.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_distance = Math.abs(numbers[0] -\
    \ numbers[1]);\n    let min_pair = [numbers[0], numbers[1]];\n    for (let i =\
    \ 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            if (Math.abs(numbers[i] - numbers[j]) < min_distance) {\n\
    \                min_distance = Math.abs(numbers[i] - numbers[j]);\n         \
    \       min_pair = [numbers[i], numbers[j]];\n            }\n        }\n    }\n\
    \    return min_pair;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpl03o_mmf.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl03o_mmf.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        let diff = Math.abs(numbers[i] - numbers[i + 1]);\n   \
    \     if (diff < min_diff) {\n            min_diff = diff;\n            min_pair\
    \ = [numbers[i], numbers[i + 1]];\n        }\n    }\n    return min_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  2\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp6buftpnu.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp6buftpnu.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 2 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest_difference = difference;\n                closest_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpztkw19_0.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpztkw19_0.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_difference: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let difference = Math.abs(numbers[i]\
    \ - numbers[j]);\n            if (difference < closest_difference) {\n       \
    \         closest_difference = difference;\n                closest_elements =\
    \ [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjijxvvuz.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjijxvvuz.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_diff = Math.abs(closest[0] - closest[1]);\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j <\
    \ numbers.length; j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqyskt8dy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqyskt8dy.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_distance = distance;\n                closest_elements\
    \ = [numbers[i], numbers[j]];\n            }\n        }\n    }\n    return closest_elements;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpm1xfe4_x.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpm1xfe4_x.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_distance = distance;\n            }\n\
    \        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwxahuitd.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwxahuitd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest = [numbers[0], numbers[1]];\n\
    \    let closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp1tn0kvgn.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1tn0kvgn.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n  let closest_elements: [number, number] = [numbers[0],\
    \ numbers[1]];\n  let closest_difference: number = Math.abs(numbers[0] - numbers[1]);\n\
    \  for (let i = 0; i < numbers.length; i++) {\n    for (let j = i + 1; j < numbers.length;\
    \ j++) {\n      let difference = Math.abs(numbers[i] - numbers[j]);\n      if\
    \ (difference < closest_difference) {\n        closest_difference = difference;\n\
    \        closest_elements = [numbers[i], numbers[j]];\n      }\n    }\n  }\n \
    \ return closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp1a_69cgm.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1a_69cgm.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest_difference = difference;\n                closest_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return closest_pair;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpztkw19_0.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpztkw19_0.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_diff = Math.abs(closest[0] - closest[1]);\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j <\
    \ numbers.length; j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqyskt8dy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqyskt8dy.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_distance = distance;\n            }\n\
    \        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwxahuitd.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwxahuitd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let minDiff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let minPair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < minDiff)\
    \ {\n                minDiff = diff;\n                minPair = [numbers[i], numbers[j]];\n\
    \            }\n        }\n    }\n    return minPair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpjnvw3rjl.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjnvw3rjl.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348994
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_distance = distance;\n            }\n\
    \        }\n    }\n    return closest;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = find_closest_elements;\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n \
    \ assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1,\
    \ 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwxahuitd.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwxahuitd.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_diff = Math.abs(closest[0] - closest[1]);\n  \
    \  for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j <\
    \ numbers.length; j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (diff < closest_diff) {\n                closest = [numbers[i],\
    \ numbers[j]];\n                closest_diff = diff;\n            }\n        }\n\
    \    }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpqyskt8dy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqyskt8dy.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_elements = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_elements = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_elements;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp38bepbl5.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp38bepbl5.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            let distance: number\
    \ = Math.abs(numbers[i] - numbers[j]);\n            if (distance < closest_distance)\
    \ {\n                closest_elements = [numbers[i], numbers[j]];\n          \
    \      closest_distance = distance;\n            }\n        }\n    }\n    return\
    \ closest_elements;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpd941zrws.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpd941zrws.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest = [numbers[0], numbers[1]];\n\
    \    let closest_diff = Math.abs(numbers[0] - numbers[1]);\n    for (let i = 0;\
    \ i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length;\
    \ j++) {\n            let diff = Math.abs(numbers[i] - numbers[j]);\n        \
    \    if (diff < closest_diff) {\n                closest_diff = diff;\n      \
    \          closest = [numbers[i], numbers[j]];\n            }\n        }\n   \
    \ }\n    return closest;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp1tn0kvgn.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1tn0kvgn.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min = Math.abs(numbers[0] - numbers[1]);\n\
    \    let result = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n           \
    \ if (Math.abs(numbers[i] - numbers[j]) < min) {\n                min = Math.abs(numbers[i]\
    \ - numbers[j]);\n                result = [numbers[i], numbers[j]];\n       \
    \     }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp9nx7gpme.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9nx7gpme.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_difference = Math.abs(closest[0] - closest[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let difference = Math.abs(numbers[i] -\
    \ numbers[j]);\n            if (difference < closest_difference) {\n         \
    \       closest = [numbers[i], numbers[j]];\n                closest_difference\
    \ = difference;\n            }\n        }\n    }\n    return closest;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpuer3ozn3.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpuer3ozn3.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_elements: [number, number] =\
    \ [numbers[0], numbers[1]];\n    let closest_distance: number = Math.abs(numbers[0]\
    \ - numbers[1]);\n    for (let i = 0; i < numbers.length; i++) {\n        for\
    \ (let j = i + 1; j < numbers.length; j++) {\n            if (Math.abs(numbers[i]\
    \ - numbers[j]) < closest_distance) {\n                closest_elements = [numbers[i],\
    \ numbers[j]];\n                closest_distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            }\n        }\n    }\n    return closest_elements;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpz4_spud9.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpz4_spud9.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348993
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let closest_pair: [number, number] = [numbers[0],\
    \ numbers[1]];\n    let closest_distance = Math.abs(numbers[0] - numbers[1]);\n\
    \    for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j\
    \ < numbers.length; j++) {\n            let distance = Math.abs(numbers[i] - numbers[j]);\n\
    \            if (distance < closest_distance) {\n                closest_distance\
    \ = distance;\n                closest_pair = [numbers[i], numbers[j]];\n    \
    \        }\n        }\n    }\n    return closest_pair;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = find_closest_elements;\n  assert.deepEqual(candidate([1.0, 2.0, 3.9, 4.0,\
    \ 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0, 5.9, 4.0, 5.0]),[5.0,\
    \ 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]),[2.0, 2.2]);\n\
    \  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]),[2.0, 2.0]);\n \
    \ assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2, 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpwmi2empa.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwmi2empa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      if (Math.abs(numbers[i] - numbers[j]) < min_diff) {\n                min_diff\
    \ = Math.abs(numbers[i] - numbers[j]);\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmp0ub8qy6b.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmp0ub8qy6b.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990
- exit_code: 1
  program: "// @ts-nocheck\n\n//From a supplied array of numbers (of length at least\
    \ two) select and return two that are the closest to each\n// other and return\
    \ them in order (smaller number, larger number).\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2])\n// [2.0, 2.2]\n// >>> find_closest_elements([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0])\n// [2.0, 2.0]\nfunction find_closest_elements(numbers:\
    \ number[]): [number, number] {\n    let min_diff = Math.abs(numbers[0] - numbers[1]);\n\
    \    let min_pair = [numbers[0], numbers[1]];\n    for (let i = 0; i < numbers.length\
    \ - 1; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n      \
    \      let diff = Math.abs(numbers[i] - numbers[j]);\n            if (diff < min_diff)\
    \ {\n                min_diff = diff;\n                min_pair = [numbers[i],\
    \ numbers[j]];\n            }\n        }\n    }\n    return min_pair;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = find_closest_elements;\n  assert.deepEqual(candidate([1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2]),[3.9, 4.0]);\n  assert.deepEqual(candidate([1.0, 2.0,\
    \ 5.9, 4.0, 5.0]),[5.0, 5.9]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2]),[2.0, 2.2]);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.0]),[2.0, 2.0]);\n  assert.deepEqual(candidate([1.1, 2.2, 3.1, 4.1, 5.1]),[2.2,\
    \ 3.1]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5.9,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  5,\n  5.9\n]\n    at test (/tmp/tmpf4s81gke.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpf4s81gke.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5.9, 5 ],\n\
    \  expected: [ 5, 5.9 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348990

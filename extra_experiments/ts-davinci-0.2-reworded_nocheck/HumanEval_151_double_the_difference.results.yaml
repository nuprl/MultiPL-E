language: ts
name: HumanEval_151_double_the_difference
results:
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum:\
    \ number = 0;\n  for (let i: number = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp1f68_scb.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1f68_scb.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp2ezso451.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ezso451.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 === 1 &&\
    \ lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpox9ebz33.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpox9ebz33.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp2ezso451.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ezso451.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpa2uf6eos.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpa2uf6eos.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0 &&\
    \ lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp94wmnkqm.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp94wmnkqm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] ** 2;\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpaxddxc4z.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaxddxc4z.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpox9ebz33.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpox9ebz33.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpaxddxc4z.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaxddxc4z.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpaxddxc4z.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaxddxc4z.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjpurb1d3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjpurb1d3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 != 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpzkr9ochx.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzkr9ochx.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n \
    \   return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpzfv3ehbs.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzfv3ehbs.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpaxddxc4z.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaxddxc4z.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp2ezso451.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ezso451.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjzhkx92t.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjzhkx92t.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += Math.pow(lst[i], 2);\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xul2pl8.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xul2pl8.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp2ezso451.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ezso451.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp2ezso451.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ezso451.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += Math.pow(lst[i], 2);\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmprslz7ycv.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprslz7ycv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] > 0) {\n            sum += Math.pow(lst[i], 2);\n       \
    \ }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349057
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjm8vx4e6.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjm8vx4e6.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpkrg9fj9u.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkrg9fj9u.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n \
    \   return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp5gh250ei.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5gh250ei.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpfupkvfrq.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfupkvfrq.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0 &&\
    \ lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp94wmnkqm.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp94wmnkqm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += Math.pow(lst[i],\
    \ 2);\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpi0fv3c02.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi0fv3c02.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjzhkx92t.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjzhkx92t.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpaxddxc4z.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaxddxc4z.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    return\
    \ 0;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n25\n    at test (/tmp/tmp0ymn4yrk.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0ymn4yrk.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 25,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0 &&\
    \ lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp94wmnkqm.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp94wmnkqm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjm8vx4e6.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjm8vx4e6.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp2ezso451.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ezso451.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n  let sum\
    \ = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] % 2 !== 0 &&\
    \ lst[i] > 0) {\n      sum += lst[i] * lst[i];\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp94wmnkqm.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp94wmnkqm.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjm8vx4e6.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjm8vx4e6.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjpurb1d3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjpurb1d3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjpurb1d3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjpurb1d3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpaxddxc4z.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaxddxc4z.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpfupkvfrq.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfupkvfrq.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpfupkvfrq.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfupkvfrq.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjpurb1d3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjpurb1d3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjpurb1d3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjpurb1d3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n \
    \   }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i: number = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = double_the_difference;\n\
    \  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([5.0, 4.0]),25);\n\
    \  assert.deepEqual(candidate([0.1, 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0,\
    \ -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0, -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2,\
    \ 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0, -7.0, -5.0, -3.0, -1.0,\
    \ 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpfupkvfrq.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfupkvfrq.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] ** 2;\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpjpurb1d3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjpurb1d3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += Math.pow(lst[i], 2);\n      \
    \  }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp4ayr4fzh.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4ayr4fzh.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n    }\n\
    \    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpywykbdm3.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpywykbdm3.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp6xpfkc9f.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6xpfkc9f.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 0
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] % 2\
    \ == 1) {\n            sum += lst[i] * lst[i];\n        }\n    }\n    return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 != 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyknhrvnj.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyknhrvnj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//Given an array of numbers, return the sum of squares\
    \ of the numbers\n// in the array that are odd. Ignore numbers that are negative\
    \ or not integers.\n// >>> double_the_difference([1, 3, 2, 0])\n// 10\n// >>>\
    \ double_the_difference([-1, -2, 0])\n// 0\n// >>> double_the_difference([9, -2])\n\
    // 81\n// >>> double_the_difference([0])\n// 0\n// If the input array is empty,\
    \ return 0.\nfunction double_the_difference(lst: number[]): number {\n    let\
    \ sum: number = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ % 2 !== 0 && lst[i] > 0) {\n            sum += lst[i] * lst[i];\n        }\n\
    \    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = double_the_difference;\n  assert.deepEqual(candidate([]),0);\n\
    \  assert.deepEqual(candidate([5.0, 4.0]),25);\n  assert.deepEqual(candidate([0.1,\
    \ 0.2, 0.3]),0);\n  assert.deepEqual(candidate([-10.0, -20.0, -30.0]),0);\n  assert.deepEqual(candidate([-1.0,\
    \ -2.0, 8.0]),0);\n  assert.deepEqual(candidate([0.2, 3.0, 5.0]),34);\n  assert.deepEqual(candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]),165);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0.14\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmp2ezso451.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ezso451.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0.14,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054

language: ts
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3, 5, 13, 89];\n    if (n <= fib_list.length) {\n        return fib_list[n -\
    \ 1];\n    } else {\n        let i: number = fib_list.length;\n        let fib_num:\
    \ number = fib_list[i - 1];\n        while (i < n) {\n            fib_num = fib_num\
    \ + fib_list[i - 2];\n            if (is_prime(fib_num)) {\n                fib_list.push(fib_num);\n\
    \                i++;\n            }\n        }\n        return fib_num;\n   \
    \ }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp8d42hv1x.js:23\n            if (is_prime(fib_num)) {\n        \
    \    ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp8d42hv1x.js:23:13)\n\
    \    at test (/tmp/tmp8d42hv1x.js:39:22)\n    at Object.<anonymous> (/tmp/tmp8d42hv1x.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpke3b5ftp.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpke3b5ftp.js:14:15)\n\
    \    at test (/tmp/tmpke3b5ftp.js:24:22)\n    at Object.<anonymous> (/tmp/tmpke3b5ftp.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let prime_fib = 0;\n    let i = 0;\n  \
    \  while (i < n) {\n        if (fib === prime) {\n            prime_fib = fib;\n\
    \            i++;\n        }\n        fib = fibonacci(n);\n        prime = prime_number(n);\n\
    \    }\n    return prime_fib;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_gd9d7kg.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp_gd9d7kg.js:14:15)\n\
    \    at test (/tmp/tmp_gd9d7kg.js:31:22)\n    at Object.<anonymous> (/tmp/tmp_gd9d7kg.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let fib_prev = 1;\n    let fib_prev_prev = 0;\n    while (i < n) {\n\
    \        fib_prev_prev = fib_prev;\n        fib_prev = fib;\n        fib = fib_prev\
    \ + fib_prev_prev;\n        if (is_prime(fib)) {\n            i += 1;\n      \
    \  }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpmh3j58m7.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmh3j58m7.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpke3b5ftp.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpke3b5ftp.js:14:15)\n\
    \    at test (/tmp/tmpke3b5ftp.js:24:22)\n    at Object.<anonymous> (/tmp/tmpke3b5ftp.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        fib = fib_prev + fib_prev_prev;\n\
    \        if (is_prime(fib)) {\n            count++;\n        }\n        fib_prev_prev\
    \ = fib_prev;\n        fib_prev = fib;\n    }\n    return fib;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpr5ae73_y.js:20\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpr5ae73_y.js:20:9)\n    at\
    \ test (/tmp/tmpr5ae73_y.js:31:22)\n    at Object.<anonymous> (/tmp/tmpr5ae73_y.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: -5
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    let j: number = 0;\n    let k: number\
    \ = 0;\n    let is_prime: boolean = true;\n    while (i < n) {\n        j = fib_numbers[i\
    \ - 1] + fib_numbers[i - 2];\n        fib_numbers.push(j);\n        for (k = 2;\
    \ k < j; k++) {\n            if (j % k === 0) {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if (is_prime) {\n \
    \           i++;\n        }\n        is_prime = true;\n    }\n    return fib_numbers[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: Exception
  stderr: "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error\
    \ 178414678\n#\n#\n#\n#FailureMessage Object: 0x7ffdc8e46600\n 1: 0x2aed69a04727\
    \  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2aed6a59928e\
    \ V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 3: 0x2aed69ed3f8b  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 4: 0x2aed6a065760  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 5: 0x2aed6a06d0cd  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 6: 0x2aed6a2577db v8::internal::Runtime_GrowArrayElements(int, unsigned long*,\
    \ v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 7: 0x2aed69bb67f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n"
  stdout: ''
  timestamp: 1660349052
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_arr = [2, 3];\n  \
    \  let i = 0;\n    while (fib_arr.length < n) {\n        fib_arr.push(fib_arr[i]\
    \ + fib_arr[i + 1]);\n        i++;\n    }\n    return fib_arr[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpq0kr87p5.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpq0kr87p5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n += 1;\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwatgyn3t.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpwatgyn3t.js:14:19)\n\
    \    at test (/tmp/tmpwatgyn3t.js:24:22)\n    at Object.<anonymous> (/tmp/tmpwatgyn3t.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyzcogbwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyzcogbwm.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  let prime_num = prime(n);\n    if (fib_num == prime_num) {\n        return\
    \ fib_num;\n    } else {\n        return prime_fib(n + 1);\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpc3ky5tvk.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpc3ky5tvk.js:14:19)\n\
    \    at test (/tmp/tmpc3ky5tvk.js:26:22)\n    at Object.<anonymous> (/tmp/tmpc3ky5tvk.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvkdc_mt5.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvkdc_mt5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let a = 1;\n\
    \    let b = 1;\n    let c = 0;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp73tupm8u.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp73tupm8u.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyzcogbwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyzcogbwm.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3,\
    \ 5];\n    let i: number = 3;\n    let fib: number = 0;\n    while (i < n) {\n\
    \        fib = fibs[i - 1] + fibs[i - 2];\n        if (is_prime(fib)) {\n    \
    \        fibs.push(fib);\n            i += 1;\n        }\n    }\n    return fibs[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpd9gx13la.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpd9gx13la.js:19:9)\n    at\
    \ test (/tmp/tmpd9gx13la.js:32:22)\n    at Object.<anonymous> (/tmp/tmpd9gx13la.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyp5etfvz.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyp5etfvz.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphb6z3efu.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmphb6z3efu.js:14:19)\n\
    \    at test (/tmp/tmphb6z3efu.js:23:22)\n    at Object.<anonymous> (/tmp/tmphb6z3efu.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 1;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp01j62sb7.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp01j62sb7.js:22:9)\n    at\
    \ test (/tmp/tmp01j62sb7.js:31:22)\n    at Object.<anonymous> (/tmp/tmp01j62sb7.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i += 1;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpkklnzujk.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkklnzujk.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        if (is_prime(fib)) {\n       \
    \     count++;\n        }\n        fib_prev_prev = fib_prev;\n        fib_prev\
    \ = fib;\n        fib = fib_prev + fib_prev_prev;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp05vw4w7f.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp05vw4w7f.js:19:9)\n    at\
    \ test (/tmp/tmp05vw4w7f.js:31:22)\n    at Object.<anonymous> (/tmp/tmp05vw4w7f.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyp5etfvz.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyp5etfvz.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyfuhx5_7.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpyfuhx5_7.js:22:9)\n    at\
    \ test (/tmp/tmpyfuhx5_7.js:31:22)\n    at Object.<anonymous> (/tmp/tmpyfuhx5_7.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    let prime_fib_numbers:\
    \ number[] = [];\n    for (let fib_number of fib_numbers) {\n        if (is_prime(fib_number))\
    \ {\n            prime_fib_numbers.push(fib_number);\n        }\n    }\n    return\
    \ prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyg88hf8j.js:22\n        if (is_prime(fib_number)) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpyg88hf8j.js:22:9)\n\
    \    at test (/tmp/tmpyg88hf8j.js:31:22)\n    at Object.<anonymous> (/tmp/tmpyg88hf8j.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [1,\
    \ 2];\n    let prime_fib_nums: number[] = [2];\n    let i: number = 2;\n    while\
    \ (prime_fib_nums.length < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i\
    \ - 2]);\n        if (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpmst5un5w.js:19\n        if (is_prime(fib_nums[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpmst5un5w.js:19:9)\n\
    \    at test (/tmp/tmpmst5un5w.js:30:22)\n    at Object.<anonymous> (/tmp/tmpmst5un5w.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let counter: number = 0;\n    let i: number = 1;\n    while (counter < n)\
    \ {\n        fib_num = fib(i);\n        if (is_prime(fib_num)) {\n           \
    \ counter++;\n        }\n        i++;\n    }\n    return fib_num;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptfqib3yn.js:18\n        fib_num = fib(i);\n        ^\n\nReferenceError:\
    \ fib is not defined\n    at prime_fib (/tmp/tmptfqib3yn.js:18:9)\n    at test\
    \ (/tmp/tmptfqib3yn.js:29:22)\n    at Object.<anonymous> (/tmp/tmptfqib3yn.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpabfggr_p.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpabfggr_p.js:14:19)\n\
    \    at test (/tmp/tmpabfggr_p.js:24:22)\n    at Object.<anonymous> (/tmp/tmpabfggr_p.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3,\
    \ 5];\n    let i: number = 3;\n    while (fibs.length < n) {\n        fibs.push(fibs[i\
    \ - 1] + fibs[i - 2]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpx_eh38ae.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx_eh38ae.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] == prime[j]) {\n            return fib[i];\n    \
    \    }\n        else if (fib[i] < prime[j]) {\n            i++;\n        }\n \
    \       else {\n            j++;\n        }\n    }\n    return -1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpx1hp2_x3.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpx1hp2_x3.js:14:15)\n\
    \    at test (/tmp/tmpx1hp2_x3.js:34:22)\n    at Object.<anonymous> (/tmp/tmpx1hp2_x3.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphb6z3efu.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmphb6z3efu.js:14:19)\n\
    \    at test (/tmp/tmphb6z3efu.js:23:22)\n    at Object.<anonymous> (/tmp/tmphb6z3efu.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (fib_numbers.length < n) {\n  \
    \      fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n        i++;\n\
    \    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpovk1vdlc.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpovk1vdlc.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] === prime[j]) {\n            return fib[i];\n   \
    \     } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n  \
    \          j++;\n        }\n    }\n    return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2hgzas2l.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp2hgzas2l.js:14:15)\n\
    \    at test (/tmp/tmp2hgzas2l.js:34:22)\n    at Object.<anonymous> (/tmp/tmp2hgzas2l.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] == prime[j]) {\n            return fib[i];\n    \
    \    }\n        else if (fib[i] < prime[j]) {\n            i++;\n        }\n \
    \       else {\n            j++;\n        }\n    }\n    return -1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpx1hp2_x3.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpx1hp2_x3.js:14:15)\n\
    \    at test (/tmp/tmpx1hp2_x3.js:34:22)\n    at Object.<anonymous> (/tmp/tmpx1hp2_x3.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let prime_fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp8uq2q2m2.js:19\n        if (is_prime(fib_numbers[i])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp8uq2q2m2.js:19:9)\n\
    \    at test (/tmp/tmp8uq2q2m2.js:31:22)\n    at Object.<anonymous> (/tmp/tmp8uq2q2m2.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    let prime_fib_numbers:\
    \ number[] = [];\n    for (let j: number = 0; j < fib_numbers.length; j++) {\n\
    \        if (is_prime(fib_numbers[j])) {\n            prime_fib_numbers.push(fib_numbers[j]);\n\
    \        }\n    }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp01_u2jju.js:22\n        if (is_prime(fib_numbers[j])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp01_u2jju.js:22:9)\n\
    \    at test (/tmp/tmp01_u2jju.js:31:22)\n    at Object.<anonymous> (/tmp/tmp01_u2jju.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (fib_list.length < n) {\n        fib_list.push(fib_list[i\
    \ - 1] + fib_list[i - 2]);\n        i++;\n    }\n    return fib_list[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpxnejky2m.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxnejky2m.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 0;\n    let i = 1;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpe8thcfye.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe8thcfye.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyzcogbwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyzcogbwm.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyfuhx5_7.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpyfuhx5_7.js:22:9)\n    at\
    \ test (/tmp/tmpyfuhx5_7.js:31:22)\n    at Object.<anonymous> (/tmp/tmpyfuhx5_7.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3,\
    \ 5];\n    let i: number = 3;\n    while (fibs.length < n) {\n        let fib:\
    \ number = fibs[i - 1] + fibs[i - 2];\n        if (is_prime(fib)) {\n        \
    \    fibs.push(fib);\n        }\n        i++;\n    }\n    return fibs[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp87jdhvrx.js:18\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp87jdhvrx.js:18:9)\n    at\
    \ test (/tmp/tmp87jdhvrx.js:31:22)\n    at Object.<anonymous> (/tmp/tmp87jdhvrx.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    if (fib == prime) {\n        return fib;\n\
    \    } else {\n        return prime_fib(n + 1);\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6ewzig6h.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp6ewzig6h.js:14:15)\n\
    \    at test (/tmp/tmp6ewzig6h.js:26:22)\n    at Object.<anonymous> (/tmp/tmp6ewzig6h.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let i: number = 1;\n    let j: number = 0;\n\
    \    while (j < n) {\n        if (is_prime(fib)) {\n            j++;\n       \
    \ }\n        let temp: number = fib;\n        fib += fib_prev;\n        fib_prev\
    \ = temp;\n        i++;\n    }\n    return fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpipkvf6am.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpipkvf6am.js:19:9)\n    at\
    \ test (/tmp/tmpipkvf6am.js:32:22)\n    at Object.<anonymous> (/tmp/tmpipkvf6am.js:43:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let fib_prev = 1;\n    while (i < n) {\n        let temp = fib;\n  \
    \      fib += fib_prev;\n        fib_prev = temp;\n        if (is_prime(fib))\
    \ {\n            i += 1;\n        }\n    }\n    return fib;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpz68_d56w.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz68_d56w.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    while\
    \ (i < fib.length && j < prime.length) {\n        if (fib[i] == prime[j]) {\n\
    \            return fib[i];\n        } else if (fib[i] < prime[j]) {\n       \
    \     i++;\n        } else {\n            j++;\n        }\n    }\n    return 0;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfryn1kim.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpfryn1kim.js:14:15)\n\
    \    at test (/tmp/tmpfryn1kim.js:34:22)\n    at Object.<anonymous> (/tmp/tmpfryn1kim.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpabfggr_p.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpabfggr_p.js:14:19)\n\
    \    at test (/tmp/tmpabfggr_p.js:24:22)\n    at Object.<anonymous> (/tmp/tmpabfggr_p.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpabfggr_p.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpabfggr_p.js:14:19)\n\
    \    at test (/tmp/tmpabfggr_p.js:24:22)\n    at Object.<anonymous> (/tmp/tmpabfggr_p.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n   \
    \ let fib_1: number = 1;\n    let fib_2: number = 1;\n    let count: number =\
    \ 0;\n    while (count < n) {\n        fib = fib_1 + fib_2;\n        fib_2 = fib_1;\n\
    \        fib_1 = fib;\n        if (is_prime(fib)) {\n            count++;\n  \
    \      }\n    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp44d6tfcn.js:22\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp44d6tfcn.js:22:9)\n    at\
    \ test (/tmp/tmp44d6tfcn.js:31:22)\n    at Object.<anonymous> (/tmp/tmp44d6tfcn.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fibonacci(n);\n\
    \    while (!is_prime(fib_num)) {\n        fib_num = fibonacci(n);\n        n++;\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpngx3gxiq.js:14\n    let fib_num = fibonacci(n);\n             \
    \     ^\n\nReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpngx3gxiq.js:14:19)\n\
    \    at test (/tmp/tmpngx3gxiq.js:24:22)\n    at Object.<anonymous> (/tmp/tmpngx3gxiq.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 1;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let prime_fib_num: number = 0;\n    let prime_fib_num_count: number = 0;\n\
    \    while (prime_fib_num_count < n) {\n        fib_num = fib_num_prev + fib_num_prev_prev;\n\
    \        if (is_prime(fib_num)) {\n            prime_fib_num = fib_num;\n    \
    \        prime_fib_num_count++;\n        }\n        fib_num_prev_prev = fib_num_prev;\n\
    \        fib_num_prev = fib_num;\n    }\n    return prime_fib_num;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpwvte8d3p.js:21\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpwvte8d3p.js:21:9)\n\
    \    at test (/tmp/tmpwvte8d3p.js:33:22)\n    at Object.<anonymous> (/tmp/tmpwvte8d3p.js:44:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let count: number = 0;\n    while (count < n) {\n        fib_num = fib_num_prev\
    \ + fib_num_prev_prev;\n        if (is_prime(fib_num)) {\n            count +=\
    \ 1;\n        }\n        fib_num_prev_prev = fib_num_prev;\n        fib_num_prev\
    \ = fib_num;\n    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1gi56vox.js:20\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp1gi56vox.js:20:9)\n\
    \    at test (/tmp/tmp1gi56vox.js:31:22)\n    at Object.<anonymous> (/tmp/tmp1gi56vox.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpke3b5ftp.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpke3b5ftp.js:14:15)\n\
    \    at test (/tmp/tmpke3b5ftp.js:24:22)\n    at Object.<anonymous> (/tmp/tmpke3b5ftp.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [1, 2];\n\
    \    let i: number = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let\
    \ prime: number = 0;\n    let prime_fib: number = 0;\n    while (k < n) {\n  \
    \      fib.push(fib[i] + fib[i + 1]);\n        i++;\n        if (is_prime(fib[j]))\
    \ {\n            prime++;\n            if (prime == n) {\n                prime_fib\
    \ = fib[j];\n            }\n        }\n        j++;\n        k++;\n    }\n   \
    \ return prime_fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphnqeu4fu.js:23\n        if (is_prime(fib[j])) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmphnqeu4fu.js:23:9)\n\
    \    at test (/tmp/tmphnqeu4fu.js:37:22)\n    at Object.<anonymous> (/tmp/tmphnqeu4fu.js:48:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < fib.length && j < prime.length) {\n        if (fib[i] ===\
    \ prime[j]) {\n            result = fib[i];\n            i++;\n            j++;\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqvb7p4nq.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpqvb7p4nq.js:14:15)\n\
    \    at test (/tmp/tmpqvb7p4nq.js:37:22)\n    at Object.<anonymous> (/tmp/tmpqvb7p4nq.js:48:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    let prime_fib_nums: number[] = [2];\n    while\
    \ (prime_fib_nums.length < n) {\n        fib_nums.push(fib_nums[i - 1] + fib_nums[i\
    \ - 2]);\n        if (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpu074wbmn.js:19\n        if (is_prime(fib_nums[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpu074wbmn.js:19:9)\n\
    \    at test (/tmp/tmpu074wbmn.js:30:22)\n    at Object.<anonymous> (/tmp/tmpu074wbmn.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3, 5];\n    let prime_fib_nums: number[] = [2, 3, 5];\n    let i: number = 3;\n\
    \    while (prime_fib_nums.length < n) {\n        fib_nums.push(fib_nums[i - 1]\
    \ + fib_nums[i - 2]);\n        if (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpfywsfsek.js:19\n        if (is_prime(fib_nums[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpfywsfsek.js:19:9)\n\
    \    at test (/tmp/tmpfywsfsek.js:32:22)\n    at Object.<anonymous> (/tmp/tmpfywsfsek.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [1, 1];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fibs.push(fibs[i - 1] +\
    \ fibs[i - 2]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpb7bdpa5h.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb7bdpa5h.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349056
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n  let fib: number = 1;\n  let\
    \ fib_prev: number = 1;\n  let fib_prev_prev: number = 0;\n  let count: number\
    \ = 0;\n  let prime_count: number = 0;\n  while (prime_count < n) {\n    if (is_prime(fib))\
    \ {\n      prime_count++;\n    }\n    fib_prev_prev = fib_prev;\n    fib_prev\
    \ = fib;\n    fib = fib_prev + fib_prev_prev;\n  }\n  return fib;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcfwvneau.js:20\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpcfwvneau.js:20:9)\n    at\
    \ test (/tmp/tmpcfwvneau.js:32:22)\n    at Object.<anonymous> (/tmp/tmpcfwvneau.js:43:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] == prime[j]) {\n            i++;\n            j++;\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return prime[j - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpk2bsywg_.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpk2bsywg_.js:14:15)\n\
    \    at test (/tmp/tmpk2bsywg_.js:35:22)\n    at Object.<anonymous> (/tmp/tmpk2bsywg_.js:46:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpke3b5ftp.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpke3b5ftp.js:14:15)\n\
    \    at test (/tmp/tmpke3b5ftp.js:24:22)\n    at Object.<anonymous> (/tmp/tmpke3b5ftp.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_1: number = 1;\n    let fib_num_2: number = 1;\n    let fib_num_3:\
    \ number = 2;\n    let i: number = 0;\n    while (i < n) {\n        if (is_prime(fib_num_3))\
    \ {\n            i++;\n        }\n        fib_num = fib_num_1 + fib_num_2;\n \
    \       fib_num_1 = fib_num_2;\n        fib_num_2 = fib_num;\n        fib_num_3\
    \ = fib_num_1 + fib_num_2;\n    }\n    return fib_num;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp40kiz4p_.js:20\n        if (is_prime(fib_num_3)) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp40kiz4p_.js:20:9)\n\
    \    at test (/tmp/tmp40kiz4p_.js:33:22)\n    at Object.<anonymous> (/tmp/tmp40kiz4p_.js:44:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyzcogbwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyzcogbwm.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a: number = 0;\n    let\
    \ b: number = 1;\n    let c: number = 0;\n    let count: number = 0;\n    while\
    \ (count < n) {\n        c = a + b;\n        a = b;\n        b = c;\n        if\
    \ (is_prime(c)) {\n            count++;\n        }\n    }\n    return c;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpxvs_5fl2.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpxvs_5fl2.js:22:9)\n    at\
    \ test (/tmp/tmpxvs_5fl2.js:31:22)\n    at Object.<anonymous> (/tmp/tmpxvs_5fl2.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3, 5, 13, 89];\n    if (n > fib_numbers.length) {\n        let i: number\
    \ = fib_numbers.length;\n        while (i < n) {\n            let last: number\
    \ = fib_numbers[fib_numbers.length - 1];\n            let second_last: number\
    \ = fib_numbers[fib_numbers.length - 2];\n            let next_fib: number = last\
    \ + second_last;\n            if (is_prime(next_fib)) {\n                fib_numbers.push(next_fib);\n\
    \                i += 1;\n            }\n        }\n    }\n    return fib_numbers[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpx4xiay7f.js:21\n            if (is_prime(next_fib)) {\n       \
    \     ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpx4xiay7f.js:21:13)\n\
    \    at test (/tmp/tmpx4xiay7f.js:37:22)\n    at Object.<anonymous> (/tmp/tmpx4xiay7f.js:43:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_1: number = 1;\n    let fib_num_2: number = 1;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        fib_num = fib_num_1 + fib_num_2;\n\
    \        fib_num_2 = fib_num_1;\n        fib_num_1 = fib_num;\n        if (is_prime(fib_num))\
    \ {\n            count += 1;\n        }\n    }\n    return fib_num;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmplae4ld2z.js:22\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmplae4ld2z.js:22:9)\n\
    \    at test (/tmp/tmplae4ld2z.js:31:22)\n    at Object.<anonymous> (/tmp/tmplae4ld2z.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3,\
    \ 5, 13, 89];\n    if (n < 1) {\n        return 0;\n    }\n    if (n <= fibs.length)\
    \ {\n        return fibs[n - 1];\n    }\n    let i: number = fibs.length;\n  \
    \  let fib: number = fibs[i - 1];\n    while (i < n) {\n        fib = fibs[i -\
    \ 1] + fibs[i - 2];\n        if (is_prime(fib)) {\n            fibs.push(fib);\n\
    \            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpo28mjyno.js:25\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpo28mjyno.js:25:9)\n    at\
    \ test (/tmp/tmpo28mjyno.js:40:22)\n    at Object.<anonymous> (/tmp/tmpo28mjyno.js:46:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    let j: number = 1;\n    let k: number = 0;\n    while\
    \ (i < n) {\n        k = fib[j] + fib[j - 1];\n        if (is_prime(k)) {\n  \
    \          fib.push(k);\n            i++;\n        }\n        j++;\n    }\n  \
    \  return fib[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2sde531i.js:20\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp2sde531i.js:20:9)\n    at\
    \ test (/tmp/tmp2sde531i.js:33:22)\n    at Object.<anonymous> (/tmp/tmp2sde531i.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349057
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < fib.length && j < prime.length) {\n        if (fib[i] ===\
    \ prime[j]) {\n            result = fib[i];\n            i++;\n            j++;\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqvb7p4nq.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpqvb7p4nq.js:14:15)\n\
    \    at test (/tmp/tmpqvb7p4nq.js:37:22)\n    at Object.<anonymous> (/tmp/tmpqvb7p4nq.js:48:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    let k =\
    \ 0;\n    while (k < n) {\n        if (fib[i] === prime[j]) {\n            k++;\n\
    \            i++;\n            j++;\n        } else if (fib[i] < prime[j]) {\n\
    \            i++;\n        } else {\n            j++;\n        }\n    }\n    return\
    \ fib[i - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpxmh40h27.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpxmh40h27.js:14:15)\n\
    \    at test (/tmp/tmpxmh40h27.js:37:22)\n    at Object.<anonymous> (/tmp/tmpxmh40h27.js:48:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [1,\
    \ 2];\n    let i: number = 0;\n    while (fib_nums.length < n) {\n        fib_nums.push(fib_nums[i]\
    \ + fib_nums[i + 1]);\n        i++;\n    }\n    return fib_nums[n - 1];\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmptxv2qek5.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptxv2qek5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpvgs3jlkb.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpvgs3jlkb.js:22:9)\n    at\
    \ test (/tmp/tmpvgs3jlkb.js:31:22)\n    at Object.<anonymous> (/tmp/tmpvgs3jlkb.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] === prime[j]) {\n            i++;\n            j++;\n\
    \        } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return prime[j - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpap7xxtk5.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpap7xxtk5.js:14:15)\n\
    \    at test (/tmp/tmpap7xxtk5.js:35:22)\n    at Object.<anonymous> (/tmp/tmpap7xxtk5.js:46:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] == prime[j]) {\n            return fib[i];\n    \
    \    }\n        if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpkojvpinu.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpkojvpinu.js:14:15)\n\
    \    at test (/tmp/tmpkojvpinu.js:34:22)\n    at Object.<anonymous> (/tmp/tmpkojvpinu.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    let fib_number: number = 0;\n    while\
    \ (i <= n) {\n        fib_number = fib_numbers[i - 1] + fib_numbers[i - 2];\n\
    \        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i++;\n        }\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpkvvy0qf2.js:19\n        if (is_prime(fib_number)) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpkvvy0qf2.js:19:9)\n\
    \    at test (/tmp/tmpkvvy0qf2.js:30:22)\n    at Object.<anonymous> (/tmp/tmpkvvy0qf2.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        if (is_prime(fib)) {\n       \
    \     count += 1;\n        }\n        fib_prev_prev = fib_prev;\n        fib_prev\
    \ = fib;\n        fib = fib_prev + fib_prev_prev;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptzx7xabx.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmptzx7xabx.js:19:9)\n    at\
    \ test (/tmp/tmptzx7xabx.js:31:22)\n    at Object.<anonymous> (/tmp/tmptzx7xabx.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphb6z3efu.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmphb6z3efu.js:14:19)\n\
    \    at test (/tmp/tmphb6z3efu.js:23:22)\n    at Object.<anonymous> (/tmp/tmphb6z3efu.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let i = 0;\n    while (i < fib.length) {\n        if (is_prime(fib[i])) {\n\
    \            return fib[i];\n        }\n        i++;\n    }\n    return 0;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpza2v_4qv.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpza2v_4qv.js:14:15)\n\
    \    at test (/tmp/tmpza2v_4qv.js:27:22)\n    at Object.<anonymous> (/tmp/tmpza2v_4qv.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b = 1;\n\
    \    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuzx7tr9h.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpuzx7tr9h.js:22:9)\n    at\
    \ test (/tmp/tmpuzx7tr9h.js:31:22)\n    at Object.<anonymous> (/tmp/tmpuzx7tr9h.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let result = 0;\n    for (let i = 0; i\
    \ < fib.length; i++) {\n        for (let j = 0; j < prime.length; j++) {\n   \
    \         if (fib[i] === prime[j]) {\n                result = fib[i];\n     \
    \       }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp3day_sgz.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp3day_sgz.js:14:15)\n\
    \    at test (/tmp/tmp3day_sgz.js:29:22)\n    at Object.<anonymous> (/tmp/tmp3day_sgz.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 0;\n   \
    \ let count: number = 0;\n    let i: number = 1;\n    while (count < n) {\n  \
    \      fib = fibonacci(i);\n        if (is_prime(fib)) {\n            count++;\n\
    \        }\n        i++;\n    }\n    return fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpikm17ecb.js:18\n        fib = fibonacci(i);\n        ^\n\nReferenceError:\
    \ fibonacci is not defined\n    at prime_fib (/tmp/tmpikm17ecb.js:18:9)\n    at\
    \ test (/tmp/tmpikm17ecb.js:29:22)\n    at Object.<anonymous> (/tmp/tmpikm17ecb.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n  let i = 1;\n  let j = 1;\n \
    \ let k = 2;\n  let count = 1;\n  while (count < n) {\n    if (is_prime(k)) {\n\
    \      count++;\n    }\n    i = j;\n    j = k;\n    k = i + j;\n  }\n  return\
    \ k;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmptq79q9qd.js:19\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmptq79q9qd.js:19:9)\n    at\
    \ test (/tmp/tmptq79q9qd.js:32:22)\n    at Object.<anonymous> (/tmp/tmptq79q9qd.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphb6z3efu.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmphb6z3efu.js:14:19)\n\
    \    at test (/tmp/tmphb6z3efu.js:23:22)\n    at Object.<anonymous> (/tmp/tmphb6z3efu.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3, 5];\n    let i: number = 3;\n    while (fib_numbers.length < n) {\n\
    \        let fib_number: number = fib_numbers[i - 1] + fib_numbers[i - 2];\n \
    \       if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \        }\n        i++;\n    }\n    return fib_numbers[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp314w34oh.js:18\n        if (is_prime(fib_number)) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp314w34oh.js:18:9)\n\
    \    at test (/tmp/tmp314w34oh.js:31:22)\n    at Object.<anonymous> (/tmp/tmp314w34oh.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(++n);\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_3cloo0s.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp_3cloo0s.js:14:15)\n\
    \    at test (/tmp/tmp_3cloo0s.js:23:22)\n    at Object.<anonymous> (/tmp/tmp_3cloo0s.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (fib_numbers.length < n) {\n  \
    \      fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n        i++;\n\
    \    }\n    return fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpovk1vdlc.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpovk1vdlc.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3,\
    \ 5, 13, 89];\n    let i: number = 0;\n    while (i < n) {\n        fib.push(fib[i]\
    \ + fib[i + 1]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n233\n    at test (/tmp/tmpojqgcnmg.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpojqgcnmg.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 233,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349059
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpke3b5ftp.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpke3b5ftp.js:14:15)\n\
    \    at test (/tmp/tmpke3b5ftp.js:24:22)\n    at Object.<anonymous> (/tmp/tmpke3b5ftp.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_1: number = 1;\n    let fib_num_2: number = 1;\n    let i: number\
    \ = 1;\n    while (i < n) {\n        fib_num = fib_num_1 + fib_num_2;\n      \
    \  fib_num_2 = fib_num_1;\n        fib_num_1 = fib_num;\n        if (is_prime(fib_num))\
    \ {\n            i++;\n        }\n    }\n    return fib_num;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpycs2cy7v.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpycs2cy7v.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = [2, 3];\n    let\
    \ i = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i - 2]);\n  \
    \      i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpcp_4pc61.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcp_4pc61.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fibs.push(fibs[i - 1] +\
    \ fibs[i - 2]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpjkuvk_0n.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkuvk_0n.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 1;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let count: number = 0;\n    while (count < n) {\n        if (is_prime(fib_num))\
    \ {\n            count++;\n        }\n        fib_num_prev_prev = fib_num_prev;\n\
    \        fib_num_prev = fib_num;\n        fib_num = fib_num_prev + fib_num_prev_prev;\n\
    \    }\n    return fib_num_prev;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpnwodddvo.js:19\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpnwodddvo.js:19:9)\n\
    \    at test (/tmp/tmpnwodddvo.js:31:22)\n    at Object.<anonymous> (/tmp/tmpnwodddvo.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuro70qsi.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpuro70qsi.js:22:9)\n    at\
    \ test (/tmp/tmpuro70qsi.js:31:22)\n    at Object.<anonymous> (/tmp/tmpuro70qsi.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib =\
    \ 0;\n    let prime = 0;\n    let count = 0;\n    while (count < n) {\n      \
    \  fib = fibonacci(i);\n        if (is_prime(fib)) {\n            count += 1;\n\
    \            prime = fib;\n        }\n        i += 1;\n    }\n    return prime;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpnuvkce4k.js:19\n        fib = fibonacci(i);\n        ^\n\nReferenceError:\
    \ fibonacci is not defined\n    at prime_fib (/tmp/tmpnuvkce4k.js:19:9)\n    at\
    \ test (/tmp/tmpnuvkce4k.js:31:22)\n    at Object.<anonymous> (/tmp/tmpnuvkce4k.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let result = 0;\n    for (let i = 0; i\
    \ < fib.length; i++) {\n        for (let j = 0; j < prime.length; j++) {\n   \
    \         if (fib[i] === prime[j]) {\n                result = fib[i];\n     \
    \       }\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp3day_sgz.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp3day_sgz.js:14:15)\n\
    \    at test (/tmp/tmp3day_sgz.js:29:22)\n    at Object.<anonymous> (/tmp/tmp3day_sgz.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    while (fib !== prime) {\n        if (fib\
    \ > prime) {\n            prime = prime_number(n);\n        } else {\n       \
    \     fib = fibonacci(n);\n        }\n    }\n    return fib;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5a3ngvvg.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp5a3ngvvg.js:14:15)\n\
    \    at test (/tmp/tmp5a3ngvvg.js:29:22)\n    at Object.<anonymous> (/tmp/tmp5a3ngvvg.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] === prime[j]) {\n            return fib[i];\n   \
    \     }\n        if (fib[i] < prime[j]) {\n            i++;\n        } else {\n\
    \            j++;\n        }\n    }\n    return -1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpju0t81mu.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpju0t81mu.js:14:15)\n\
    \    at test (/tmp/tmpju0t81mu.js:34:22)\n    at Object.<anonymous> (/tmp/tmpju0t81mu.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n += 1;\n\
    \    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpek2autun.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpek2autun.js:14:15)\n\
    \    at test (/tmp/tmpek2autun.js:24:22)\n    at Object.<anonymous> (/tmp/tmpek2autun.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 2;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphhve0pbe.js:17\n        fib = fibonacci(i);\n        ^\n\nReferenceError:\
    \ fibonacci is not defined\n    at prime_fib (/tmp/tmphhve0pbe.js:17:9)\n    at\
    \ test (/tmp/tmphhve0pbe.js:28:22)\n    at Object.<anonymous> (/tmp/tmphhve0pbe.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3, 5, 13, 89];\n    if (n <= fib_numbers.length) {\n        return fib_numbers[n\
    \ - 1];\n    }\n    let i: number = fib_numbers.length;\n    let fib_number: number\
    \ = fib_numbers[i - 1];\n    while (i < n) {\n        fib_number = fib_number\
    \ + fib_numbers[i - 2];\n        if (is_prime(fib_number)) {\n            fib_numbers.push(fib_number);\n\
    \            i = i + 1;\n        }\n    }\n    return fib_number;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp19q_wd7w.js:22\n        if (is_prime(fib_number)) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp19q_wd7w.js:22:9)\n\
    \    at test (/tmp/tmp19q_wd7w.js:37:22)\n    at Object.<anonymous> (/tmp/tmp19q_wd7w.js:43:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphb6z3efu.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmphb6z3efu.js:14:19)\n\
    \    at test (/tmp/tmphb6z3efu.js:23:22)\n    at Object.<anonymous> (/tmp/tmphb6z3efu.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    let fib_num: number = 0;\n    while (i < n)\
    \ {\n        fib_num = fib_nums[i - 1] + fib_nums[i - 2];\n        if (is_prime(fib_num))\
    \ {\n            fib_nums.push(fib_num);\n            i += 1;\n        }\n   \
    \ }\n    return fib_nums[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpg3aot6ib.js:19\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpg3aot6ib.js:19:9)\n\
    \    at test (/tmp/tmpg3aot6ib.js:31:22)\n    at Object.<anonymous> (/tmp/tmpg3aot6ib.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = fib(n);\n    let prime_fib_numbers: number[] = [];\n    for (let i = 0; i\
    \ < fib_numbers.length; i++) {\n        if (is_prime(fib_numbers[i])) {\n    \
    \        prime_fib_numbers.push(fib_numbers[i]);\n        }\n    }\n    return\
    \ prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5gims016.js:14\n    let fib_numbers = fib(n);\n               \
    \       ^\n\nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmp5gims016.js:14:23)\n\
    \    at test (/tmp/tmp5gims016.js:26:22)\n    at Object.<anonymous> (/tmp/tmp5gims016.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 2
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let prime_fib_num: number = 0;\n    let prime_fib_num_prev: number = 0;\n\
    \    let prime_fib_num_prev_prev: number = 0;\n    let prime_fib_num_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev: number = 0;\n    let\
    \ prime_fib_num_prev_prev_prev_prev_prev: number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev: number\
    \ = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev: number\
    \ = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev: number\
    \ = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev:\
    \ number = 0;\n    let prime_fib_num\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpbbzxi4k0.ts(53,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let i = 0;\n    while (i < fib.length) {\n        if (is_prime(fib[i])) {\n\
    \            return fib[i];\n        }\n        i++;\n    }\n    return -1;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp12cavgy5.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp12cavgy5.js:14:15)\n\
    \    at test (/tmp/tmp12cavgy5.js:27:22)\n    at Object.<anonymous> (/tmp/tmp12cavgy5.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let prime_fib_list: number[] = [2, 3];\n    let i: number = 2;\n  \
    \  while (prime_fib_list.length < n) {\n        fib_list.push(fib_list[i - 1]\
    \ + fib_list[i - 2]);\n        if (is_prime(fib_list[i])) {\n            prime_fib_list.push(fib_list[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpk9o_hmym.js:19\n        if (is_prime(fib_list[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpk9o_hmym.js:19:9)\n\
    \    at test (/tmp/tmpk9o_hmym.js:31:22)\n    at Object.<anonymous> (/tmp/tmpk9o_hmym.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyzcogbwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyzcogbwm.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let i: number = 0;\n    while (i < n) {\n        fib_num = fib_num_prev +\
    \ fib_num_prev_prev;\n        if (is_prime(fib_num)) {\n            i++;\n   \
    \     }\n        fib_num_prev_prev = fib_num_prev;\n        fib_num_prev = fib_num;\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuaoal1ua.js:20\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpuaoal1ua.js:20:9)\n\
    \    at test (/tmp/tmpuaoal1ua.js:31:22)\n    at Object.<anonymous> (/tmp/tmpuaoal1ua.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 0;\n    while (fib_nums.length < n) {\n        fib_nums.push(fib_nums[i]\
    \ + fib_nums[i + 1]);\n        i++;\n    }\n    return fib_nums[n - 1];\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmp9b5arr_y.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9b5arr_y.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpabfggr_p.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpabfggr_p.js:14:19)\n\
    \    at test (/tmp/tmpabfggr_p.js:24:22)\n    at Object.<anonymous> (/tmp/tmpabfggr_p.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let prime_fib_list: number[]\
    \ = [2, 3, 5, 13, 89];\n    if (n <= prime_fib_list.length) {\n        return\
    \ prime_fib_list[n - 1];\n    }\n    let i: number = prime_fib_list.length;\n\
    \    let fib_n_1: number = prime_fib_list[i - 1];\n    let fib_n_2: number = prime_fib_list[i\
    \ - 2];\n    let fib_n: number = fib_n_1 + fib_n_2;\n    while (i < n) {\n   \
    \     if (is_prime(fib_n)) {\n            prime_fib_list.push(fib_n);\n      \
    \      i += 1;\n        }\n        fib_n_2 = fib_n_1;\n        fib_n_1 = fib_n;\n\
    \        fib_n = fib_n_1 + fib_n_2;\n    }\n    return fib_n;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpeyvn7nfi.js:23\n        if (is_prime(fib_n)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpeyvn7nfi.js:23:9)\n    at\
    \ test (/tmp/tmpeyvn7nfi.js:41:22)\n    at Object.<anonymous> (/tmp/tmpeyvn7nfi.js:47:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(fib);\n    return prime[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmplv0flwps.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmplv0flwps.js:14:15)\n\
    \    at test (/tmp/tmplv0flwps.js:21:22)\n    at Object.<anonymous> (/tmp/tmplv0flwps.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 1;\n    let i = 2;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpehbuo1xu.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpehbuo1xu.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyfuhx5_7.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpyfuhx5_7.js:22:9)\n    at\
    \ test (/tmp/tmpyfuhx5_7.js:31:22)\n    at Object.<anonymous> (/tmp/tmpyfuhx5_7.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibonacci = [2, 3];\n\
    \    let prime_fibonacci = [2, 3];\n    let i = 2;\n    while (prime_fibonacci.length\
    \ < n) {\n        fibonacci.push(fibonacci[i - 1] + fibonacci[i - 2]);\n     \
    \   if (is_prime(fibonacci[i])) {\n            prime_fibonacci.push(fibonacci[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fibonacci[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpcwqg6i85.js:19\n        if (is_prime(fibonacci[i])) {\n       \
    \ ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpcwqg6i85.js:19:9)\n\
    \    at test (/tmp/tmpcwqg6i85.js:31:22)\n    at Object.<anonymous> (/tmp/tmpcwqg6i85.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyzcogbwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyzcogbwm.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(fib);\n    return prime[prime.length - 1];\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1gl7nawy.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp1gl7nawy.js:14:15)\n\
    \    at test (/tmp/tmp1gl7nawy.js:21:22)\n    at Object.<anonymous> (/tmp/tmp1gl7nawy.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349063
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n  let fib_list: number[] = [2,\
    \ 3];\n  let i: number = 2;\n  while (i < n) {\n    fib_list.push(fib_list[i -\
    \ 1] + fib_list[i - 2]);\n    i++;\n  }\n  return fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmps4_oko_t.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps4_oko_t.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349064
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3,\
    \ 5, 13, 89];\n    if (n <= fib.length) {\n        return fib[n - 1];\n    } else\
    \ {\n        let i: number = fib.length;\n        while (i < n) {\n          \
    \  let next: number = fib[i - 1] + fib[i - 2];\n            if (is_prime(next))\
    \ {\n                fib.push(next);\n                i++;\n            }\n  \
    \      }\n        return fib[n - 1];\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpy0dipcpv.js:22\n            if (is_prime(next)) {\n           \
    \ ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpy0dipcpv.js:22:13)\n\
    \    at test (/tmp/tmpy0dipcpv.js:38:22)\n    at Object.<anonymous> (/tmp/tmpy0dipcpv.js:44:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349064
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let count: number = 0;\n    while (count < n)\
    \ {\n        let temp: number = fib;\n        fib += fib_prev;\n        fib_prev\
    \ = temp;\n        if (is_prime(fib)) {\n            count++;\n        }\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp36w6gijz.js:21\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp36w6gijz.js:21:9)\n    at\
    \ test (/tmp/tmp36w6gijz.js:30:22)\n    at Object.<anonymous> (/tmp/tmp36w6gijz.js:41:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349064
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 2];\n    let i: number = 2;\n    let result: number = 0;\n    while (i\
    \ < n) {\n        fib_numbers.push(fib_numbers[i - 1] + fib_numbers[i - 2]);\n\
    \        i++;\n    }\n    for (let j: number = 0; j < fib_numbers.length; j++)\
    \ {\n        if (is_prime(fib_numbers[j])) {\n            result = fib_numbers[j];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpw7899kkg.js:22\n        if (is_prime(fib_numbers[j])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpw7899kkg.js:22:9)\n\
    \    at test (/tmp/tmpw7899kkg.js:31:22)\n    at Object.<anonymous> (/tmp/tmpw7899kkg.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349064
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyp5etfvz.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyp5etfvz.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let result = 0;\n    for (let i = 0; i\
    \ < n; i++) {\n        if (fib[i] === prime[i]) {\n            result = fib[i];\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5lhk1cvh.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp5lhk1cvh.js:14:15)\n\
    \    at test (/tmp/tmp5lhk1cvh.js:27:22)\n    at Object.<anonymous> (/tmp/tmp5lhk1cvh.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        if (is_prime(fib)) {\n       \
    \     count++;\n        }\n        fib_prev_prev = fib_prev;\n        fib_prev\
    \ = fib;\n        fib = fib_prev + fib_prev_prev;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp05vw4w7f.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp05vw4w7f.js:19:9)\n    at\
    \ test (/tmp/tmp05vw4w7f.js:31:22)\n    at Object.<anonymous> (/tmp/tmp05vw4w7f.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n  let fib = fibonacci(n);\n  let\
    \ prime = prime_nth(n);\n  if (fib === prime) {\n    return fib;\n  } else {\n\
    \    return prime_fib(n + 1);\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqt19te_z.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpqt19te_z.js:14:15)\n\
    \    at test (/tmp/tmpqt19te_z.js:26:22)\n    at Object.<anonymous> (/tmp/tmpqt19te_z.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 2;\n    let b = 3;\n\
    \    let c = 5;\n    let i = 3;\n    while (i < n) {\n        a = b;\n       \
    \ b = c;\n        c = a + b;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpzpnjqua5.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzpnjqua5.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] === prime[j]) {\n            return fib[i];\n   \
    \     } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n  \
    \          j++;\n        }\n    }\n    return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2hgzas2l.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp2hgzas2l.js:14:15)\n\
    \    at test (/tmp/tmp2hgzas2l.js:34:22)\n    at Object.<anonymous> (/tmp/tmp2hgzas2l.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fibs.push(fibs[i - 1] +\
    \ fibs[i - 2]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpjkuvk_0n.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkuvk_0n.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyfuhx5_7.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpyfuhx5_7.js:22:9)\n    at\
    \ test (/tmp/tmpyfuhx5_7.js:31:22)\n    at Object.<anonymous> (/tmp/tmpyfuhx5_7.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let prime_fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp8uq2q2m2.js:19\n        if (is_prime(fib_numbers[i])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp8uq2q2m2.js:19:9)\n\
    \    at test (/tmp/tmp8uq2q2m2.js:31:22)\n    at Object.<anonymous> (/tmp/tmp8uq2q2m2.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(++n);\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_3cloo0s.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp_3cloo0s.js:14:15)\n\
    \    at test (/tmp/tmp_3cloo0s.js:23:22)\n    at Object.<anonymous> (/tmp/tmp_3cloo0s.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let prime_fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp__vk80v9.js:19\n        if (is_prime(fib_numbers[i])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp__vk80v9.js:19:9)\n\
    \    at test (/tmp/tmp__vk80v9.js:31:22)\n    at Object.<anonymous> (/tmp/tmp__vk80v9.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let prime_fib = 2;\n    while (i < n) {\n        fib = fibonacci(i);\n\
    \        if (is_prime(fib)) {\n            prime_fib = fib;\n            i++;\n\
    \        }\n    }\n    return prime_fib;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp4oud835d.js:18\n        fib = fibonacci(i);\n        ^\n\nReferenceError:\
    \ fibonacci is not defined\n    at prime_fib (/tmp/tmp4oud835d.js:18:9)\n    at\
    \ test (/tmp/tmp4oud835d.js:30:22)\n    at Object.<anonymous> (/tmp/tmp4oud835d.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(++n);\n    }\n    return\
    \ fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp_3cloo0s.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp_3cloo0s.js:14:15)\n\
    \    at test (/tmp/tmp_3cloo0s.js:23:22)\n    at Object.<anonymous> (/tmp/tmp_3cloo0s.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349058
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let prime_fib_list: number[] = [2, 3];\n    let i: number = 2;\n  \
    \  while (prime_fib_list.length < n) {\n        fib_list.push(fib_list[i - 1]\
    \ + fib_list[i - 2]);\n        if (is_prime(fib_list[i])) {\n            prime_fib_list.push(fib_list[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpk9o_hmym.js:19\n        if (is_prime(fib_list[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpk9o_hmym.js:19:9)\n\
    \    at test (/tmp/tmpk9o_hmym.js:31:22)\n    at Object.<anonymous> (/tmp/tmpk9o_hmym.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = fib(n);\n    let prime_fib_numbers: number[] = [];\n    for (let i = 0; i\
    \ < fib_numbers.length; i++) {\n        if (is_prime(fib_numbers[i])) {\n    \
    \        prime_fib_numbers.push(fib_numbers[i]);\n        }\n    }\n    return\
    \ prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5gims016.js:14\n    let fib_numbers = fib(n);\n               \
    \       ^\n\nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmp5gims016.js:14:23)\n\
    \    at test (/tmp/tmp5gims016.js:26:22)\n    at Object.<anonymous> (/tmp/tmp5gims016.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = fibonacci(n);\n    let prime_fib_numbers: number[] = [];\n    for (let i:\
    \ number = 0; i < fib_numbers.length; i++) {\n        if (is_prime(fib_numbers[i]))\
    \ {\n            prime_fib_numbers.push(fib_numbers[i]);\n        }\n    }\n \
    \   return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp918b85wu.js:14\n    let fib_numbers = fibonacci(n);\n         \
    \             ^\n\nReferenceError: fibonacci is not defined\n    at prime_fib\
    \ (/tmp/tmp918b85wu.js:14:23)\n    at test (/tmp/tmp918b85wu.js:26:22)\n    at\
    \ Object.<anonymous> (/tmp/tmp918b85wu.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 0;\n    let i = 0;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuro70qsi.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpuro70qsi.js:22:9)\n    at\
    \ test (/tmp/tmpuro70qsi.js:31:22)\n    at Object.<anonymous> (/tmp/tmpuro70qsi.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    let j: number = 0;\n    while (i < n) {\n       \
    \ fib.push(fib[j] + fib[j + 1]);\n        if (is_prime(fib[i])) {\n          \
    \  i++;\n        }\n        j++;\n    }\n    return fib[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpkrsfbmgx.js:19\n        if (is_prime(fib[i])) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpkrsfbmgx.js:19:9)\n\
    \    at test (/tmp/tmpkrsfbmgx.js:31:22)\n    at Object.<anonymous> (/tmp/tmpkrsfbmgx.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3,\
    \ 5, 13, 89];\n    let i: number = 0;\n    while (i < n) {\n        fibs.push(fibs[i]\
    \ + fibs[i + 1]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n233\n    at test (/tmp/tmpqp0g4a3d.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqp0g4a3d.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 233,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let prime_fib_list: number[] = [2, 3];\n    let i: number = 2;\n  \
    \  while (prime_fib_list.length < n) {\n        fib_list.push(fib_list[i - 1]\
    \ + fib_list[i - 2]);\n        if (is_prime(fib_list[i])) {\n            prime_fib_list.push(fib_list[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_list[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpk9o_hmym.js:19\n        if (is_prime(fib_list[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpk9o_hmym.js:19:9)\n\
    \    at test (/tmp/tmpk9o_hmym.js:31:22)\n    at Object.<anonymous> (/tmp/tmpk9o_hmym.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyzcogbwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyzcogbwm.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let fib_prev = 1;\n    while (i < n) {\n        let fib_next = fib +\
    \ fib_prev;\n        fib_prev = fib;\n        fib = fib_next;\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpromidbu0.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpromidbu0.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    let fib_num: number = 0;\n    while (i <= n)\
    \ {\n        fib_num = fib_list[i - 1] + fib_list[i - 2];\n        if (is_prime(fib_num))\
    \ {\n            fib_list.push(fib_num);\n            i += 1;\n        }\n   \
    \ }\n    return fib_list[n - 1];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmppazhy6xg.js:19\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmppazhy6xg.js:19:9)\n\
    \    at test (/tmp/tmppazhy6xg.js:30:22)\n    at Object.<anonymous> (/tmp/tmppazhy6xg.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < n) {\n        if (fib[i] === prime[j]) {\n            result\
    \ = fib[i];\n            i++;\n            j++;\n        } else if (fib[i] < prime[j])\
    \ {\n            i++;\n        } else {\n            j++;\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmppl10atdc.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmppl10atdc.js:14:15)\n\
    \    at test (/tmp/tmppl10atdc.js:37:22)\n    at Object.<anonymous> (/tmp/tmppl10atdc.js:48:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpabfggr_p.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpabfggr_p.js:14:19)\n\
    \    at test (/tmp/tmpabfggr_p.js:24:22)\n    at Object.<anonymous> (/tmp/tmpabfggr_p.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let prime_fib_nums: number[] = [2, 3];\n    let i: number = 2;\n  \
    \  while (prime_fib_nums.length < n) {\n        fib_nums.push(fib_nums[i - 1]\
    \ + fib_nums[i - 2]);\n        if (is_prime(fib_nums[i])) {\n            prime_fib_nums.push(fib_nums[i]);\n\
    \        }\n        i++;\n    }\n    return prime_fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpe7kzq8oi.js:19\n        if (is_prime(fib_nums[i])) {\n        ^\n\
    \nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpe7kzq8oi.js:19:9)\n\
    \    at test (/tmp/tmpe7kzq8oi.js:31:22)\n    at Object.<anonymous> (/tmp/tmpe7kzq8oi.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    let prime_fib_nums: number[]\
    \ = [];\n    for (let num of fib_nums) {\n        if (is_prime(num)) {\n     \
    \       prime_fib_nums.push(num);\n        }\n    }\n    return prime_fib_nums[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpko109xak.js:22\n        if (is_prime(num)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpko109xak.js:22:9)\n    at\
    \ test (/tmp/tmpko109xak.js:31:22)\n    at Object.<anonymous> (/tmp/tmpko109xak.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 0;\n    let count = 0;\n    while (count < n) {\n        c = a +\
    \ b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n           \
    \ count++;\n        }\n    }\n    return c;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpte5bwea7.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpte5bwea7.js:22:9)\n    at\
    \ test (/tmp/tmpte5bwea7.js:31:22)\n    at Object.<anonymous> (/tmp/tmpte5bwea7.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 2;\n    let fib_prev = 1;\n    while (i < n) {\n        let temp = fib;\n  \
    \      fib = fib + fib_prev;\n        fib_prev = temp;\n        if (is_prime(fib))\
    \ {\n            i = i + 1;\n        }\n    }\n    return fib;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpi51vdlh5.js:21\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpi51vdlh5.js:21:9)\n    at\
    \ test (/tmp/tmpi51vdlh5.js:31:22)\n    at Object.<anonymous> (/tmp/tmpi51vdlh5.js:41:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let prime_fib = 0;\n    while (i <= n) {\n        if (is_prime(fib))\
    \ {\n            prime_fib = fib;\n            i++;\n        }\n        fib =\
    \ fibonacci(fib);\n    }\n    return prime_fib;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpdzy566wt.js:18\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpdzy566wt.js:18:9)\n    at\
    \ test (/tmp/tmpdzy566wt.js:29:22)\n    at Object.<anonymous> (/tmp/tmpdzy566wt.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3];\n\
    \    let i: number = 1;\n    while (i < n) {\n        fibs.push(fibs[i] + fibs[i\
    \ - 1]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpmzktrysv.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmzktrysv.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349066
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let i: number = 0;\n    while (i < n) {\n        fib_num = fib_num_prev +\
    \ fib_num_prev_prev;\n        if (is_prime(fib_num)) {\n            i++;\n   \
    \     }\n        fib_num_prev_prev = fib_num_prev;\n        fib_num_prev = fib_num;\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpuaoal1ua.js:20\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpuaoal1ua.js:20:9)\n\
    \    at test (/tmp/tmpuaoal1ua.js:31:22)\n    at Object.<anonymous> (/tmp/tmpuaoal1ua.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349062
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    if (fib == prime) {\n        return fib;\n\
    \    } else {\n        return prime_fib(n + 1);\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp6ewzig6h.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp6ewzig6h.js:14:15)\n\
    \    at test (/tmp/tmp6ewzig6h.js:26:22)\n    at Object.<anonymous> (/tmp/tmp6ewzig6h.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fibs.push(fibs[i - 1] +\
    \ fibs[i - 2]);\n        i++;\n    }\n    return fibs[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpjkuvk_0n.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjkuvk_0n.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349061
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 1;\n    let b = 1;\n\
    \    let c = 2;\n    let i = 3;\n    while (i <= n) {\n        c = a + b;\n  \
    \      a = b;\n        b = c;\n        if (is_prime(c)) {\n            i += 1;\n\
    \        }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpiqixoru_.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpiqixoru_.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349066
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_prime_count = 0;\n\
    \    let fib_num = 0;\n    let fib_num_prev = 1;\n    let fib_num_prev_prev =\
    \ 0;\n    while (fib_prime_count < n) {\n        fib_num = fib_num_prev + fib_num_prev_prev;\n\
    \        if (is_prime(fib_num)) {\n            fib_prime_count += 1;\n       \
    \ }\n        fib_num_prev_prev = fib_num_prev;\n        fib_num_prev = fib_num;\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp30cg4s89.js:20\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp30cg4s89.js:20:9)\n\
    \    at test (/tmp/tmp30cg4s89.js:31:22)\n    at Object.<anonymous> (/tmp/tmp30cg4s89.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349067
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(n);\n        n++;\n   \
    \ }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpabfggr_p.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmpabfggr_p.js:14:19)\n\
    \    at test (/tmp/tmpabfggr_p.js:24:22)\n    at Object.<anonymous> (/tmp/tmpabfggr_p.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [1, 1];\n    let prime_fib_numbers: number[] = [2, 3];\n    let i: number\
    \ = 2;\n    while (prime_fib_numbers.length < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        if (is_prime(fib_numbers[i])) {\n     \
    \       prime_fib_numbers.push(fib_numbers[i]);\n        }\n        i++;\n   \
    \ }\n    return prime_fib_numbers[n - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp__vk80v9.js:19\n        if (is_prime(fib_numbers[i])) {\n     \
    \   ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmp__vk80v9.js:19:9)\n\
    \    at test (/tmp/tmp__vk80v9.js:31:22)\n    at Object.<anonymous> (/tmp/tmp__vk80v9.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349065
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(n);\n    let i = 0;\n    let j = 0;\n    while\
    \ (i < n) {\n        if (fib[i] == prime[j]) {\n            return fib[i];\n \
    \       }\n        else if (fib[i] < prime[j]) {\n            i++;\n        }\n\
    \        else {\n            j++;\n        }\n    }\n    return 0;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpoicqt09u.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpoicqt09u.js:14:15)\n\
    \    at test (/tmp/tmpoicqt09u.js:34:22)\n    at Object.<anonymous> (/tmp/tmpoicqt09u.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349067
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_nums: number[] = [1,\
    \ 2];\n    let i: number = 2;\n    while (i < n) {\n        fib_nums.push(fib_nums[i\
    \ - 1] + fib_nums[i - 2]);\n        i++;\n    }\n    return fib_nums[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpvkdc_mt5.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvkdc_mt5.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 1;\n    let count:\
    \ number = 2;\n    while (count < n) {\n        fib = fib_prev + fib_prev_prev;\n\
    \        fib_prev_prev = fib_prev;\n        fib_prev = fib;\n        if (is_prime(fib))\
    \ {\n            count += 1;\n        }\n    }\n    return fib;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp_ytit5fr.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_ytit5fr.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        let next: number = fib[i\
    \ - 1] + fib[i - 2];\n        if (is_prime(next)) {\n            fib.push(next);\n\
    \            i++;\n        }\n    }\n    return fib[n - 1];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpi972eff4.js:18\n        if (is_prime(next)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpi972eff4.js:18:9)\n    at\
    \ test (/tmp/tmpi972eff4.js:30:22)\n    at Object.<anonymous> (/tmp/tmpi972eff4.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num = fib(n);\n  \
    \  while (!is_prime(fib_num)) {\n        fib_num = fib(++n);\n    }\n    return\
    \ fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmphb6z3efu.js:14\n    let fib_num = fib(n);\n                  ^\n\
    \nReferenceError: fib is not defined\n    at prime_fib (/tmp/tmphb6z3efu.js:14:19)\n\
    \    at test (/tmp/tmphb6z3efu.js:23:22)\n    at Object.<anonymous> (/tmp/tmphb6z3efu.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    let result\
    \ = 0;\n    while (i < n && j < n) {\n        if (fib[i] === prime[j]) {\n   \
    \         result = fib[i];\n            i++;\n            j++;\n        } else\
    \ if (fib[i] < prime[j]) {\n            i++;\n        } else {\n            j++;\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmppl230s0o.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmppl230s0o.js:14:15)\n\
    \    at test (/tmp/tmppl230s0o.js:37:22)\n    at Object.<anonymous> (/tmp/tmppl230s0o.js:48:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 1;\n    let count = 1;\n    while (count < n) {\n        let temp\
    \ = i + j;\n        i = j;\n        j = temp;\n        if (is_prime(j)) {\n  \
    \          count += 1;\n        }\n    }\n    return j;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpihb0rxbs.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpihb0rxbs.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let fib =\
    \ 1;\n    let count = 0;\n    while (count < n) {\n        if (is_prime(fib))\
    \ {\n            count += 1;\n        }\n        i += 1;\n        fib = fibonacci(i);\n\
    \    }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpaukl07j_.js:18\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpaukl07j_.js:18:9)\n    at\
    \ test (/tmp/tmpaukl07j_.js:29:22)\n    at Object.<anonymous> (/tmp/tmpaukl07j_.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_prime_count = 0;\n\
    \    let fib_num = 0;\n    let fib_prev = 0;\n    let fib_prev_prev = 0;\n   \
    \ while (fib_prime_count < n) {\n        if (fib_num === 0) {\n            fib_num\
    \ = 1;\n        } else {\n            fib_prev_prev = fib_prev;\n            fib_prev\
    \ = fib_num;\n            fib_num = fib_prev + fib_prev_prev;\n        }\n   \
    \     if (is_prime(fib_num)) {\n            fib_prime_count += 1;\n        }\n\
    \    }\n    return fib_num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpt92m9dil.js:27\n        if (is_prime(fib_num)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpt92m9dil.js:27:9)\n\
    \    at test (/tmp/tmpt92m9dil.js:36:22)\n    at Object.<anonymous> (/tmp/tmpt92m9dil.js:47:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_list.push(fib_list[i\
    \ - 1] + fib_list[i - 2]);\n        i += 1;\n    }\n    return fib_list[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmp5blqgld8.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5blqgld8.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 0;\n    let count = 0;\n    while (count < n) {\n        k = i +\
    \ j;\n        i = j;\n        j = k;\n        if (is_prime(k)) {\n           \
    \ count++;\n        }\n    }\n    return k;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpyfuhx5_7.js:22\n        if (is_prime(k)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmpyfuhx5_7.js:22:9)\n    at\
    \ test (/tmp/tmpyfuhx5_7.js:31:22)\n    at Object.<anonymous> (/tmp/tmpyfuhx5_7.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        if (is_prime(fib)) {\n       \
    \     count++;\n        }\n        fib_prev_prev = fib_prev;\n        fib_prev\
    \ = fib;\n        fib = fib_prev + fib_prev_prev;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp05vw4w7f.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp05vw4w7f.js:19:9)\n    at\
    \ test (/tmp/tmp05vw4w7f.js:31:22)\n    at Object.<anonymous> (/tmp/tmp05vw4w7f.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_numbers(fib);\n    return prime[prime.length - 1];\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp1gl7nawy.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp1gl7nawy.js:14:15)\n\
    \    at test (/tmp/tmp1gl7nawy.js:21:22)\n    at Object.<anonymous> (/tmp/tmp1gl7nawy.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349063
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_nth(n);\n    if (fib == prime) {\n        return fib;\n\
    \    } else {\n        return prime_fib(n + 1);\n    }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmppg2gu8b4.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmppg2gu8b4.js:14:15)\n\
    \    at test (/tmp/tmppg2gu8b4.js:26:22)\n    at Object.<anonymous> (/tmp/tmppg2gu8b4.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let i: number\
    \ = 0;\n    while (i < n) {\n        fib = fib_prev + fib_prev_prev;\n       \
    \ if (is_prime(fib)) {\n            i += 1;\n        }\n        fib_prev_prev\
    \ = fib_prev;\n        fib_prev = fib;\n    }\n    return fib;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp3b9xav2r.js:20\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp3b9xav2r.js:20:9)\n    at\
    \ test (/tmp/tmp3b9xav2r.js:31:22)\n    at Object.<anonymous> (/tmp/tmp3b9xav2r.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 0;\n    let fib =\
    \ 0;\n    while (i < n) {\n        fib = fibonacci(i);\n        if (is_prime(fib))\
    \ {\n            i++;\n        }\n    }\n    return fib;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpisv72cbk.js:17\n        fib = fibonacci(i);\n        ^\n\nReferenceError:\
    \ fibonacci is not defined\n    at prime_fib (/tmp/tmpisv72cbk.js:17:9)\n    at\
    \ test (/tmp/tmpisv72cbk.js:27:22)\n    at Object.<anonymous> (/tmp/tmpisv72cbk.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let i = 1;\n    let j = 1;\n\
    \    let k = 1;\n    let count = 0;\n    while (count < n) {\n        if (is_prime(j))\
    \ {\n            count++;\n            k = j;\n        }\n        let temp = i;\n\
    \        i = j;\n        j = temp + j;\n    }\n    return k;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp5ucx4sw1.js:19\n        if (is_prime(j)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp5ucx4sw1.js:19:9)\n    at\
    \ test (/tmp/tmp5ucx4sw1.js:32:22)\n    at Object.<anonymous> (/tmp/tmp5ucx4sw1.js:43:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349069
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyzcogbwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyzcogbwm.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fibs: number[] = [2, 3];\n\
    \    let i: number = 2;\n    let fib: number = 0;\n    while (i < n) {\n     \
    \   fib = fibs[i - 1] + fibs[i - 2];\n        if (is_prime(fib)) {\n         \
    \   fibs.push(fib);\n            i += 1;\n        }\n    }\n    return fibs[n\
    \ - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp8yp7z44i.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp8yp7z44i.js:19:9)\n    at\
    \ test (/tmp/tmp8yp7z44i.js:31:22)\n    at Object.<anonymous> (/tmp/tmp8yp7z44i.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349069
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_list.push(fib_list[i\
    \ - 1] + fib_list[i - 2]);\n        i++;\n    }\n    return fib_list[n - 1];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpeq8ug5ai.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeq8ug5ai.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349069
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b = 1;\n\
    \    let c = 0;\n    let count = 0;\n    while (count < n) {\n        c = a +\
    \ b;\n        a = b;\n        b = c;\n        if (is_prime(c)) {\n           \
    \ count++;\n        }\n    }\n    return c;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp7aoyxams.js:22\n        if (is_prime(c)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp7aoyxams.js:22:9)\n    at\
    \ test (/tmp/tmp7aoyxams.js:31:22)\n    at Object.<anonymous> (/tmp/tmp7aoyxams.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349068
- exit_code: 2
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_num: number = 0;\n\
    \    let fib_num_prev: number = 1;\n    let fib_num_prev_prev: number = 0;\n \
    \   let prime_fib_num: number = 0;\n    let prime_fib_num_prev: number = 0;\n\
    \    let prime_fib_num_prev_prev: number = 0;\n    let prime_fib_num_prev_prev_prev:\
    \ number = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let k: number\
    \ = 0;\n    let l: number = 0;\n    let m: number = 0;\n    let n: number = 0;\n\
    \    let o: number = 0;\n    let p: number = 0;\n    let q: number = 0;\n    let\
    \ r: number = 0;\n    let s: number = 0;\n    let t: number = 0;\n    let u: number\
    \ = 0;\n    let v: number = 0;\n    let w: number = 0;\n    let x: number = 0;\n\
    \    let y: number = 0;\n    let z: number = 0;\n    let aa: number = 0;\n   \
    \ let bb: number = 0;\n    let cc: number = 0;\n    let dd: number = 0;\n    let\
    \ ee: number = 0;\n    let ff: number = 0;\n    let gg: number = 0;\n    let hh:\
    \ number = 0;\n    let ii: number = 0;\n    let jj: number = 0;\n    let kk: number\
    \ = 0;\n    let ll: number = 0;\n    let mm: number = 0;\n    let nn: number =\
    \ 0;\n    let oo: number = 0;\n    let pp: number = 0;\n    let qq: number = 0;\n\
    \    let rr: number = 0;\n    let ss: number = 0;\n    let tt: number = 0;\n \
    \   let uu: number = 0;\n    let vv: number = 0;\n    let ww: number = 0;\n  \
    \  let xx: number = 0;\n    let yy: number = 0;\n   \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxpohr9sj.ts(84,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660349068
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number = 1;\n   \
    \ let fib_prev: number = 1;\n    let fib_prev_prev: number = 0;\n    let count:\
    \ number = 0;\n    while (count < n) {\n        if (is_prime(fib)) {\n       \
    \     count++;\n        }\n        fib_prev_prev = fib_prev;\n        fib_prev\
    \ = fib;\n        fib = fib_prev + fib_prev_prev;\n    }\n    return fib;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp05vw4w7f.js:19\n        if (is_prime(fib)) {\n        ^\n\nReferenceError:\
    \ is_prime is not defined\n    at prime_fib (/tmp/tmp05vw4w7f.js:19:9)\n    at\
    \ test (/tmp/tmp05vw4w7f.js:31:22)\n    at Object.<anonymous> (/tmp/tmp05vw4w7f.js:42:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let prime = prime_number(n);\n    let i = 0;\n    let j = 0;\n    while (i\
    \ < n) {\n        if (fib[i] === prime[j]) {\n            return fib[i];\n   \
    \     } else if (fib[i] < prime[j]) {\n            i++;\n        } else {\n  \
    \          j++;\n        }\n    }\n    return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmp2hgzas2l.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmp2hgzas2l.js:14:15)\n\
    \    at test (/tmp/tmp2hgzas2l.js:34:22)\n    at Object.<anonymous> (/tmp/tmp2hgzas2l.js:45:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349054
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_list: number[] = [2,\
    \ 3, 5, 13, 89];\n    if (n <= 5) {\n        return fib_list[n - 1];\n    }\n\
    \    let i: number = 5;\n    let fib: number = fib_list[4];\n    while (i < n)\
    \ {\n        let fib_next: number = fib_list[i - 1] + fib_list[i - 2];\n     \
    \   if (is_prime(fib_next)) {\n            fib_list.push(fib_next);\n        \
    \    i += 1;\n        }\n        fib = fib_next;\n    }\n    return fib;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpqcmhwjjn.js:22\n        if (is_prime(fib_next)) {\n        ^\n\n\
    ReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmpqcmhwjjn.js:22:9)\n\
    \    at test (/tmp/tmpqcmhwjjn.js:38:22)\n    at Object.<anonymous> (/tmp/tmpqcmhwjjn.js:44:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349069
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n  let fib_nums: number[] = [2,\
    \ 3, 5, 13, 89];\n  if (n > fib_nums.length) {\n    let i: number = fib_nums.length;\n\
    \    while (i < n) {\n      let next_fib: number = fib_nums[i - 1] + fib_nums[i\
    \ - 2];\n      if (is_prime(next_fib)) {\n        fib_nums.push(next_fib);\n \
    \       i += 1;\n      }\n    }\n  }\n  return fib_nums[n - 1];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmporzqmmd2.js:19\n            if (is_prime(next_fib)) {\n       \
    \     ^\n\nReferenceError: is_prime is not defined\n    at prime_fib (/tmp/tmporzqmmd2.js:19:13)\n\
    \    at test (/tmp/tmporzqmmd2.js:35:22)\n    at Object.<anonymous> (/tmp/tmporzqmmd2.js:41:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349069
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    while (i < n) {\n        fib.push(fib[i - 1] + fib[i\
    \ - 2]);\n        i++;\n    }\n    return fib[n - 1];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmprmhlezx7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprmhlezx7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    while (!is_prime(fib)) {\n        fib = fibonacci(n);\n        n++;\n   \
    \ }\n    return fib;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpke3b5ftp.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpke3b5ftp.js:14:15)\n\
    \    at test (/tmp/tmpke3b5ftp.js:24:22)\n    at Object.<anonymous> (/tmp/tmpke3b5ftp.js:35:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349050
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib_numbers: number[]\
    \ = [2, 3];\n    let i: number = 2;\n    while (i < n) {\n        fib_numbers.push(fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]);\n        i++;\n    }\n    return fib_numbers[n -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n8\n\nshould loosely\
    \ deep-equal\n\n13\n    at test (/tmp/tmpyzcogbwm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyzcogbwm.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 8,\n  expected:\
    \ 13,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349051
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib = fibonacci(n);\n\
    \    let count = 0;\n    let i = 0;\n    while (count < n) {\n        if (is_prime(fib[i]))\
    \ {\n            count++;\n        }\n        i++;\n    }\n    return fib[i -\
    \ 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: ReferenceError
  stderr: "/tmp/tmpgiup0q6h.js:14\n    let fib = fibonacci(n);\n              ^\n\n\
    ReferenceError: fibonacci is not defined\n    at prime_fib (/tmp/tmpgiup0q6h.js:14:15)\n\
    \    at test (/tmp/tmpgiup0q6h.js:28:22)\n    at Object.<anonymous> (/tmp/tmpgiup0q6h.js:39:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349069
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let fib: number[] = [2, 3];\n\
    \    let i: number = 2;\n    let fib_prime: number = 0;\n    while (i < n) {\n\
    \        fib.push(fib[i - 1] + fib[i - 2]);\n        if (is_prime(fib[i])) {\n\
    \            fib_prime = fib[i];\n            i++;\n        }\n    }\n    return\
    \ fib_prime;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpdokogkou.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdokogkou.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349069
- exit_code: 1
  program: "// @ts-nocheck\n\n//prime_fib returns n-th number that is a Fibonacci\
    \ number and it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n\
    // 3\n// >>> prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n\
    // 89\nfunction prime_fib(n: number): number {\n    let a = 0;\n    let b = 1;\n\
    \    let c = 1;\n    let i = 1;\n    while (i < n) {\n        c = a + b;\n   \
    \     a = b;\n        b = c;\n        if (is_prime(c)) {\n            i++;\n \
    \       }\n    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpqju9r5f1.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqju9r5f1.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660349069

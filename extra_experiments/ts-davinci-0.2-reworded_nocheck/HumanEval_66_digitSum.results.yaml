language: ts
name: HumanEval_66_digitSum
results:
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1xp15441.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1xp15441.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpb8tzu7j5.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb8tzu7j5.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1xp15441.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1xp15441.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    let code\
    \ = s.charCodeAt(i);\n    if (code >= 65 && code <= 90) {\n      sum += code;\n\
    \    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"woArBld\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpx5m63cv7.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx5m63cv7.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '131

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"woArBld\"));\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpx5m63cv7.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx5m63cv7.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '131

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  const sum = s.split('').reduce((acc, curr) => {\n    if (curr.charCodeAt(0)\
    \ >= 65 && curr.charCodeAt(0) <= 90) {\n      return acc + curr.charCodeAt(0);\n\
    \    }\n    return acc;\n  }, 0);\n  return sum;\n}\n\nconsole.log(digitSum('abAB'));\n\
    console.log(digitSum('abcCd'));\nconsole.log(digitSum('helloE'));\nconsole.log(digitSum('woArBld'));\n\
    console.log(digitSum('aAaaaXa'));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1xp15441.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1xp15441.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\n\
    console.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"\
    aAaaaXa\"));\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpg2zn9dfg.js:41:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg2zn9dfg.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  return s.split('').reduce((acc, curr) => {\n    if (curr === curr.toUpperCase())\
    \ {\n      return acc + curr.charCodeAt(0);\n    }\n    return acc;\n  }, 0);\n\
    }\n\nconsole.log(digitSum('woArBld'));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp37gs10cb.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp37gs10cb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '131

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  const upperCase = s.toUpperCase();\n  let sum = 0;\n  for (let i\
    \ = 0; i < upperCase.length; i++) {\n    sum += upperCase.charCodeAt(i);\n  }\n\
    \  return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"\
    ));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpm99yc9m5.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm99yc9m5.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    262

    333

    441

    523

    478

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpksknscgf.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpksknscgf.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"woArBld\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmppahnzr9l.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppahnzr9l.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '131

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1xp15441.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1xp15441.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1xp15441.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1xp15441.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpksknscgf.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpksknscgf.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpr93c0b04.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr93c0b04.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const\
    \ charCode = s.charCodeAt(i);\n    if (charCode >= 65 && charCode <= 90) {\n \
    \     sum += charCode;\n    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const\
    \ code = s.charCodeAt(i);\n    if (code >= 65 && code <= 90) {\n      sum += code;\n\
    \    }\n  }\n  return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348991
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1xp15441.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1xp15441.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1xp15441.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1xp15441.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i = 0; i < s.length; i++) {\n\
    \        if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp71bu9b1q.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp71bu9b1q.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348991
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] === s[i].toUpperCase()) {\n            sum += s.charCodeAt(i);\n\
    \        }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp1xp15441.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1xp15441.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum: number = 0;\n    for (let i: number = 0; i < s.length;\
    \ i++) {\n        if (s.charCodeAt(i) >= 65 && s.charCodeAt(i) <= 90) {\n    \
    \        sum += s.charCodeAt(i);\n        }\n    }\n    return sum;\n}\nconsole.log(digitSum(\"\
    \"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"\
    helloE\"));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"\
    ));\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpksknscgf.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpksknscgf.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\nconsole.log(digitSum(\"\
    abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"woArBld\"\
    ));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"\
    abAB\"));\nconsole.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"\
    ));\nconsole.log(digitSum(\"woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n    let sum = 0;\n    for (let i = 0; i < s.length; i++) {\n     \
    \   if (s[i] >= 'A' && s[i] <= 'Z') {\n            sum += s.charCodeAt(i);\n \
    \       }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660348989
- exit_code: 0
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989
- exit_code: 1
  program: "// @ts-nocheck\n\n//Task\n// Write a function that takes a string as input\
    \ and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n\
    // >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"\
    abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\"\
    )\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string):\
    \ number {\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ === s[i].toUpperCase()) {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return\
    \ sum;\n}\n\nconsole.log(digitSum(\"\"));\nconsole.log(digitSum(\"abAB\"));\n\
    console.log(digitSum(\"abcCd\"));\nconsole.log(digitSum(\"helloE\"));\nconsole.log(digitSum(\"\
    woArBld\"));\nconsole.log(digitSum(\"aAaaaXa\"));\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmpuxr6ybuq.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuxr6ybuq.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: '0

    131

    67

    69

    131

    153

    '
  timestamp: 1660348989

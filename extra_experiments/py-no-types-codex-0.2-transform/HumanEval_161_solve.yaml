name: HumanEval_161_solve
language: notypes.py
prompt: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
  \ reverse its case from lower to upper or vise versa, \n    otherwise keep it as\
  \ it is.\n    If the string contains no letters, reverse the string.\n    The function\
  \ should return the resulted string.\n    Examples\n    >>> solve('1234')\n    '4321'\n\
  \    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert\
  \ candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
  \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
  \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
  \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
completions: ["    if not s.isalpha():\n        return s[::-1]\n    else:\n      \
    \  return s.swapcase()\n", "    # your code here\n    if not s.isalpha():\n  \
    \      return s[::-1]\n    else:\n        return s.swapcase()\n", "    if s.isalpha():\n\
    \        return s.swapcase()\n    else:\n        return s[::-1]\n\n", "    if\
    \ s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n\
    \n", "    # your code here\n    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if s.isalpha():\n        return\
    \ s.swapcase()\n    else:\n        return s[::-1]\n", "    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n", "    if not s.isalpha():\n   \
    \     return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n\
    \        return s.swapcase()\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if s.isalpha():\n        return\
    \ s.swapcase()\n    else:\n        return s[::-1]\n", "    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not\
    \ s:\n        return s\n    if not s.isalpha():\n        return s[::-1]\n    return\
    \ ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\n", "    if not\
    \ any(c.isalpha() for c in s):\n        return s[::-1]\n    else:\n        return\
    \ ''.join(c.upper() if c.islower() else c.lower() for c in s)\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    if not s:\n        return s\n    if not any(c.isalpha() for c in s):\n    \
    \    return s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower()\
    \ if c.isupper() else c for c in s)\n", "    if not s.isalpha():\n        return\
    \ s[::-1]\n    else:\n        return s.swapcase()\n\n", "    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n", "    if s.isalpha():\n\
    \        return s.swapcase()\n    else:\n        return s[::-1]\n\n", "    if\
    \ not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    else:\n  \
    \      return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n",
  "    if not s:\n        return s\n    if not any(c.isalpha() for c in s):\n    \
    \    return s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower()\
    \ if c.isupper() else c for c in s)\n\n", "    if not s.isalpha():\n        return\
    \ s[::-1]\n    else:\n        return s.swapcase()\n", "    if not s:\n       \
    \ return s\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() if c.isupper() else\
    \ c for c in s)\n\n", "    if s.isalpha():\n        return s.swapcase()\n    else:\n\
    \        return s[::-1]\n\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() if c.isupper() else c for c in s)\n\n", "    if s.isalpha():\n\
    \        return s.swapcase()\n    else:\n        return s[::-1]\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() if c.isupper() else c for c in s)\n\n", "    if\
    \ not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n\
    \n", "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return\
    \ s[::-1]\n\n", "    if not s:\n        return s\n    if not s.isalpha():\n  \
    \      return s[::-1]\n    return s.swapcase()\n\n", "    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not\
    \ any(c.isalpha() for c in s):\n        return s[::-1]\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() if c.isupper() else c for c in s)\n\n", "    if\
    \ not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    else:\n  \
    \      return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n",
  "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    # your code here\n    if s.isalpha():\n        return s.swapcase()\n    else:\n\
    \        return s[::-1]\n", "    if s.isalpha():\n        return s.swapcase()\n\
    \    else:\n        return s[::-1]\n\n", "    if not s.isalpha():\n        return\
    \ s[::-1]\n    else:\n        return s.swapcase()\n", "    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    else:\n        return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n", "    if not s.isalpha():\n   \
    \     return s[::-1]\n    else:\n        return s.swapcase()\n\n", "    if not\
    \ any(c.isalpha() for c in s):\n        return s[::-1]\n    else:\n        return\
    \ ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return ''.join([i.upper()\
    \ if i.islower() else i.lower() for i in s])\n", "    if not s.isalpha():\n  \
    \      return s[::-1]\n    else:\n        return s.swapcase()\n", "    if s.isalpha():\n\
    \        return s.swapcase()\n    else:\n        return s[::-1]\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n", " \
    \   if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s:\n        return s\n    if s.isalpha():\n        return s.swapcase()\n\
    \    else:\n        return s[::-1]\n\n", "    if s.isalpha():\n        return\
    \ s.swapcase()\n    else:\n        return s[::-1]\n\n", "    if s.isalpha():\n\
    \        return s.swapcase()\n    else:\n        return s[::-1]\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n\
    \n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return\
    \ s.swapcase()\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n\
    \        return s.swapcase()\n\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if not s.isalpha():\n       \
    \ return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n\n", "    if\
    \ not s:\n        return s\n    if not s.isalpha():\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n",
  "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    return ''.join(c.lower()\
    \ if c.isupper() else c.upper() for c in s)\n", "    if not s:\n        return\
    \ s\n    if s.isalpha():\n        return s.swapcase()\n    return s[::-1]\n",
  "    if not s:\n        return s\n    if not any(c.isalpha() for c in s):\n    \
    \    return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n\
    \        return s.swapcase()\n\n", "    if not s:\n        return s\n    if not\
    \ any(c.isalpha() for c in s):\n        return s[::-1]\n    return ''.join(c.lower()\
    \ if c.isupper() else c.upper() for c in s)\n\n", "    if not s.isalpha():\n \
    \       return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not\
    \ s:\n        return s\n    if not any(c.isalpha() for c in s):\n        return\
    \ s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower() for c in\
    \ s)\n\n", "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n", " \
    \   if not s.isalpha():\n        return s[::-1]\n    return ''.join(ch.lower()\
    \ if ch.isupper() else ch.upper() for ch in s)\n\n", "    # your code here\n \
    \   if not s:\n        return s\n    if not s.isalpha():\n        return s[::-1]\n\
    \    return s.swapcase()\n\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if not s.isalpha():\n       \
    \ return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n", "    if not s:\n        return s\n    if not\
    \ any(c.isalpha() for c in s):\n        return s[::-1]\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n\n", "    if not s.isalpha():\n \
    \       return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n\
    \n", "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return\
    \ s[::-1]\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n  \
    \      return s.swapcase()\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if not s.isalpha():\n       \
    \ return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not\
    \ s:\n        return s\n    if not any(c.isalpha() for c in s):\n        return\
    \ s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower() for c in\
    \ s)\n\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n     \
    \   return s.swapcase()\n", "    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n", "    if not any(c.isalpha() for c in s):\n\
    \        return s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower()\
    \ for c in s)\n", "    if s.isalpha():\n        return s.swapcase()\n    else:\n\
    \        return s[::-1]\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if s.isalpha():\n        return\
    \ s.swapcase()\n    else:\n        return s[::-1]\n\n", "    if s.isalpha():\n\
    \        return s.swapcase()\n    else:\n        return s[::-1]\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n\
    \n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return\
    \ s.swapcase()\n", "    if not s:\n        return s\n    if not s.isalpha():\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n\
    \        return s.swapcase()\n\n", "    if not any(c.isalpha() for c in s):\n\
    \        return s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower()\
    \ for c in s)\n\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n\
    \        return s.swapcase()\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if not s.isalpha():\n       \
    \ return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return ''.join([i.upper()\
    \ if i.islower() else i.lower() for i in s])\n", "    if not s.isalpha():\n  \
    \      return s[::-1]\n    else:\n        return s.swapcase()\n", "    if s.isalpha():\n\
    \        return s.swapcase()\n    else:\n        return s[::-1]\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return ''.join([i.lower()\
    \ if i.isupper() else i.upper() for i in s])\n", "    if not s.isalpha():\n  \
    \      return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n\
    \n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return\
    \ s.swapcase()\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n\
    \        return s.swapcase()\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n",
  "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    if not s.isalpha():\n        return s[::-1]\n    return ''.join(c.upper() if\
    \ c.islower() else c.lower() for c in s)\n", "    # your code here\n    return\
    \ s\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return\
    \ s.swapcase()\n", "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s:\n        return s\n    if not s.isalpha():\n        return s[::-1]\n\
    \    return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s:\n        return s\n    if not any(c.isalpha() for c in s):\n    \
    \    return s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower()\
    \ for c in s)\n\n", "    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if not s.isalpha():\n       \
    \ return s[::-1]\n    return ''.join(i.upper() if i.islower() else i.lower() for\
    \ i in s)\n\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n\
    \        return s.swapcase()\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n\n", "    if s.isalpha():\n        return\
    \ s.swapcase()\n    else:\n        return s[::-1]\n", "    # your code here\n\
    \    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    if not s.isalpha():\n        return s[::-1]\n    res = ''\n    for c in s:\n\
    \        if c.isalpha():\n            res += c.swapcase()\n        else:\n   \
    \         res += c\n    return res\n", "    if not s:\n        return s\n    if\
    \ not s.isalpha():\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n\n", "    if not s:\n        return s\n\
    \    if not s.isalpha():\n        return s[::-1]\n    return ''.join(c.lower()\
    \ if c.isupper() else c.upper() for c in s)\n", "    # your code here\n    return\
    \ ''\n\n", "    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n", "    # your code here\n    if not s.isalpha():\n\
    \        return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not\
    \ s:\n        return s\n    if not any(c.isalpha() for c in s):\n        return\
    \ s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower() for c in\
    \ s)\n\n", "    if s.isalpha():\n        return s.swapcase()\n    else:\n    \
    \    return s[::-1]\n\n", "    if not any(c.isalpha() for c in s):\n        return\
    \ s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower() for c in\
    \ s)\n\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n     \
    \   return s.swapcase()\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if not s:\n        return s\n\
    \    if not s.isalpha():\n        return s[::-1]\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n\n", "    if not s.isalpha():\n \
    \       return s[::-1]\n    else:\n        return s.swapcase()\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n\
    \n", "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return\
    \ s[::-1]\n", "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n",
  "    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n",
  "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n\n", "    if s.isalpha():\n     \
    \   return s.swapcase()\n    else:\n        return s[::-1]\n\n", "    if not s:\n\
    \        return s\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n", " \
    \   if not any(c.isalpha() for c in s):\n        return s[::-1]\n    else:\n \
    \       return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n",
  "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n", "    if s.isalpha():\n       \
    \ return s.swapcase()\n    else:\n        return s[::-1]\n", "    if not s:\n\
    \        return s\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n", " \
    \   if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n\n", "    if s.isalpha():\n     \
    \   return s.swapcase()\n    else:\n        return s[::-1]\n\n", "    # your code\
    \ here\n    return s\n", "    if not s.isalpha():\n        return s[::-1]\n  \
    \  else:\n        return s.swapcase()\n", "    if s.isalpha():\n        return\
    \ s.swapcase()\n    else:\n        return s[::-1]\n", "    if s.isalpha():\n \
    \       return s.swapcase()\n    else:\n        return s[::-1]\n", "    if not\
    \ s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    else:\n  \
    \      return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s:\n        return s\n    if not any(c.isalpha() for c in s):\n    \
    \    return s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower()\
    \ for c in s)\n\n", "    if not s:\n        return s\n    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n", " \
    \   if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    # your code here\n    return s\n", "    if not s.isalpha():\n        return\
    \ s[::-1]\n    else:\n        return s.swapcase()\n", "    if s.isalpha():\n \
    \       return s.swapcase()\n    else:\n        return s[::-1]\n\n", "    if s.isalpha():\n\
    \        return s.swapcase()\n    else:\n        return s[::-1]\n\n", "    if\
    \ not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n",
  "    # Your code here\n    if not s.isalpha():\n        return s[::-1]\n    else:\n\
    \        return s.swapcase()\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    if not s.isalpha():\n       \
    \ return s[::-1]\n    else:\n        return ''.join([i.lower() if i.isupper()\
    \ else i.upper() for i in s])\n\n", "    if not any(c.isalpha() for c in s):\n\
    \        return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n", "    if not s.isalpha():\n        return s[::-1]\n    else:\n\
    \        return s.swapcase()\n", "    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n", "    # your code here\n    if not\
    \ s:\n        return s\n    if s.isalpha():\n        return s[::-1].swapcase()\n\
    \    else:\n        return s[::-1]\n", "    if not s.isalpha():\n        return\
    \ s[::-1]\n    else:\n        return s.swapcase()\n", "    if not any(c.isalpha()\
    \ for c in s):\n        return s[::-1]\n    else:\n        return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

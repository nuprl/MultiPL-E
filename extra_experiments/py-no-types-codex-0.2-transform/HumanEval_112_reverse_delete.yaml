name: HumanEval_112_reverse_delete
language: notypes.py
prompt: "def reverse_delete(s, c):\n    \"\"\"Task\n    We are given two strings s\
  \ and c, you have to deleted all the characters in s that are equal to any character\
  \ in c\n    then check if the result string is palindrome.\n    A string is called\
  \ palindrome if it reads the same backward as forward.\n    You should return a\
  \ tuple containing the result string and True/False for the check.\n    Example\n\
  \    >>> reverse_delete('abcde', 'ae')\n    ('bcd', False)\n    >>> reverse_delete('abcdef',\
  \ 'b')\n    ('acdef', False)\n    >>> reverse_delete('abcdedcba', 'ab')\n    ('cdedc',\
  \ True)\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('abcde', 'ae') == ('bcd', False)\n\
  \    assert candidate('abcdef', 'b') == ('acdef', False)\n    assert candidate('abcdedcba',\
  \ 'ab') == ('cdedc', True)\n    assert candidate('dwik', 'w') == ('dik', False)\n\
  \    assert candidate('a', 'a') == ('', True)\n    assert candidate('abcdedcba',\
  \ '') == ('abcdedcba', True)\n    assert candidate('abcdedcba', 'v') == ('abcdedcba',\
  \ True)\n    assert candidate('vabba', 'v') == ('abba', True)\n    assert candidate('mamma',\
  \ 'mia') == ('', True)\n\ndef test_check():\n    check(reverse_delete)\n\ntest_check()\n"
completions: ["    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    for i in c:\n        s = s.replace(i, '')\n    return s, s == s[::-1]\n\
    \n", "    s = ''.join(i for i in s if i not in c)\n    return s, s == s[::-1]\n\
    \n", "    for char in c:\n        s = s.replace(char, '')\n    return s, s ==\
    \ s[::-1]\n\n", "    for i in c:\n        s = s.replace(i, '')\n    return s,\
    \ s == s[::-1]\n\n", "    for i in c:\n        s = s.replace(i, '')\n    return\
    \ s, s == s[::-1]\n\n", "    for i in c:\n        s = s.replace(i, '')\n    return\
    \ s, s == s[::-1]\n\n", "    for i in c:\n        s = s.replace(i, '')\n    return\
    \ s, s == s[::-1]\n\n", "    for i in c:\n        s = s.replace(i, '')\n    return\
    \ s, s == s[::-1]\n\n", "    for i in c:\n        s = s.replace(i, '')\n    return\
    \ s, s == s[::-1]\n\n", "    for i in c:\n        s = s.replace(i, '')\n    return\
    \ s, s == s[::-1]\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_17_parse_music
language: notypes.py
prompt: "def parse_music(music_string):\n    \"\"\" Input to this function is a string\
  \ representing musical notes in a special ASCII format.\n    Your task is to parse\
  \ this string and return list of integers corresponding to how many beats does each\n\
  \    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n\
  \    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\
  \n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1,\
  \ 1, 1, 4, 4]\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('') == []\n    assert candidate('o\
  \ o o o') == [4, 4, 4, 4]\n    assert candidate('.| .| .| .|') == [1, 1, 1, 1]\n\
  \    assert candidate('o| o| .| .| o o o o') == [2, 2, 1, 1, 4, 4, 4, 4]\n    assert\
  \ candidate('o| .| o| .| o o| o o|') == [2, 1, 2, 1, 4, 2, 4, 2]\n\ndef test_check():\n\
  \    check(parse_music)\n\ntest_check()\n"
completions: ["    return [4 if x == 'o' else 2 if x == 'o|' else 1 for x in music_string.split()]\n\
    \n", "    # YOUR CODE HERE\n    return [4 if x == 'o' else 2 if x == 'o|' else\
    \ 1 for x in music_string.split()]\n", "    # TODO: implement this function\n\
    \    pass\n\n", "    beats = {'o': 4, 'o|': 2, '.|': 1}\n    return [beats[note]\
    \ for note in music_string.split()]\n\n", "    beats = {'o': 4, 'o|': 2, '.|':\
    \ 1}\n    return [beats[note] for note in music_string.split()]\n\n", "    music_dict\
    \ = {'o': 4, 'o|': 2, '.|': 1}\n    music_list = music_string.split()\n    return\
    \ [music_dict[note] for note in music_list]\n\n", "    beats = {'o': 4, 'o|':\
    \ 2, '.|': 1}\n    return [beats[x] for x in music_string.split()]\n\n", "   \
    \ return [4 if x == 'o' else 2 if x == 'o|' else 1 for x in music_string.split()]\n",
  "    # TODO: implement this function\n    pass\n\n", "    # TODO: implement this\
    \ function\n    pass\n\n", "    # Your code here\n    return [4 if x == 'o' else\
    \ 2 if x == 'o|' else 1 for x in music_string.split()]\n\n", "    return [4 if\
    \ note == 'o' else 2 if note == 'o|' else 1 for note in music_string.split()]\n\
    \n", "    # TODO: implement this function\n    pass\n\n", "    # TODO: implement\
    \ this function\n    return []\n\n", "    # TODO: implement this function\n  \
    \  pass\n\n", "    return [4 if i == 'o' else 2 if i == 'o|' else 1 for i in music_string.split()]\n",
  "    beats = {'o': 4, 'o|': 2, '.|': 1}\n    return [beats[note] for note in music_string.split()]\n\
    \n", "    return [4 if x == 'o' else 2 if x == 'o|' else 1 for x in music_string.split()]\n\
    \n", "    # TODO: implement this function\n    pass\n\n", "    beats = {'o': 4,\
    \ 'o|': 2, '.|': 1}\n    return [beats[note] for note in music_string.split()]\n\
    \n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

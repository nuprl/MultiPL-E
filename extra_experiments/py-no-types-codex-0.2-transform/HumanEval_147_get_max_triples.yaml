name: HumanEval_147_get_max_triples
language: notypes.py
prompt: "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer\
  \ n. You have to create an integer array a of length n.\n        For each i (1 \u2264\
  \ i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of\
  \ triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k]\
  \ is a multiple of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n    \
  \    Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple\
  \ is (1, 7, 13).\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(5) == 1\n    assert candidate(6)\
  \ == 4\n    assert candidate(10) == 36\n    assert candidate(100) == 53361\n\ndef\
  \ test_check():\n    check(get_max_triples)\n\ntest_check()\n"
completions: ["    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n \
    \   for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n          \
    \  for k in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n\
    \                    count += 1\n    return count\n\n", "    a = [i * i - i +\
    \ 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n - 2) for j in\
    \ range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 ==\
    \ 0)\n\n", "    return sum(1 for i in range(1, n) for j in range(i + 1, n) for\
    \ k in range(j + 1, n) if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3\
    \ == 0)\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1\
    \ for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n)\
    \ if (a[i] + a[j] + a[k]) % 3 == 0)\n", "    a = [i * i - i + 1 for i in range(1,\
    \ n + 1)]\n    triples = 0\n    for i in range(len(a)):\n        for j in range(i\
    \ + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if\
    \ (a[i] + a[j] + a[k]) % 3 == 0:\n                    triples += 1\n    return\
    \ triples\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    return\
    \ sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j +\
    \ 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i\
    \ in range(1, n + 1)]\n    count = 0\n    for i in range(len(a)):\n        for\
    \ j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n   \
    \             if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count +=\
    \ 1\n    return count\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n\
    \    return sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in\
    \ range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    a = [i * i - i\
    \ + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(n - 2):\n \
    \       for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n\
    \                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count\
    \ += 1\n    return count\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n\
    \    count = 0\n    for i in range(n - 2):\n        for j in range(i + 1, n -\
    \ 1):\n            for k in range(j + 1, n):\n                if (a[i] + a[j]\
    \ + a[k]) % 3 == 0:\n                    count += 1\n    return count\n", "  \
    \  a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum(1 for i in range(n\
    \ - 2) for j in range(i + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] +\
    \ a[k]) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n  \
    \  return sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j\
    \ + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    # Write your code here\n\
    \    a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum([1 for i in\
    \ range(n) for j in range(i + 1, n) for k in range(j + 1, n) if (a[i] + a[j] +\
    \ a[k]) % 3 == 0])\n\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n \
    \   return sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j\
    \ + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n", "    a = [i * i - i + 1 for i\
    \ in range(1, n + 1)]\n    count = 0\n    for i in range(n - 2):\n        for\
    \ j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n         \
    \       if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n  \
    \  return count\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    return\
    \ sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in range(j +\
    \ 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n", "    a = [i * i - i + 1 for i\
    \ in range(1, n + 1)]\n    return sum([1 for i in range(n - 2) for j in range(i\
    \ + 1, n - 1) for k in range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0])\n",
  "    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(n\
    \ - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j +\
    \ 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                \
    \    count += 1\n    return count\n\n", "    return sum(1 for i in range(1, n)\
    \ for j in range(i+1, n) for k in range(j+1, n) if (i*i - i + 1 + j*j - j + 1\
    \ + k*j - k + 1) % 3 == 0)\n", "    a = [i * i - i + 1 for i in range(1, n + 1)]\n\
    \    return sum(1 for i in range(n - 2) for j in range(i + 1, n - 1) for k in\
    \ range(j + 1, n) if (a[i] + a[j] + a[k]) % 3 == 0)\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_19_sort_numbers
language: notypes.py
prompt: "def sort_numbers(numbers):\n    \"\"\" Input is a space-delimited string\
  \ of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one', 'two',\
  \ 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return the string\
  \ with numbers sorted from smallest to largest\n    >>> sort_numbers('three one\
  \ five')\n    'one three five'\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
  \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n   \
  \ assert candidate('five zero four seven nine eight') == 'zero four five seven eight\
  \ nine'\n    assert candidate('six five four three two one zero') == 'zero one two\
  \ three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
completions: ["    numbers = numbers.split()\n    numbers.sort(key=lambda x: NUMBERS[x])\n\
    \    return ' '.join(numbers)\n\n", "    numbers = numbers.split()\n    numbers.sort(key=lambda\
    \ x: NUMBERS[x])\n    return ' '.join(numbers)\n\n", "    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: num_to_int[x])\n    return ' '.join(numbers)\n\
    \n", "    numbers = numbers.split()\n    numbers.sort(key=lambda x: int(NUMBERS[x]))\n\
    \    return ' '.join(numbers)\n", "    numbers = numbers.split()\n    numbers.sort(key=lambda\
    \ x: NUMBERS[x])\n    return ' '.join(numbers)\n\n", "    num_dict = {'zero':\
    \ 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven':\
    \ 7, 'eight': 8, 'nine': 9}\n    numbers = numbers.split()\n    numbers = [num_dict[num]\
    \ for num in numbers]\n    numbers.sort()\n    numbers = [str(num) for num in\
    \ numbers]\n    return ' '.join(numbers)\n\n", "    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    numbers = numbers.split()\n    numbers = [num_dict[num] for\
    \ num in numbers]\n    numbers.sort()\n    numbers = [str(num) for num in numbers]\n\
    \    return ' '.join(numbers)\n\n", "    numbers = numbers.split()\n    numbers\
    \ = [num2int(n) for n in numbers]\n    numbers.sort()\n    numbers = [int2num(n)\
    \ for n in numbers]\n    return ' '.join(numbers)\n\n", "    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n",
  "    numbers = numbers.split(' ')\n    numbers = [number_to_int(number) for number\
    \ in numbers]\n    numbers.sort()\n    numbers = [int_to_number(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\n", "    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(NUMBERS[x]))\n    return ' '.join(numbers)\n\
    \n", "    numbers = numbers.split()\n    numbers = [number_to_digit(number) for\
    \ number in numbers]\n    numbers.sort()\n    numbers = [digit_to_number(number)\
    \ for number in numbers]\n    return ' '.join(numbers)\n", "    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n",
  "    numbers = numbers.split()\n    numbers.sort(key=lambda x: number_to_digit(x))\n\
    \    return ' '.join(numbers)\n\n", "    num_dict = {'zero': 0, 'one': 1, 'two':\
    \ 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine':\
    \ 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda x: num_dict[x])\n\
    \    return ' '.join(num_list)\n\n", "    numbers = numbers.split(' ')\n    numbers\
    \ = [number_to_int(number) for number in numbers]\n    numbers.sort()\n    numbers\
    \ = [int_to_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n", "    numbers = numbers.split()\n    numbers = [word_to_num(word) for word\
    \ in numbers]\n    numbers.sort()\n    numbers = [num_to_word(num) for num in\
    \ numbers]\n    return ' '.join(numbers)\n", "    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    numbers = numbers.split(' ')\n    numbers = [num_dict[num]\
    \ for num in numbers]\n    numbers.sort()\n    numbers = [num_dict[num] for num\
    \ in numbers]\n    return ' '.join(numbers)\n", "    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMBERS[x])\n    return ' '.join(numbers)\n\n",
  "    numbers = numbers.split()\n    numbers.sort(key=lambda x: numbers_dict[x])\n\
    \    return ' '.join(numbers)\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

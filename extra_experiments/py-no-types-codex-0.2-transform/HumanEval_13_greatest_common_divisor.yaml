name: HumanEval_13_greatest_common_divisor
language: notypes.py
prompt: "def greatest_common_divisor(a, b):\n    \"\"\" Return a greatest common divisor\
  \ of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>>\
  \ greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
  \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
  \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
completions: ["    if a == 0 or b == 0:\n        return 0\n    elif a == b:\n    \
    \    return a\n    elif a > b:\n        return greatest_common_divisor(a - b,\
    \ b)\n    else:\n        return greatest_common_divisor(a, b - a)\n\n", "    if\
    \ a == 0 or b == 0:\n        return 0\n    elif a == b:\n        return a\n  \
    \  elif a > b:\n        return greatest_common_divisor(a - b, b)\n    else:\n\
    \        return greatest_common_divisor(a, b - a)\n\n", "    if a == 0 or b ==\
    \ 0:\n        return 0\n    elif a == b:\n        return a\n    elif a > b:\n\
    \        return greatest_common_divisor(a - b, b)\n    else:\n        return greatest_common_divisor(a,\
    \ b - a)\n\n", "    if a == 0:\n        return b\n    elif b == 0:\n        return\
    \ a\n    elif a > b:\n        return greatest_common_divisor(a % b, b)\n    else:\n\
    \        return greatest_common_divisor(a, b % a)\n\n", "    if a == 0:\n    \
    \    return b\n    if b == 0:\n        return a\n    if a == b:\n        return\
    \ a\n    if a > b:\n        return greatest_common_divisor(a - b, b)\n    if a\
    \ < b:\n        return greatest_common_divisor(a, b - a)\n\n", "    if a == 0\
    \ or b == 0:\n        return 0\n    if a == b:\n        return a\n    if a > b:\n\
    \        return greatest_common_divisor(a - b, b)\n    return greatest_common_divisor(a,\
    \ b - a)\n\n", "    if a == 0:\n        return b\n    elif b == 0:\n        return\
    \ a\n    elif a == b:\n        return a\n    elif a > b:\n        return greatest_common_divisor(a\
    \ - b, b)\n    else:\n        return greatest_common_divisor(a, b - a)\n\n", " \
    \   if a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n\
    \    if a > b:\n        return greatest_common_divisor(a - b, b)\n    else:\n\
    \        return greatest_common_divisor(a, b - a)\n\n", "    if a == 0 or b ==\
    \ 0:\n        return 0\n    elif a == b:\n        return a\n    elif a > b:\n\
    \        return greatest_common_divisor(a - b, b)\n    else:\n        return greatest_common_divisor(a,\
    \ b - a)\n\n", "    while b:\n        a, b = b, a % b\n    return a\n\n", "  \
    \  if a == 0 or b == 0:\n        return 0\n    if a < 0:\n        a = -a\n   \
    \ if b < 0:\n        b = -b\n    while a != b:\n        if a > b:\n          \
    \  a = a - b\n        else:\n            b = b - a\n    return a\n\n", "    if\
    \ a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n  \
    \  return a\n\n", "    while b:\n        a, b = b, a % b\n    return a\n\n", " \
    \   if a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n\
    \    if a > b:\n        return greatest_common_divisor(a - b, b)\n    else:\n\
    \        return greatest_common_divisor(a, b - a)\n\n", "    if a == 0 or b ==\
    \ 0:\n        return 0\n    if a == b:\n        return a\n    if a > b:\n    \
    \    return greatest_common_divisor(a - b, b)\n    return greatest_common_divisor(a,\
    \ b - a)\n\n", "    if a == 0 or b == 0:\n        return 0\n    elif a == b:\n\
    \        return a\n    elif a > b:\n        return greatest_common_divisor(a-b,\
    \ b)\n    else:\n        return greatest_common_divisor(a, b-a)\n", "    if a\
    \ == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a > b:\n\
    \        return greatest_common_divisor(a % b, b)\n    else:\n        return greatest_common_divisor(a,\
    \ b % a)\n\n", "    if a == 0 or b == 0:\n        return 0\n    elif a == b:\n\
    \        return a\n    elif a > b:\n        return greatest_common_divisor(a -\
    \ b, b)\n    else:\n        return greatest_common_divisor(a, b - a)\n\n", " \
    \   while b:\n        a, b = b, a % b\n    return a\n\n", "    if a == 0 or b\
    \ == 0:\n        return 0\n    if a < 0:\n        a = -a\n    if b < 0:\n    \
    \    b = -b\n    while a != b:\n        if a > b:\n            a = a - b\n   \
    \     else:\n            b = b - a\n    return a\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"
